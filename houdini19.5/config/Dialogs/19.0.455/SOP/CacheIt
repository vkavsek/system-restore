// Magic: de95682e
// Automatically generated PSI dialog (PSI version 19.0.455)
// Sun Dec 26 10:40:34 2021


f_tmp = FLOAT_FIELD;	// dialog.top.ui

sepparm2.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}
execute_range.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

execute_range.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    PARM_BUTTON("execute_range", "Save to Disk")
	push VALUE(execute_range.val);

    {  }
}

executebackground_range.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    {  }
    { WIDTH(0.1) }

    PARM_BUTTON("executebackground_range", "Save to Disk in Background")
	push VALUE(executebackground_range.val);

    { WIDTH(0.1) }
}
}	// Template join.bot

execute_single.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

execute_single.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    PARM_BUTTON("execute_single", "Save to Disk")
	push VALUE(execute_single.val);

    {  }
}

executebackground_single.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    {  }
    { WIDTH(0.1) }

    PARM_BUTTON("executebackground_single", "Save to Disk in Background")
	push VALUE(executebackground_single.val);

    { WIDTH(0.1) }
}
}	// Template join.bot


sepparm6.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

single_frame.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("single_frame", "Single Frame") toggle VALUE(single_frame.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

f.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   f.label = PARM_LABEL("Start/End/Inc", "f") WIDTH(1.5);
   PARM(float, 3, "f", none, none, "#1,#2,#3")
	RANGE(0,10)  LABELREF(f.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

frame.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 frame.label = PARM_LABEL("Frame", "frame") WIDTH(1.5);
 PARM(integer, 1, "frame", none, none) RANGE(0,10)
	 LABELREF(frame.label) HSTRETCH;

  { WIDTH(0.1) }
}
vup2.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

vup2.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    PARM_BUTTON("vup2", "-")
	push VALUE(vup2.val);

    {  }
}

vup.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("vup", "+")
	push VALUE(vup.val);

    {  }
}

version.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 version.label = PARM_LABEL("Version", "version") ;
 PARM(integer, 1, "version", none, none) RANGE(1,20)
	 LABELREF(version.label) HSTRETCH;

  { WIDTH(0.1) }
}
}	// Template join.bot


sepparm3.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

ext.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Type", "ext") WIDTH(1.5);
    { WIDTH(0.09) }

    ext.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

copyscene.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("copyscene", "Copy scene to cache directory") toggle VALUE(copyscene.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

sepparm.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

name.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    name.label = PARM_LABEL("Cache Name", "name") WIDTH(1.5);
    PARM_FIELD(string, "name") VALUE(name.val) 
	LABELREF(name.label) HSTRETCH;

    { WIDTH(0.1) }
}

cache_dir.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 cache_dir.label = PARM_LABEL("Cache Directory", "cache_dir") WIDTH(1.5);

 PARM_FIELD (pathstring, "cache_dir") LABELREF(cache_dir.label)
	VALUE(cache_dir.val) HSTRETCH;

    cache_dir.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(cache_dir.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

sepparm5.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}
sopoutput_single.gad = NULL { }
sopoutput_range.gad = NULL { }

labelparm.sval := 1;

labelparm.gad = 
{
    LAYOUT(vertical) SPACING(1p) HSTRETCH VMARGIN(0.05, 0)
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    SWITCHER tight
    {
	VALUE(labelparm.sval) HSTRETCH

        {
            LAYOUT(horizontal) HSTRETCH

        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[12]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[13]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[14]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(labelparm.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[14]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(labelparm.val[15]) JUSTIFY(center,center) HSTRETCH;
        }

    }
}

display_path_single.sval := 1;

display_path_single.gad = 
{
    LAYOUT(vertical) SPACING(1p) HSTRETCH VMARGIN(0.05, 0)
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    SWITCHER tight
    {
	VALUE(display_path_single.sval) HSTRETCH

        {
            LAYOUT(horizontal) HSTRETCH

        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[3]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[4]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[5]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[6]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[7]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[8]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[9]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[10]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[11]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[12]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[13]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[14]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_single.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[14]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_single.val[15]) JUSTIFY(center,center) HSTRETCH;
        }

    }
}

display_path_range.sval := 1;

display_path_range.gad = 
{
    LAYOUT(vertical) SPACING(1p) HSTRETCH VMARGIN(0.05, 0)
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    SWITCHER tight
    {
	VALUE(display_path_range.sval) HSTRETCH

        {
            LAYOUT(horizontal) HSTRETCH

        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[3]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[4]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[5]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[6]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[7]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[8]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[9]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[10]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[11]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[12]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[13]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[14]) JUSTIFY(center,center) HSTRETCH;
        }

        {
            LAYOUT(horizontal) HSTRETCH

            LABEL VALUE(display_path_range.val[0]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[1]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[2]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[3]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[4]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[5]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[6]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[7]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[8]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[9]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[10]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[11]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[12]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[13]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[14]) JUSTIFY(center,center) HSTRETCH;
            LABEL VALUE(display_path_range.val[15]) JUSTIFY(center,center) HSTRETCH;
        }

    }
}

sepparm11.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

create_top.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("create_top", "Create Multithreaded TOP")
	push VALUE(create_top.val);

    { WIDTH(0.1) }
}

read.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("read", "Read Cache") toggle VALUE(read.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

reload.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("reload", "Reload Geometry")
	push VALUE(reload.val);

    { WIDTH(0.1) }
}

sepparm7.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

missingframe.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Missing Frame", "missingframe") WIDTH(1.5);
    { WIDTH(0.09) }

    missingframe.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

loadtype.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Load", "loadtype") WIDTH(1.5);
    { WIDTH(0.09) }

    loadtype.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

packedviewedit.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Display Packed As", "packedviewedit") WIDTH(1.5);
    { WIDTH(0.09) }

    packedviewedit.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

viewportlod.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Display As", "viewportlod") WIDTH(1.5);
    { WIDTH(0.09) }

    viewportlod.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

delayload.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("delayload", "Delay Load Geometry") toggle VALUE(delayload.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

sepparm8.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

createfile.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("createfile", "Create File Node")
	push VALUE(createfile.val);

    { WIDTH(0.1) }
}

sepparm12.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}
scan.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

scan.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    PARM_BUTTON("scan", "Scan")
	push VALUE(scan.val);

    {  }
}

delete.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("delete", "Delete")
	push VALUE(delete.val);

    {  }
}

cleanall.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    {  }
    { WIDTH(0.1) }

    PARM_BUTTON("cleanall", "/!\\Clean ALL versions/!\\")
	push VALUE(cleanall.val);

    { WIDTH(0.1) }
}
}	// Template join.bot


keep.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 keep.label = PARM_LABEL("Last version to keep:", "keep") WIDTH(1.5);
 PARM(integer, 1, "keep", none, none) RANGE(1,10)
	 LABELREF(keep.label) HSTRETCH;

  { WIDTH(0.1) }
}

sepparm10.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

open_folder.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("open_folder", "Open cache folder")
	push VALUE(open_folder.val);

    { WIDTH(0.1) }
}

sepparm13.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

info.gad = ROW
{

    HSTRETCH JUSTIFY(left, top) HMARGIN(0.18, 0.1)
        NO_MARGIN_SPACING_SCALE

    info.label = PARM_LABEL("Info", "info");

    MULTILINE_PARM_FIELD ("info") 

    	LABELREF(info.label) 

    	VALUE(info.val) 
    	SYNTAX("") 
    	LINES(8,40) 
    	HSTRETCH;

    {

	LAYOUT(vertical)
	{
	    SIZE(0, 0.26)
	}

    }

}

v_clear.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("v_clear", "Clear text")
	push VALUE(v_clear.val);

    { WIDTH(0.1) }
}

sepparm4.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}
eta_refresh.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

eta_refresh.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    PARM_BUTTON("eta_refresh", "Refresh")
	push VALUE(eta_refresh.val);

    {  }
}

eta_clear.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    {  }
    { WIDTH(0.1) }

    PARM_BUTTON("eta_clear", "Clear text")
	push VALUE(eta_clear.val);

    { WIDTH(0.1) }
}
}	// Template join.bot


sepparm9.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

eta_log.gad = ROW
{

    HSTRETCH JUSTIFY(left, top) HMARGIN(0.18, 0.1)
        NO_MARGIN_SPACING_SCALE

    eta_log.label = PARM_LABEL("ETA", "eta_log");

    MULTILINE_PARM_FIELD ("eta_log") 

    	LABELREF(eta_log.label) 

    	VALUE(eta_log.val) 
    	SYNTAX("") 
    	LINES(8,40) 
    	HSTRETCH;

    {

	LAYOUT(vertical)
	{
	    SIZE(0, 0.26)
	}

    }

}

write.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "write.gad"
    { 
	VALUE(write.gad.val) STRETCH(1,0)

	TAB "Write"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    ext.gad;		
	    copyscene.gad;		
	    sepparm.gad;		
	    name.gad;		
	    cache_dir.gad;		
	    sepparm5.gad;		
	    sopoutput_single.gad;		
	    sopoutput_range.gad;		
	    labelparm.gad;		
	    display_path_single.gad;		
	    display_path_range.gad;		
	    sepparm11.gad;		
	    create_top.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Read"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    read.gad;		
	    reload.gad;		
	    sepparm7.gad;		
	    missingframe.gad;		
	    loadtype.gad;		
	    packedviewedit.gad;		
	    viewportlod.gad;		
	    delayload.gad;		
	    sepparm8.gad;		
	    createfile.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

cache.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "cache.gad"
    { 
	VALUE(cache.gad.val) STRETCH(1,0)

	TAB "Cache"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    sepparm2.gad;		
	    execute_range.row.join;		
	    execute_single.row.join;		
	    sepparm6.gad;		
	    single_frame.gad;		
	    f.gad;		
	    frame.gad;		
	    vup2.row.join;		
	    sepparm3.gad;		
	    write.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Version Cleaner"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    sepparm12.gad;		
	    scan.row.join;		
	    keep.gad;		
	    sepparm10.gad;		
	    open_folder.gad;		
	    sepparm13.gad;		
	    info.gad;		
	    v_clear.gad;		
	    sepparm4.gad;		

	    { STRETCH(1,1) }
	}

	TAB "ETA"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    eta_refresh.row.join;		
	    sepparm9.gad;		
	    eta_log.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    cache.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
