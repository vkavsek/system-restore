// Magic: b6ef791
// Automatically generated PSI dialog (PSI version 19.0.531)
// Mon Apr  4 22:46:51 2022


f_tmp = FLOAT_FIELD;	// dialog.top.ui

bColorFloors.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("bColorFloors", "Color Floors") toggle VALUE(bColorFloors.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

fFloorHeight.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 fFloorHeight.label = PARM_LABEL("Full Floor Height", "fFloorHeight") WIDTH(1.5);
 PARM(float, 1, "fFloorHeight", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(fFloorHeight.label) HSTRETCH;

  { WIDTH(0.1) }
}

iSeed.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 iSeed.label = PARM_LABEL("Seed", "iSeed") WIDTH(1.5);
 PARM(integer, 1, "iSeed", none, none) RANGE(1,100000)
	 LABELREF(iSeed.label) HSTRETCH;

  { WIDTH(0.1) }
}

bExperimentalLedges.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("bExperimentalLedges", "Simple Ledges") toggle VALUE(bExperimentalLedges.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

bScaleModules.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("bScaleModules", "Scale Modules") toggle VALUE(bScaleModules.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

snapinputgeo.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("snapinputgeo", "Snap Input Geometry to Floor Height") toggle VALUE(snapinputgeo.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

sFacadePattern.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    sFacadePattern.label = PARM_LABEL("Facade Module Pattern", "sFacadePattern") WIDTH(1.5);
    PARM_FIELD(string, "sFacadePattern") VALUE(sFacadePattern.val) 
	LABELREF(sFacadePattern.label) HSTRETCH;

    { WIDTH(0.1) }
}

bFacadeCorner.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("bFacadeCorner", "Corners") toggle VALUE(bFacadeCorner.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

sConvexCornerID.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   sConvexCornerID.label = PARM_LABEL("Concave Corner Module", "sConvexCornerID") WIDTH(1.5);
   PARM(string, 2, "sConvexCornerID", none, none, "#1,#2")
	RANGE(0,1)  LABELREF(sConvexCornerID.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

sConcaveCornerID.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   sConcaveCornerID.label = PARM_LABEL("Convex Corner Module", "sConcaveCornerID") WIDTH(1.5);
   PARM(string, 2, "sConcaveCornerID", none, none, "#1,#2")
	RANGE(0,1)  LABELREF(sConcaveCornerID.label)
	HSTRETCH;

    { WIDTH(0.1) }
}
bTopLedge.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
bTopLedge.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
bTopLedge.gad = PARM_BUTTON("bTopLedge", "") toggle VALUE(bTopLedge.val) RETAIN_SIZE_WHEN_HIDDEN;

fTopLedgeHeight.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 fTopLedgeHeight.label = PARM_LABEL("Height", "fTopLedgeHeight") WIDTH(1.32);
 PARM(float, 1, "fTopLedgeHeight", none, none) RANGE(0,0.5)
	 LABELREF(fTopLedgeHeight.label) HSTRETCH;

  { WIDTH(0.1) }
}
}	
}	// Template join.bot


sTopLedgePattern.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    sTopLedgePattern.label = PARM_LABEL("Module Pattern", "sTopLedgePattern") WIDTH(1.5);
    PARM_FIELD(string, "sTopLedgePattern") VALUE(sTopLedgePattern.val) 
	LABELREF(sTopLedgePattern.label) HSTRETCH;

    { WIDTH(0.1) }
}

bTopLedgeCorner.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("bTopLedgeCorner", "Corners") toggle VALUE(bTopLedgeCorner.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

sTopLedgeConvexCorner.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   sTopLedgeConvexCorner.label = PARM_LABEL("Concave Corner Module", "sTopLedgeConvexCorner") WIDTH(1.5);
   PARM(string, 2, "sTopLedgeConvexCorner", none, none, "#1,#2")
	RANGE(0,1)  LABELREF(sTopLedgeConvexCorner.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

sTopLedgeConcaveCorner.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   sTopLedgeConcaveCorner.label = PARM_LABEL("Convex Corner Module", "sTopLedgeConcaveCorner") WIDTH(1.5);
   PARM(string, 2, "sTopLedgeConcaveCorner", none, none, "#1,#2")
	RANGE(0,1)  LABELREF(sTopLedgeConcaveCorner.label)
	HSTRETCH;

    { WIDTH(0.1) }
}
bBottomLedge.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
bBottomLedge.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
bBottomLedge.gad = PARM_BUTTON("bBottomLedge", "") toggle VALUE(bBottomLedge.val) RETAIN_SIZE_WHEN_HIDDEN;

fBottomLedgeHeight.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 fBottomLedgeHeight.label = PARM_LABEL("Height", "fBottomLedgeHeight") WIDTH(1.32);
 PARM(float, 1, "fBottomLedgeHeight", none, none) RANGE(0,0.5)
	 LABELREF(fBottomLedgeHeight.label) HSTRETCH;

  { WIDTH(0.1) }
}
}	
}	// Template join.bot


sBottomLedgePattern.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    sBottomLedgePattern.label = PARM_LABEL("Module Pattern", "sBottomLedgePattern") WIDTH(1.5);
    PARM_FIELD(string, "sBottomLedgePattern") VALUE(sBottomLedgePattern.val) 
	LABELREF(sBottomLedgePattern.label) HSTRETCH;

    { WIDTH(0.1) }
}

bBottomLedgeCorner.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("bBottomLedgeCorner", "Corners") toggle VALUE(bBottomLedgeCorner.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

sBottomLedgeConvexCorner.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   sBottomLedgeConvexCorner.label = PARM_LABEL("Concave Corner Module", "sBottomLedgeConvexCorner") WIDTH(1.5);
   PARM(string, 2, "sBottomLedgeConvexCorner", none, none, "#1,#2")
	RANGE(0,1)  LABELREF(sBottomLedgeConvexCorner.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

sBottomLedgeConcaveCorner.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   sBottomLedgeConcaveCorner.label = PARM_LABEL("Convex Corner Module", "sBottomLedgeConcaveCorner") WIDTH(1.5);
   PARM(string, 2, "sBottomLedgeConcaveCorner", none, none, "#1,#2")
	RANGE(0,1)  LABELREF(sBottomLedgeConcaveCorner.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

sSideSlopID.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    sSideSlopID.label = PARM_LABEL("Sideslop Module", "sSideSlopID") WIDTH(1.5);
    PARM_FIELD(string, "sSideSlopID") VALUE(sSideSlopID.val) 
	LABELREF(sSideSlopID.label) HSTRETCH;

    { WIDTH(0.1) }
}

mpFloorOverrides.parm =
{
    LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Floor Overrides", "mpFloorOverrides") WIDTH(1.5);
    { WIDTH(0.1) }

    ROW
    {
	HSTRETCH(0.5) JUSTIFY(left, center) VALUE(mpFloorOverrides.val)

        mpFloorOverrides.field = PARM_FIELD (integer, "mpFloorOverrides")
				VALUE(mpFloorOverrides.val) HSTRETCH(0.5)
				 PREF_WIDTH(0.5);

        ROW
        {
	     LOOK(lightline) VMARGIN(1p)

   	     INCREMENT_ICONBUTTON VALUE(mpFloorOverrides.more.val)	
	    	HELP("Add Another Instance") SIZE(0.2, 0.24);
	     DECREMENT_ICONBUTTON VALUE(mpFloorOverrides.less.val)	
	        HELP("Remove Last Instance") SIZE(0.2, 0.24);

	}

	ACTION_BUTTON "Clear" VALUE(mpFloorOverrides.clear.val);
    }

    { HSTRETCH }
}

mpFloorOverrides.multilist = 
{
    LAYOUT(vertical) HSTRETCH MARGIN(0.05)
}

mpFloorOverrides.gad =
{
    LAYOUT(vertical) HSTRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    SWITCHER tight
    {
	LAYOUT(vertical) HSTRETCH

	VALUE(mpFloorOverrides.multilist_hide_buttons.val)
	{
	    LAYOUT(vertical) HSTRETCH
	    mpFloorOverrides.parm;
	    {LOOK(none) HEIGHT(0.02)}
	}
	{
	}
    }
    mpFloorOverrides.multilist;
}

folder1.gad = 

GROUP simple "Customization" flat 
{ 
    VALUE(folder1.gad.val) LAYOUT(vertical) HSTRETCH 
	    mpFloorOverrides.gad;		
} 

folder0.gad = 

GROUP simple "Sideslop" flat 
{ 
    VALUE(folder0.gad.val) LAYOUT(vertical) HSTRETCH 
	    sSideSlopID.gad;		
} 

folder7.gad = 

GROUP simple "Bottom Ledge" flat 
{ 
    VALUE(folder7.gad.val) LAYOUT(vertical) HSTRETCH 
	    bBottomLedge.row.join;		
	    sBottomLedgePattern.gad;		
	    bBottomLedgeCorner.gad;		
	    sBottomLedgeConvexCorner.gad;		
	    sBottomLedgeConcaveCorner.gad;		
} 

folder6.gad = 

GROUP simple "Top Ledge" flat 
{ 
    VALUE(folder6.gad.val) LAYOUT(vertical) HSTRETCH 
	    bTopLedge.row.join;		
	    sTopLedgePattern.gad;		
	    bTopLedgeCorner.gad;		
	    sTopLedgeConvexCorner.gad;		
	    sTopLedgeConcaveCorner.gad;		
} 

folder4.gad = 
GROUP collapsible "Secondary" flat  
{
    VALUE(folder4.gad.val) LAYOUT(vertical) HSTRETCH
	    folder6.gad;		
	    folder7.gad;		
	    folder0.gad;		
} 

folder8.gad = 

GROUP simple "Wall Face" flat 
{ 
    VALUE(folder8.gad.val) LAYOUT(vertical) HSTRETCH 
	    sFacadePattern.gad;		
	    bFacadeCorner.gad;		
	    sConvexCornerID.gad;		
	    sConcaveCornerID.gad;		
} 

folder5.gad = 
GROUP collapsible "Primary" flat  
{
    VALUE(folder5.gad.val) LAYOUT(vertical) HSTRETCH
	    folder8.gad;		
} 

folder2.gad = 

GROUP simple "Initialize" flat 
{ 
    VALUE(folder2.gad.val) LAYOUT(vertical) HSTRETCH 
	    fFloorHeight.gad;		
	    iSeed.gad;		
	    bExperimentalLedges.gad;		
	    bScaleModules.gad;		
	    snapinputgeo.gad;		
	    folder5.gad;		
	    folder4.gad;		
} 

folder3.gad = 

GROUP simple "Visualize" flat 
{ 
    VALUE(folder3.gad.val) LAYOUT(vertical) HSTRETCH 
	    bColorFloors.gad;		
} 

# warning cpp warning: "GenV3/subdialog.top.ui":5 Macro "PARMSPACING" redefined.  Using later definition
# warning cpp warning: "GenV3/subdialog.top.ui":6 Macro "LAYOUTDIR" redefined.  Using later definition
# warning cpp warning: "GenV3/subdialog.top.ui":7 Macro "DO_JUSTIFY" redefined.  Using later definition
dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    folder3.gad; 
    folder2.gad; 
    folder1.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
