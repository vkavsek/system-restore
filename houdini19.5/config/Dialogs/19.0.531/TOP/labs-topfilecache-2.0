// Magic: 16d72d2b
// Automatically generated PSI dialog (PSI version 19.0.531)
// Tue Mar 15 09:15:51 2022


f_tmp = FLOAT_FIELD;	// dialog.top.ui
filemethod.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

filemethod.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("File Method", "filemethod") WIDTH(1.5);
    { WIDTH(0.09) }

    filemethod.menu;

    {  }

    {  }
}

timedependent.gad = ROW
{
    
    {  }

    {  }
    { WIDTH(0.08) }

    PARM_BUTTON("timedependent", "Time Dependent Cache") toggle VALUE(timedependent.val);

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot

basename.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

basename.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    basename.label = PARM_LABEL("Base Name", "basename") WIDTH(1.5);
    PARM_FIELD(string, "basename") VALUE(basename.val) 
	LABELREF(basename.label) HSTRETCH;

    basename.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

    {  }
}

filetype.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    filetype.menu;

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot

file.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

file.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 file.label = PARM_LABEL("Geometry File", "file") WIDTH(1.5);

 PARM_FIELD (pathstring, "file") LABELREF(file.label)
	VALUE(file.val) HSTRETCH;

    file.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(file.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 {  }
}

openfiledir.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("openfiledir", "", "BUTTONS_folder")
	push VALUE(openfiledir.val) UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}
}	// Template join.bot

basedir.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

basedir.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 basedir.label = PARM_LABEL("Base Folder", "basedir") WIDTH(1.5);

 PARM_FIELD (pathstring, "basedir") LABELREF(basedir.label)
	VALUE(basedir.val) HSTRETCH;

    basedir.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(basedir.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 {  }
}

openbasedir.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("openbasedir", "", "BUTTONS_folder")
	push VALUE(openbasedir.val) UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}
}	// Template join.bot

enableversion.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
enableversion.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
enableversion.gad = PARM_BUTTON("enableversion", "") toggle VALUE(enableversion.val) RETAIN_SIZE_WHEN_HIDDEN;

version.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 version.label = PARM_LABEL("Version", "version") WIDTH(1.32);
 PARM(integer, 1, "version", none, none) RANGE(1,25)
	LOCK_RANGE_MIN LABELREF(version.label) HSTRETCH;

  {  }
}
}	

versiondown.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("versiondown", "", "BUTTONS_minus")
	push VALUE(versiondown.val) UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    {  }
}

versionup.gad = ROW
{
    JUSTIFY(left, center)
    {  }

    PARM_BUTTON("versionup", "", "BUTTONS_add")
	push VALUE(versionup.val) UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}
}	// Template join.bot


sepparm4.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}

soppath.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 soppath.label = PARM_LABEL("SOP Path", "soppath") WIDTH(1.5);
 PARM_FIELD(pathstring, "soppath") VALUE(soppath.val) 
	LABELREF(soppath.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(soppath.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(soppath.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

 { WIDTH(0.1) }
}

pdg_cachemode.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Cache Mode", "pdg_cachemode") WIDTH(1.5);
    { WIDTH(0.09) }

    pdg_cachemode.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}
trange.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

trange.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Evaluate As", "trange") WIDTH(1.5);
    { WIDTH(0.09) }

    trange.menu;

    {  }

    {  }
}

cachesim.gad = ROW
{
    
    {  }

    {  }
    { WIDTH(0.08) }

    PARM_BUTTON("cachesim", "Simulation") toggle VALUE(cachesim.val);

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot

f.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

f.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   f.label = PARM_LABEL("Frame Range", "f") WIDTH(1.5);
   PARM(float, 3, "f", none, none, "#1,#2,#3")
	RANGE(0,10)  LABELREF(f.label)
	HSTRETCH;

    {  }
}

fmenu.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center)

    fmenu.menu LOOK(menuiconbutton) SIZE(0.26, 0.26);

}
}	// Template join.bot


substeps.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 substeps.label = PARM_LABEL("Substeps", "substeps") WIDTH(1.5);
 PARM(integer, 1, "substeps", none, none) RANGE(1,10)
	LOCK_RANGE_MIN LABELREF(substeps.label) HSTRETCH;

  { WIDTH(0.1) }
}
useframeoverride.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
useframeoverride.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
useframeoverride.gad = PARM_BUTTON("useframeoverride", "") toggle VALUE(useframeoverride.val) RETAIN_SIZE_WHEN_HIDDEN;

frameoverride.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 frameoverride.label = PARM_LABEL("Override Frame", "frameoverride") WIDTH(1.32);
 PARM(float, 1, "frameoverride", none, SNAP) RANGE(1,240)
	 LABELREF(frameoverride.label) HSTRETCH;

  { WIDTH(0.1) }
}
}	
}	// Template join.bot


specificrange.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    specificrange.label = PARM_LABEL("List of Frames", "specificrange") WIDTH(1.5);
    PARM_FIELD(string, "specificrange") VALUE(specificrange.val) 
	LABELREF(specificrange.label) HSTRETCH;

    { WIDTH(0.1) }
}

enablewedging.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enablewedging", "Enable Wedging") toggle VALUE(enablewedging.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

wrange.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Evaluate As", "wrange") WIDTH(1.5);
    { WIDTH(0.09) }

    wrange.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

wedgeoverride.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 wedgeoverride.label = PARM_LABEL("Single Wedge", "wedgeoverride") WIDTH(1.5);
 PARM(integer, 1, "wedgeoverride", none, SNAP) RANGE(0,49)
	LOCK_RANGE_MIN LABELREF(wedgeoverride.label) HSTRETCH;

  { WIDTH(0.1) }
}

wedgerange.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   wedgerange.label = PARM_LABEL("Wedge Range", "wedgerange") WIDTH(1.5);
   PARM(integer, 2, "wedgerange", none, none, "Min,Max")
	RANGE(0,100) LOCK_RANGE_MIN LABELREF(wedgerange.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

specificwedges.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    specificwedges.label = PARM_LABEL("List of Wedges", "specificwedges") WIDTH(1.5);
    PARM_FIELD(string, "specificwedges") VALUE(specificwedges.val) 
	LABELREF(specificwedges.label) HSTRETCH;

    { WIDTH(0.1) }
}

wedgecount.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 wedgecount.label = PARM_LABEL("Wedge Count", "wedgecount") WIDTH(1.5);
 PARM(integer, 1, "wedgecount", none, none) RANGE(1,50)
	LOCK_RANGE_MIN LABELREF(wedgecount.label) HSTRETCH;

  { WIDTH(0.1) }
}

nwedgeattribs.parm =
{
    LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

    PARM_LABEL_SIMPLE("Number of Attributes", "nwedgeattribs") WIDTH(1.5);
    { WIDTH(0.1) }

    ROW
    {
	HSTRETCH(0.5) JUSTIFY(left, center) VALUE(nwedgeattribs.val)

        nwedgeattribs.field = PARM_FIELD (integer, "nwedgeattribs")
				VALUE(nwedgeattribs.val) HSTRETCH(0.5)
				 PREF_WIDTH(0.5);

        ROW
        {
	     LOOK(lightline) VMARGIN(1p)

   	     INCREMENT_ICONBUTTON VALUE(nwedgeattribs.more.val)	
	    	HELP("Add Another Instance") SIZE(0.2, 0.24);
	     DECREMENT_ICONBUTTON VALUE(nwedgeattribs.less.val)	
	        HELP("Remove Last Instance") SIZE(0.2, 0.24);

	}

	ACTION_BUTTON "Clear" VALUE(nwedgeattribs.clear.val);
    }

    { HSTRETCH }
}

nwedgeattribs.multilist = 
{
    LAYOUT(vertical) HSTRETCH MARGIN(0.05)
}

nwedgeattribs.gad =
{
    LAYOUT(vertical) HSTRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    SWITCHER tight
    {
	LAYOUT(vertical) HSTRETCH

	VALUE(nwedgeattribs.multilist_hide_buttons.val)
	{
	    LAYOUT(vertical) HSTRETCH
	    nwedgeattribs.parm;
	    {LOOK(none) HEIGHT(0.02)}
	}
	{
	}
    }
    nwedgeattribs.multilist;
}
doclampfirst.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
doclampfirst.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
doclampfirst.gad = PARM_BUTTON("doclampfirst", "") toggle VALUE(doclampfirst.val) RETAIN_SIZE_WHEN_HIDDEN;

clampfirst.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 clampfirst.label = PARM_LABEL("Clamp First Frame", "clampfirst") WIDTH(1.32);
 PARM(float, 1, "clampfirst", none, SNAP) RANGE(1,240)
	 LABELREF(clampfirst.label) HSTRETCH;

  { WIDTH(0.1) }
}
}	
}	// Template join.bot

doclamplast.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
doclamplast.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
doclamplast.gad = PARM_BUTTON("doclamplast", "") toggle VALUE(doclamplast.val) RETAIN_SIZE_WHEN_HIDDEN;

clamplast.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 clamplast.label = PARM_LABEL("Clamp Last Frame", "clamplast") WIDTH(1.32);
 PARM(float, 1, "clamplast", none, SNAP) RANGE(1,240)
	 LABELREF(clamplast.label) HSTRETCH;

  { WIDTH(0.1) }
}
}	
}	// Template join.bot

domergeframes.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
domergeframes.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
domergeframes.gad = PARM_BUTTON("domergeframes", "") toggle VALUE(domergeframes.val) RETAIN_SIZE_WHEN_HIDDEN;

mergeframes.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    {  }

    PARM_LABEL_SIMPLE("Merge Frames", "mergeframes") WIDTH(1.32);
    { WIDTH(0.09) }

    mergeframes.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}
}	
}	// Template join.bot


mergeframerange.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   mergeframerange.label = PARM_LABEL("Frame Range", "mergeframerange") WIDTH(1.5);
   PARM(float, 3, "mergeframerange", none, none, "#1,#2,#3")
	RANGE(0,10)  LABELREF(mergeframerange.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

mergesubsteps.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 mergesubsteps.label = PARM_LABEL("Substeps", "mergesubsteps") WIDTH(1.5);
 PARM(integer, 1, "mergesubsteps", none, none) RANGE(1,10)
	LOCK_RANGE_MIN LABELREF(mergesubsteps.label) HSTRETCH;

  { WIDTH(0.1) }
}

mergespecificrange.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    mergespecificrange.label = PARM_LABEL("List of Frames", "mergespecificrange") WIDTH(1.5);
    PARM_FIELD(string, "mergespecificrange") VALUE(mergespecificrange.val) 
	LABELREF(mergespecificrange.label) HSTRETCH;

    { WIDTH(0.1) }
}
domergewedges.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
domergewedges.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
domergewedges.gad = PARM_BUTTON("domergewedges", "") toggle VALUE(domergewedges.val) RETAIN_SIZE_WHEN_HIDDEN;

mergewedges.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    {  }

    PARM_LABEL_SIMPLE("Merge Wedges", "mergewedges") WIDTH(1.32);
    { WIDTH(0.09) }

    mergewedges.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}
}	
}	// Template join.bot


mergewedgeidxrange.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   mergewedgeidxrange.label = PARM_LABEL("Wedge Range", "mergewedgeidxrange") WIDTH(1.5);
   PARM(integer, 2, "mergewedgeidxrange", none, none, "Min,Max")
	RANGE(0,100) LOCK_RANGE_MIN LABELREF(mergewedgeidxrange.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

mergespecificwedges.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    mergespecificwedges.label = PARM_LABEL("List of Wedges", "mergespecificwedges") WIDTH(1.5);
    PARM_FIELD(string, "mergespecificwedges") VALUE(mergespecificwedges.val) 
	LABELREF(mergespecificwedges.label) HSTRETCH;

    { WIDTH(0.1) }
}

topscheduler.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left,center)
 { WIDTH(0.18) }

 topscheduler.label = PARM_LABEL("Scheduler Override", "topscheduler") WIDTH(1.5);
 PARM_FIELD(pathstring, "topscheduler") VALUE(topscheduler.val) 
	LABELREF(topscheduler.label) HSTRETCH;

 ACTION_ICONBUTTON "BUTTONS_jump" VALUE(topscheduler.jump)
    HELP("Jump to operator\nCtrl+LMB: Open parameters popup dialog")
    UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

 ACTION_ICONBUTTON "BUTTONS_chooser_node" VALUE(topscheduler.plus)
    HELP("Open floating operator chooser") UI_FLAT_ICON_BTN_SIZE_SMALL 
    LOOKFLAT;

 { WIDTH(0.1) }
}
priorityoverride.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
priorityoverride.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
priorityoverride.gad = PARM_BUTTON("priorityoverride", "") toggle VALUE(priorityoverride.val) RETAIN_SIZE_WHEN_HIDDEN;

pdg_workitempriorityexpr.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 pdg_workitempriorityexpr.label = PARM_LABEL("Node Priority", "pdg_workitempriorityexpr") WIDTH(1.32);
 PARM(integer, 1, "pdg_workitempriorityexpr", none, none) RANGE(0,10)
	 LABELREF(pdg_workitempriorityexpr.label) HSTRETCH;

  { WIDTH(0.1) }
}
}	
}	// Template join.bot


cookwhen.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    PARM_LABEL_SIMPLE("Cook Batch When", "cookwhen") WIDTH(1.5);
    { WIDTH(0.09) }

    cookwhen.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

framesperbatch.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 framesperbatch.label = PARM_LABEL("Frames per Batch", "framesperbatch") WIDTH(1.5);
 PARM(integer, 1, "framesperbatch", none, none) RANGE(1,25)
	LOCK_RANGE_MIN LABELREF(framesperbatch.label) HSTRETCH;

  { WIDTH(0.1) }
}

mkpath.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("mkpath", "Create Intermediate Directories") toggle VALUE(mkpath.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

initsim.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("initsim", "Initialize Simulation OPs") toggle VALUE(initsim.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

alfprogress.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("alfprogress", "Alfred Style Progress") toggle VALUE(alfprogress.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

savebackground.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("savebackground", "Save in Background") toggle VALUE(savebackground.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

savebackuphip.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("savebackuphip", "Save Backup .hip File") toggle VALUE(savebackuphip.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

saveretry.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 saveretry.label = PARM_LABEL("Save Retries", "saveretry") WIDTH(1.5);
 PARM(integer, 1, "saveretry", none, none) RANGE(0,5)
	LOCK_RANGE_MIN LABELREF(saveretry.label) HSTRETCH;

  { WIDTH(0.1) }
}
tprerender.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
tprerender.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
tprerender.gad = PARM_BUTTON("tprerender", "") toggle VALUE(tprerender.val) RETAIN_SIZE_WHEN_HIDDEN;

prerender.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 {  }

 prerender.label = PARM_LABEL("Pre-Render Script", "prerender") WIDTH(1.32);

 PARM_FIELD (pathstring, "prerender") LABELREF(prerender.label)
	VALUE(prerender.val) HSTRETCH;

    prerender.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(prerender.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 {  }
}
}	

lprerender.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    lprerender.menu;

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot

tpreframe.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
tpreframe.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
tpreframe.gad = PARM_BUTTON("tpreframe", "") toggle VALUE(tpreframe.val) RETAIN_SIZE_WHEN_HIDDEN;

preframe.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 {  }

 preframe.label = PARM_LABEL("Pre-Frame Script", "preframe") WIDTH(1.32);

 PARM_FIELD (pathstring, "preframe") LABELREF(preframe.label)
	VALUE(preframe.val) HSTRETCH;

    preframe.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(preframe.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 {  }
}
}	

lpreframe.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    lpreframe.menu;

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot

tpostframe.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
tpostframe.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
tpostframe.gad = PARM_BUTTON("tpostframe", "") toggle VALUE(tpostframe.val) RETAIN_SIZE_WHEN_HIDDEN;

postframe.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 {  }

 postframe.label = PARM_LABEL("Post-Frame Script", "postframe") WIDTH(1.32);

 PARM_FIELD (pathstring, "postframe") LABELREF(postframe.label)
	VALUE(postframe.val) HSTRETCH;

    postframe.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(postframe.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 {  }
}
}	

lpostframe.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    lpostframe.menu;

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot

tpostwrite.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
tpostwrite.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
tpostwrite.gad = PARM_BUTTON("tpostwrite", "") toggle VALUE(tpostwrite.val) RETAIN_SIZE_WHEN_HIDDEN;

postwrite.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 {  }

 postwrite.label = PARM_LABEL("Post-Write Script", "postwrite") WIDTH(1.32);

 PARM_FIELD (pathstring, "postwrite") LABELREF(postwrite.label)
	VALUE(postwrite.val) HSTRETCH;

    postwrite.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(postwrite.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 {  }
}
}	

lpostwrite.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    lpostwrite.menu;

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot

tpostrender.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
tpostrender.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)

{ WIDTH(0.18) }
tpostrender.gad = PARM_BUTTON("tpostrender", "") toggle VALUE(tpostrender.val) RETAIN_SIZE_WHEN_HIDDEN;

postrender.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 {  }

 postrender.label = PARM_LABEL("Post-Render Script", "postrender") WIDTH(1.32);

 PARM_FIELD (pathstring, "postrender") LABELREF(postrender.label)
	VALUE(postrender.val) HSTRETCH;

    postrender.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(postrender.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 {  }
}
}	

lpostrender.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    lpostrender.menu;

    {  }

    { WIDTH(0.1) }
}
}	// Template join.bot


enableperfmon.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enableperfmon", "Enable Performance Monitor Logging") toggle VALUE(enableperfmon.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

openperffile.gad = ROW
{
    JUSTIFY(left, center)
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.1) }

    PARM_BUTTON("openperffile", "Open Current Profile")
	push VALUE(openperffile.val);

    { WIDTH(0.1) }
}

frame.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 frame.label = PARM_LABEL("Frame", "frame") WIDTH(1.5);
 PARM(float, 1, "frame", none, none) RANGE(1,240)
	 LABELREF(frame.label) HSTRETCH;

  { WIDTH(0.1) }
}

framestr.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    framestr.label = PARM_LABEL("Frame String", "framestr") WIDTH(1.5);
    PARM_FIELD(string, "framestr") VALUE(framestr.val) 
	LABELREF(framestr.label) HSTRETCH;

    { WIDTH(0.1) }
}

versionstr.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    versionstr.label = PARM_LABEL("Version String", "versionstr") WIDTH(1.5);
    PARM_FIELD(string, "versionstr") VALUE(versionstr.val) 
	LABELREF(versionstr.label) HSTRETCH;

    { WIDTH(0.1) }
}

wedgestr.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    wedgestr.label = PARM_LABEL("Wedge String", "wedgestr") WIDTH(1.5);
    PARM_FIELD(string, "wedgestr") VALUE(wedgestr.val) 
	LABELREF(wedgestr.label) HSTRETCH;

    { WIDTH(0.1) }
}

sepparm2.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}

cachedir.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    cachedir.label = PARM_LABEL("Cache Folder", "cachedir") WIDTH(1.5);
    PARM_FIELD(string, "cachedir") VALUE(cachedir.val) 
	LABELREF(cachedir.label) HSTRETCH;

    { WIDTH(0.1) }
}

cachename.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    cachename.label = PARM_LABEL("Cache Name", "cachename") WIDTH(1.5);
    PARM_FIELD(string, "cachename") VALUE(cachename.val) 
	LABELREF(cachename.label) HSTRETCH;

    { WIDTH(0.1) }
}

sopoutput.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    sopoutput.label = PARM_LABEL("Output File", "sopoutput") WIDTH(1.5);
    PARM_FIELD(string, "sopoutput") VALUE(sopoutput.val) 
	LABELREF(sopoutput.label) HSTRETCH;

    { WIDTH(0.1) }
}

sepparm5.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}

perffile.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    perffile.label = PARM_LABEL("Performance Profile", "perffile") WIDTH(1.5);
    PARM_FIELD(string, "perffile") VALUE(perffile.val) 
	LABELREF(perffile.label) HSTRETCH;

    { WIDTH(0.1) }
}

descriptivelabel.gad = 
{
 LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
 { WIDTH(0.18) }

 descriptivelabel.label = PARM_LABEL("Descriptive Label", "descriptivelabel") WIDTH(1.5);

 PARM_FIELD (pathstring, "descriptivelabel") LABELREF(descriptivelabel.label)
	VALUE(descriptivelabel.val) HSTRETCH;

    descriptivelabel.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

 ACTION_ICONBUTTON "BUTTONS_chooser_file" VALUE(descriptivelabel.plus) LOOKFLAT
    HELP("Open floating file chooser") UI_FLAT_ICON_BTN_SIZE_SMALL;

 { WIDTH(0.1) }
}

folder12.gad = 
GROUP collapsible "Path Construction" flat  PARMREF(sopoutput.gad)
{
    VALUE(folder12.gad.val) LAYOUT(vertical) HSTRETCH
	    frame.gad;		
	    framestr.gad;		
	    versionstr.gad;		
	    wedgestr.gad;		
	    sepparm2.gad;		
	    cachedir.gad;		
	    cachename.gad;		
	    sopoutput.gad;		
	    sepparm5.gad;		
	    perffile.gad;		
	    descriptivelabel.gad;		
} 

folder2.gad = 
GROUP collapsible "Performance Logging" flat TOGGLEREF(enableperfmon.gad) 
{
    VALUE(folder2.gad.val) LAYOUT(vertical) HSTRETCH
	    enableperfmon.gad;		
	    openperffile.gad;		
} 

folder5_2.gad = 
GROUP collapsible "Scripts" flat  
{
    VALUE(folder5_2.gad.val) LAYOUT(vertical) HSTRETCH
	    tprerender.row.join;		
	    tpreframe.row.join;		
	    tpostframe.row.join;		
	    tpostwrite.row.join;		
	    tpostrender.row.join;		
} 

folder3.gad = 
GROUP collapsible "Save" flat  
{
    VALUE(folder3.gad.val) LAYOUT(vertical) HSTRETCH
	    mkpath.gad;		
	    initsim.gad;		
	    alfprogress.gad;		
	    savebackground.gad;		
	    savebackuphip.gad;		
	    saveretry.gad;		
} 

local.gad = 
GROUP collapsible "Local" flat  
{
    VALUE(local.gad.val) LAYOUT(vertical) HSTRETCH
	    cookwhen.gad;		
	    framesperbatch.gad;		
} 

folder0.gad = 
GROUP collapsible "Scheduler" flat  
{
    VALUE(folder0.gad.val) LAYOUT(vertical) HSTRETCH
	    topscheduler.gad;		
	    priorityoverride.row.join;		
} 

folder6.gad = 
GROUP collapsible "Load" flat  
{
    VALUE(folder6.gad.val) LAYOUT(vertical) HSTRETCH
	    doclampfirst.row.join;		
	    doclamplast.row.join;		
	    domergeframes.row.join;		
	    mergeframerange.gad;		
	    mergesubsteps.gad;		
	    mergespecificrange.gad;		
	    domergewedges.row.join;		
	    mergewedgeidxrange.gad;		
	    mergespecificwedges.gad;		
} 

folder7.gad = 
GROUP collapsible "Wedging" flat TOGGLEREF(enablewedging.gad) PARMREF(wedgecount.gad)
{
    VALUE(folder7.gad.val) LAYOUT(vertical) HSTRETCH
	    enablewedging.gad;		
	    wrange.gad;		
	    wedgeoverride.gad;		
	    wedgerange.gad;		
	    specificwedges.gad;		
	    wedgecount.gad;		
	    nwedgeattribs.gad;		
} 

folder4.gad = 
GROUP collapsible "Sequence" flat  
{
    VALUE(folder4.gad.val) LAYOUT(vertical) HSTRETCH
	    trange.row.join;		
	    f.row.join;		
	    substeps.gad;		
	    useframeoverride.row.join;		
	    specificrange.gad;		
} 

folder10.gad = 
GROUP collapsible "Cache" flat  PARMREF(pdg_cachemode.gad)
{
    VALUE(folder10.gad.val) LAYOUT(vertical) HSTRETCH
	    soppath.gad;		
	    pdg_cachemode.gad;		
} 

folder1.gad = 
{
    LAYOUT(vertical) HSTRETCH

    TABDIALOG2 flat "folder1.gad"
    { 
	VALUE(folder1.gad.val) STRETCH(1,0)

	TAB "Caching"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder10.gad;		
	    folder4.gad;		
	    folder7.gad;		
	    folder6.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Scheduling"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder0.gad;		
	    local.gad;		

	    { STRETCH(1,1) }
	}

	TAB "Advanced"
	{
	    LAYOUT(vertical) STRETCH

            HMARGIN(0) VMARGIN(2p) SPACING(0, 2p)
	    folder3.gad;		
	    folder5_2.gad;		
	    folder2.gad;		
	    folder12.gad;		

	    { STRETCH(1,1) }
	}
    } 
}

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    filemethod.row.join; 
    basename.row.join; 
    file.row.join; 
    basedir.row.join; 
    enableversion.row.join; 
    sepparm4.gad; 
    folder1.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
