// Magic: 58705430
// Automatically generated PSI dialog (PSI version 19.5.435)
// Sat Jan  7 14:13:53 2023


f_tmp = FLOAT_FIELD;	// dialog.top.ui

class.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    class.label = PARM_LABEL_SIMPLE("Elements", "class") WIDTH(1.5);
    { WIDTH(0.09) }

    class.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}
selectionmode.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

selectionmode.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    selectionmode.label = PARM_LABEL_SIMPLE("Selection Mode", "selectionmode") WIDTH(1.5);
    { WIDTH(0.09) }

    selectionmode.menu;

    {  }

    {  }
}

specification.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) 
    {  }

    specification.menu;

    {  }

    {  }
}
}	// Template join.bot


ratio.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 ratio.label = PARM_LABEL("Ratio", "ratio") WIDTH(1.5);
 PARM(float, 1, "ratio", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(ratio.label) HSTRETCH;

  { WIDTH(0.1) }
}

count.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 count.label = PARM_LABEL("Count", "count") WIDTH(1.5);
 PARM(integer, 1, "count", none, none) RANGE(0,10000)
	LOCK_RANGE_MIN LABELREF(count.label) HSTRETCH;

  { WIDTH(0.1) }
}

probability.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 probability.label = PARM_LABEL("Probability", "probability") WIDTH(1.5);
 PARM(float, 1, "probability", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(probability.label) HSTRETCH;

  { WIDTH(0.1) }
}

offset.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 offset.label = PARM_LABEL("Offset", "offset") WIDTH(1.5);
 PARM(integer, 1, "offset", none, none) RANGE(-100,100)
	 LABELREF(offset.label) HSTRETCH;

  { WIDTH(0.1) }
}

selectlen.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 selectlen.label = PARM_LABEL("Select", "selectlen") WIDTH(1.5);
 PARM(integer, 1, "selectlen", none, none) RANGE(1,20)
	LOCK_RANGE_MIN LABELREF(selectlen.label) HSTRETCH;

  { WIDTH(0.1) }
}

skiplen.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 skiplen.label = PARM_LABEL("Skip", "skiplen") WIDTH(1.5);
 PARM(integer, 1, "skiplen", none, none) RANGE(1,20)
	LOCK_RANGE_MIN LABELREF(skiplen.label) HSTRETCH;

  { WIDTH(0.1) }
}

selectlenmin.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 selectlenmin.label = PARM_LABEL("Select Min", "selectlenmin") WIDTH(1.5);
 PARM(integer, 1, "selectlenmin", none, none) RANGE(1,20)
	LOCK_RANGE_MIN LABELREF(selectlenmin.label) HSTRETCH;

  { WIDTH(0.1) }
}

selectlenmax.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 selectlenmax.label = PARM_LABEL("Select Max", "selectlenmax") WIDTH(1.5);
 PARM(integer, 1, "selectlenmax", none, none) RANGE(1,20)
	LOCK_RANGE_MIN LABELREF(selectlenmax.label) HSTRETCH;

  { WIDTH(0.1) }
}

skiplenmin.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 skiplenmin.label = PARM_LABEL("Skip Min", "skiplenmin") WIDTH(1.5);
 PARM(integer, 1, "skiplenmin", none, none) RANGE(1,20)
	LOCK_RANGE_MIN LABELREF(skiplenmin.label) HSTRETCH;

  { WIDTH(0.1) }
}

skiplenmax.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 skiplenmax.label = PARM_LABEL("Skip Max", "skiplenmax") WIDTH(1.5);
 PARM(integer, 1, "skiplenmax", none, none) RANGE(1,20)
	LOCK_RANGE_MIN LABELREF(skiplenmax.label) HSTRETCH;

  { WIDTH(0.1) }
}

randseed.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 randseed.label = PARM_LABEL("Random Seed", "randseed") WIDTH(1.5);
 PARM(integer, 1, "randseed", none, none) RANGE(0,200)
	LOCK_RANGE_MIN LABELREF(randseed.label) HSTRETCH;

  { WIDTH(0.1) }
}

sepparm.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

deletenonselected.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("deletenonselected", "Delete Non-selected") toggle VALUE(deletenonselected.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

deleteselected.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("deleteselected", "Delete Selected") toggle VALUE(deleteselected.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

creategroup.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("creategroup", "Create Group from Selected") toggle VALUE(creategroup.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

groupname.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    groupname.label = PARM_LABEL("Group Name", "groupname") WIDTH(1.5);
    PARM_FIELD(string, "groupname") VALUE(groupname.val) 
	LABELREF(groupname.label) HSTRETCH;

    { WIDTH(0.1) }
}
colorselected.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
colorselected.join =		
{

  LAYOUT(horizontal)  JUSTIFY(left, center)
  HMARGIN(0, 0) NO_MARGIN_SPACING_SCALE

colorselected.gad = PARM_BUTTON("colorselected", "") toggle VALUE(colorselected.val) RETAIN_SIZE_WHEN_HIDDEN;

deleteallcolorattribs.gad = ROW
{
    HSTRETCH
    {  }

    { WIDTH(1.32) }
    { WIDTH(0.08) }

    PARM_BUTTON("deleteallcolorattribs", "Delete All Existing Color Attributes") toggle VALUE(deleteallcolorattribs.val);

    { HSTRETCH }

    {  }
}
}	
}	// Template join.bot


colortype.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    colortype.label = PARM_LABEL_SIMPLE("Color Type", "colortype") WIDTH(1.5);
    { WIDTH(0.09) }

    colortype.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

color.gad = 
{
    LAYOUT (horizontal) HSTRETCH
    { WIDTH(0.18) }

    color.label = PARM_LABEL("Color", "color") WIDTH(1.5);
    PARM(float, 3, "color", none, COLOR, "R,G,B") 
	LABELREF(color.label) HSTRETCH;

    { WIDTH(0.1) }
}

seed.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 seed.label = PARM_LABEL("Color Seed", "seed") WIDTH(1.5);
 PARM(float, 1, "seed", none, none) RANGE(0,10)
	 LABELREF(seed.label) HSTRETCH;

  { WIDTH(0.1) }
}

rampattribute.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    rampattribute.label = PARM_LABEL("Attribute", "rampattribute") WIDTH(1.5);
    PARM_FIELD(string, "rampattribute") VALUE(rampattribute.val) 
	LABELREF(rampattribute.label) HSTRETCH;

    { WIDTH(0.1) }
}

ramprange.gad = ROW
{
   HSTRETCH
   { WIDTH(0.18) }

   ramprange.label = PARM_LABEL("Range", "ramprange") WIDTH(1.5);
   PARM(float, 2, "ramprange", none, none, "#1,#2")
	RANGE(0,10)  LABELREF(ramprange.label)
	HSTRETCH;

    { WIDTH(0.1) }
}

ramp.si_rampedit = COLOR_RAMP VALUE(ramp.ramp_val)
			LAYOUT(horizontal)  HSTRETCH;

ramp.multiramp = 
{
    LAYOUT(vertical) STRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE

    ROW
    {
	JUSTIFY(left,center) SPACING(0.1) VMARGIN(0.02) HSTRETCH

	COL
	{
	    JUSTIFY(right,center) WIDTH(1.5)
	    LABEL "Point No.";
	}

	ramp.pointno.gad
	    = INT_SLIDER_FIELD VALUE(ramp.pointno.val) HSTRETCH;
    }
}

ramp.buttons.gad = COL
{
    VSTRETCH

    ICON_BUTTON_STRIP
    {
	LAYOUT(horizontal) INITSIZE(20p, 20p) 

	ACTION_ICONBUTTON "BUTTONS_delete"
		HELP("Remove Point") VALUE(ramp.delpoint.val);
	ACTION_ICONBUTTON "BUTTONS_add"
		HELP("Add Point") VALUE(ramp.addpoint.val);
    }

    { VSTRETCH }

    ramp.toggleparms.gad
      = ACTION_ICONBUTTON "BUTTONS_show_controls"
	HELP("Hide Controls", "h.pane.parms.toggle_ramp_parms")
	VALUE(ramp.toggle.val)
	LOOKFLAT UI_FLAT_ICON_BTN_SIZE_TINY;
}

ramp.parm =
{
    LAYOUT(vertical) HSTRETCH JUSTIFY(left, center)

    ramp.ramp.gad = ROW
    {
	MARGIN(0.02) SPACING(0.02) JUSTIFY(left, top) HSTRETCH

	ramp.buttons.gad VSTRETCH;

	ramp.si_rampedit HSTRETCH;
    }
}

ramp.gad =
{
    LAYOUT(vertical) MARGIN(2p) HSTRETCH
    HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
    {
	LAYOUT(horizontal) HSTRETCH

	PARM_LABEL_SIMPLE("Attribute Ramp", "ramp");

	{ HSTRETCH }
	ACTION_ICONBUTTON "BUTTONS_ramp_flip_x" VALUE(ramp.reverse.val)
		LOOKFLAT HELP("Reverse Domain") UI_FLAT_ICON_BTN_SIZE_SMALL;
	ACTION_ICONBUTTON "BUTTONS_ramp_flip_y" VALUE(ramp.complement.val)
		LOOKFLAT HELP("Complement Ramp") UI_FLAT_ICON_BTN_SIZE_SMALL;
	ramp.presets
	    = ACTION_MENU_ICONBUTTON "BUTTONS_gear"
		LOOKFLAT HELP("Presets") UI_FLAT_ICON_BTN_SIZE_SMALL;

    }

    {
	LAYOUT(vertical) MARGIN(2p) SPACING(0.02) HSTRETCH

	ramp.parm;

	SWITCHER tight
	{
	    LAYOUT(overlap) VALUE(ramp.hideparms.val) HSTRETCH
	    ramp.multiramp;
	    {}
	}
    }
}

folder0.gad = 

GROUP simple "Color Selected" flat 
{ 
    VALUE(folder0.gad.val) LAYOUT(vertical) HSTRETCH 
	    colorselected.row.join;		
	    colortype.gad;		
	    color.gad;		
	    seed.gad;		
	    rampattribute.gad;		
	    ramprange.gad;		
	    ramp.gad;		
} 

folder1.gad = 

GROUP simple "In Every Period..." flat 
{ 
    VALUE(folder1.gad.val) LAYOUT(vertical) HSTRETCH 
	    selectlen.gad;		
	    skiplen.gad;		
	    selectlenmin.gad;		
	    selectlenmax.gad;		
	    skiplenmin.gad;		
	    skiplenmax.gad;		
} 

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    class.gad; 
    selectionmode.row.join; 
    ratio.gad; 
    count.gad; 
    probability.gad; 
    offset.gad; 
    folder1.gad; 
    randseed.gad; 
    sepparm.gad; 
    deletenonselected.gad; 
    deleteselected.gad; 
    creategroup.gad; 
    groupname.gad; 
    folder0.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
