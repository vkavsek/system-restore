// Magic: 3544eb98
// Automatically generated PSI dialog (PSI version 19.5.534)
// Mon Apr  3 10:56:18 2023


f_tmp = FLOAT_FIELD;	// dialog.top.ui
connectivitytoggle.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
connectivitytoggle.join =		
{

  LAYOUT(horizontal)  JUSTIFY(left, center)
  HMARGIN(0, 0) NO_MARGIN_SPACING_SCALE

connectivitytoggle.gad = PARM_BUTTON("connectivitytoggle", "") toggle VALUE(connectivitytoggle.val) RETAIN_SIZE_WHEN_HIDDEN;

connectmenu.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    {  }

    connectmenu.label = PARM_LABEL_SIMPLE("Connectivity", "connectmenu") WIDTH(1.32);
    { WIDTH(0.09) }

    connectmenu.menu;

    { HSTRETCH }

    {  }
}
}	
}	// Template join.bot

inputatt.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
inputatt.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0, 0) NO_MARGIN_SPACING_SCALE

inputatt.gad = PARM_BUTTON("inputatt", "") toggle VALUE(inputatt.val) RETAIN_SIZE_WHEN_HIDDEN;

attname.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    {  }

    attname.label = PARM_LABEL("Input Attribute", "attname") WIDTH(1.32);
    PARM_FIELD(string, "attname") VALUE(attname.val) 
	LABELREF(attname.label) HSTRETCH;

    attname.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

    {  }
}
}	
}	// Template join.bot

buckettoggle.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
buckettoggle.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0, 0) NO_MARGIN_SPACING_SCALE

buckettoggle.gad = PARM_BUTTON("buckettoggle", "") toggle VALUE(buckettoggle.val) RETAIN_SIZE_WHEN_HIDDEN;

targetbucket.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 targetbucket.label = PARM_LABEL("Target Bucket Size", "targetbucket") WIDTH(1.32);
 PARM(integer, 1, "targetbucket", none, none) RANGE(0,4096)
	 LABELREF(targetbucket.label) HSTRETCH;

  {  }
}
}	
}	// Template join.bot


clusterseed.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 clusterseed.label = PARM_LABEL("Bucket Seed", "clusterseed") WIDTH(1.5);
 PARM(float, 1, "clusterseed", none, none) RANGE(0,10)
	 LABELREF(clusterseed.label) HSTRETCH;

  { WIDTH(0.1) }
}

enable.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("enable", "Enable") toggle VALUE(enable.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

depth.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    depth.label = PARM_LABEL_SIMPLE("Search Depth", "depth") WIDTH(1.5);
    { WIDTH(0.09) }

    depth.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

extweight.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 extweight.label = PARM_LABEL("Extended Influence", "extweight") WIDTH(1.5);
 PARM(float, 1, "extweight", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(extweight.label) HSTRETCH;

  { WIDTH(0.1) }
}

iterations.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 iterations.label = PARM_LABEL("Iterations", "iterations") WIDTH(1.5);
 PARM(integer, 1, "iterations", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(iterations.label) HSTRETCH;

  { WIDTH(0.1) }
}

sepparm4.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}

visualizepieces.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("visualizepieces", "Visualize Segments") toggle VALUE(visualizepieces.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

sepparm3.gad = 

{

    LAYOUT(vertical) HSTRETCH

    { HEIGHT(0.070590) }
}

remeshtarget.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    remeshtarget.label = PARM_LABEL_SIMPLE("Remesh Target Type", "remeshtarget") WIDTH(1.5);
    { WIDTH(0.09) }

    remeshtarget.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

targetedgetemp.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 targetedgetemp.label = PARM_LABEL("Target Edge Length", "targetedgetemp") WIDTH(1.5);
 PARM(float, 1, "targetedgetemp", none, none) RANGE(5.0000000000000002e-05,0.5)
	LOCK_RANGE_MIN LABELREF(targetedgetemp.label) HSTRETCH;

  { WIDTH(0.1) }
}

edgemult.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 edgemult.label = PARM_LABEL("Edge Length Ratio", "edgemult") WIDTH(1.5);
 PARM(float, 1, "edgemult", none, none) RANGE(0,10)
	 LABELREF(edgemult.label) HSTRETCH;

  { WIDTH(0.1) }
}

targetpolycount.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 targetpolycount.label = PARM_LABEL("Target Polycount", "targetpolycount") WIDTH(1.5);
 PARM(integer, 1, "targetpolycount", none, none) RANGE(0,2000000)
	LOCK_RANGE_MIN LABELREF(targetpolycount.label) HSTRETCH;

  { WIDTH(0.1) }
}

polymult.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 polymult.label = PARM_LABEL("Polycount Ratio", "polymult") WIDTH(1.5);
 PARM(float, 1, "polymult", none, none) RANGE(0,10)
	 LABELREF(polymult.label) HSTRETCH;

  { WIDTH(0.1) }
}

targetlengthmin.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 targetlengthmin.label = PARM_LABEL("Target Edge Length Min", "targetlengthmin") WIDTH(1.5);
 PARM(float, 1, "targetlengthmin", none, none) RANGE(0.001,0.5)
	LOCK_RANGE_MIN LABELREF(targetlengthmin.label) HSTRETCH;

  { WIDTH(0.1) }
}

targetlengthmax.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 targetlengthmax.label = PARM_LABEL("Target Edge Length Max", "targetlengthmax") WIDTH(1.5);
 PARM(float, 1, "targetlengthmax", none, none) RANGE(0.001,0.5)
	LOCK_RANGE_MIN LABELREF(targetlengthmax.label) HSTRETCH;

  { WIDTH(0.1) }
}

gradation.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 gradation.label = PARM_LABEL("Gradation", "gradation") WIDTH(1.5);
 PARM(float, 1, "gradation", none, none) RANGE(0,1)
	LOCK_RANGE LABELREF(gradation.label) HSTRETCH;

  { WIDTH(0.1) }
}

sepparm.gad = 

{
    LAYOUT(vertical) HSTRETCH HMARGIN(0.18, 0.1)
    NO_MARGIN_SPACING_SCALE

    { HEIGHT(0.1) }
    SEPARATOR;
    { HEIGHT(0.1) }
}

remeshiterations.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 remeshiterations.label = PARM_LABEL("Remesh Iterations", "remeshiterations") WIDTH(1.5);
 PARM(integer, 1, "remeshiterations", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(remeshiterations.label) HSTRETCH;

  { WIDTH(0.1) }
}

smoothing.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 smoothing.label = PARM_LABEL("Smoothing", "smoothing") WIDTH(1.5);
 PARM(float, 1, "smoothing", none, none) RANGE(0,1)
	LOCK_RANGE_MIN LABELREF(smoothing.label) HSTRETCH;

  { WIDTH(0.1) }
}

remeshseams.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("remeshseams", "Remesh Seams") toggle VALUE(remeshseams.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

fusepieces.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("fusepieces", "Fuse Remaining Seams") toggle VALUE(fusepieces.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

recomputenormals.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("recomputenormals", "Recompute Normals") toggle VALUE(recomputenormals.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

fd_post2.gad = 

GROUP simple "Post-processing" flat 
{ 
    VALUE(fd_post2.gad.val) LAYOUT(vertical) HSTRETCH 
	    remeshseams.gad;		
	    fusepieces.gad;		
	    recomputenormals.gad;		
} 

fd_adaptive2.gad = 

{
    VALUE(fd_adaptive2.gad.val) LAYOUT(vertical) HSTRETCH SPACING(0.02)
	    targetlengthmin.gad;		
	    targetlengthmax.gad;		
	    gradation.gad;		
} 

fd_remesh2.gad = 

GROUP simple "Remeshing" flat 
{ 
    VALUE(fd_remesh2.gad.val) LAYOUT(vertical) HSTRETCH 
	    remeshtarget.gad;		
	    targetedgetemp.gad;		
	    edgemult.gad;		
	    targetpolycount.gad;		
	    polymult.gad;		
	    fd_adaptive2.gad;		
	    sepparm.gad;		
	    remeshiterations.gad;		
	    smoothing.gad;		
} 

fd_refineclusters2.gad = 
GROUP collapsible "Refine Bucket Boundary" flat   
{
    VALUE(fd_refineclusters2.gad.val) LAYOUT(vertical) HSTRETCH
	    enable.gad;		
	    depth.gad;		
	    extweight.gad;		
	    iterations.gad;		
} 

fd_parallelprocess2.gad = 

GROUP simple "Segmentation for Parallel Processing" flat 
{ 
    VALUE(fd_parallelprocess2.gad.val) LAYOUT(vertical) HSTRETCH 
	    connectivitytoggle.row.join;		
	    inputatt.row.join;		
	    buckettoggle.row.join;		
	    clusterseed.gad;		
	    fd_refineclusters2.gad;		
	    sepparm4.gad;		
	    visualizepieces.gad;		
	    sepparm3.gad;		
} 

# warning cpp warning: "GenV3/subdialog.top.ui":5 Macro "PARMSPACING" redefined.  Using later definition
# warning cpp warning: "GenV3/subdialog.top.ui":6 Macro "LAYOUTDIR" redefined.  Using later definition
# warning cpp warning: "GenV3/subdialog.top.ui":7 Macro "DO_JUSTIFY" redefined.  Using later definition
dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    fd_parallelprocess2.gad; 
    fd_remesh2.gad; 
    fd_post2.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
