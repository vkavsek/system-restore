{"type": "root", "attrs": {"type": "node", "context": "chop", "internal": "count", "icon": "CHOP/count", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Count"], "extent": [63, 73]}, {"type": "summary", "indent": 0, "text": ["Counts the number of times a channel crosses a trigger or release\nthreshold."], "extent": [73, 158]}, {"type": "para", "indent": 0, "text": ["This CHOP counts the number of times a channel crosses a trigger or\nrelease threshold. It operates in either static or realtime (", {"type": "q", "text": ["Cook to\nCurrent Frame"]}, ") mode."], "extent": [158, 319]}, {"type": "para", "indent": 0, "text": ["Crossing the trigger threshold (increasing past the trigger level)\ncreates a trigger event. Similarly, crossing the release threshold\n(decreasing past the release level) creates a release event. Operations\nmay also be performed while the input remain above or below the trigger\nor release levels. On each event, the count may be increased or\ndecreased by 1 or the time, or reset to zero. The time per sample varies\nwith the sample rate (i.e. for 100 samples/second, the time for each\nsample would be 1/100th of a second)."], "extent": [319, 842]}, {"type": "para", "indent": 0, "text": ["The optional second input is a reset input. The first channel is\ninterpreted as a channel containing reset pulses. Whenever this channel\nis non-zero, the count for all channels is reset."], "extent": [842, 1030]}, {"type": "para", "indent": 0, "text": ["This CHOP can be time sliced, and take advantage of Minimal Time Slice\nCooks."], "extent": [1030, 1110]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1110, 1122], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Trigger"], "extent": [1122, 1141], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Release = Trigger Threshold"], "extent": [1141, 1179], "body": [{"type": "para", "indent": 12, "text": ["If on, the trigger threshold is also used as the release\n            threshold."], "extent": [1179, 1271]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Trigger Threshold"], "extent": [1271, 1298], "body": [{"type": "para", "indent": 12, "text": ["The channel level that must be exceeded in order to trigger\n            a count."], "extent": [1332, 1425]}], "container": true, "attrs": {"channels": "/threshup"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Release Threshold"], "extent": [1425, 1452], "body": [{"type": "para", "indent": 12, "text": ["A release count is triggered when the channel level drops\n            below this threshold."], "extent": [1488, 1592]}], "container": true, "attrs": {"channels": "/threshdown"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Re-Trigger Delay"], "extent": [1592, 1618], "body": [{"type": "para", "indent": 12, "text": ["The amount of time after a trigger point that a new trigger\n            may occur."], "extent": [1653, 1748]}], "container": true, "attrs": {"channels": "/retrigger"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Trigger On"], "extent": [1748, 1768], "body": [{"type": "para", "indent": 12, "text": ["Determines whether a trigger occurs on an increasing slope\n            or decreasing slope when passing the trigger threshold. A\n            release will occur on the opposite slope."], "extent": [1768, 1964]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Count"], "extent": [1964, 1980], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Limit"], "extent": [1980, 1996], "body": [{"type": "para", "indent": 12, "text": ["The count can be clamped or looped between the limit minimum\n            and maximum. Clamp will hold the count value at the\n            maximum/minimum value if it goes above or below the limits.\n            Loop will loop the count back between the limits by shifting\n            the count to the maximum or minimum limit."], "extent": [1996, 2333]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Limit Minimum"], "extent": [2333, 2356], "body": [{"type": "para", "indent": 12, "text": ["Minimum allowed count number."], "extent": [2390, 2432]}], "container": true, "attrs": {"channels": "/limitmin"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Limit Maximum"], "extent": [2432, 2455], "body": [{"type": "para", "indent": 12, "text": ["Maximum allowed count number."], "extent": [2489, 2531]}], "container": true, "attrs": {"channels": "/limitmax"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Off To On"], "extent": [2531, 2550], "body": [{"type": "para", "indent": 12, "text": ["The operation to perform when a trigger event (off to on)\n            occurs."], "extent": [2550, 2640]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["While On"], "extent": [2640, 2658], "body": [{"type": "para", "indent": 12, "text": ["The operation to perform while the input remains triggered\n            (on)."], "extent": [2658, 2747]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["On To Off"], "extent": [2747, 2766], "body": [{"type": "para", "indent": 12, "text": ["The operation to perform when a release event (on to off)\n            occurs."], "extent": [2766, 2856]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["While On"], "extent": [2856, 2874], "body": [{"type": "para", "indent": 12, "text": ["The operation to perform while the input is not triggered\n            (off)."], "extent": [2874, 2963]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Reset Count To Zero"], "extent": [2963, 2992], "body": [{"type": "para", "indent": 12, "text": ["In time slice mode, this resets the count for all channels."], "extent": [2992, 3077]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 2, "id": "common", "container": true, "type": "h", "indent": 0, "text": ["Common"], "extent": [2334, 2356], "body": [{"type": "para", "indent": 0, "text": ["Some of these parameters may not be available on all CHOP nodes."], "extent": [2356, 2423]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Scope"], "extent": [2423, 2430], "body": [{"type": "para", "indent": 4, "text": ["To determine which channels get affected, some CHOPs have a scope string. Patterns can be used in the scope, for example ", {"type": "code", "text": ["*"]}, " (match all), and ", {"type": "code", "text": ["?"]}, " (match single character). "], "extent": [2430, 2612]}, {"type": "para", "indent": 4, "text": ["The following are examples of possible channel name matching options:"], "extent": [2612, 2691]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan2"]}], "extent": [2691, 2704], "body": [{"type": "para", "indent": 8, "text": ["Matches a single channel name."], "extent": [2704, 2748]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan3 tx ty tz"]}], "extent": [2748, 2770], "body": [{"type": "para", "indent": 8, "text": ["Matches four channel names, separated by spaces."], "extent": [2770, 2832]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan*"]}], "extent": [2832, 2845], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that starts with ", {"type": "code", "text": ["chan"]}, "."], "extent": [2845, 2908]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["*foot*"]}], "extent": [2908, 2922], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that has ", {"type": "code", "text": ["foot"]}, " in it."], "extent": [2922, 2979]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t?"]}], "extent": [2979, 2989], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "code", "text": ["?"]}, " matches a single character. ", {"type": "code", "text": ["t?"]}, " matches two-character channels starting with t.  "], "extent": [2989, 3093]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["r[xyz]"]}], "extent": [3093, 3107], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["rx"]}, ", ", {"type": "code", "text": ["ry"]}, " and ", {"type": "code", "text": ["rz"]}, "."], "extent": [3107, 3162]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[3-7:2]"]}], "extent": [3162, 3182], "body": [{"type": "para", "indent": 8, "text": ["Matches number ranges giving ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", and ", {"type": "code", "text": ["blend7"]}, "."], "extent": [3182, 3262]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[2-3,5,13]"]}], "extent": [3262, 3285], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["blend2"]}, ", ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", ", {"type": "code", "text": ["blend13"]}, "."], "extent": [3285, 3356]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t[xyz]"]}], "extent": [3356, 3370], "body": [{"type": "para", "indent": 8, "text": [{"type": "code", "text": ["[xyz]"]}, "matches three characters, giving channels ", {"type": "code", "text": ["tx"]}, ", ", {"type": "code", "text": ["ty"]}, " and ", {"type": "code", "text": ["tz"]}, "."], "extent": [3370, 3458]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["Sample Rate Match"], "extent": [3458, 3477], "body": [{"type": "para", "indent": 4, "text": ["The Sample Rate Match Options handle cases where multiple input CHOPs\u2019 sample rates are different."], "extent": [3477, 3585]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Resample At First Input\u2019s Rate"], "extent": [3585, 3621], "body": [{"type": "para", "indent": 8, "text": ["Use rate of first input to resample others."], "extent": [3621, 3682]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Maximum Rate"], "extent": [3682, 3712], "body": [{"type": "para", "indent": 8, "text": ["Resample to highest sample rate."], "extent": [3712, 3758]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Minimum Rate"], "extent": [3758, 3788], "body": [{"type": "para", "indent": 8, "text": ["Resample to the lowest sample rate."], "extent": [3788, 3841]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Error if Rates Differ"], "extent": [3841, 3868], "body": [{"type": "para", "indent": 8, "text": ["Does not accept conflicting sample rates."], "extent": [3868, 3923]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["Units"], "extent": [3923, 3930], "body": [{"type": "para", "indent": 4, "text": ["The units for which time parameters are specified."], "extent": [3930, 3990]}, {"type": "para", "indent": 4, "text": ["For example, you can specify the amount of time a lag should last for in seconds (default), frames (at the Houdini FPS), or samples (in the CHOP\u2019s sample rate)."], "extent": [3990, 4160]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4160, 4170], "body": [{"type": "para", "indent": 8, "text": ["When you change the Units parameter, it does not convert the existing parameters to the new units."], "extent": [4170, 4282]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 0, "text": ["Time Slice"], "extent": [4282, 4294], "body": [{"type": "para", "indent": 4, "text": ["Time Slicing is a feature which boosts cooking performance and reduces memory usage. Traditionally, CHOPs calculate the channel over its entire frame range. If the channel does need to be evaluated every frame, then cooking the entire range of the channel is unnecessary. It is more efficient to calculate only the fraction of the channel that is needed. This fraction is known as a Time Slice."], "extent": [4294, 4694]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Unload"], "extent": [4694, 4702], "body": [{"type": "para", "indent": 4, "text": ["Causes the memory consumed by a CHOP to be released after it is cooked and the data passed to the next CHOP."], "extent": [4702, 4816]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Export Prefix"], "extent": [4816, 4836], "body": [{"type": "para", "indent": 4, "text": ["The Export prefix is prepended to CHOP channel names to determine where to export to. "], "extent": [4836, 4932]}, {"type": "para", "indent": 4, "text": ["For example, if the CHOP channel was named ", {"type": "code", "text": ["geo1:tx"]}, ", and the prefix was ", {"type": "code", "text": ["/obj"]}, ", the channel would be exported to ", {"type": "code", "text": ["/obj/geo1/tx"]}, "."], "extent": [4932, 5071]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [5071, 5081], "body": [{"type": "para", "indent": 8, "text": ["You can leave the ", {"type": "ui", "text": ["Export Prefix"]}, " blank, but then your CHOP track names need to be absolute paths, such as ", {"type": "code", "text": ["obj:geo1:tx"]}, "."], "extent": [5081, 5214]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 0, "text": ["Graph Color"], "extent": [5214, 5227], "body": [{"type": "para", "indent": 4, "text": ["Every CHOP has this option. Each CHOP gets a default color assigned for display in the Graph port, but you can override the color in the Common page under Graph Color. There are 36 RGB color combinations in the Palette."], "extent": [5227, 5452]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Graph Color Step"], "extent": [5452, 5470], "body": [{"type": "para", "indent": 4, "text": ["When the graph displays the animation curves and a CHOP has two or more channels, this defines the difference in color from one channel to the next, giving a rainbow spectrum of colors."], "extent": [5470, 5661]}], "container": true}], "container": true}]}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3102, 3111], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/hold", "type": "link", "text": "", "fullpath": "/nodes/chop/hold"}], "extent": [3111, 3134]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/trigger", "type": "link", "text": "", "fullpath": "/nodes/chop/trigger"}], "extent": [3134, 3161]}], "container": true}], "text": "Related"}], "title": ["Count"], "summary": ["Counts the number of times a channel crosses a trigger or release\nthreshold."], "included": ["/nodes/chop/common"]}