{"type": "root", "attrs": {"type": "node", "context": "chop", "internal": "math", "icon": "CHOP/math", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Math"], "extent": [61, 70]}, {"type": "summary", "indent": 0, "text": ["Perform a variety of arithmetic operations on and between channels."], "extent": [70, 146]}, {"type": "para", "indent": 0, "text": ["This CHOP allows you to perform a variety of arithmetic operations on\nand between channels. Channels of a CHOP can be combined, and several\nCHOPs can be combined."], "extent": [146, 310]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Unary Operations"], "extent": [310, 333], "body": [{"type": "para", "indent": 0, "text": ["Unary operations are performed on individual channels. Unary operations are:"], "extent": [333, 412]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Off"], "extent": [412, 417], "body": [{"type": "para", "indent": 4, "text": ["Don\u2019t do anything to the channel."], "extent": [417, 455]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Negate"], "extent": [455, 463], "body": [{"type": "para", "indent": 4, "text": ["Take the negative value of each sample of the channel."], "extent": [463, 522]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Positive"], "extent": [522, 532], "body": [{"type": "para", "indent": 4, "text": ["Make negative values of the channel positive (absolute)."], "extent": [532, 593]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Root"], "extent": [593, 599], "body": [{"type": "para", "indent": 4, "text": ["Take the square root of all values in the channel."], "extent": [599, 654]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Square"], "extent": [654, 662], "body": [{"type": "para", "indent": 4, "text": ["Square all the values in the channel."], "extent": [662, 704]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Inverse"], "extent": [704, 713], "body": [{"type": "para", "indent": 4, "text": ["Take the inverse (1/x) of all values in the channel."], "extent": [713, 771]}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Combine Channels"], "extent": [771, 794], "body": [{"type": "para", "indent": 0, "text": ["Operations between channels can be done within an input or between\ninputs. The operations are done on a sample by sample basis:"], "extent": [794, 924]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Off"], "extent": [924, 929], "body": [{"type": "para", "indent": 4, "text": ["Don\u2019t combine the channels."], "extent": [929, 961]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Add"], "extent": [961, 966], "body": [{"type": "para", "indent": 4, "text": ["Sum all the channels."], "extent": [966, 992]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Subtract"], "extent": [992, 1002], "body": [{"type": "para", "indent": 4, "text": ["Subtract all the channels from the first."], "extent": [1002, 1048]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Multiply"], "extent": [1048, 1058], "body": [{"type": "para", "indent": 4, "text": ["Take the product of all the channels."], "extent": [1058, 1100]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Divide"], "extent": [1100, 1108], "body": [{"type": "para", "indent": 4, "text": ["Divide the first channel by all the rest."], "extent": [1108, 1154]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Average"], "extent": [1154, 1163], "body": [{"type": "para", "indent": 4, "text": ["Take the average of all the channels."], "extent": [1163, 1205]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Maximum"], "extent": [1205, 1214], "body": [{"type": "para", "indent": 4, "text": ["Take the maximum value of all the channels."], "extent": [1214, 1262]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Minimum"], "extent": [1262, 1271], "body": [{"type": "para", "indent": 4, "text": ["Take the minimum value of all the channels."], "extent": [1271, 1319]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Length"], "extent": [1319, 1327], "body": [{"type": "para", "indent": 4, "text": ["Assume the channels are a vector and compute its length."], "extent": [1327, 1389]}], "container": true}], "container": true}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1389, 1401], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["OP"], "extent": [1401, 1411], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Channel Pre OP"], "extent": [1411, 1428], "body": [{"type": "para", "indent": 4, "text": ["A menu of unary operations that are performed on single channels as they come in to the Math CHOP."], "extent": [1428, 1536]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combine Channels"], "extent": [1536, 1554], "body": [{"type": "para", "indent": 4, "text": ["A menu of operations that is performed between the channels of a single input CHOP, for each input."], "extent": [1554, 1663]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combine CHOPs"], "extent": [1663, 1678], "body": [{"type": "para", "indent": 4, "text": ["A menu of operations that is performed between the input CHOPs, combining several CHOPs into one."], "extent": [1678, 1785]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Channel Post OP"], "extent": [1785, 1802], "body": [{"type": "para", "indent": 4, "text": ["A menu of more unary operations that is performed on the channels resulting from the above operations."], "extent": [1802, 1914]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Match By"], "extent": [1914, 1924], "body": [{"type": "para", "indent": 4, "text": ["Match channels between inputs by name or number."], "extent": [1924, 1978]}, {"type": "para", "indent": 4, "text": ["When matching by name, the number of output channels is the number of channels from the first input. For each channel of the first input, the channel of the same name is taken from the other inputs.\n    If a channel name cannot be found, then it is omitted. Only the channels whose names occur in the first input will be used to generate the output channels. Channels whose names do not occur in the first input will not affect the output channels. "], "extent": [1978, 2433]}, {"type": "para", "indent": 4, "text": ["When matching by number, the number of output channels is the maximum number of channels out of all the inputs. Then for each input, the original sequence of channels is repeated to match the number of output channels."], "extent": [2433, 2657]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Match Failure"], "extent": [2657, 2672], "body": [{"type": "para", "indent": 4, "text": ["It is sometimes desirable to produce a warning or an error\n    when channels in the first input fail to be correctly matched\n    to channels in the other inputs. A failure may occur when matching\n    by ", {"type": "ui", "text": ["Channel Number"]}, " if an input has fewer channels than input 1, or\n    when  matching by ", {"type": "ui", "text": ["Channel Name"]}, " if a channel name cannot be found\n    in input 1."], "extent": [2672, 3040]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Align"], "extent": [3040, 3047], "body": [{"type": "para", "indent": 4, "text": ["The alignment to use when aligning channels from different inputs. See the help for the Merge CHOP."], "extent": [3047, 3152]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Mult-Add"], "extent": [3152, 3167], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Pre-Add"], "extent": [3167, 3177], "body": [{"type": "para", "indent": 4, "text": ["First, add value to each new channel."], "extent": [3201, 3243]}], "container": true, "attrs": {"channels": "/preoff"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Multiply"], "extent": [3243, 3253], "body": [{"type": "para", "indent": 4, "text": ["Then multiply by this value."], "extent": [3275, 3308]}], "container": true, "attrs": {"channels": "/gain"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Post-Add"], "extent": [3308, 3318], "body": [{"type": "para", "indent": 4, "text": ["Then add this value."], "extent": [3343, 3369]}], "container": true, "attrs": {"channels": "/postoff"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Range"], "extent": [3369, 3381], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["From/To Range"], "extent": [3381, 3397], "body": [{"type": "para", "indent": 4, "text": ["Another way to multiply/add. Converts from one low-high\n    range to another range."], "extent": [3437, 3538]}], "container": true, "attrs": {"channels": "/fromrange12 /torange12"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": "common", "container": true, "type": "h", "indent": 0, "text": ["Common"], "extent": [2334, 2356], "body": [{"type": "para", "indent": 0, "text": ["Some of these parameters may not be available on all CHOP nodes."], "extent": [2356, 2423]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Scope"], "extent": [2423, 2430], "body": [{"type": "para", "indent": 4, "text": ["To determine which channels get affected, some CHOPs have a scope string. Patterns can be used in the scope, for example ", {"type": "code", "text": ["*"]}, " (match all), and ", {"type": "code", "text": ["?"]}, " (match single character). "], "extent": [2430, 2612]}, {"type": "para", "indent": 4, "text": ["The following are examples of possible channel name matching options:"], "extent": [2612, 2691]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan2"]}], "extent": [2691, 2704], "body": [{"type": "para", "indent": 8, "text": ["Matches a single channel name."], "extent": [2704, 2748]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan3 tx ty tz"]}], "extent": [2748, 2770], "body": [{"type": "para", "indent": 8, "text": ["Matches four channel names, separated by spaces."], "extent": [2770, 2832]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan*"]}], "extent": [2832, 2845], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that starts with ", {"type": "code", "text": ["chan"]}, "."], "extent": [2845, 2908]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["*foot*"]}], "extent": [2908, 2922], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that has ", {"type": "code", "text": ["foot"]}, " in it."], "extent": [2922, 2979]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t?"]}], "extent": [2979, 2989], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "code", "text": ["?"]}, " matches a single character. ", {"type": "code", "text": ["t?"]}, " matches two-character channels starting with t.  "], "extent": [2989, 3093]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["r[xyz]"]}], "extent": [3093, 3107], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["rx"]}, ", ", {"type": "code", "text": ["ry"]}, " and ", {"type": "code", "text": ["rz"]}, "."], "extent": [3107, 3162]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[3-7:2]"]}], "extent": [3162, 3182], "body": [{"type": "para", "indent": 8, "text": ["Matches number ranges giving ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", and ", {"type": "code", "text": ["blend7"]}, "."], "extent": [3182, 3262]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[2-3,5,13]"]}], "extent": [3262, 3285], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["blend2"]}, ", ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", ", {"type": "code", "text": ["blend13"]}, "."], "extent": [3285, 3356]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t[xyz]"]}], "extent": [3356, 3370], "body": [{"type": "para", "indent": 8, "text": [{"type": "code", "text": ["[xyz]"]}, "matches three characters, giving channels ", {"type": "code", "text": ["tx"]}, ", ", {"type": "code", "text": ["ty"]}, " and ", {"type": "code", "text": ["tz"]}, "."], "extent": [3370, 3458]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sample Rate Match"], "extent": [3458, 3477], "body": [{"type": "para", "indent": 4, "text": ["The Sample Rate Match Options handle cases where multiple input CHOPs\u2019 sample rates are different."], "extent": [3477, 3585]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Resample At First Input\u2019s Rate"], "extent": [3585, 3621], "body": [{"type": "para", "indent": 8, "text": ["Use rate of first input to resample others."], "extent": [3621, 3682]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Maximum Rate"], "extent": [3682, 3712], "body": [{"type": "para", "indent": 8, "text": ["Resample to highest sample rate."], "extent": [3712, 3758]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Minimum Rate"], "extent": [3758, 3788], "body": [{"type": "para", "indent": 8, "text": ["Resample to the lowest sample rate."], "extent": [3788, 3841]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Error if Rates Differ"], "extent": [3841, 3868], "body": [{"type": "para", "indent": 8, "text": ["Does not accept conflicting sample rates."], "extent": [3868, 3923]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Units"], "extent": [3923, 3930], "body": [{"type": "para", "indent": 4, "text": ["The units for which time parameters are specified."], "extent": [3930, 3990]}, {"type": "para", "indent": 4, "text": ["For example, you can specify the amount of time a lag should last for in seconds (default), frames (at the Houdini FPS), or samples (in the CHOP\u2019s sample rate)."], "extent": [3990, 4160]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4160, 4170], "body": [{"type": "para", "indent": 8, "text": ["When you change the Units parameter, it does not convert the existing parameters to the new units."], "extent": [4170, 4282]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time Slice"], "extent": [4282, 4294], "body": [{"type": "para", "indent": 4, "text": ["Time Slicing is a feature which boosts cooking performance and reduces memory usage. Traditionally, CHOPs calculate the channel over its entire frame range. If the channel does need to be evaluated every frame, then cooking the entire range of the channel is unnecessary. It is more efficient to calculate only the fraction of the channel that is needed. This fraction is known as a Time Slice."], "extent": [4294, 4694]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Unload"], "extent": [4694, 4702], "body": [{"type": "para", "indent": 4, "text": ["Causes the memory consumed by a CHOP to be released after it is cooked and the data passed to the next CHOP."], "extent": [4702, 4816]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Export Prefix"], "extent": [4816, 4836], "body": [{"type": "para", "indent": 4, "text": ["The Export prefix is prepended to CHOP channel names to determine where to export to. "], "extent": [4836, 4932]}, {"type": "para", "indent": 4, "text": ["For example, if the CHOP channel was named ", {"type": "code", "text": ["geo1:tx"]}, ", and the prefix was ", {"type": "code", "text": ["/obj"]}, ", the channel would be exported to ", {"type": "code", "text": ["/obj/geo1/tx"]}, "."], "extent": [4932, 5071]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [5071, 5081], "body": [{"type": "para", "indent": 8, "text": ["You can leave the ", {"type": "ui", "text": ["Export Prefix"]}, " blank, but then your CHOP track names need to be absolute paths, such as ", {"type": "code", "text": ["obj:geo1:tx"]}, "."], "extent": [5081, 5214]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Graph Color"], "extent": [5214, 5227], "body": [{"type": "para", "indent": 4, "text": ["Every CHOP has this option. Each CHOP gets a default color assigned for display in the Graph port, but you can override the color in the Common page under Graph Color. There are 36 RGB color combinations in the Palette."], "extent": [5227, 5452]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Graph Color Step"], "extent": [5452, 5470], "body": [{"type": "para", "indent": 4, "text": ["When the graph displays the animation curves and a CHOP has two or more channels, this defines the difference in color from one channel to the next, giving a rainbow spectrum of colors."], "extent": [5470, 5661]}], "container": true, "role": "item"}], "container": true}]}]}], "text": "Parameters"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [3563, 3571], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["I"], "extent": [3571, 3575], "body": [{"type": "para", "indent": 4, "text": ["The current index."], "extent": [3575, 3598]}], "container": true}, {"type": "dt", "indent": 0, "text": ["V"], "extent": [3598, 3601], "body": [{"type": "para", "indent": 4, "text": ["The current value."], "extent": [3601, 3624]}], "container": true}, {"type": "dt", "indent": 0, "text": ["C"], "extent": [3624, 3627], "body": [{"type": "para", "indent": 4, "text": ["Current channel index (0 to NC-1)."], "extent": [3627, 3666]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NC"], "extent": [3666, 3670], "body": [{"type": "para", "indent": 4, "text": ["Total number of channels."], "extent": [3670, 3701]}], "container": true}], "container": true}], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3701, 3710], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/logic", "type": "link", "text": "", "fullpath": "/nodes/chop/logic"}], "extent": [3710, 3734]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/function", "type": "link", "text": "", "fullpath": "/nodes/chop/function"}], "extent": [3734, 3762]}], "container": true}], "text": "Related"}], "title": ["Math"], "summary": ["Perform a variety of arithmetic operations on and between channels."], "included": ["/nodes/chop/common"]}