{"type": "root", "attrs": {"type": "node", "context": "chop", "internal": "midiin", "icon": "CHOP/midiin", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["MIDI In"], "extent": [65, 77]}, {"type": "summary", "indent": 0, "text": ["The MIDI In CHOP reads Note events, Controller events, Program Change\nevents, and Timing events from both midi devices and files."], "extent": [77, 215]}, {"type": "para", "indent": 0, "text": ["The MIDI In CHOP receives midi events from midi devices connected to the\nserial port, reads midi events internal to the workstation (i.e. the\nbuilt-in software synth), and interprets musical scores in midi files.\nmidi data can be recorded in real time or recorded to the Houdini\ntimeline play bar\u2019s time. Supported midi events are:"], "extent": [215, 548]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Note On, Note Off"], "extent": [548, 569]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Polyphonic Aftertouch"], "extent": [569, 594]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Channel Pressure"], "extent": [594, 614]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Program Change"], "extent": [614, 632]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Control Change (midi controller devices)"], "extent": [632, 676]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Pitch Wheel"], "extent": [676, 691]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Timer Events including beat pulses"], "extent": [691, 729]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Bar Messages"], "extent": [729, 745]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Start, Stop, Continue"], "extent": [745, 770]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Song Position Pointer"], "extent": [770, 795]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["System Exclusive Messages"], "extent": [795, 824]}], "container": true}, {"type": "para", "indent": 0, "text": ["midi events arriving on separate midi channels may be recorded on\nseparate CHOP channels. Also, any number of midi CHOP can read from the\nsame or different sources. When Houdini receives a midi Start, Stop or\nContinue event, it affects the Playbar."], "extent": [824, 1074]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [1074, 1080], "body": [{"type": "para", "indent": 4, "text": ["The values of the midi inputs are saved into the Houdini .hip file,\n    and are restored when the file is reloaded. The physical controllers\n    may be in a different position when the .hip is restarted, causing\n    the values to jump when the controllers are moved. This is\n    unavoidable."], "extent": [1080, 1378]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1378, 1390], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Source"], "extent": [1390, 1408], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["MIDI Source"], "extent": [1408, 1430], "body": [{"type": "para", "indent": 12, "text": ["MIDI Interface to listen to: hardware port, internal, file."], "extent": [1430, 1502]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["MIDI File"], "extent": [1502, 1521], "body": [{"type": "para", "indent": 12, "text": ["The name of the MIDI file to read, if reading a file."], "extent": [1521, 1587]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Read Entire MIDI File"], "extent": [1587, 1618], "body": [{"type": "para", "indent": 12, "text": ["Read the whole file versus using the ", {"type": "ui", "text": ["Start/End"]}, "."], "extent": [1618, 1682]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["MIDI Channels"], "extent": [1682, 1705], "body": [{"type": "para", "indent": 12, "text": ["The MIDI channel(s) to read from (1-16). The input streams\n            from multiple channels will be combined into one if no\n            Channel Prefix is given."], "extent": [1705, 1880]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Channel Prefix"], "extent": [1880, 1904], "body": [{"type": "para", "indent": 12, "text": ["When acquiring multiple MIDI channels, the channels can be\n            merged or kept separate. If this field is not blank (try\n            ", {"type": "q", "text": ["ch"]}, "), one set of CHOP channels is made per MIDI channel:\n            all CHOP channels will be prefixed with this string and MIDI\n            channel number."], "extent": [1904, 2215]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Echo Messages to Textport"], "extent": [2215, 2250], "body": [{"type": "para", "indent": 12, "text": ["Logs all input MIDI messages to the textport."], "extent": [2250, 2309]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Record"], "extent": [2309, 2326], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Record Method"], "extent": [2326, 2350], "body": [{"type": "para", "indent": 12, "text": ["Selects one of four record methods:"], "extent": [2350, 2399]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Single Frame"], "extent": [2399, 2425], "body": [{"type": "para", "indent": 16, "text": ["Only the most recent value is output at frame ", {"type": "code", "text": ["0"]}, "."], "extent": [2425, 2492]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Current Frame"], "extent": [2492, 2519], "body": [{"type": "para", "indent": 16, "text": ["Like Single Frame, at the current frame."], "extent": [2519, 2576]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Current Time Slice"], "extent": [2576, 2608], "body": [{"type": "para", "indent": 16, "text": ["MIDI output for the current time slice."], "extent": [2608, 2664]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Full Length"], "extent": [2664, 2689], "body": [{"type": "para", "indent": 16, "text": ["MIDI output for the whole range."], "extent": [2689, 2738]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Record"], "extent": [2738, 2754], "body": [{"type": "para", "indent": 12, "text": ["A button used to manually start and stop recording."], "extent": [2754, 2818]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Reset"], "extent": [2818, 2833], "body": [{"type": "para", "indent": 12, "text": ["Resets the CHOP output channels to be ", {"type": "code", "text": ["1"]}, " sample long."], "extent": [2833, 2901]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Note"], "extent": [2901, 2916], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Note Name"], "extent": [2916, 2936], "body": [{"type": "para", "indent": 12, "text": ["To read note events put a channel base name. (try ", {"type": "code", "text": ["n"]}, ")"], "extent": [2936, 3003]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Note Scope"], "extent": [3003, 3023], "body": [{"type": "para", "indent": 12, "text": ["The notes to record. Ranges (try ", {"type": "code", "text": ["41-60"]}, ") can be used."], "extent": [3023, 3090]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Note Output"], "extent": [3090, 3111], "body": [{"type": "para", "indent": 12, "text": ["Notes can be recorded into one channel or each note number\n            can have their own channel (Single Channels)."], "extent": [3111, 3240]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Velocity"], "extent": [3240, 3258], "body": [{"type": "para", "indent": 12, "text": ["The velocity can be recorded as part of the note (Note\n            Amplitude), as a different channel (Separate Channels), or\n            not at all (Off)."], "extent": [3258, 3426]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Velocity Name"], "extent": [3426, 3449], "body": [{"type": "para", "indent": 12, "text": ["The base name of velocity-only channels. (try ", {"type": "code", "text": ["v"]}, ")"], "extent": [3449, 3512]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Aftertouch Name"], "extent": [3512, 3537], "body": [{"type": "para", "indent": 12, "text": ["The base name of the polyphonic aftertouch channels."], "extent": [3537, 3602]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Pressure Name"], "extent": [3602, 3625], "body": [{"type": "para", "indent": 12, "text": ["The name of the channel pressure channel(s)."], "extent": [3625, 3682]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Normalize"], "extent": [3682, 3701], "body": [{"type": "para", "indent": 12, "text": ["Note velocity, pressure & aftertouch can be normalized."], "extent": [3701, 3769]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Pitch Wheel Name"], "extent": [3769, 3795], "body": [{"type": "para", "indent": 12, "text": ["The name of the pitch wheel channel."], "extent": [3795, 3845]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Control"], "extent": [3845, 3863], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Controller Name"], "extent": [3863, 3889], "body": [{"type": "para", "indent": 12, "text": ["To read controller events, put a base name. (try ", {"type": "code", "text": ["c"]}, ")"], "extent": [3889, 3955]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Controller Type"], "extent": [3955, 3980], "body": [{"type": "para", "indent": 12, "text": ["There are 128 controllers available. You can specify\n            controllers by index or choose one from the list."], "extent": [3980, 4107]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Controller Index"], "extent": [4107, 4133], "body": [{"type": "para", "indent": 12, "text": ["The index range of the controllers. (try ", {"type": "code", "text": ["1-8"]}, ")"], "extent": [4133, 4193]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Controller Format"], "extent": [4193, 4220], "body": [{"type": "para", "indent": 12, "text": ["Selects either 7 (most common) or 14 bit controllers."], "extent": [4220, 4286]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Normalize"], "extent": [4286, 4305], "body": [{"type": "para", "indent": 12, "text": ["Controller values can be normalized to simple ranges."], "extent": [4305, 4371]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Unwrap"], "extent": [4371, 4387], "body": [{"type": "para", "indent": 12, "text": ["Allows cyclic controllers to extend beyond MIDI limits."], "extent": [4387, 4455]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Program Change"], "extent": [4455, 4479], "body": [{"type": "para", "indent": 12, "text": ["The name of the program change channels(s)."], "extent": [4479, 4536]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Sys"], "extent": [4536, 4550], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Timer Pulse Name"], "extent": [4550, 4577], "body": [{"type": "para", "indent": 12, "text": ["The name of a channel that pulses on MIDI beats."], "extent": [4577, 4638]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Timer Ramp Name"], "extent": [4638, 4663], "body": [{"type": "para", "indent": 12, "text": ["Name of channel that ramps ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, " between MIDI beats."], "extent": [4663, 4733]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Timer Period/Start"], "extent": [4733, 4761], "body": [{"type": "para", "indent": 12, "text": ["Name of channels with start/period values of beats."], "extent": [4761, 4825]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Ticks per Beat"], "extent": [4825, 4849], "body": [{"type": "para", "indent": 12, "text": ["The number of timer pulses per MIDI beat."], "extent": [4849, 4903]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Bar Ramp Name"], "extent": [4903, 4926], "body": [{"type": "para", "indent": 12, "text": ["Name of channel that ramps ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, " between MIDI bars."], "extent": [4926, 4995]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Bar Period/Start"], "extent": [4995, 5021], "body": [{"type": "para", "indent": 12, "text": ["Name of channels with start/period values of the bar."], "extent": [5021, 5087]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Bar Message"], "extent": [5087, 5108], "body": [{"type": "para", "indent": 12, "text": ["Series of hexadecimal bytes describing the Bar message."], "extent": [5108, 5176]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Song Pos Name"], "extent": [5176, 5199], "body": [{"type": "para", "indent": 12, "text": ["The name of the song position pointer channel."], "extent": [5199, 5258]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Channel Name 1-12"], "extent": [5258, 5285], "body": [{"type": "para", "indent": 12, "text": ["Output channel name for each System Exclusive message"], "extent": [5285, 5351]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Message 1-12"], "extent": [5351, 5373], "body": [{"type": "para", "indent": 12, "text": ["Series of hexadecimal bytes describing SysEx message. (* =\n            dont care, V = value 0-127, v = value 0-1 range)"], "extent": [5373, 5518]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 2, "id": "common", "container": true, "type": "h", "indent": 0, "text": ["Common"], "extent": [2334, 2356], "body": [{"type": "para", "indent": 0, "text": ["Some of these parameters may not be available on all CHOP nodes."], "extent": [2356, 2423]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Scope"], "extent": [2423, 2430], "body": [{"type": "para", "indent": 4, "text": ["To determine which channels get affected, some CHOPs have a scope string. Patterns can be used in the scope, for example ", {"type": "code", "text": ["*"]}, " (match all), and ", {"type": "code", "text": ["?"]}, " (match single character). "], "extent": [2430, 2612]}, {"type": "para", "indent": 4, "text": ["The following are examples of possible channel name matching options:"], "extent": [2612, 2691]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan2"]}], "extent": [2691, 2704], "body": [{"type": "para", "indent": 8, "text": ["Matches a single channel name."], "extent": [2704, 2748]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan3 tx ty tz"]}], "extent": [2748, 2770], "body": [{"type": "para", "indent": 8, "text": ["Matches four channel names, separated by spaces."], "extent": [2770, 2832]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan*"]}], "extent": [2832, 2845], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that starts with ", {"type": "code", "text": ["chan"]}, "."], "extent": [2845, 2908]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["*foot*"]}], "extent": [2908, 2922], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that has ", {"type": "code", "text": ["foot"]}, " in it."], "extent": [2922, 2979]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t?"]}], "extent": [2979, 2989], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "code", "text": ["?"]}, " matches a single character. ", {"type": "code", "text": ["t?"]}, " matches two-character channels starting with t.  "], "extent": [2989, 3093]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["r[xyz]"]}], "extent": [3093, 3107], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["rx"]}, ", ", {"type": "code", "text": ["ry"]}, " and ", {"type": "code", "text": ["rz"]}, "."], "extent": [3107, 3162]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[3-7:2]"]}], "extent": [3162, 3182], "body": [{"type": "para", "indent": 8, "text": ["Matches number ranges giving ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", and ", {"type": "code", "text": ["blend7"]}, "."], "extent": [3182, 3262]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[2-3,5,13]"]}], "extent": [3262, 3285], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["blend2"]}, ", ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", ", {"type": "code", "text": ["blend13"]}, "."], "extent": [3285, 3356]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t[xyz]"]}], "extent": [3356, 3370], "body": [{"type": "para", "indent": 8, "text": [{"type": "code", "text": ["[xyz]"]}, "matches three characters, giving channels ", {"type": "code", "text": ["tx"]}, ", ", {"type": "code", "text": ["ty"]}, " and ", {"type": "code", "text": ["tz"]}, "."], "extent": [3370, 3458]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["Sample Rate Match"], "extent": [3458, 3477], "body": [{"type": "para", "indent": 4, "text": ["The Sample Rate Match Options handle cases where multiple input CHOPs\u2019 sample rates are different."], "extent": [3477, 3585]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Resample At First Input\u2019s Rate"], "extent": [3585, 3621], "body": [{"type": "para", "indent": 8, "text": ["Use rate of first input to resample others."], "extent": [3621, 3682]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Maximum Rate"], "extent": [3682, 3712], "body": [{"type": "para", "indent": 8, "text": ["Resample to highest sample rate."], "extent": [3712, 3758]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Minimum Rate"], "extent": [3758, 3788], "body": [{"type": "para", "indent": 8, "text": ["Resample to the lowest sample rate."], "extent": [3788, 3841]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Error if Rates Differ"], "extent": [3841, 3868], "body": [{"type": "para", "indent": 8, "text": ["Does not accept conflicting sample rates."], "extent": [3868, 3923]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["Units"], "extent": [3923, 3930], "body": [{"type": "para", "indent": 4, "text": ["The units for which time parameters are specified."], "extent": [3930, 3990]}, {"type": "para", "indent": 4, "text": ["For example, you can specify the amount of time a lag should last for in seconds (default), frames (at the Houdini FPS), or samples (in the CHOP\u2019s sample rate)."], "extent": [3990, 4160]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4160, 4170], "body": [{"type": "para", "indent": 8, "text": ["When you change the Units parameter, it does not convert the existing parameters to the new units."], "extent": [4170, 4282]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 0, "text": ["Time Slice"], "extent": [4282, 4294], "body": [{"type": "para", "indent": 4, "text": ["Time Slicing is a feature which boosts cooking performance and reduces memory usage. Traditionally, CHOPs calculate the channel over its entire frame range. If the channel does need to be evaluated every frame, then cooking the entire range of the channel is unnecessary. It is more efficient to calculate only the fraction of the channel that is needed. This fraction is known as a Time Slice."], "extent": [4294, 4694]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Unload"], "extent": [4694, 4702], "body": [{"type": "para", "indent": 4, "text": ["Causes the memory consumed by a CHOP to be released after it is cooked and the data passed to the next CHOP."], "extent": [4702, 4816]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Export Prefix"], "extent": [4816, 4836], "body": [{"type": "para", "indent": 4, "text": ["The Export prefix is prepended to CHOP channel names to determine where to export to. "], "extent": [4836, 4932]}, {"type": "para", "indent": 4, "text": ["For example, if the CHOP channel was named ", {"type": "code", "text": ["geo1:tx"]}, ", and the prefix was ", {"type": "code", "text": ["/obj"]}, ", the channel would be exported to ", {"type": "code", "text": ["/obj/geo1/tx"]}, "."], "extent": [4932, 5071]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [5071, 5081], "body": [{"type": "para", "indent": 8, "text": ["You can leave the ", {"type": "ui", "text": ["Export Prefix"]}, " blank, but then your CHOP track names need to be absolute paths, such as ", {"type": "code", "text": ["obj:geo1:tx"]}, "."], "extent": [5081, 5214]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 0, "text": ["Graph Color"], "extent": [5214, 5227], "body": [{"type": "para", "indent": 4, "text": ["Every CHOP has this option. Each CHOP gets a default color assigned for display in the Graph port, but you can override the color in the Common page under Graph Color. There are 36 RGB color combinations in the Palette."], "extent": [5227, 5452]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Graph Color Step"], "extent": [5452, 5470], "body": [{"type": "para", "indent": 4, "text": ["When the graph displays the animation curves and a CHOP has two or more channels, this defines the difference in color from one channel to the next, giving a rainbow spectrum of colors."], "extent": [5470, 5661]}], "container": true}], "container": true}]}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [5543, 5552], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/audioin", "type": "link", "text": "", "fullpath": "/nodes/chop/audioin"}], "extent": [5552, 5578]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/pipein", "type": "link", "text": "", "fullpath": "/nodes/chop/pipein"}], "extent": [5578, 5603]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/midiout", "type": "link", "text": "", "fullpath": "/nodes/chop/midiout"}], "extent": [5603, 5630]}], "container": true}], "text": "Related"}], "title": ["MIDI In"], "summary": ["The MIDI In CHOP reads Note events, Controller events, Program Change\nevents, and Timing events from both midi devices and files."], "included": ["/nodes/chop/common"]}