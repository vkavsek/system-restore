{"type": "root", "attrs": {"type": "node", "context": "chop", "internal": "noise", "icon": "COP2/noise", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Noise"], "extent": [63, 73]}, {"type": "summary", "indent": 0, "text": ["Makes an irregular wave that never repeats, with values approximately in the range -1 to +1."], "extent": [73, 174]}, {"type": "para", "indent": 0, "text": ["The Noise CHOP makes an irregular wave that never repeats, with values\napproximately in the range ", {"type": "code", "text": ["-1"]}, " to ", {"type": "code", "text": ["+1"]}, ". It appears to have a period like\nthe ", {"scheme": null, "value": "wave", "type": "link", "text": ["Wave CHOP"], "fullpath": "/nodes/chop/wave"}, ", but it is not exact. It generates both smooth curves and\nnoise that is random each sample. It uses the same math as the Noise\nTexture Operator."], "extent": [174, 486]}, {"type": "para", "indent": 0, "text": ["Optionally, an input can be connected. It is assumed that the input\ncontains 1 to 3 channels representing X, Y and Z coordinates of points\nin space, and are used to sample anywhere in 3D noise space. One index\nin the input produces one sample in the output."], "extent": [486, 745]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["*Optional input: XYZ sample points*"], "extent": [745, 787], "body": [{"type": "para", "indent": 4, "text": ["Normally the noise is sampled along the X-axis in an XYZ noise\n    space. You can sample anywhere in XYZ."], "extent": [787, 900]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [900, 912], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Noise"], "extent": [912, 929], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Type"], "extent": [929, 944], "body": [{"type": "para", "indent": 12, "text": ["The noise function used to generate noise."], "extent": [944, 1000]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Sparse"], "extent": [1000, 1020], "body": [{"type": "para", "indent": 16, "text": ["Produces high quality, continuous noise."], "extent": [1020, 1077]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Hermite"], "extent": [1077, 1098], "body": [{"type": "para", "indent": 16, "text": ["Produces lower quality noise than Sparse, but quicker."], "extent": [1098, 1169]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Harmonic Summation"], "extent": [1169, 1201], "body": [{"type": "para", "indent": 16, "text": ["Sparse noise with the ability to control the frequency\n                step of the harmonics."], "extent": [1201, 1311]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Brownian"], "extent": [1311, 1333], "body": [{"type": "para", "indent": 16, "text": ["Produces ", {"type": "q", "text": ["Brownian"]}, " motion, similar to insect flight."], "extent": [1333, 1403]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Random"], "extent": [1403, 1423], "body": [{"type": "para", "indent": 16, "text": ["Every sample is random and unrelated to any other\n                sample. Also know as ", {"type": "q", "text": ["white noise"]}, " in audio."], "extent": [1423, 1550]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Seed"], "extent": [1550, 1564], "body": [{"type": "para", "indent": 12, "text": ["Any number, integer or non-integer. Each number generates\n            completely different noise patterns, but with similar\n            characteristics."], "extent": [1594, 1759]}], "container": true, "attrs": {"channels": "/seed"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Period"], "extent": [1759, 1775], "body": [{"type": "para", "indent": 12, "text": ["The approximate separation between peaks of a noise cycle,\n            expressed in Units."], "extent": [1807, 1910]}], "container": true, "attrs": {"channels": "/period"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Harmonics"], "extent": [1910, 1929], "body": [{"type": "para", "indent": 12, "text": ["The number of higher frequency components to layer on top of\n            the base frequency."], "extent": [1961, 2066]}], "container": true, "attrs": {"channels": "/harmon"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Harmonic Spread"], "extent": [2066, 2091], "body": [{"type": "para", "indent": 12, "text": ["The factor by which the frequency of the harmonics are\n            increased."], "extent": [2123, 2213]}], "container": true, "attrs": {"channels": "/spread"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Roughness"], "extent": [2213, 2232], "body": [{"type": "para", "indent": 12, "text": ["The amount of the effect of the higher frequency harmonics."], "extent": [2263, 2335]}], "container": true, "attrs": {"channels": "/rough"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Exponent"], "extent": [2335, 2353], "body": [{"type": "para", "indent": 12, "text": ["Pushes the noise values toward ", {"type": "code", "text": ["0"]}, ", or ", {"type": "code", "text": ["+1"]}, " and ", {"type": "code", "text": ["-1"]}, " (raising the\n            noise to this power)."], "extent": [2382, 2494]}], "container": true, "attrs": {"channels": "/exp"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Num of Integrals"], "extent": [2494, 2520], "body": [{"type": "para", "indent": 12, "text": ["The number of times to integrate Brownian noise, which\n            affects its smoothness."], "extent": [2552, 2655]}], "container": true, "attrs": {"channels": "/numint"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Amplitude"], "extent": [2655, 2674], "body": [{"type": "para", "indent": 12, "text": ["The noise\u2019s amplitude."], "extent": [2703, 2739]}], "container": true, "attrs": {"channels": "/amp"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Constraint"], "extent": [2739, 2760], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Normalize"], "extent": [2760, 2780], "body": [{"type": "para", "indent": 12, "text": ["Ensures that all noise curves fall between ", {"type": "code", "text": ["-1"]}, " and ", {"type": "code", "text": ["1"]}, "."], "extent": [2780, 2849]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Constraint"], "extent": [2849, 2869], "body": [{"type": "para", "indent": 12, "text": ["Allows the noise curve to start and/or end at selected\n            values. The average value may also be constrained."], "extent": [2869, 2999]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Starting Value"], "extent": [2999, 3023], "body": [{"type": "para", "indent": 12, "text": ["The value noise curves should start at."], "extent": [3060, 3112]}], "container": true, "attrs": {"channels": "/constrstart"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Ending Value"], "extent": [3112, 3134], "body": [{"type": "para", "indent": 12, "text": ["THe value noise curves should end at."], "extent": [3169, 3219]}], "container": true, "attrs": {"channels": "/constrend"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Mean Value"], "extent": [3219, 3239], "body": [{"type": "para", "indent": 12, "text": ["The mean value noise curves should have."], "extent": [3275, 3329]}], "container": true, "attrs": {"channels": "/constrmean"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Channel"], "extent": [3329, 3347], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Channel Name"], "extent": [3347, 3370], "body": [{"type": "para", "indent": 12, "text": ["The names of the channels to be created."], "extent": [3370, 3423]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Channel Range"], "extent": [3423, 3446], "body": [{"type": "para", "indent": 12, "text": ["Indicates how much of the channel to cook."], "extent": [3446, 3502]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Use Full Animation Range"], "extent": [3502, 3540], "body": [{"type": "para", "indent": 16, "text": ["All of the current global animation range."], "extent": [3540, 3599]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Use Current Frame"], "extent": [3599, 3630], "body": [{"type": "para", "indent": 16, "text": ["Only the sample at the current frame."], "extent": [3630, 3684]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Use Start/End"], "extent": [3684, 3711], "body": [{"type": "para", "indent": 16, "text": ["Specify the range using the Start/End parameters."], "extent": [3711, 3777]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Start"], "extent": [3777, 3792], "body": [{"type": "para", "indent": 12, "text": ["The start of the channels."], "extent": [3823, 3862]}], "container": true, "attrs": {"channels": "/start"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["End"], "extent": [3862, 3875], "body": [{"type": "para", "indent": 12, "text": ["The end of the channels."], "extent": [3904, 3941]}], "container": true, "attrs": {"channels": "/end"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Sample Rate"], "extent": [3941, 3962], "body": [{"type": "para", "indent": 12, "text": ["The sample rate of the channels."], "extent": [3992, 4037]}], "container": true, "attrs": {"channels": "/rate"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Extend Left"], "extent": [4037, 4058], "body": [{"type": "para", "indent": 12, "text": ["The left extend conditions of the channels."], "extent": [4058, 4114]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Extend Right"], "extent": [4114, 4136], "body": [{"type": "para", "indent": 12, "text": ["The right extend conditions of the channels."], "extent": [4136, 4193]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Default Value"], "extent": [4193, 4216], "body": [{"type": "para", "indent": 12, "text": ["The default value for extend conditions."], "extent": [4248, 4314]}], "container": true, "attrs": {"channels": "/defval"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 2, "id": "common", "container": true, "type": "h", "indent": 0, "text": ["Common"], "extent": [2334, 2356], "body": [{"type": "para", "indent": 0, "text": ["Some of these parameters may not be available on all CHOP nodes."], "extent": [2356, 2423]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Scope"], "extent": [2423, 2430], "body": [{"type": "para", "indent": 4, "text": ["To determine which channels get affected, some CHOPs have a scope string. Patterns can be used in the scope, for example ", {"type": "code", "text": ["*"]}, " (match all), and ", {"type": "code", "text": ["?"]}, " (match single character). "], "extent": [2430, 2612]}, {"type": "para", "indent": 4, "text": ["The following are examples of possible channel name matching options:"], "extent": [2612, 2691]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan2"]}], "extent": [2691, 2704], "body": [{"type": "para", "indent": 8, "text": ["Matches a single channel name."], "extent": [2704, 2748]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan3 tx ty tz"]}], "extent": [2748, 2770], "body": [{"type": "para", "indent": 8, "text": ["Matches four channel names, separated by spaces."], "extent": [2770, 2832]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan*"]}], "extent": [2832, 2845], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that starts with ", {"type": "code", "text": ["chan"]}, "."], "extent": [2845, 2908]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["*foot*"]}], "extent": [2908, 2922], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that has ", {"type": "code", "text": ["foot"]}, " in it."], "extent": [2922, 2979]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t?"]}], "extent": [2979, 2989], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "code", "text": ["?"]}, " matches a single character. ", {"type": "code", "text": ["t?"]}, " matches two-character channels starting with t.  "], "extent": [2989, 3093]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["r[xyz]"]}], "extent": [3093, 3107], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["rx"]}, ", ", {"type": "code", "text": ["ry"]}, " and ", {"type": "code", "text": ["rz"]}, "."], "extent": [3107, 3162]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[3-7:2]"]}], "extent": [3162, 3182], "body": [{"type": "para", "indent": 8, "text": ["Matches number ranges giving ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", and ", {"type": "code", "text": ["blend7"]}, "."], "extent": [3182, 3262]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[2-3,5,13]"]}], "extent": [3262, 3285], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["blend2"]}, ", ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", ", {"type": "code", "text": ["blend13"]}, "."], "extent": [3285, 3356]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t[xyz]"]}], "extent": [3356, 3370], "body": [{"type": "para", "indent": 8, "text": [{"type": "code", "text": ["[xyz]"]}, "matches three characters, giving channels ", {"type": "code", "text": ["tx"]}, ", ", {"type": "code", "text": ["ty"]}, " and ", {"type": "code", "text": ["tz"]}, "."], "extent": [3370, 3458]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["Sample Rate Match"], "extent": [3458, 3477], "body": [{"type": "para", "indent": 4, "text": ["The Sample Rate Match Options handle cases where multiple input CHOPs\u2019 sample rates are different."], "extent": [3477, 3585]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Resample At First Input\u2019s Rate"], "extent": [3585, 3621], "body": [{"type": "para", "indent": 8, "text": ["Use rate of first input to resample others."], "extent": [3621, 3682]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Maximum Rate"], "extent": [3682, 3712], "body": [{"type": "para", "indent": 8, "text": ["Resample to highest sample rate."], "extent": [3712, 3758]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Minimum Rate"], "extent": [3758, 3788], "body": [{"type": "para", "indent": 8, "text": ["Resample to the lowest sample rate."], "extent": [3788, 3841]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Error if Rates Differ"], "extent": [3841, 3868], "body": [{"type": "para", "indent": 8, "text": ["Does not accept conflicting sample rates."], "extent": [3868, 3923]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["Units"], "extent": [3923, 3930], "body": [{"type": "para", "indent": 4, "text": ["The units for which time parameters are specified."], "extent": [3930, 3990]}, {"type": "para", "indent": 4, "text": ["For example, you can specify the amount of time a lag should last for in seconds (default), frames (at the Houdini FPS), or samples (in the CHOP\u2019s sample rate)."], "extent": [3990, 4160]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4160, 4170], "body": [{"type": "para", "indent": 8, "text": ["When you change the Units parameter, it does not convert the existing parameters to the new units."], "extent": [4170, 4282]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 0, "text": ["Time Slice"], "extent": [4282, 4294], "body": [{"type": "para", "indent": 4, "text": ["Time Slicing is a feature which boosts cooking performance and reduces memory usage. Traditionally, CHOPs calculate the channel over its entire frame range. If the channel does need to be evaluated every frame, then cooking the entire range of the channel is unnecessary. It is more efficient to calculate only the fraction of the channel that is needed. This fraction is known as a Time Slice."], "extent": [4294, 4694]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Unload"], "extent": [4694, 4702], "body": [{"type": "para", "indent": 4, "text": ["Causes the memory consumed by a CHOP to be released after it is cooked and the data passed to the next CHOP."], "extent": [4702, 4816]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Export Prefix"], "extent": [4816, 4836], "body": [{"type": "para", "indent": 4, "text": ["The Export prefix is prepended to CHOP channel names to determine where to export to. "], "extent": [4836, 4932]}, {"type": "para", "indent": 4, "text": ["For example, if the CHOP channel was named ", {"type": "code", "text": ["geo1:tx"]}, ", and the prefix was ", {"type": "code", "text": ["/obj"]}, ", the channel would be exported to ", {"type": "code", "text": ["/obj/geo1/tx"]}, "."], "extent": [4932, 5071]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [5071, 5081], "body": [{"type": "para", "indent": 8, "text": ["You can leave the ", {"type": "ui", "text": ["Export Prefix"]}, " blank, but then your CHOP track names need to be absolute paths, such as ", {"type": "code", "text": ["obj:geo1:tx"]}, "."], "extent": [5081, 5214]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 0, "text": ["Graph Color"], "extent": [5214, 5227], "body": [{"type": "para", "indent": 4, "text": ["Every CHOP has this option. Each CHOP gets a default color assigned for display in the Graph port, but you can override the color in the Common page under Graph Color. There are 36 RGB color combinations in the Palette."], "extent": [5227, 5452]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Graph Color Step"], "extent": [5452, 5470], "body": [{"type": "para", "indent": 4, "text": ["When the graph displays the animation curves and a CHOP has two or more channels, this defines the difference in color from one channel to the next, giving a rainbow spectrum of colors."], "extent": [5470, 5661]}], "container": true}], "container": true}]}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [4339, 4347], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["I"], "extent": [4347, 4354], "body": [{"type": "para", "indent": 8, "text": ["The current index."], "extent": [4354, 4381]}], "container": true}, {"type": "dt", "indent": 4, "text": ["C"], "extent": [4381, 4388], "body": [{"type": "para", "indent": 8, "text": ["The current channel (0 to NC-1)."], "extent": [4388, 4429]}], "container": true}, {"type": "dt", "indent": 4, "text": ["NC"], "extent": [4429, 4437], "body": [{"type": "para", "indent": 8, "text": ["The total number of channels."], "extent": [4437, 4475]}], "container": true}, {"type": "dt", "indent": 4, "text": ["S,E"], "extent": [4475, 4484], "body": [{"type": "para", "indent": 8, "text": ["The start and end indices of the noise curve."], "extent": [4484, 4539]}], "container": true}], "container": true}], "text": "Locals"}], "title": ["Noise"], "summary": ["Makes an irregular wave that never repeats, with values approximately in the range -1 to +1."], "included": ["/nodes/chop/common"]}