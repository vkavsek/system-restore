{"type": "root", "attrs": {"type": "node", "context": "chop", "internal": "spectrum", "icon": "CHOP/spectrum", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Spectrum"], "extent": [69, 82]}, {"type": "summary", "indent": 0, "text": ["Calculates the frequency spectrum of the input channels, or a portion\nof the channels."], "extent": [82, 177]}, {"type": "para", "indent": 0, "text": ["This CHOP calculates the frequency spectrum of the input channels, or a\nportion of the channels. The spectrum can be manipulated and then\nconverted back to get a filtered signal."], "extent": [177, 357]}, {"type": "para", "indent": 0, "text": ["When converting a signal to its spectrum, two channels are created from\nthe one containing the signal. One channel contains the magnitude of the\nfrequency components, and the other contains the phase. The channels are\nnamed ", {"type": "em", "text": ["<channel name><suffix>"]}, ", where ", {"type": "em", "text": ["<suffix>"]}, " is the magnitude or\nphase suffix."], "extent": [357, 659]}, {"type": "para", "indent": 0, "text": ["In order to convert back to a signal, both channels are required. The\nsuffixes should be the same as those used in the previous spectrum\nCHOP."], "extent": [659, 804]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [804, 816], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Spectrum"], "extent": [816, 832], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Convert"], "extent": [832, 846], "body": [{"type": "para", "indent": 8, "text": ["Determines whether to calculate the frequency spectrum from a\n        signal, or reconstruct a signal from a frequency spectrum."], "extent": [846, 983]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Analyze Segment"], "extent": [983, 1004], "body": [{"type": "para", "indent": 8, "text": ["If on, only a small segment of the channel is analyzed. If off,\n        the spectrum is computed from the entire channel."], "extent": [1004, 1134]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Unit Values"], "extent": [1134, 1151], "body": [{"type": "para", "indent": 8, "text": ["Determines how Start/End parameters are interpreted."], "extent": [1151, 1213]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Absolute"], "extent": [1213, 1231], "body": [{"type": "para", "indent": 12, "text": ["The segment is the start/end values."], "extent": [1231, 1280]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Relative to Start/End"], "extent": [1280, 1311], "body": [{"type": "para", "indent": 12, "text": ["The segment is a shift from the old positions of the input\u2019s\n            start/end."], "extent": [1311, 1407]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Relative to Current Frame"], "extent": [1407, 1442], "body": [{"type": "para", "indent": 12, "text": ["The segment is a shift from the current frame."], "extent": [1442, 1501]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Start"], "extent": [1501, 1512], "body": [{"type": "para", "indent": 8, "text": ["Determines the start of the segment to be analyzed (in Units)."], "extent": [1539, 1610]}], "container": true, "attrs": {"channels": "/start"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["End"], "extent": [1610, 1619], "body": [{"type": "para", "indent": 8, "text": ["Determines the end of the segment to be analyzed (in Units)."], "extent": [1644, 1713]}], "container": true, "attrs": {"channels": "/end"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Magnitude Suffix"], "extent": [1713, 1735], "body": [{"type": "para", "indent": 8, "text": ["When converting to a spectrum, the string appended to the\n        channel name that identifies the channel as containing\n        magnitudes."], "extent": [1735, 1884]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Phase Suffix"], "extent": [1884, 1902], "body": [{"type": "para", "indent": 8, "text": ["Similar to Magnitude Suffix, but for phase channels."], "extent": [1902, 1972]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "common", "container": true, "type": "h", "indent": 0, "text": ["Common"], "extent": [2334, 2356], "body": [{"type": "para", "indent": 0, "text": ["Some of these parameters may not be available on all CHOP nodes."], "extent": [2356, 2423]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Scope"], "extent": [2423, 2430], "body": [{"type": "para", "indent": 4, "text": ["To determine which channels get affected, some CHOPs have a scope string. Patterns can be used in the scope, for example ", {"type": "code", "text": ["*"]}, " (match all), and ", {"type": "code", "text": ["?"]}, " (match single character). "], "extent": [2430, 2612]}, {"type": "para", "indent": 4, "text": ["The following are examples of possible channel name matching options:"], "extent": [2612, 2691]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan2"]}], "extent": [2691, 2704], "body": [{"type": "para", "indent": 8, "text": ["Matches a single channel name."], "extent": [2704, 2748]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan3 tx ty tz"]}], "extent": [2748, 2770], "body": [{"type": "para", "indent": 8, "text": ["Matches four channel names, separated by spaces."], "extent": [2770, 2832]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan*"]}], "extent": [2832, 2845], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that starts with ", {"type": "code", "text": ["chan"]}, "."], "extent": [2845, 2908]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["*foot*"]}], "extent": [2908, 2922], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that has ", {"type": "code", "text": ["foot"]}, " in it."], "extent": [2922, 2979]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t?"]}], "extent": [2979, 2989], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "code", "text": ["?"]}, " matches a single character. ", {"type": "code", "text": ["t?"]}, " matches two-character channels starting with t.  "], "extent": [2989, 3093]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["r[xyz]"]}], "extent": [3093, 3107], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["rx"]}, ", ", {"type": "code", "text": ["ry"]}, " and ", {"type": "code", "text": ["rz"]}, "."], "extent": [3107, 3162]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[3-7:2]"]}], "extent": [3162, 3182], "body": [{"type": "para", "indent": 8, "text": ["Matches number ranges giving ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", and ", {"type": "code", "text": ["blend7"]}, "."], "extent": [3182, 3262]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[2-3,5,13]"]}], "extent": [3262, 3285], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["blend2"]}, ", ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", ", {"type": "code", "text": ["blend13"]}, "."], "extent": [3285, 3356]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t[xyz]"]}], "extent": [3356, 3370], "body": [{"type": "para", "indent": 8, "text": [{"type": "code", "text": ["[xyz]"]}, "matches three characters, giving channels ", {"type": "code", "text": ["tx"]}, ", ", {"type": "code", "text": ["ty"]}, " and ", {"type": "code", "text": ["tz"]}, "."], "extent": [3370, 3458]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sample Rate Match"], "extent": [3458, 3477], "body": [{"type": "para", "indent": 4, "text": ["The Sample Rate Match Options handle cases where multiple input CHOPs\u2019 sample rates are different."], "extent": [3477, 3585]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Resample At First Input\u2019s Rate"], "extent": [3585, 3621], "body": [{"type": "para", "indent": 8, "text": ["Use rate of first input to resample others."], "extent": [3621, 3682]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Maximum Rate"], "extent": [3682, 3712], "body": [{"type": "para", "indent": 8, "text": ["Resample to highest sample rate."], "extent": [3712, 3758]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Minimum Rate"], "extent": [3758, 3788], "body": [{"type": "para", "indent": 8, "text": ["Resample to the lowest sample rate."], "extent": [3788, 3841]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Error if Rates Differ"], "extent": [3841, 3868], "body": [{"type": "para", "indent": 8, "text": ["Does not accept conflicting sample rates."], "extent": [3868, 3923]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Units"], "extent": [3923, 3930], "body": [{"type": "para", "indent": 4, "text": ["The units for which time parameters are specified."], "extent": [3930, 3990]}, {"type": "para", "indent": 4, "text": ["For example, you can specify the amount of time a lag should last for in seconds (default), frames (at the Houdini FPS), or samples (in the CHOP\u2019s sample rate)."], "extent": [3990, 4160]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4160, 4170], "body": [{"type": "para", "indent": 8, "text": ["When you change the Units parameter, it does not convert the existing parameters to the new units."], "extent": [4170, 4282]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time Slice"], "extent": [4282, 4294], "body": [{"type": "para", "indent": 4, "text": ["Time Slicing is a feature which boosts cooking performance and reduces memory usage. Traditionally, CHOPs calculate the channel over its entire frame range. If the channel does need to be evaluated every frame, then cooking the entire range of the channel is unnecessary. It is more efficient to calculate only the fraction of the channel that is needed. This fraction is known as a Time Slice."], "extent": [4294, 4694]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Unload"], "extent": [4694, 4702], "body": [{"type": "para", "indent": 4, "text": ["Causes the memory consumed by a CHOP to be released after it is cooked and the data passed to the next CHOP."], "extent": [4702, 4816]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Export Prefix"], "extent": [4816, 4836], "body": [{"type": "para", "indent": 4, "text": ["The Export prefix is prepended to CHOP channel names to determine where to export to. "], "extent": [4836, 4932]}, {"type": "para", "indent": 4, "text": ["For example, if the CHOP channel was named ", {"type": "code", "text": ["geo1:tx"]}, ", and the prefix was ", {"type": "code", "text": ["/obj"]}, ", the channel would be exported to ", {"type": "code", "text": ["/obj/geo1/tx"]}, "."], "extent": [4932, 5071]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [5071, 5081], "body": [{"type": "para", "indent": 8, "text": ["You can leave the ", {"type": "ui", "text": ["Export Prefix"]}, " blank, but then your CHOP track names need to be absolute paths, such as ", {"type": "code", "text": ["obj:geo1:tx"]}, "."], "extent": [5081, 5214]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Graph Color"], "extent": [5214, 5227], "body": [{"type": "para", "indent": 4, "text": ["Every CHOP has this option. Each CHOP gets a default color assigned for display in the Graph port, but you can override the color in the Common page under Graph Color. There are 36 RGB color combinations in the Palette."], "extent": [5227, 5452]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Graph Color Step"], "extent": [5452, 5470], "body": [{"type": "para", "indent": 4, "text": ["When the graph displays the animation curves and a CHOP has two or more channels, this defines the difference in color from one channel to the next, giving a rainbow spectrum of colors."], "extent": [5470, 5661]}], "container": true, "role": "item"}], "container": true}]}], "text": "Parameters"}], "title": ["Spectrum"], "summary": ["Calculates the frequency spectrum of the input channels, or a portion\nof the channels."], "included": ["/nodes/chop/common"]}