{"type": "root", "attrs": {"type": "node", "context": "chop", "internal": "stretch", "icon": "CHOP/stretch", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Stretch"], "extent": [67, 79]}, {"type": "summary", "indent": 0, "text": ["Preserves the shape of channels and the sampling rate, but resamples the channels into a new interval."], "extent": [79, 190]}, {"type": "para", "indent": 0, "text": ["This CHOP preserves the shape of channels and the sampling rate, but resamples the channels into a new interval. All data in the range is stretched or compressed to the new start and end positions."], "extent": [190, 390]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [390, 402], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Stretch"], "extent": [402, 417], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Interpolation"], "extent": [417, 437], "body": [{"type": "para", "indent": 8, "text": ["The interpolation method to use when resampling."], "extent": [437, 495]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["No Interpolation"], "extent": [495, 521], "body": [{"type": "para", "indent": 12, "text": ["Use the value of the nearest sample."], "extent": [521, 570]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Linear"], "extent": [570, 586], "body": [{"type": "para", "indent": 12, "text": ["Use linear interpolation between samples if CHOP is being\n            lengthened. Averages all samples near the new sample if CHOP\n            is being shortened."], "extent": [586, 761]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Cubic"], "extent": [761, 776], "body": [{"type": "para", "indent": 12, "text": ["Cubically interpolates between samples, for smoother curves\n            than Linear. This method is not recommended for channels\n            with sharp changes."], "extent": [776, 949]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Pulse Preserve"], "extent": [949, 973], "body": [{"type": "para", "indent": 12, "text": ["A linear interpolation that recognizes single sample pulses\n            and preserves their height and one sample width. A pulse is\n            a non-zero value preceded and followed by zero-value\n            samples."], "extent": [973, 1203]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Constant Area"], "extent": [1203, 1222], "body": [{"type": "para", "indent": 8, "text": ["If on, keeps the area under the channel constant by scaling the\n        the values of the channel."], "extent": [1222, 1329]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Unit Values"], "extent": [1329, 1346], "body": [{"type": "para", "indent": 8, "text": ["Determines how ", {"type": "ui", "text": ["Start"]}, "/", {"type": "ui", "text": ["End"]}, " parameters are interpreted."], "extent": [1346, 1416]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Absolute"], "extent": [1416, 1434], "body": [{"type": "para", "indent": 12, "text": ["The value is the new start/end position."], "extent": [1434, 1487]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Relative to Start/End"], "extent": [1487, 1518], "body": [{"type": "para", "indent": 12, "text": ["The value is a shift from the old start/end position."], "extent": [1518, 1584]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Start"], "extent": [1584, 1595], "body": [{"type": "para", "indent": 8, "text": ["The CHOP\u2019s new start position."], "extent": [1622, 1661]}], "container": true, "attrs": {"channels": "/start"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["End"], "extent": [1661, 1670], "body": [{"type": "para", "indent": 8, "text": ["The CHOP\u2019s new end position."], "extent": [1695, 1732]}], "container": true, "attrs": {"channels": "/end"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Length Scale"], "extent": [1732, 1750], "body": [{"type": "para", "indent": 8, "text": ["Scales the length of the channel after determining the start/end\n        interval. Good for doubling or halving the length."], "extent": [1777, 1909]}], "container": true, "attrs": {"channels": "/scale"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Reverse Interval"], "extent": [1909, 1931], "body": [{"type": "para", "indent": 8, "text": ["Reverses the channel so that it plays backwards."], "extent": [1931, 1997]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "common", "container": true, "type": "h", "indent": 0, "text": ["Common"], "extent": [2334, 2356], "body": [{"type": "para", "indent": 0, "text": ["Some of these parameters may not be available on all CHOP nodes."], "extent": [2356, 2423]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Scope"], "extent": [2423, 2430], "body": [{"type": "para", "indent": 4, "text": ["To determine which channels get affected, some CHOPs have a scope string. Patterns can be used in the scope, for example ", {"type": "code", "text": ["*"]}, " (match all), and ", {"type": "code", "text": ["?"]}, " (match single character). "], "extent": [2430, 2612]}, {"type": "para", "indent": 4, "text": ["The following are examples of possible channel name matching options:"], "extent": [2612, 2691]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan2"]}], "extent": [2691, 2704], "body": [{"type": "para", "indent": 8, "text": ["Matches a single channel name."], "extent": [2704, 2748]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan3 tx ty tz"]}], "extent": [2748, 2770], "body": [{"type": "para", "indent": 8, "text": ["Matches four channel names, separated by spaces."], "extent": [2770, 2832]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan*"]}], "extent": [2832, 2845], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that starts with ", {"type": "code", "text": ["chan"]}, "."], "extent": [2845, 2908]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["*foot*"]}], "extent": [2908, 2922], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that has ", {"type": "code", "text": ["foot"]}, " in it."], "extent": [2922, 2979]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t?"]}], "extent": [2979, 2989], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "code", "text": ["?"]}, " matches a single character. ", {"type": "code", "text": ["t?"]}, " matches two-character channels starting with t.  "], "extent": [2989, 3093]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["r[xyz]"]}], "extent": [3093, 3107], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["rx"]}, ", ", {"type": "code", "text": ["ry"]}, " and ", {"type": "code", "text": ["rz"]}, "."], "extent": [3107, 3162]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[3-7:2]"]}], "extent": [3162, 3182], "body": [{"type": "para", "indent": 8, "text": ["Matches number ranges giving ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", and ", {"type": "code", "text": ["blend7"]}, "."], "extent": [3182, 3262]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[2-3,5,13]"]}], "extent": [3262, 3285], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["blend2"]}, ", ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", ", {"type": "code", "text": ["blend13"]}, "."], "extent": [3285, 3356]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t[xyz]"]}], "extent": [3356, 3370], "body": [{"type": "para", "indent": 8, "text": [{"type": "code", "text": ["[xyz]"]}, "matches three characters, giving channels ", {"type": "code", "text": ["tx"]}, ", ", {"type": "code", "text": ["ty"]}, " and ", {"type": "code", "text": ["tz"]}, "."], "extent": [3370, 3458]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sample Rate Match"], "extent": [3458, 3477], "body": [{"type": "para", "indent": 4, "text": ["The Sample Rate Match Options handle cases where multiple input CHOPs\u2019 sample rates are different."], "extent": [3477, 3585]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Resample At First Input\u2019s Rate"], "extent": [3585, 3621], "body": [{"type": "para", "indent": 8, "text": ["Use rate of first input to resample others."], "extent": [3621, 3682]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Maximum Rate"], "extent": [3682, 3712], "body": [{"type": "para", "indent": 8, "text": ["Resample to highest sample rate."], "extent": [3712, 3758]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Minimum Rate"], "extent": [3758, 3788], "body": [{"type": "para", "indent": 8, "text": ["Resample to the lowest sample rate."], "extent": [3788, 3841]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Error if Rates Differ"], "extent": [3841, 3868], "body": [{"type": "para", "indent": 8, "text": ["Does not accept conflicting sample rates."], "extent": [3868, 3923]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Units"], "extent": [3923, 3930], "body": [{"type": "para", "indent": 4, "text": ["The units for which time parameters are specified."], "extent": [3930, 3990]}, {"type": "para", "indent": 4, "text": ["For example, you can specify the amount of time a lag should last for in seconds (default), frames (at the Houdini FPS), or samples (in the CHOP\u2019s sample rate)."], "extent": [3990, 4160]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4160, 4170], "body": [{"type": "para", "indent": 8, "text": ["When you change the Units parameter, it does not convert the existing parameters to the new units."], "extent": [4170, 4282]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time Slice"], "extent": [4282, 4294], "body": [{"type": "para", "indent": 4, "text": ["Time Slicing is a feature which boosts cooking performance and reduces memory usage. Traditionally, CHOPs calculate the channel over its entire frame range. If the channel does need to be evaluated every frame, then cooking the entire range of the channel is unnecessary. It is more efficient to calculate only the fraction of the channel that is needed. This fraction is known as a Time Slice."], "extent": [4294, 4694]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Unload"], "extent": [4694, 4702], "body": [{"type": "para", "indent": 4, "text": ["Causes the memory consumed by a CHOP to be released after it is cooked and the data passed to the next CHOP."], "extent": [4702, 4816]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Export Prefix"], "extent": [4816, 4836], "body": [{"type": "para", "indent": 4, "text": ["The Export prefix is prepended to CHOP channel names to determine where to export to. "], "extent": [4836, 4932]}, {"type": "para", "indent": 4, "text": ["For example, if the CHOP channel was named ", {"type": "code", "text": ["geo1:tx"]}, ", and the prefix was ", {"type": "code", "text": ["/obj"]}, ", the channel would be exported to ", {"type": "code", "text": ["/obj/geo1/tx"]}, "."], "extent": [4932, 5071]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [5071, 5081], "body": [{"type": "para", "indent": 8, "text": ["You can leave the ", {"type": "ui", "text": ["Export Prefix"]}, " blank, but then your CHOP track names need to be absolute paths, such as ", {"type": "code", "text": ["obj:geo1:tx"]}, "."], "extent": [5081, 5214]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Graph Color"], "extent": [5214, 5227], "body": [{"type": "para", "indent": 4, "text": ["Every CHOP has this option. Each CHOP gets a default color assigned for display in the Graph port, but you can override the color in the Common page under Graph Color. There are 36 RGB color combinations in the Palette."], "extent": [5227, 5452]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Graph Color Step"], "extent": [5452, 5470], "body": [{"type": "para", "indent": 4, "text": ["When the graph displays the animation curves and a CHOP has two or more channels, this defines the difference in color from one channel to the next, giving a rainbow spectrum of colors."], "extent": [5470, 5661]}], "container": true, "role": "item"}], "container": true}]}], "text": "Parameters"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [2022, 2030], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["C"], "extent": [2030, 2037], "body": [{"type": "para", "indent": 8, "text": ["The current channel (0 to NC-1)."], "extent": [2037, 2078]}], "container": true}, {"type": "dt", "indent": 4, "text": ["NC"], "extent": [2078, 2086], "body": [{"type": "para", "indent": 8, "text": ["The total number of channels."], "extent": [2086, 2125]}], "container": true}], "container": true}], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2125, 2134], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/resample", "type": "link", "text": "", "fullpath": "/nodes/chop/resample"}], "extent": [2134, 2161]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/trim", "type": "link", "text": "", "fullpath": "/nodes/chop/trim"}], "extent": [2161, 2184]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/warp", "type": "link", "text": "", "fullpath": "/nodes/chop/warp"}], "extent": [2184, 2208]}], "container": true}], "text": "Related"}], "title": ["Stretch"], "summary": ["Preserves the shape of channels and the sampling rate, but resamples the channels into a new interval."], "included": ["/nodes/chop/common"]}