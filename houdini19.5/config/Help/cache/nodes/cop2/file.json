{"type": "root", "attrs": {"type": "node", "context": "cop2", "internal": "file", "icon": "COP2/file", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["File"], "extent": [61, 70]}, {"type": "summary", "indent": 0, "text": ["Loads image files into Houdini."], "extent": [70, 110]}, {"type": "para", "indent": 0, "text": ["This COP loads image files into Houdini. Files without an animated time\nor frame in the filepath (i.e. ", {"type": "em", "text": ["default.pic, butterfly1.pic"]}, ") are\ninterpreted as single images. Otherwise, the last number in the filename\n(ignoring the extension) is considered to be the frame number of the\nimage."], "extent": [110, 398]}, {"type": "para", "indent": 0, "text": ["For numbered files, the frame range is automatically computed by\nsearching the directory where the files found. Missing or bad frames\nwill be replaced with black or neighboring frames, depending on the\n'Missing Frames' parameter. Missing frames at the beginning or end of\nthe sequence cannot be automatically detected, though bad frames can be\nreplaced."], "extent": [398, 753]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Using Proxy Images"], "extent": [753, 778], "body": [{"type": "para", "indent": 4, "text": ["Lower resolution images can be used in place of full-resolution\n    images to speed up loading or to conserve space. Proxy filenames are\n    entered in the ", {"type": "ui", "text": ["Proxy"]}, " tab. The images files themselves should be an\n    integer reduction of the image (1/2, 1/3, 1/4, etc). The main files\n    do not need to exist in order to use proxy files (the largest proxy\n    files will be used)."], "extent": [778, 1165]}, {"type": "para", "indent": 4, "text": ["More than one proxy file can be entered. Houdini will use the closest\n    proxy image resolution not smaller than the current cook resolution\n    (so if you were cooking at 1/3, and there were proxy images for 1/2\n    and 1/4 resolution, the 1/2 resolution images would be loaded and\n    scaled down, rather than up-scaling the 1/3 resolution images)."], "extent": [1165, 1522]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1522, 1532], "body": [{"type": "para", "indent": 8, "text": ["Currently, the proxy images should be the same image format as\n        the main images. This may change in the future."], "extent": [1532, 1661]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1661, 1673], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["File"], "extent": [1673, 1689], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["File"], "extent": [1689, 1704], "body": [{"type": "para", "indent": 12, "text": ["The path of the file(s) to load. The file is searched for\n            using the HOUDINI_TEXTURE_PATH. Multiple files can be\n            specified with ", {"type": "code", "text": ["$F"]}, ", ", {"type": "code", "text": ["$I"]}, " or a more complicated expression for\n            frame numbers."], "extent": [1704, 1942]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["File Node Naming"], "extent": [1942, 1968], "body": [{"type": "para", "indent": 12, "text": ["The File Node renames itself to match the current file\n            settings. This parameter controls how the new name is built.\n            ", {"type": "ui", "text": ["User Defined"]}, " or ", {"type": "ui", "text": ["File Operator"]}, " will disable this behavior.\n            Changing the name manually will automatically switch this\n            parameter to ", {"type": "ui", "text": ["User Defined"]}, "."], "extent": [1968, 2299]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Detect Subframes"], "extent": [2299, 2325], "body": [{"type": "para", "indent": 12, "text": ["The character ", {"type": "q", "text": ["."]}, " is treated as a decimal, and sequences of\n            images with fractional frame numbers are loaded. Each fractional\n            frame is placed at the next available integer frame in the\n            sequence (1,2,3\u2026), rather than at subframes (1, 1.25, 1.5\u2026). "], "extent": [2325, 2623]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["File Size"], "extent": [2623, 2642], "body": [{"type": "para", "indent": 12, "text": ["Specifies the size of the file to load, either by at the\n            natural resolution or a custom size."], "extent": [2642, 2760]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Image Filter"], "extent": [2760, 2782], "body": [{"type": "para", "indent": 12, "text": ["When the file size is overridden, this specifies the image\n            filter to use when scaling."], "extent": [2782, 2893]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Pixel Aspect Ratio"], "extent": [2893, 2921], "body": [{"type": "para", "indent": 12, "text": ["Specifies the pixel aspect ratio of the image."], "extent": [2921, 2980]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Flip Image"], "extent": [2980, 3000], "body": [{"type": "para", "indent": 12, "text": ["Flips the image vertically if on."], "extent": [3000, 3046]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["File Raster Depth"], "extent": [3046, 3073], "body": [{"type": "para", "indent": 12, "text": ["Selects how the raster depth is determined."], "extent": [3073, 3130]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Natural Depth"], "extent": [3130, 3157], "body": [{"type": "para", "indent": 16, "text": ["The image file\u2019s depth is used."], "extent": [3157, 3205]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Project Depth"], "extent": [3205, 3232], "body": [{"type": "para", "indent": 16, "text": ["The depth specified in the ", {"type": "ui", "text": ["Composite Project"]}, " settings\n                is used, overriding the file\u2019s natural depth."], "extent": [3232, 3368]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Specific Depth"], "extent": [3368, 3396], "body": [{"type": "para", "indent": 16, "text": ["The following Depth parameter selects the raster depth,\n                overriding the file\u2019s natural depth."], "extent": [3396, 3521]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Linearize Non-linear Images"], "extent": [3521, 3558], "body": [{"type": "para", "indent": 12, "text": ["When enabled, planes with non-linear colorspaces will be converted \n            to linear colorspace. If the colorspace is unknown, only 8b images\n            will be assumed to be sRGB. 8b non-linear planes will always be\n            upconverted to at least 16b float, unless the ", {"type": "ui", "text": ["File Raster Depth"]}, "\n            explicity sets a different format.          "], "extent": [3558, 3930]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Image Color Space"], "extent": [3930, 3957], "body": [{"type": "para", "indent": 12, "text": ["When ", {"type": "ui", "text": ["Linearize"]}, " is enabled, the image color space is determined\n            by looking at the image file itself. In some cases, the file may\n            contain an image in a colorspace that is different that the one\n            the format specifies (ie, an sRGB image in an OpenEXR file, which\n            the format dictates should be linear). This parameter allows you \n            to explicitly state the color space of the loaded image, which may\n            affect if the image is linearized (sRGB) or not (Linear). This \n            parameter is not used if ", {"type": "ui", "text": ["Linearize Non-linear Images"]}, " is off."], "extent": [3957, 4578]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Autodetect from File"], "extent": [4578, 4612], "body": [{"type": "para", "indent": 16, "text": ["Use the image format or image file to determine the colorspace."], "extent": [4612, 4692]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Linear"], "extent": [4692, 4712], "body": [{"type": "para", "indent": 16, "text": ["Assume the image is in linear space, ignoring the file or \n                format\u2019s colorspace. The image will not be linearized."], "extent": [4712, 4858]}], "container": true}, {"type": "dt", "indent": 12, "text": ["sRGB"], "extent": [4858, 4876], "body": [{"type": "para", "indent": 16, "text": ["Assume the image is in sRGB space, ignoring the file or \n                format\u2019s colorspace. The image will be run through a inverse\n                sRGB transform."], "extent": [4876, 5070]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Depth"], "extent": [5070, 5085], "body": [{"type": "para", "indent": 12, "text": ["If the File Raster Depth parameter is set to Specific, this\n            parameter sets the raster depth used for the files."], "extent": [5085, 5221]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Override Frame Range"], "extent": [5221, 5251], "body": [{"type": "para", "indent": 12, "text": ["If off, the frame range is automatically determined by the\n            lowest and highest frame numbers found in the file pattern.\n            Otherwise the ", {"type": "ui", "text": ["File Range Start"]}, ", ", {"type": "ui", "text": ["File Range Length"]}, ", and\n            ", {"type": "ui", "text": ["Shift to Start at Frame"]}, " parameters set the range."], "extent": [5251, 5535]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Detect Frame Range"], "extent": [5535, 5563], "body": [{"type": "para", "indent": 12, "text": ["If ", {"type": "ui", "text": ["Override Frame Range"]}, " is on, you can do a one-time frame\n            range detect of the sequence by pressing this button. It\n            will put the range values into the following parameters."], "extent": [5563, 5776]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Still Image"], "extent": [5776, 5797], "body": [{"type": "para", "indent": 12, "text": ["When checked, only the first image in the file range will be\n            read and a still image will be created instead of a\n            sequence."], "extent": [5797, 5956]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Shift to Start at Frame"], "extent": [5956, 5989], "body": [{"type": "para", "indent": 12, "text": ["Specifies the frame where the sequence should start. If\n            this number is different from the file range start, the\n            sequence will be shifted appropriately."], "extent": [5989, 6177]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["File Range Start"], "extent": [6177, 6203], "body": [{"type": "para", "indent": 12, "text": ["Specifies the number of the first file where the sequence\n            should start. For example, if the file name is ", {"type": "code", "text": ["file$F.tiff"]}, "\n            and the file range start is 15, the first file in the\n            sequence will be ", {"type": "code", "text": ["file15.tiff"]}, ". By default, this number is\n            determined from the first file found matching the file name\n            pattern, but it can be changed to create a sequence of a\n            subset of the files."], "extent": [6203, 6657]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["File Range Length"], "extent": [6657, 6684], "body": [{"type": "para", "indent": 12, "text": ["Specifies the length of the sequence. By default, this\n            number is the number of files matching the pattern. It can\n            be changed to create a sequence of a subset of the files."], "extent": [6684, 6892]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Missing Frames"], "extent": [6892, 6916], "body": [{"type": "para", "indent": 12, "text": ["If a frame is missing in the sequence, this parameter\n            specifies how to handle it."], "extent": [6916, 7022]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Missing Frames"], "extent": [7022, 7046], "body": [{"type": "para", "indent": 12, "text": ["For bad or missing frames, the File COP can either use a\n            black frame or a neighboring frame."], "extent": [7046, 7164]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Use Closest Frame"], "extent": [7164, 7195], "body": [{"type": "para", "indent": 16, "text": ["Searches forward and backward in the frames to find a\n                substitution. The closest frame is used; in the event of\n                a tie, the previous frame is taken."], "extent": [7195, 7390]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Use Previous Frame"], "extent": [7390, 7422], "body": [{"type": "para", "indent": 16, "text": ["Searches backward from the missing frame to find a\n                replacement."], "extent": [7422, 7518]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Use Next Frame"], "extent": [7518, 7546], "body": [{"type": "para", "indent": 16, "text": ["Searches forward from the missing frame to find a\n                replacement."], "extent": [7546, 7641]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Use Black Frame"], "extent": [7641, 7670], "body": [{"type": "para", "indent": 16, "text": ["Bad and missing frames are replaced with a black frame."], "extent": [7670, 7742]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Report Error"], "extent": [7742, 7768], "body": [{"type": "para", "indent": 16, "text": ["The File node errors when a bad or missing frame is\n                found."], "extent": [7768, 7859]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Print Warning for Missing Frames"], "extent": [7859, 7901], "body": [{"type": "para", "indent": 12, "text": ["If on, a message is printed to the shell when a missing or\n            bad frame is encountered (ie, ", {"type": "code", "text": ["/img/img1/file1: Missing frame 1"]}, ")."], "extent": [7901, 8052]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Proxy"], "extent": [8052, 8068], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Enable Proxy Files"], "extent": [8068, 8097], "body": [{"type": "para", "indent": 12, "text": ["Enables the use of proxies, which are smaller versions of\n            the full sized images. A proxy sequence should be identical\n            to the original sequence, except for the resolution. When\n            cooking the file COP at other resolutions than the proxy\n            resolutions, the closest larger proxy sequence is used."], "extent": [8097, 8446]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["1/2, 1/4, 1/8 Res Proxy"], "extent": [8446, 8479], "body": [{"type": "para", "indent": 12, "text": ["Specifies the proxy sequence to use for 1/2, 1/4 and 1/8 of\n            the full resolution."], "extent": [8479, 8584]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Custom Proxy"], "extent": [8584, 8606], "body": [{"type": "para", "indent": 12, "text": ["Allows you to specify other proxy resolutions and their\n            proxy sequences."], "extent": [8606, 8704]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Mask"], "extent": [8704, 8719], "body": [{"type": "para", "indent": 8, "text": ["A mask can be chosen to limit the effect of the operator to\n        areas defined by the mask. The mask can be taken from the mask\n        input (bottom input) or from the first input itself."], "extent": [8719, 8921]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Effect Amount"], "extent": [8921, 8944], "body": [{"type": "para", "indent": 12, "text": ["If no mask is present, this blends the output with the input\n            by a constant amount (0 = all input, 1 = all output)."], "extent": [8982, 9122]}, {"type": "para", "indent": 12, "text": ["If a mask is present, this amount multiplies the mask."], "extent": [9122, 9190]}], "container": true, "attrs": {"channels": "/effectamount"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Operation Mask"], "extent": [9190, 9214], "body": [{"type": "para", "indent": 12, "text": ["Selects the mask plane to use as a mask from the mask input."], "extent": [9260, 9334]}, {"type": "para", "indent": 12, "text": ["A mask can be a component of a plane or an entire plane. If\n            a vector plane is supplied as a mask, its components are\n            multiplied by the images' components."], "extent": [9334, 9526]}, {"type": "para", "indent": 12, "text": [{"type": "strong", "text": ["Scalar Mask ('A', 'C.r')"]}], "extent": [9526, 9566]}, {"lang": null, "type": "pre", "indent": 12, "text": ["\n            C.r = I.r * M\n            C.g = I.g * M\n            C.b = I.b * M\n            \n            "], "extent": [9566, 9689]}, {"type": "para", "indent": 12, "text": [{"type": "strong", "text": ["Vector Mask ('C')"]}], "extent": [9689, 9722]}, {"lang": null, "type": "pre", "indent": 12, "text": ["\n            C.r = I.r * M.r\n            C.g = I.g * M.g\n            C.b = I.b * M.b\n            \n            "], "extent": [9722, 9851]}], "container": true, "attrs": {"channels": "/maskinput /maskplane"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Resize Mask to Fit Image"], "extent": [9851, 9885], "body": [{"type": "para", "indent": 12, "text": ["If the mask image is a different resolution than the output\n            image, turning on this parameter will scale the mask to the\n            output image\u2019s resolution."], "extent": [9885, 10069]}, {"type": "para", "indent": 12, "text": ["If this node is changing constantly, and the mask is not, it\n            is somewhat faster to put a ", {"scheme": "Node", "value": "/nodes/cop2/scale", "type": "link", "text": ["Scale COP"], "fullpath": "/nodes/cop2/scale"}, " down to do the resize\n            for the mask image. Otherwise, the scale will occur every\n            time this node cooks."], "extent": [10069, 10337]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Invert Mask"], "extent": [10337, 10358], "body": [{"type": "para", "indent": 12, "text": ["Inverts the mask so that all fully 'masked' portions become\n            unmasked. This saves you from inserting an ", {"scheme": "Node", "value": "/nodes/cop2/invert", "type": "link", "text": ["Invert COP"], "fullpath": "/nodes/cop2/invert"}, " after\n            the node with the mask."], "extent": [10358, 10558]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Sequence"], "extent": [10558, 10577], "body": [{"type": "para", "indent": 8, "text": ["This tab contains parameters which deal with the timing and\n        frame range of the generated sequence."], "extent": [10577, 10694]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Pre Extend"], "extent": [10694, 10714], "body": [{"type": "para", "indent": 12, "text": ["For sequences with a frame range, this determines how to\n            show frames before the start frame."], "extent": [10714, 10832]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Black Frames"], "extent": [10832, 10858], "body": [{"type": "para", "indent": 16, "text": ["Display black."], "extent": [10858, 10889]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Cycle"], "extent": [10889, 10908], "body": [{"type": "para", "indent": 16, "text": ["Cycle the sequence, always playing it forward."], "extent": [10908, 10971]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Mirror"], "extent": [10971, 10991], "body": [{"type": "para", "indent": 16, "text": ["Cycle the sequence, reversing the direction every\n                cycle."], "extent": [10991, 11080]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Hold"], "extent": [11080, 11098], "body": [{"type": "para", "indent": 16, "text": ["Hold the first frame indefinitely."], "extent": [11098, 11149]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Hold N Frames"], "extent": [11149, 11176], "body": [{"type": "para", "indent": 16, "text": ["Hold the first frame for a certain number of frames;\n                before that, show black frames."], "extent": [11176, 11293]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Pre Hold"], "extent": [11293, 11311], "body": [{"type": "para", "indent": 12, "text": ["The number of frames to hold the first frame for, if ", {"type": "ui", "text": ["Hold\n            N Frames"]}, " is selected."], "extent": [11344, 11452]}], "container": true, "attrs": {"channels": "/prehold"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Post Extend"], "extent": [11452, 11473], "body": [{"type": "para", "indent": 12, "text": ["For sequences with a frame range, this determines how to\n            show frames after the last frame."], "extent": [11473, 11589]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Black Frames"], "extent": [11589, 11615], "body": [{"type": "para", "indent": 16, "text": ["Display black."], "extent": [11615, 11646]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Cycle"], "extent": [11646, 11665], "body": [{"type": "para", "indent": 16, "text": ["Cycle the sequence, always playing it forward."], "extent": [11665, 11728]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Mirror"], "extent": [11728, 11748], "body": [{"type": "para", "indent": 16, "text": ["Cycle the sequence, reversing the direction every\n                cycle."], "extent": [11748, 11837]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Hold"], "extent": [11837, 11855], "body": [{"type": "para", "indent": 16, "text": ["Hold the last frame indefinitely."], "extent": [11855, 11905]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Hold N Frames"], "extent": [11905, 11932], "body": [{"type": "para", "indent": 16, "text": ["Hold the last frame for a certain number of frames;\n                after that, show black frames."], "extent": [11932, 12047]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Post Hold"], "extent": [12047, 12066], "body": [{"type": "para", "indent": 12, "text": ["The number of frames to hold the last frame for, if ", {"type": "ui", "text": ["Hold N\n            Frames"]}, " is selected."], "extent": [12100, 12208]}], "container": true, "attrs": {"channels": "/posthold"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "title": ["File"], "summary": ["Loads image files into Houdini."]}