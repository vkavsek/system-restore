{"type": "root", "attrs": {"type": "node", "context": "cop2", "internal": "pixel", "icon": "COP2/pixel", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Pixel"], "extent": [63, 73]}, {"type": "summary", "indent": 0, "text": ["Modifies an image\u2019s pixels using expressions."], "extent": [73, 127]}, {"type": "para", "indent": 0, "text": ["This operation allows you to specify an expression to modify the pixels\nof image. The expression is applied to each pixel in turn, and can be\nspecified separately for each color component (R, G, B, and Alpha)."], "extent": [127, 338]}, {"type": "para", "indent": 0, "text": ["There are a second set of expression parameters, which refer to the\nfirst to fourth component of any plane, even if it is not Color or\nAlpha."], "extent": [338, 481]}, {"type": "para", "indent": 0, "text": ["This node is the 2D equivalent of the Point SOP. VEX scripts are much\nfaster than using this operator."], "extent": [481, 586]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [586, 598], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Use Color & Alpha Expressions, Then Generic"], "extent": [598, 647], "body": [{"type": "para", "indent": 8, "text": ["If on, the color and alpha expressions are used for Color (C.r,\n        C.g, C.b) and Alpha. Any other plane types use the generic\n        expressions. If off,the Generic expressions are used for all\n        planes."], "extent": [647, 871]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Red, Green, Blue, Alpha"], "extent": [871, 900], "body": [{"type": "para", "indent": 8, "text": ["Expressions used exclusively by Color (C.r, C.g, C.b) and\n        Alpha. All other planes use the generic expressions."], "extent": [900, 1027]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Component 1-4"], "extent": [1027, 1046], "body": [{"type": "para", "indent": 8, "text": ["The generic expressions for all planes."], "extent": [1046, 1094]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Mask"], "extent": [698, 714], "body": [{"type": "para", "indent": 8, "text": ["A mask can be chosen to limit the effect of the operator to\n        areas defined by the mask. The mask can be taken from the mask\n        input (side input) or from the first input itself."], "extent": [714, 914]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Effect Amount"], "extent": [914, 937], "body": [{"type": "para", "indent": 12, "text": ["If no mask is present, this blends the output with the input\n            by a constant amount (0 = all input, 1 = all output)."], "extent": [975, 1115]}, {"type": "para", "indent": 12, "text": ["If a mask is present, this amount multiplies the mask."], "extent": [1115, 1183]}], "container": true, "attrs": {"channels": "/effectamount"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Operation Mask"], "extent": [1183, 1207], "body": [{"type": "para", "indent": 12, "text": ["Selects the mask plane to use as a mask from the mask input.\n            The mask can be selected from:"], "extent": [1253, 1370]}, {"type": "para", "indent": 12, "text": ["A mask can be a component of a plane or an entire plane. If\n            a vector plane is supplied as a mask, its components are\n            multiplied by the images' components."], "extent": [1370, 1562]}, {"type": "para", "indent": 12, "text": [{"type": "strong", "text": ["Scalar Mask ('A', 'C.r')"]}], "extent": [1562, 1602]}, {"lang": null, "type": "pre", "indent": 12, "text": ["\n            C.r = I.r * M\n            C.g = I.g * M\n            C.b = I.b * M\n            \n            "], "extent": [1602, 1725]}, {"type": "para", "indent": 12, "text": [{"type": "strong", "text": ["Vector Mask ('C')"]}], "extent": [1725, 1758]}, {"lang": null, "type": "pre", "indent": 12, "text": ["\n            C.r = I.r * M.r\n            C.g = I.g * M.g\n            C.b = I.b * M.b\n            \n            "], "extent": [1758, 1887]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["First Input"], "extent": [1887, 1913], "body": [{"type": "para", "indent": 16, "text": ["Useful for masking the operation to the image\u2019s own\n                alpha plane."], "extent": [1913, 2010]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Mask Input"], "extent": [2010, 2034], "body": [{"type": "para", "indent": 16, "text": ["Selects the mask from the side mask input."], "extent": [2034, 2093]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Off"], "extent": [2093, 2110], "body": [{"type": "para", "indent": 16, "text": ["Turns off masking, without requiring disconnection of\n                the mask input (useful for temporarily disabling the\n                mask)."], "extent": [2110, 2272]}], "container": true}], "container": true}], "container": true, "attrs": {"channels": "/maskinput /maskplane"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Resize Mask to Fit Image"], "extent": [2272, 2306], "body": [{"type": "para", "indent": 12, "text": ["If the mask image is a different resolution than the output\n            image, turning on this parameter will scale the mask to the\n            output image\u2019s resolution."], "extent": [2306, 2490]}, {"type": "para", "indent": 12, "text": ["If this node is changing constantly, and the mask is not, it\n            is somewhat faster to put a Scale COP down to do the resize\n            for the mask image. Otherwise, the scale will occur every\n            time this node cooks."], "extent": [2490, 2740]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Invert Mask"], "extent": [2740, 2761], "body": [{"type": "para", "indent": 12, "text": ["Inverts the mask so that all fully 'masked' portions become\n            unmasked. This saves you from inserting an Invert COP after\n            the node with the mask."], "extent": [2761, 2941]}], "container": true, "role": "item"}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Scope"], "extent": [476, 493], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Plane Scope"], "extent": [493, 515], "body": [{"type": "para", "indent": 12, "text": ["Specifies the scope for both the RGB components of Color,\n            Alpha, and other planes. The (C)RGBA mask only affects Color\n            components and Alpha. 'C' will toggle all the RGB\n            components."], "extent": [515, 745]}, {"type": "para", "indent": 12, "text": ["For planes other than Color and Alpha, the plane name (plus\n            component, if applicable) should be specified in the string\n            field. The pulldown menu can be used to select planes or\n            components present in this node."], "extent": [745, 1004]}, {"type": "para", "indent": 12, "text": ["A plane is specified by its name. A component is specified\n            by both its plane and component name. The '*' wildcard may\n            be used to scope all extra planes. Any number of planes or\n            components can be specified, separated by spaces."], "extent": [1004, 1280]}, {"type": "para", "indent": 12, "text": ["Examples:"], "extent": [1280, 1303]}, {"lang": null, "type": "pre", "indent": 12, "text": ["\n            P\n            N.x N.y\n            P N Pz\n            "], "extent": [1303, 1388]}], "container": true, "role": "item"}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Frame Scope"], "extent": [1388, 1411], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Frame Scope"], "extent": [1411, 1433], "body": [{"type": "para", "indent": 12, "text": ["Allows scoping of specific frames in the frame range. This\n            is in addition to the plane scope (so a plane at a certain\n            frame must be both plane scoped and frame scoped to be\n            modified)."], "extent": [1433, 1666]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["All Frames"], "extent": [1666, 1690], "body": [{"type": "para", "indent": 16, "text": ["All frames are scoped."], "extent": [1690, 1729]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Inside Range"], "extent": [1729, 1755], "body": [{"type": "para", "indent": 16, "text": ["All frames inside a subrange are scoped."], "extent": [1755, 1812]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Outside Range"], "extent": [1812, 1839], "body": [{"type": "para", "indent": 16, "text": ["All frames outside a subrange are scoped."], "extent": [1839, 1897]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Even Frames"], "extent": [1897, 1922], "body": [{"type": "para", "indent": 16, "text": ["Even numbered frames are scoped."], "extent": [1922, 1971]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Odd Frames"], "extent": [1971, 1995], "body": [{"type": "para", "indent": 16, "text": ["Odd numbered frames are scoped."], "extent": [1995, 2043]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Specific Frames"], "extent": [2043, 2072], "body": [{"type": "para", "indent": 16, "text": ["A user-defined list of frames are scoped."], "extent": [2072, 2130]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Frame Range"], "extent": [2130, 2151], "body": [{"type": "para", "indent": 12, "text": ["For Inside/Outside range, this parameter specifies the\n            subrange of the sequence to scope (or unscope). This can be\n            edited in Timeline viewer mode (", {"keys": ["Ctrl", "2"], "type": "keys", "text": null}, " in viewer)."], "extent": [2193, 2401]}], "container": true, "attrs": {"channels": "/frange1 /frange2"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Frame Dropoff"], "extent": [2401, 2424], "body": [{"type": "para", "indent": 12, "text": ["For Inside/Outside Range, this parameter specifies certain\n            number of frames before and after to slowly ramp up to\n            scoped. The operation will be blended with its input to\n            'ease in' or 'ease out' the scoping effect over a number of\n            frames. This can be edited in Timeline viewer mode\n            (", {"keys": ["Ctrl", "2"], "type": "keys", "text": null}, " in viewer)."], "extent": [2470, 2849]}], "container": true, "attrs": {"channels": "/fdropoff1 /fdropoff2"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Non-scoped Effect"], "extent": [2849, 2876], "body": [{"type": "para", "indent": 12, "text": ["For unscoped frames, this sets the blend factor between the\n            input and modified images. Normally this is zero (use the\n            input image). By setting this to a non-zero value, you can\n            make unscoped frames be 'slightly' unscoped. The value can\n            vary between 0 (unscoped) and 1 (scoped)."], "extent": [2910, 3248]}], "container": true, "attrs": {"channels": "/foutside"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Frame List"], "extent": [3248, 3268], "body": [{"type": "para", "indent": 12, "text": ["The frame list for 'Specific Frames'. Frame numbers should\n            be separated by spaces."], "extent": [3299, 3406]}], "container": true, "attrs": {"channels": "/flist"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Automatically Adjust for Length Changes"], "extent": [3406, 3455], "body": [{"type": "para", "indent": 12, "text": ["If the sequence range changes, enabling this parameter will\n            adjust the subrange and frame dropoff lengths to fit the new\n            range."], "extent": [3455, 3619]}], "container": true, "role": "item"}], "container": true}]}], "text": "Parameters"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [1180, 1188], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["R, G, B, A"], "extent": [1188, 1204], "body": [{"type": "para", "indent": 8, "text": ["The values of C.r, C.g, C.b (Color) and A (Alpha) of the first\n        input."], "extent": [1204, 1290]}], "container": true}, {"type": "dt", "indent": 4, "text": ["C1, C2, C3, C4"], "extent": [1290, 1310], "body": [{"type": "para", "indent": 8, "text": ["The values of components 1-4 of any of the scoped plane in the\n        first input (which correspond to the output plane cooking). For\n        example, if the currently cooking output plane is a Point plane,\n        C1 will be P.x, C2 will be P.y, and C3 will be P.z of the first\n        input\u2019s Point plane. C4 will be black."], "extent": [1310, 1645]}], "container": true}, {"type": "dt", "indent": 4, "text": ["RS, GS, RS, RS"], "extent": [1645, 1665], "body": [{"type": "para", "indent": 8, "text": ["The values of color and alpha in the second input."], "extent": [1665, 1724]}], "container": true}, {"type": "dt", "indent": 4, "text": ["CS1, CS2, CS3, CS4"], "extent": [1724, 1748], "body": [{"type": "para", "indent": 8, "text": ["The values of components 1-4 of the any of the scoped planes in\n        the second input (which correspond to the output plane\n        cooking)."], "extent": [1748, 1901]}], "container": true}, {"type": "dt", "indent": 4, "text": ["RT, GT, BT, AT"], "extent": [1901, 1921], "body": [{"type": "para", "indent": 8, "text": ["The values of color and alpha in the third input."], "extent": [1921, 1979]}], "container": true}, {"type": "dt", "indent": 4, "text": ["CT1, CT2, CT3, CT4"], "extent": [1979, 2003], "body": [{"type": "para", "indent": 8, "text": ["The values of of components 1-4 of the scoped plane in the\n        third input (which correspond to the output plane cooking)."], "extent": [2003, 2138]}], "container": true}, {"type": "dt", "indent": 4, "text": ["U, V"], "extent": [2138, 2148], "body": [{"type": "para", "indent": 8, "text": ["The UV coordinates of the current pixel (0 to 1)."], "extent": [2148, 2206]}], "container": true}, {"type": "dt", "indent": 4, "text": ["X, Y"], "extent": [2206, 2216], "body": [{"type": "para", "indent": 8, "text": ["The pixel location of the current pixel (0 to res-1)"], "extent": [2216, 2277]}], "container": true}, {"type": "dt", "indent": 4, "text": ["CH"], "extent": [2277, 2285], "body": [{"type": "para", "indent": 8, "text": ["The component (channel) of the current expression (0 to 3)"], "extent": [2285, 2352]}], "container": true}, {"type": "dt", "indent": 0, "text": ["L"], "extent": [15, 18], "body": [{"type": "para", "indent": 4, "text": ["Sequence length"], "extent": [18, 38]}], "container": true}, {"type": "dt", "indent": 0, "text": ["S"], "extent": [38, 41], "body": [{"type": "para", "indent": 4, "text": ["Start of sequence"], "extent": [41, 63]}], "container": true}, {"type": "dt", "indent": 0, "text": ["E"], "extent": [63, 66], "body": [{"type": "para", "indent": 4, "text": ["End of sequence"], "extent": [66, 86]}], "container": true}, {"type": "dt", "indent": 0, "text": ["IL"], "extent": [86, 90], "body": [{"type": "para", "indent": 4, "text": ["Input sequence length"], "extent": [90, 116]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SR"], "extent": [116, 120], "body": [{"type": "para", "indent": 4, "text": ["Sequence frame rate"], "extent": [120, 144]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NP"], "extent": [144, 148], "body": [{"type": "para", "indent": 4, "text": ["Number of planes in sequence"], "extent": [148, 181]}], "container": true}, {"type": "dt", "indent": 0, "text": ["W,H"], "extent": [181, 186], "body": [{"type": "para", "indent": 4, "text": ["Width and height of image"], "extent": [186, 216]}], "container": true}, {"type": "dt", "indent": 0, "text": ["I"], "extent": [216, 219], "body": [{"type": "para", "indent": 4, "text": ["Image index (0 at start frame)"], "extent": [219, 254]}], "container": true}, {"type": "dt", "indent": 0, "text": ["IT"], "extent": [254, 258], "body": [{"type": "para", "indent": 4, "text": ["Image time (0 at start frame)"], "extent": [258, 292]}], "container": true}, {"type": "dt", "indent": 0, "text": ["AI"], "extent": [292, 296], "body": [{"type": "para", "indent": 4, "text": ["Current plane array index"], "extent": [296, 326]}], "container": true}, {"type": "dt", "indent": 0, "text": ["PI"], "extent": [326, 330], "body": [{"type": "para", "indent": 4, "text": ["Current plane index"], "extent": [330, 354]}], "container": true}, {"type": "dt", "indent": 0, "text": ["PC"], "extent": [354, 358], "body": [{"type": "para", "indent": 4, "text": ["Num of channels in current plane"], "extent": [358, 395]}], "container": true}, {"type": "dt", "indent": 0, "text": ["CXRES"], "extent": [395, 402], "body": [{"type": "para", "indent": 4, "text": ["Composite Project X resolution"], "extent": [402, 437]}], "container": true}, {"type": "dt", "indent": 0, "text": ["CYRES"], "extent": [437, 444], "body": [{"type": "para", "indent": 4, "text": ["Composite Project Y resolution"], "extent": [444, 479]}], "container": true}, {"type": "dt", "indent": 0, "text": ["CPIXA"], "extent": [479, 486], "body": [{"type": "para", "indent": 4, "text": ["Composite Project pixel aspect ratio"], "extent": [486, 527]}], "container": true}, {"type": "dt", "indent": 0, "text": ["CDEPTH"], "extent": [527, 535], "body": [{"type": "para", "indent": 4, "text": ["Composite Project raster depth"], "extent": [535, 570]}], "container": true}, {"type": "dt", "indent": 0, "text": ["CBP"], "extent": [570, 575], "body": [{"type": "para", "indent": 4, "text": ["Composite Project black point"], "extent": [575, 609]}], "container": true}, {"type": "dt", "indent": 0, "text": ["CWP"], "extent": [609, 614], "body": [{"type": "para", "indent": 4, "text": ["Composite Project white point"], "extent": [614, 648]}], "container": true}], "container": true}], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2381, 2390], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/cop2/function", "type": "link", "text": "", "fullpath": "/nodes/cop2/function"}], "extent": [2390, 2418]}], "container": true}], "text": "Related"}], "title": ["Pixel"], "summary": ["Modifies an image\u2019s pixels using expressions."], "included": ["/nodes/cop2/coplocalvars", "/nodes/cop2/copmaskparms", "/nodes/cop2/coppixelparms"]}