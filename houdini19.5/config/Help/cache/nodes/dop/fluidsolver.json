{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "fluidsolver::2.0", "icon": "DOP/fluidsolver", "version": "2.0", "since": "12.0", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Fluid Solver"], "extent": [105, 122]}, {"type": "summary", "indent": 0, "text": ["A solver for Sign Distance Field (SDF) liquid simulations."], "extent": [122, 189]}, {"level": 2, "id": "setup", "container": true, "type": "h", "indent": 0, "text": ["Setting up"], "extent": [189, 214], "body": [{"type": "para", "indent": 0, "text": ["If you are setting up a fluid network from scratch, you can use the ", {"scheme": "Node", "value": "/nodes/dop/fluidobject", "type": "link", "text": ["Fluid Object node"], "fullpath": "/nodes/dop/fluidobject"}, " to create a DOP object with the data required by the Fluid solver already attached. If you already have a DOP object, you can use the ", {"scheme": "Node", "value": "/nodes/dop/fluidconfigureobject", "type": "link", "text": ["Fluid Configure Object node"], "fullpath": "/nodes/dop/fluidconfigureobject"}, " to add the necessary data to it."], "extent": [214, 552]}, {"type": "para", "indent": 0, "text": ["This solver makes use of various field subdata on the object."], "extent": [552, 615]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["The object should have a scalar field ", {"type": "q", "text": ["surface"]}, " to track the surface of the fluid in space."], "extent": [615, 710]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The object should have a vector field called ", {"type": "q", "text": ["vel"]}, " to track the velocity of each point in space."], "extent": [710, 810]}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips"], "extent": [810, 821], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["If your fluid keeps disappearing, try turning off ", {"type": "ui", "text": ["Build Outside Markers"]}, ". You can also set ", {"type": "ui", "text": ["Marker Escape Threshold"]}, " to ", {"type": "code", "text": ["0"]}, " to help keep fluid inside the box."], "extent": [821, 989]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Liquid streams smaller than a few voxels may disappear."], "extent": [989, 1048]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["If your source object deforms or collides with a deforming object (using a DOP relationship), by default the solver will use the per-point deformation. To make the solver use per-point deformation, on the ", {"type": "ui", "text": ["Fields \u25b8 Sources"]}, " subtab set ", {"type": "ui", "text": ["Velocity Type"]}, " to ", {"type": "q", "text": ["Point Velocity"]}, "."], "extent": [1048, 1327]}], "container": true}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1327, 1339], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Simulation"], "extent": [1339, 1357], "body": [{"type": "para", "indent": 0, "text": ["These parameters control how the simulation develops over time."], "extent": [1357, 1423]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Time Scale"], "extent": [1423, 1435], "body": [{"type": "para", "indent": 4, "text": ["A scaling factor for time inside this solver. ", {"type": "code", "text": ["1"]}, " is normal speed, greater than ", {"type": "code", "text": ["1"]}, " makes the fluid sim appear speeded up, less than ", {"type": "code", "text": ["1"]}, " makes the fluid sim appear to be in slow motion.\n    You can use expression functions such as ", {"scheme": "Exp", "value": "/expressions/doptime", "type": "link", "text": "", "fallback_text": "doptime()", "fullpath": "/expressions/doptime"}, ", ", {"scheme": "Exp", "value": "/expressions/dopframe", "type": "link", "text": "", "fallback_text": "dopframe()", "fullpath": "/expressions/dopframe"}, ",", {"scheme": "Exp", "value": "/expressions/dopsttot", "type": "link", "text": "", "fallback_text": "dopsttot()", "fullpath": "/expressions/dopsttot"}, ", and ", {"scheme": "Exp", "value": "/expressions/dopttost", "type": "link", "text": "", "fallback_text": "dopttost()", "fullpath": "/expressions/dopttost"}, " to convert between global times and simulation times."], "extent": [1435, 1790]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1790, 1800], "body": [{"type": "para", "indent": 8, "text": ["Changing the ", {"type": "ui", "text": ["Time Scale"]}, " only affects the timestep of the simulation. If adding velocities calculated in SOPs to the simulation for collisions or pumps with the ", {"scheme": "Node", "value": "/nodes/dop/sourcevolume", "type": "link", "text": ["Source Volume DOP"], "fullpath": "/nodes/dop/sourcevolume"}, ", scale the incoming velocities by ", {"type": "code", "text": ["1 / timescale"]}, " to match the timestep of the simulation."], "extent": [1800, 2106]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Confinement Strength"], "extent": [2106, 2128], "body": [{"type": "para", "indent": 8, "text": ["When the container has ", {"type": "code", "text": ["vorticles"]}, " data attached, this is an overall scale adjustment for the vorticle forces.  Vorticle forces are small pin-wheel like forces that add turbulence to fluids."], "extent": [2128, 2329]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Speed Limit"], "extent": [2329, 2342], "body": [{"type": "para", "indent": 8, "text": ["If set, each axis of the velocity field will be clamped to\n        this maximum speed.  This is done after the force\n        computation and before the divergence or advection, so it\n        is possible for the speed to end up slightly larger than\n        this value.  "], "extent": [2342, 2621]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [2621, 2635], "body": [{"type": "para", "indent": 16, "text": ["As the clamping is done per-axis, the velocity along the diagonal can be up to ", {"type": "code", "text": ["sqrt(3)"]}, " higher."], "extent": [2635, 2749]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Viscosity"], "extent": [2749, 2760], "body": [{"type": "para", "indent": 8, "text": ["Low values give more ", {"type": "q", "text": ["watery"]}, ", ", {"type": "q", "text": ["thin"]}, ", flowing fluid, while higher values give more ", {"type": "q", "text": ["thick"]}, ", resistant fluid."], "extent": [2760, 2887]}, {"type": "para", "indent": 8, "text": ["Internally, viscosity is a force that tries to give neighboring voxels the same velocity."], "extent": [2887, 2986]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Friction and Bounce"], "extent": [2986, 3011], "body": [{"type": "para", "indent": 8, "text": ["Use the fluid\u2019s physical parameters for friction and bounce at collisions. Turn this off for a fluid with zero friction and zero bounce."], "extent": [3011, 3157]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Relationships"], "extent": [3157, 3177], "body": [{"type": "para", "indent": 0, "text": ["Prior to Houdini 12, the Pyro solver used DOP relationships to associate sources, pumps, sinks, and collision geometry with a fluid container, using the ", {"scheme": "Node", "value": "/nodes/dop/merge", "type": "link", "text": ["Merge DOP"], "fullpath": "/nodes/dop/merge"}, " and/or ", {"scheme": "Node", "value": "/nodes/dop/applyrel", "type": "link", "text": ["Apply relationship DOP"], "fullpath": "/nodes/dop/applyrel"}, " to create the relationship. The preferred method in Houdini 12 and later is to ", {"scheme": null, "value": "/dyno/fluid_sourcing", "type": "link", "text": ["use SOP networks to create sources, pumps, sinks, and collision geometry"], "fullpath": "/dyno/fluid_sourcing"}, " and import them using the ", {"scheme": "Node", "value": "/nodes/dop/sourcevolume", "type": "link", "text": ["Source volume DOP"], "fullpath": "/nodes/dop/sourcevolume"}, "."], "extent": [16, 491]}, {"type": "para", "indent": 0, "text": ["If you want to use the old relationship method to set up sources, sinks, etc., you can enable relationships using the parameters on this tab. By default, relationships are turned off, and the solver ignores relationship data."], "extent": [491, 718]}, {"type": "para", "indent": 0, "text": ["You can use both methods (import SOP geometry and attach it to the solver\u2019s ", {"type": "q", "text": ["sourcing"]}, " input, as well as set up DOP object relationships). When relationships are enabled, the solver will combine the sources, sinks, etc. from both methods."], "extent": [718, 958]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Relationships"], "extent": [958, 980], "body": [{"type": "para", "indent": 4, "text": ["Use object relationship data to add sources, pumps, sinks, and collision geometry to the simulation (in addition to imported data connected to the sourcing input, if any)."], "extent": [980, 1156]}], "container": true, "role": "item"}], "container": true}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Sources"], "extent": [3207, 3223], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Source Relationship"], "extent": [3223, 3252], "body": [{"type": "para", "indent": 8, "text": ["Use DOP objects with a ", {"type": "q", "text": ["source"]}, " relationship to the solver."], "extent": [3252, 3321]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Velocity Merge"], "extent": [3321, 3337], "body": [{"type": "para", "indent": 8, "text": ["How the source object\u2019s velocity will affect the container\u2019s velocity field. Scale controls the amount to add."], "extent": [3337, 3461]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [3461, 3471], "body": [{"type": "para", "indent": 12, "text": ["The source\u2019s velocity will be ignored."], "extent": [3471, 3527]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Net New Source"], "extent": [3527, 3547], "body": [{"type": "para", "indent": 12, "text": ["Velocity will be set in those areas where fluid will be added this frame from the source."], "extent": [3547, 3658]}], "container": true}, {"type": "dt", "indent": 4, "text": ["New Source"], "extent": [3658, 3674], "body": [{"type": "para", "indent": 16, "text": ["Velocity will be set in those areas where the source is present."], "extent": [3674, 3756]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Velocity Type"], "extent": [3756, 3771], "body": [{"type": "para", "indent": 4, "text": ["How to measure velocity on the source object. If the source geometry does not deform (change shape) over time, use ", {"type": "ui", "text": ["Rigid Velocity"]}, ". If the source deforms but does not change topology over time, use ", {"type": "ui", "text": ["Point Velocity"]}, "."], "extent": [3793, 4023]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Rigid Velocity"], "extent": [4023, 4043], "body": [{"type": "para", "indent": 8, "text": ["Treat the source object as non-deforming."], "extent": [4043, 4098]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Point Velocity"], "extent": [4098, 4118], "body": [{"type": "para", "indent": 8, "text": ["Use point history to allow deforming geometry. This only\n        works if the topology of the source geometry doesn\u2019t change."], "extent": [4118, 4257]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Volume Velocity"], "extent": [4257, 4278], "body": [{"type": "para", "indent": 16, "text": ["Uses the SDF representation of the object to detect\n                deformation.  Does not require a fixed topology over\n                time, but cannot detect tangential velocities."], "extent": [4278, 4479]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "veltype"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Pumps"], "extent": [4479, 4493], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Pump Relationship"], "extent": [4493, 4520], "body": [{"type": "para", "indent": 8, "text": ["Use DOP objects with a ", {"type": "q", "text": ["pump"]}, " relationship to the solver."], "extent": [4520, 4587]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Velocity Merge"], "extent": [4587, 4603], "body": [{"type": "para", "indent": 4, "text": ["How the source object\u2019s velocity will affect the\n    container\u2019s velocity field. Scale controls the amount of velocity to add."], "extent": [4603, 4735]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Velocity Type"], "extent": [4735, 4750], "body": [{"type": "para", "indent": 8, "text": ["Controls how the pump object\u2019s per point velocity is\n        computed."], "extent": [4750, 4834]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Rigid Velocity"], "extent": [4834, 4858], "body": [{"type": "para", "indent": 16, "text": ["The velocity of the object treating it as a rigid\n                body.  Only the angular velocity and linear velocity\n                will be used, no local deformation will be taken into\n                account."], "extent": [4858, 5097]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Point Velocity"], "extent": [5097, 5121], "body": [{"type": "para", "indent": 16, "text": ["The velocity of the object attempting to take into\n                account deformation by using point history.  This only\n                works if the topology doesn\u2019t change."], "extent": [5121, 5322]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Volume Velocity"], "extent": [5322, 5347], "body": [{"type": "para", "indent": 16, "text": ["Uses the SDF representation of the object to detect\n                deformation.  Does not require a fixed topology over\n                time, but cannot detect tangential velocities."], "extent": [5347, 5548]}], "container": true}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Collisions"], "extent": [5548, 5567], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Collide Relationship"], "extent": [5567, 5597], "body": [{"type": "para", "indent": 8, "text": ["Use DOP objects with a ", {"type": "q", "text": ["collision"]}, " relationship to the solver."], "extent": [5597, 5669]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Restrict Mask to Bandwidth"], "extent": [5669, 5697], "body": [{"type": "para", "indent": 4, "text": ["Normally the collision mask SDF is only calculated up to a certain distance from the original collision geometry. Turn this off to compute the full range of the mask if you need it for some special effect, such as having things react before they reach the object."], "extent": [5697, 5966]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sticky Fluid"], "extent": [5966, 5980], "body": [{"type": "para", "indent": 8, "text": ["Determine if collision objects should prevent fluid from leaving their surface instead of just preventing the fluid from entering their surface.  This should be left on."], "extent": [5980, 6159]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Collide with Non-SDF"], "extent": [6159, 6181], "body": [{"type": "para", "indent": 4, "text": ["Allows the fluid to collide with objects that don\u2019t have Geometry/SDF, such as other fluids."], "extent": [6181, 6279]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Velocity Type"], "extent": [6279, 6294], "body": [{"type": "para", "indent": 8, "text": ["Controls how the collision object\u2019s per point velocity is\n        computed."], "extent": [6294, 6379]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Rigid Velocity"], "extent": [6379, 6403], "body": [{"type": "para", "indent": 16, "text": ["The collision velocity of the object is calculated by\n                treating it as a rigid body.  Only the angular\n                velocity and linear velocity will be used, no local\n                deformation will be taken into account."], "extent": [6403, 6669]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Point Velocity"], "extent": [6669, 6693], "body": [{"type": "para", "indent": 16, "text": ["The collision velocity of the object tries to take into\n                account deformation by using point history.  This only\n                works if the topology doesn\u2019t change."], "extent": [6693, 6899]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Volume Velocity"], "extent": [6899, 6924], "body": [{"type": "para", "indent": 16, "text": ["Uses the SDF representation of the object to detect\n                deformation.  Does not require a fixed topology over\n                time, but cannot detect tangential velocities."], "extent": [6924, 7125]}], "container": true}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Sink"], "extent": [7125, 7138], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Sink Relationship"], "extent": [7138, 7165], "body": [{"type": "para", "indent": 4, "text": ["Use DOP objects with a ", {"type": "q", "text": ["sink"]}, " relationship to the solver."], "extent": [7165, 7228]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Advanced"], "extent": [7228, 7243], "body": [{"type": "para", "indent": 0, "text": ["You should generally not need to change these parameters."], "extent": [7243, 7303]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Min Substeps"], "extent": [14955, 14969], "body": [{"type": "para", "indent": 4, "text": ["Forces the solver to run a minimum number of substeps. Normally the pyro solver works best with no substeps. If you have smoke and unusual forces you may want to increase this parameter for better stability. Increasing this will usually make the simulation much slower."], "extent": [14999, 15274]}], "container": true, "attrs": {"id": "minimumsubsteps"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Substeps"], "extent": [15274, 15288], "body": [{"type": "para", "indent": 4, "text": ["Forces the solver to not run more substeps than this maximum. Normally the pyro solver works best with no substeps. If you have smoke and unusual forces you may want to increase this parameter for better stability. Increasing this will usually make the simulation much slower."], "extent": [15311, 15593]}], "container": true, "attrs": {"id": "substeps"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["CFL Condition"], "extent": [15593, 15608], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Max Substeps"]}, " is greater than ", {"type": "code", "text": ["1"]}, ", the solver uses this parameter to decide the number of substeps. The ", {"type": "q", "text": ["condition"]}, " is that no substep can allow objects to interpenetrate by more than this many voxels. Higher values allow a substep to move smoke by more voxels, possibly letting it pass through collision objects."], "extent": [15630, 15957]}], "container": true, "attrs": {"id": "cflcond"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Quantize to Max Substeps"], "extent": [15957, 15983], "body": [{"type": "para", "indent": 4, "text": ["Always use substeps that divide up the frame by ", {"type": "ui", "text": ["Max Substeps"]}, ".  For example,\n    if ", {"type": "ui", "text": ["Max Substeps"]}, " is set to 4, but the ", {"type": "ui", "text": ["CFL Condition"]}, " only requires 3 substeps,\n    the solver will take frame steps of 0.25, 0.5, and 0.25.  This option can be useful for\n    re-using input geometry that has been cached to file at increments of 1/", {"type": "ui", "text": ["Max Substeps"]}, "."], "extent": [16006, 16366]}], "container": true, "attrs": {"id": "quantize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frames Before Solve"], "extent": [7437, 7458], "body": [{"type": "para", "indent": 8, "text": ["Specifies the number of frames to wait before a full solve cycle is computed. \n        On those frames only operations applied to the last solver input (sources) are computed.\n        This enables the sourcing and resizing of data without actually computing a full solve on the maximum grid."], "extent": [7458, 7759]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Surface"], "extent": [7759, 7775], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Correct Surface"], "extent": [7775, 7793], "body": [{"type": "para", "indent": 8, "text": ["The motion of the collision objects may cause the fluid to interpenetrate the fluid objects. The Correct Surface step will remove any fluid that is penetrating a collision object."], "extent": [7793, 7982]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rebuild SDF"], "extent": [7982, 7995], "body": [{"type": "para", "indent": 8, "text": ["The voxels that border the zero isocontour are used to determine the initial zero isocontour. The rest of the field is then rebuilt from these values directly."], "extent": [7995, 8164]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reinitialize SDF"], "extent": [8164, 8182], "body": [{"type": "para", "indent": 8, "text": ["If the field is already almost a signed distance field, a less drastic error correction can be performed. The reinitialization equation is applied which will converge on a signed distance field without affecting the boundary."], "extent": [8182, 8425]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reinitialize Rate"], "extent": [8425, 8444], "body": [{"type": "para", "indent": 8, "text": ["The rebuilding and reinitialization of the SDF will only be performed every every N frames where N is the reinitialization rate.  "], "extent": [8444, 8584]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reinitialize Iterations"], "extent": [8584, 8609], "body": [{"type": "para", "indent": 8, "text": ["The number of times to apply the reinitialization equation."], "extent": [8609, 8678]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Marker Escape Threshold"], "extent": [8678, 8703], "body": [{"type": "para", "indent": 8, "text": ["The distance the marker must be on the wrong side of the surface, as measured in terms of the marker\u2019s radius, to qualify as escaped.  Only escaped markers will update the surface value."], "extent": [8703, 8899]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Markers"], "extent": [8899, 8915], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Build Inside Markers"], "extent": [8915, 8938], "body": [{"type": "para", "indent": 8, "text": ["Construct marker surfels on the inside of the surface. Inside surfels increase volume as they correct the surface by pushing out the boundary."], "extent": [8938, 9090]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Build Outside Markers"], "extent": [9090, 9113], "body": [{"type": "para", "indent": 8, "text": ["Construct marker surfels on the outside of the surface. Outside surfels decrease volume as they correct the surface by pushing in the boundary."], "extent": [9113, 9266]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Markers Per Voxel"], "extent": [9266, 9285], "body": [{"type": "para", "indent": 8, "text": ["The desired number of markers to maintain inside each voxel.  More\n        markers allows for a better capturing of the surface behaviour, but\n        can require a lot of memory and processing time for large\n        complicated sims."], "extent": [9285, 9529]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Minimum Marker Radius"], "extent": [9529, 9552], "body": [{"type": "para", "indent": 8, "text": ["The minimum radius of marker surfels, measured in terms of voxel size."], "extent": [9552, 9632]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Maximum Marker Radius"], "extent": [9632, 9655], "body": [{"type": "para", "indent": 8, "text": ["The maximum radius of marker surfels, measured in terms of voxel size."], "extent": [9655, 9735]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Projection"], "extent": [9735, 9754], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Variational"], "extent": [9754, 9768], "body": [{"type": "para", "indent": 8, "text": ["Contribution to the pressure equation is proportional to the amount of the cell in the liquid.  This attempts to avoid stairstep boundaries on solid boundaries.  "], "extent": [9768, 9940]}, {"type": "para", "indent": 8, "text": ["Note: Uses the Gas Project Non Divergent Variational when this is set, so the ghost fluid and preserve bubble options are no longer available."], "extent": [9940, 10092]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale by Surface"], "extent": [10092, 10110], "body": [{"type": "para", "indent": 4, "text": ["Scales external forces by an estimate of how much fluid is in each voxel. This allows sub-voxel waves to be evened out under gravity."], "extent": [10110, 10249]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Preserve Bubbles"], "extent": [10249, 10267], "body": [{"type": "para", "indent": 8, "text": ["Trapped air will be given a pressure value independent of the boundary pressure conditions. This prevents the bubbles from collapsing in on themselves. If not set, fluid will be free to flow into bubbles from all sides ensuring their\n        swift dissipation."], "extent": [10267, 10537]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ghost Fluid"], "extent": [10537, 10550], "body": [{"type": "para", "indent": 8, "text": ["Pressures are extrapolated into air cells rather than just set\n        to zero.  This causes sub-voxel ripples in the air side to be\n        suppressed."], "extent": [10550, 10712]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Limit Velocity Extrapolation"], "extent": [10712, 10742], "body": [{"type": "para", "indent": 8, "text": ["When extrapolating the velocity field into non-fluid\n        cells, the extrapolation is stopped when a certain number\n        of cells has been filled along the border."], "extent": [10742, 10921]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Cells to Extrapolate"], "extent": [10921, 10947], "body": [{"type": "para", "indent": 8, "text": ["The number of non-fluid cells that should be filled with\n        velocity values on the non-fluid side of the velocity field."], "extent": [10947, 11082]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Strain"], "extent": [11082, 11097], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Use Strain"], "extent": [11097, 11110], "body": [{"type": "para", "indent": 4, "text": ["Adds a ", {"type": "q", "text": ["strain"]}, " field to the object to track the amount of deformation the fluid has undergone at each voxel."], "extent": [11110, 11225]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Plastic Flow Rate"], "extent": [11225, 11244], "body": [{"type": "para", "indent": 8, "text": ["This is the rate of plastic flow. The current strain is\n        dissipated at this rate per second. A value greater than the\n        timestep per second can lead to overshoot."], "extent": [11244, 11437]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Plastic Flow Threshold"], "extent": [11437, 11461], "body": [{"type": "para", "indent": 8, "text": ["This is the threshold for plastic flow. When the norm of\n        the strain exceeds this threshold, the strain is dissipated\n        according to the plastic flow term. "], "extent": [11461, 11640]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Strain Elastic Modulus"], "extent": [11640, 11664], "body": [{"type": "para", "indent": 8, "text": ["Similar to a drag coefficient, the elastic modulus provides the scale factor for how to translate a certain amount of distortion into a restorative force."], "extent": [11664, 11828]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Advection"], "extent": [11828, 11846], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Advection Type"], "extent": [11846, 11863], "body": [{"type": "para", "indent": 4, "text": ["The algorithm to use for advecting the fields."], "extent": [11863, 11919]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Single stage"], "extent": [11919, 11937], "body": [{"type": "para", "indent": 8, "text": ["Equivalent to the ", {"scheme": "Node", "value": "/nodes/dop/gasadvect", "type": "link", "text": ["Gas Advect DOP"], "fullpath": "/nodes/dop/gasadvect"}, ", where each point is back traced through the velocity field once to find the new voxel value."], "extent": [11937, 12094]}], "container": true}, {"type": "dt", "indent": 4, "text": ["BFECC and Modified MacCormack"], "extent": [12094, 12129], "body": [{"type": "para", "indent": 8, "text": ["Run a second basic advection stage, resulting in a sharper fluid that doesn\u2019t disperse as much."], "extent": [12129, 12234]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clamp Values"], "extent": [12234, 12248], "body": [{"type": "para", "indent": 4, "text": ["The error correction of the BFECC and Modified MacCormack advection types can move voxel values outside the container, leading to strange effects such as negative density values. This parameter lets you choose a method to avoid this problem. The default is ", {"type": "q", "text": ["Revert"]}, "."], "extent": [12248, 12524]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [12524, 12534], "body": [{"type": "para", "indent": 8, "text": ["Do not attempt to prevent error correction from moving values outside the container."], "extent": [12534, 12636]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Clamp"], "extent": [12636, 12647], "body": [{"type": "para", "indent": 8, "text": ["Restrict each voxel to the range of values possible given its eight original values."], "extent": [12647, 12741]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Revert"], "extent": [12741, 12753], "body": [{"type": "para", "indent": 8, "text": ["If the error-corrected voxel is out of range, return it to the single-stage value."], "extent": [12753, 12853]}], "container": true}], "container": true}, {"type": "para", "indent": 4, "text": ["Reverting can avoid checker artifacts where the error correction breaks down."], "extent": [12853, 12936]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Vel Advection Type"], "extent": [12936, 12956], "body": [{"type": "para", "indent": 4, "text": ["The algorithm to use for advecting the velocity field. Higher types in the list will reduce the apparent viscosity of the field, but may add energy or cause chatter."], "extent": [12956, 13127]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Advection CFL"], "extent": [13127, 13142], "body": [{"type": "para", "indent": 4, "text": ["When tracing the particles, this controls how many voxels the particles can move in a single iterations. Higher values give faster tracing and faster advection, but more errors."], "extent": [13142, 13325]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Collisions"], "extent": [13325, 13344], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Feedback Scale"], "extent": [13344, 13361], "body": [{"type": "para", "indent": 4, "text": ["A scale factor for applying feedback forces to other objects. Setting this to ", {"type": "code", "text": ["0"]}, " will prevent any feedback."], "extent": [13361, 13475]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Clear Fields"], "extent": [13475, 13496], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fields to Clear"], "extent": [13496, 13514], "body": [{"type": "para", "indent": 8, "text": ["Zeros out the specified types of fields after the solve"], "extent": [13514, 13578]}, {"type": "para", "indent": 4, "text": ["step.  This ensures the .sim files, which store the\n    complete state of the simulation, do not have any\n    information not needed, reducing their size and save time."], "extent": [13578, 13756]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [13756, 13766], "body": [{"type": "para", "indent": 16, "text": ["No special clearing of fields is done."], "extent": [13766, 13830]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Hidden"], "extent": [13830, 13846], "body": [{"type": "para", "indent": 16, "text": ["Fields not needed for the next time step that do \n                not have guide parameters are cleared."], "extent": [13846, 13976]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Static"], "extent": [13976, 13992], "body": [{"type": "para", "indent": 16, "text": ["Fields not needed for next time step are cleared.\n                Note that some guides will thus start showing up\n                as zero as the underlying field got cleared."], "extent": [13992, 14185]}], "container": true}], "container": true}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Additional"], "extent": [14185, 14197], "body": [{"type": "para", "indent": 4, "text": ["A space separated list of extra fields that should be\n    cleared post-solve."], "extent": [14197, 14280]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Distribution"], "extent": [14280, 14301], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Tracker Address"], "extent": [16, 33], "body": [{"type": "para", "indent": 4, "text": ["What machine will run the simtracker.py process for synchronization.\n    If this is blank, there will be no attempt at synchronization or data transfer."], "extent": [33, 190]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tracker Port"], "extent": [190, 204], "body": [{"type": "para", "indent": 4, "text": ["The port specified when starting the simtracker.py process for\n    communication."], "extent": [204, 290]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Job Name"], "extent": [290, 300], "body": [{"type": "para", "indent": 4, "text": ["The job name to describe this synchronization or data exchange\n    event.  By using different job names one can have machines part of\n    separate data-exchange and synchronization events."], "extent": [300, 493]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Slice/Peer"], "extent": [493, 505], "body": [{"type": "para", "indent": 4, "text": ["The slice number that this machine should report itself as.  Each\n    machine connecting under the job name should have its own unique\n    slice number.  Sometimes this can be inferred from the operation\n    so this parameter will be absent."], "extent": [505, 751]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number of Slice/Number of Peers"], "extent": [751, 784], "body": [{"type": "para", "indent": 4, "text": ["Total number of machines that have to synchronize.  Sometimes this\n    can be determined from the operation, so this parameter will be\n    absent."], "extent": [784, 935]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Distributed Pressure Solve"], "extent": [14339, 14371], "body": [{"type": "para", "indent": 8, "text": ["The pressure projection may be distributed across machines.  This\n        avoids any loss of fluid and is required for tank-style simulations,\n        but not needed for flowing rivers.  It requires considerably more\n        network bandwidth, so becomes advantageous only with very large simulations."], "extent": [14371, 14682]}], "container": true, "role": "item"}], "container": true}]}]}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [14682, 14690], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Input"], "extent": [15, 28], "body": [{"type": "para", "indent": 4, "text": ["This optional input can be used to control which simulation objects\n    are modified by this node. Any objects connected through this input\n    and which match the ", {"type": "ui", "text": ["Group"]}, " parameter field will be modified. "], "extent": [28, 246]}, {"type": "para", "indent": 4, "text": ["If this input is not connected, this node can be used in conjunction with an\n    Apply Data node, or can be used as an input to another data node."], "extent": [246, 397]}], "container": true}, {"type": "dt", "indent": 0, "text": ["All Other Inputs"], "extent": [397, 415], "body": [{"type": "para", "indent": 4, "text": ["If this node has more input connectors, other data nodes can be\n    attached to act as modifiers for the data created by this node. "], "extent": [415, 557]}, {"type": "para", "indent": 4, "text": ["The specific types of subdata that are meaningful vary from node to\n    node. Click ", {"keys": ["MMB"], "type": "keys", "text": null}, " an input connector to see a list of available\n    data nodes that can be meaningfully attached."], "extent": [557, 749]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [14723, 14732], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Output"], "extent": [15, 29], "body": [{"type": "para", "indent": 4, "text": ["The operation of this output depends on what inputs are connected\n    to this node. If an object stream is input to this node, the output\n    is also an object stream containing the same objects as the input\n    (but with the data from this node attached). "], "extent": [29, 296]}, {"type": "para", "indent": 4, "text": ["If no object stream is\n    connected to this node, the output is a data output. This data\n    output can be connected to an ", {"scheme": "Node", "value": "/nodes/dop/applydata", "type": "link", "text": ["Apply Data DOP"], "fullpath": "/nodes/dop/applydata"}, ",\n    or connected directly to a data input of another data node, to\n    attach the data from this node to an object or another piece of\n    data."], "extent": [296, 606]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [14766, 14774], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["channelname"], "extent": [16, 29], "body": [{"type": "para", "indent": 4, "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "], "extent": [29, 325]}, {"type": "para", "indent": 4, "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "], "extent": [325, 519]}, {"type": "para", "indent": 4, "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"], "extent": [519, 692]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "], "extent": [692, 775]}, {"type": "para", "indent": 4, "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."], "extent": [775, 883]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACT"], "extent": [883, 891], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."], "extent": [891, 1132]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACF"], "extent": [1132, 1140], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."], "extent": [1140, 1383]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELNAME"], "extent": [1383, 1392], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1392, 1594]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to the\n    name of the relationship to which the data is being attached."], "extent": [1594, 1703]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJIDS"], "extent": [1703, 1714], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1714, 1916]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."], "extent": [1916, 2119]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJNAMES"], "extent": [2119, 2132], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2132, 2334]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."], "extent": [2334, 2519]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJIDS"], "extent": [2519, 2533], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2533, 2735]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."], "extent": [2735, 2938]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJNAMES"], "extent": [2938, 2954], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2954, 3156]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."], "extent": [3156, 3341]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ST"], "extent": [16, 20], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time for which the node is being\n    evaluated. "], "extent": [20, 107]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " ", {"type": "ui", "text": ["Offset Time"]}, " and ", {"type": "ui", "text": ["Time Scale"]}, "\n    parameters. "], "extent": [107, 326]}, {"type": "para", "indent": 4, "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"type": "code", "text": ["$ST == 0"]}, " rather than\n    ", {"type": "code", "text": ["$T == 0"]}, " or ", {"type": "code", "text": ["$FF == 1"]}, "."], "extent": [326, 555]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SF"], "extent": [555, 559], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."], "extent": [559, 700]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."], "extent": [700, 999]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TIMESTEP"], "extent": [999, 1009], "body": [{"type": "para", "indent": 4, "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."], "extent": [1009, 1181]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SFPS"], "extent": [1181, 1187], "body": [{"type": "para", "indent": 4, "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."], "extent": [1187, 1305]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SNOBJ"], "extent": [1305, 1312], "body": [{"type": "para", "indent": 4, "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "], "extent": [1312, 1523]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"type": "code", "text": ["object_$SNOBJ"]}, "."], "extent": [1523, 1621]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NOBJ"], "extent": [1621, 1627], "body": [{"type": "para", "indent": 4, "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "], "extent": [1627, 1859]}, {"type": "para", "indent": 4, "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [1859, 1991]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJ"], "extent": [1991, 1996], "body": [{"type": "para", "indent": 4, "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "], "extent": [1996, 2322]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [2322, 2616]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJID"], "extent": [2616, 2623], "body": [{"type": "para", "indent": 4, "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "], "extent": [2623, 2883]}, {"type": "para", "indent": 4, "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "], "extent": [2883, 3168]}, {"type": "para", "indent": 4, "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3168, 3406]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJIDS"], "extent": [3406, 3417], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."], "extent": [3417, 3556]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3556, 3569], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."], "extent": [3569, 3687]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCT"], "extent": [3687, 3694], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "], "extent": [3694, 3801]}, {"type": "para", "indent": 4, "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"type": "code", "text": ["$ST == $OBJCT"]}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3801, 4057]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCF"], "extent": [4057, 4064], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "], "extent": [4064, 4172]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4172, 4389]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJNAME"], "extent": [4389, 4398], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the name of the object being\n    processed. "], "extent": [4398, 4486]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "], "extent": [4486, 4748]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named ", {"type": "q", "text": ["myobject"]}, ",\n    specifying ", {"type": "code", "text": ["strcmp($OBJNAME, \"myobject\") == 0"]}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4748, 5194]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DOPNET"], "extent": [5194, 5202], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."], "extent": [5202, 5425]}], "container": true}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [5425, 5431], "body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position node"], "fullpath": "/nodes/dop/position"}, ",\n    you could write the expression:"], "extent": [5431, 5620]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "], "extent": [5620, 5650]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."], "extent": [5650, 5730]}], "container": true}], "container": true, "role": "item_group"}], "text": "Locals"}], "title": ["Fluid Solver"], "summary": ["A solver for Sign Distance Field (SDF) liquid simulations."], "included": ["/nodes/dop/old_relationships", "/nodes/dop/smokesolver", "/nodes/dop/standard_data_inputs", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_distribution", "/nodes/dop/standard_locals"]}