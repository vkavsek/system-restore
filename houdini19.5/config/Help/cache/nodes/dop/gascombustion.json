{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "gascombustion", "icon": "DOP/gas", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Gas Combustion"], "extent": [67, 86]}, {"type": "summary", "indent": 0, "text": ["A microsolver that applies a combustion model to the simulation."], "extent": [86, 159]}, {"type": "para", "indent": 0, "text": ["The Gas Combustion DOP is a microsolver used in building larger fluid\nsimulations. The ", {"scheme": "Node", "value": "/nodes/dop/fluidsolver", "type": "link", "text": ["Fluid Solver"], "fullpath": "/nodes/dop/fluidsolver"}, " and ", {"scheme": "Node", "value": "/nodes/dop/smokesolver", "type": "link", "text": ["Smoke Solver"], "fullpath": "/nodes/dop/smokesolver"}, " DOPs that allow\nmicrosolvers to be added before or after the main solver step to extend\nor tweak the simulation. Alternatively, enterprising people may attempt\nto build an entire new solver out of microsolvers."], "extent": [159, 534]}, {"type": "para", "indent": 0, "text": ["The Gas Combustion DOP applies a combustion model to a set of fields.\nThis is designed to simulate the burning of fuel with the\ncorresponding release of heat, gas, and soot."], "extent": [534, 709]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [709, 721], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Soot"], "extent": [721, 735], "body": [{"type": "para", "indent": 4, "text": ["Whether to add burnt fuel to the specified soot field.  If set, the ", {"type": "ui", "text": ["Soot\n    Rate"]}, " is used to scale how much soot is output from each unit of burnt fuel."], "extent": [735, 897]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Normalize Burn Field"], "extent": [897, 919], "body": [{"type": "para", "indent": 4, "text": ["The burn field stores the amount of fuel burned in the last\n    timestep.  This will vary with the size of the timestep.\n    Normalizing the burn field will divide by the timestep,\n    storing the amount of fuel burned per second rather than\n    instantly."], "extent": [919, 1181]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time Scale"], "extent": [1181, 1193], "body": [{"type": "para", "indent": 4, "text": ["While all the combustion effects are scaled by the timestep, you can\n    further scale them by this time scale to allow for slow motion behaviors."], "extent": [1193, 1345]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Settings"], "extent": [1345, 1360], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Ignition Temperature"], "extent": [1360, 1383], "body": [{"type": "para", "indent": 4, "text": ["The combustion model will only occur if the temperature\n    field is above this value.  If you want all fuel to\n    instantly ignite, use a negative value."], "extent": [1410, 1571]}], "container": true, "attrs": {"id": "ignitiontemp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Burn Rate"], "extent": [1571, 1582], "body": [{"type": "para", "indent": 4, "text": ["The amount of fuel to burn per second.  This is a\n    ratio: 0.9 means after one second 90% will be burned."], "extent": [1605, 1718]}], "container": true, "attrs": {"id": "burnrate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fuel Inefficiency"], "extent": [1718, 1737], "body": [{"type": "para", "indent": 4, "text": ["Controls how much of the burned fuel is actually not burned,\n    but kept.  0 means all burned fuel is removed from the fuel\n    field.  1 means that no fuel is removed from the fuel field\n    when it is burnt."], "extent": [1763, 1979]}], "container": true, "attrs": {"id": "fuelinefficiency"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temperature Output"], "extent": [1979, 1999], "body": [{"type": "para", "indent": 4, "text": ["The amount to increase the temperature field by for every\n    unit of fuel consumed."], "extent": [2024, 2114]}, {"type": "para", "indent": 4, "text": ["This is affected by both the heat and burn fields, as per the influence\n    parameters."], "extent": [2114, 2207]}], "container": true, "attrs": {"id": "heatoutput"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gas Released"], "extent": [2207, 2221], "body": [{"type": "para", "indent": 4, "text": ["A scale factor controlling how much gas is injected into\n    locations where fuel is burnt.  This causes burning areas\n    to blow outwards."], "extent": [2246, 2392]}, {"type": "para", "indent": 4, "text": ["The gas release is scaled by both the heat and burn fields\n    according to the influence parameters."], "extent": [2392, 2499]}], "container": true, "attrs": {"id": "gasrelease"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gas Heat Influence"], "extent": [2499, 2519], "body": [{"type": "para", "indent": 4, "text": ["The degree to which the gas release is controlled by the heat field."], "extent": [2519, 2593]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gas Burn Influence"], "extent": [2593, 2613], "body": [{"type": "para", "indent": 4, "text": ["The degree to which the gas release is controlled by the burn field."], "extent": [2613, 2687]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temp Heat Influence"], "extent": [2687, 2708], "body": [{"type": "para", "indent": 4, "text": ["The degree to which the temperature output is controlled by the heat field."], "extent": [2708, 2789]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temp Burn Influence"], "extent": [2789, 2810], "body": [{"type": "para", "indent": 4, "text": ["The degree to which the temperature output is controlled by the burn field."], "extent": [2810, 2891]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soot Rate"], "extent": [2891, 2902], "body": [{"type": "para", "indent": 4, "text": ["The amount of soot that will be created for every unit of\n    fuel burnt.  This is added to the density field that is\n    usually rendered as smoke."], "extent": [2902, 3056]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Mappings"], "extent": [3056, 3071], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Temperature Field"], "extent": [3071, 3091], "body": [{"type": "para", "indent": 4, "text": ["The scalar field to use for temperature calculations.  This is\n    used to trigger combustion by comparing to the ignition\n    temperature.  It is also updated from the ", {"type": "ui", "text": ["Temperature Output"]}, "."], "extent": [3091, 3293]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fuel Field"], "extent": [3293, 3305], "body": [{"type": "para", "indent": 4, "text": ["The scalar field representing the fuel in the gas.  This is\n    transformed into heat, soot, and gas release."], "extent": [3305, 3424]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soot Field"], "extent": [3424, 3436], "body": [{"type": "para", "indent": 4, "text": ["The scalar field tracking the amount of soot that has been\n    generated."], "extent": [3436, 3519]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Divergence Field"], "extent": [3519, 3537], "body": [{"type": "para", "indent": 4, "text": ["A scalar field representing how much gas is released in each\n    voxel by the reaction.  This is the burn field multiplied by\n    the gas released value."], "extent": [3537, 3700]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Burn Field"], "extent": [3700, 3712], "body": [{"type": "para", "indent": 4, "text": ["A scalar field representing how much fuel was burned in this\n    timestep in each voxel.  It could be used to track things such\n    as light output, etc."], "extent": [3712, 3871]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Heat Field"], "extent": [3871, 3883], "body": [{"type": "para", "indent": 4, "text": ["A scalar field of the heat of the simulation.  This is set to\n    the heat influence whereever the fuel is burning.  It is maximized against\n    the previous heat field, and can be used to track the cooling of the air\n    over time without affecting the simulation behaviour."], "extent": [3883, 4164]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stencil Field"], "extent": [15, 30], "body": [{"type": "para", "indent": 4, "text": ["A scalar field to use as a stencil for where to perform this node\u2019s\n    computations. Voxels whose stencil value strictly exceeds 0.5 will have the\n    operation applied, while the rest will be left unchanged."], "extent": [30, 245]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [245, 255], "body": [{"type": "para", "indent": 8, "text": ["If a stencil field isn\u2019t provided or does not exist, the operation will\n        be performed everywhere."], "extent": [255, 368]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Advanced"], "extent": [4196, 4211], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Use OpenCL"], "extent": [12926, 12938], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Caching is enabled by default in DOPs."], "extent": [14731, 14781]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Resizing is enabled by default. Resizing has to go through the CPU to manage the field changes. It can also fragment the GPU memory resulting in out-of-memory errors."], "extent": [14781, 14955]}], "container": true}], "container": true, "attrs": {"id": "opencl"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [4246, 4255], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Output"], "extent": [15, 29], "body": [{"type": "para", "indent": 4, "text": ["The operation of this output depends on what inputs are connected\n    to this node. If an object stream is input to this node, the output\n    is also an object stream containing the same objects as the input\n    (but with the data from this node attached). "], "extent": [29, 296]}, {"type": "para", "indent": 4, "text": ["If no object stream is\n    connected to this node, the output is a data output. This data\n    output can be connected to an ", {"scheme": "Node", "value": "/nodes/dop/applydata", "type": "link", "text": ["Apply Data DOP"], "fullpath": "/nodes/dop/applydata"}, ",\n    or connected directly to a data input of another data node, to\n    attach the data from this node to an object or another piece of\n    data."], "extent": [296, 606]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [4292, 4300], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["channelname"], "extent": [16, 29], "body": [{"type": "para", "indent": 4, "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "], "extent": [29, 325]}, {"type": "para", "indent": 4, "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "], "extent": [325, 519]}, {"type": "para", "indent": 4, "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"], "extent": [519, 692]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "], "extent": [692, 775]}, {"type": "para", "indent": 4, "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."], "extent": [775, 883]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACT"], "extent": [883, 891], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."], "extent": [891, 1132]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACF"], "extent": [1132, 1140], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."], "extent": [1140, 1383]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELNAME"], "extent": [1383, 1392], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1392, 1594]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to the\n    name of the relationship the data to which the data is being attached."], "extent": [1594, 1712]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJIDS"], "extent": [1712, 1723], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1723, 1925]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."], "extent": [1925, 2128]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJNAMES"], "extent": [2128, 2141], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2141, 2343]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."], "extent": [2343, 2528]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJIDS"], "extent": [2528, 2542], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2542, 2744]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."], "extent": [2744, 2947]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJNAMES"], "extent": [2947, 2963], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2963, 3165]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."], "extent": [3165, 3350]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ST"], "extent": [16, 20], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time for which the node is being\n    evaluated. "], "extent": [20, 107]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " ", {"type": "ui", "text": ["Offset Time"]}, " and ", {"type": "ui", "text": ["Time Scale"]}, "\n    parameters. "], "extent": [107, 326]}, {"type": "para", "indent": 4, "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"type": "code", "text": ["$ST == 0"]}, " rather than\n    ", {"type": "code", "text": ["$T == 0"]}, " or ", {"type": "code", "text": ["$FF == 1"]}, "."], "extent": [326, 555]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SF"], "extent": [555, 559], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."], "extent": [559, 700]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."], "extent": [700, 999]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TIMESTEP"], "extent": [999, 1009], "body": [{"type": "para", "indent": 4, "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."], "extent": [1009, 1181]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SFPS"], "extent": [1181, 1187], "body": [{"type": "para", "indent": 4, "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."], "extent": [1187, 1305]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SNOBJ"], "extent": [1305, 1312], "body": [{"type": "para", "indent": 4, "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "], "extent": [1312, 1523]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"type": "code", "text": ["object_$SNOBJ"]}, "."], "extent": [1523, 1621]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NOBJ"], "extent": [1621, 1627], "body": [{"type": "para", "indent": 4, "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "], "extent": [1627, 1859]}, {"type": "para", "indent": 4, "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [1859, 1991]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJ"], "extent": [1991, 1996], "body": [{"type": "para", "indent": 4, "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "], "extent": [1996, 2322]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [2322, 2616]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJID"], "extent": [2616, 2623], "body": [{"type": "para", "indent": 4, "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "], "extent": [2623, 2883]}, {"type": "para", "indent": 4, "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "], "extent": [2883, 3168]}, {"type": "para", "indent": 4, "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3168, 3406]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJIDS"], "extent": [3406, 3417], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."], "extent": [3417, 3556]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3556, 3569], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."], "extent": [3569, 3687]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCT"], "extent": [3687, 3694], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "], "extent": [3694, 3801]}, {"type": "para", "indent": 4, "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"type": "code", "text": ["$ST == $OBJCT"]}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3801, 4057]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCF"], "extent": [4057, 4064], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "], "extent": [4064, 4172]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4172, 4389]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJNAME"], "extent": [4389, 4398], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the name of the object being\n    processed. "], "extent": [4398, 4486]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "], "extent": [4486, 4748]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named ", {"type": "q", "text": ["myobject"]}, ",\n    specifying ", {"type": "code", "text": ["strcmp($OBJNAME, \"myobject\") == 0"]}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4748, 5194]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DOPNET"], "extent": [5194, 5202], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."], "extent": [5202, 5425]}], "container": true}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [5425, 5431], "body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position node"], "fullpath": "/nodes/dop/position"}, ",\n    you could write the expression:"], "extent": [5431, 5620]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "], "extent": [5620, 5650]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."], "extent": [5650, 5730]}], "container": true}], "container": true, "role": "item_group"}], "text": "Locals"}], "title": ["Gas Combustion"], "summary": ["A microsolver that applies a combustion model to the simulation."], "included": ["/nodes/dop/old_relationships", "/nodes/dop/smokesolver", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_gas_stencil", "/nodes/dop/standard_locals"]}