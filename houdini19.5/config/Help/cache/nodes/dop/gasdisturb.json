{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "gasdisturb::2.0", "icon": "DOP/gas", "version": "2.0", "since": "18.0", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Gas Disturb"], "extent": [96, 112]}, {"type": "summary", "indent": 0, "text": ["Adds fine detail to a smoke simulation by applying ", {"type": "q", "text": ["disturbance"]}, " forces to a\nvelocity field."], "extent": [112, 213]}, {"type": "para", "indent": 0, "text": ["The disturbance operator applies noisy forces to the velocity field, mimicking\nthe effects of localized environmental change. This localized change in momentum\ncancels itself out over time, preserving the simulation\u2019s general motion and\noverall shape. It is effective, however, at introducing small-scale details to\nthe simulation."], "extent": [213, 546]}, {"type": "para", "indent": 0, "text": ["Gas Disturb DOP has two methods for generating the noise: ", {"type": "ui", "text": ["Continuous"]}, " and\n", {"type": "ui", "text": ["Block-Based"]}, "."], "extent": [546, 640]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["In continuous mode, force applied at each voxel is independent, resulting in\ndetails being introduced at ", {"type": "em", "text": ["voxel-scale"]}, ". This mode is useful when you want to\nadd details at the smallest representable scale, one example being an\navalanche-type effects. However, if voxel size is too small, disturbance in\ncontinuous mode could lead to a noisy, undesirable look."], "extent": [640, 1002]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Force in block-based mode is generated by compositing several layers of noise\nthat is constant in cubical blocks. ", {"type": "ui", "text": ["Base Block Size"]}, " controls size of the\nlargest such blocks; size and amplitude of each subsequent layer is controlled\nby ", {"type": "ui", "text": ["Lacunarity"]}, " and ", {"type": "ui", "text": ["Roughness"]}, ", respectively."], "extent": [1002, 1290]}], "container": true}, {"type": "para", "indent": 0, "text": ["In both modes, the disturbance force adjusts magnitude of the applied force in\nan effort to keep the effect similar at different resolutions. In ", {"type": "ui", "text": ["Continuous"]}, "\nmode, ", {"type": "ui", "text": ["Strength"]}, " controls the expected variance of the integrated force over a\nregion of size ", {"type": "ui", "text": ["Reference Scale"]}, ". The number of composited layers in\n", {"type": "ui", "text": ["Block-Based"]}, " mode depends on block sizes and the voxel size (since blocks\nsmaller than a single voxel cannot be represented). However, the DOP compensates\nfor any truncation (when the actual number of layers is less than value of\n", {"type": "ui", "text": ["Max Octaves"]}, ")."], "extent": [1290, 1854]}, {"type": "para", "indent": 0, "text": ["There are additionally two ways to apply the generated random force. By default,\nthe force is exerted ", {"type": "em", "text": ["linearly"]}, ": the disturbance is simply added to the\n", {"type": "ui", "text": ["Disturb Field"]}, ". When ", {"type": "ui", "text": ["Rotational Force"]}, " is enabled, values in\n", {"type": "ui", "text": ["Disturb Field"]}, " are instead rotated towards the randomly-generated vectors,\nwithout change of length. When applied to a velocity field, this corresponds to\nredirecting the momentum while maintaining the kinetic energy. Rotational\napplication of disturbance is especially useful in fire simulations, where it\ncan be used to add character to the flames."], "extent": [1854, 2429]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [2429, 2435], "body": [{"type": "para", "indent": 4, "text": ["You can make this node apply forces that are very similar to the previous\n    version of this DOP. To this end, use block-based mode with ", {"type": "ui", "text": ["Max Octaves"]}, "\n    set to 1; you also need to mutliply ", {"type": "ui", "text": ["Disturbance"]}, " value from the old node\n    by 24 to get comparable ", {"type": "ui", "text": ["Strength"]}, "."], "extent": [2435, 2716]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2716, 2728], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Time Scale"], "extent": [2728, 2741], "body": [{"type": "para", "indent": 4, "text": ["A scaling factor for time inside this solver. 1 is normal speed, greater\n    than 1 speeds up the simulation, while less than 1 slows it down."], "extent": [2760, 2908]}], "container": true, "attrs": {"id": "timescale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rotational Force"], "extent": [2908, 2926], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the values in ", {"type": "ui", "text": ["Disturb Field"]}, " are rotated towards the\n    randomly-generated directions without changing their length."], "extent": [2946, 3086]}], "container": true, "attrs": {"id": "rotateonly"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Settings"], "extent": [3086, 3101], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Strength"], "extent": [3101, 3112], "body": [{"type": "para", "indent": 4, "text": ["Controls strength of the applied force. "], "extent": [3130, 3180]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [3180, 3190], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Rotational Force"]}, " is enabled, ", {"type": "ui", "text": ["Strength"]}, " governs how fast the\n        vectors are rotated towards their goal."], "extent": [3190, 3319]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "strength"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Threshold Range"], "extent": [3319, 3336], "body": [{"type": "para", "indent": 4, "text": ["When this option is turned on, value of the ", {"type": "ui", "text": ["Threshold Field"]}, " is mapped\n    from this range to ", {"type": "code", "text": ["0-1"]}, " and applied as a multiplier on top of ", {"type": "ui", "text": ["Strength"]}, "."], "extent": [3357, 3517]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [3517, 3527], "body": [{"type": "para", "indent": 8, "text": ["When the ", {"type": "ui", "text": ["Threshold Range"]}, " is enabled, voxels whose\n        ", {"type": "ui", "text": ["Threshold Field"]}, " value falls beyond the first value of the range will\n        not get disturbance applied."], "extent": [3527, 3708]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "threshrange"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Mode"], "extent": [3708, 3714], "body": [{"type": "para", "indent": 4, "text": ["Controls the nature of the generated random vectors."], "extent": [3728, 3790]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Continuous"], "extent": [3790, 3806], "body": [{"type": "para", "indent": 8, "text": ["Every voxel gets an independently-assigned random vector."], "extent": [3806, 3872]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Block-Based"], "extent": [3872, 3889], "body": [{"type": "para", "indent": 8, "text": ["The random pattern is formed by composing several layers of\n        blockwise-constant noise."], "extent": [3889, 3992]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "mode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reference Scale"], "extent": [3992, 4009], "body": [{"type": "para", "indent": 4, "text": ["Variance of the aggregated noise field over a region of this size will be\n    equal to ", {"type": "ui", "text": ["Strength"]}, " when ", {"type": "ui", "text": ["Mode"]}, " is set to ", {"type": "ui", "text": ["Continuous"]}, ". Provides a\n    scale for normalizing the force against voxel size. A larger value for this\n    parameter will increase magnitude of the applied force."], "extent": [4027, 4323]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [4323, 4332], "body": [{"type": "para", "indent": 8, "text": ["You should set this parameter to a reasonable value for your scene scale\n        and leave it there; ", {"type": "ui", "text": ["Strength"]}, " can be used to more finely control how\n        much force is applied."], "extent": [4332, 4525]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "refscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Base Block Size"], "extent": [4525, 4542], "body": [{"type": "para", "indent": 4, "text": ["Controls size of the biggest blocks in the generated noise pattern when\n    ", {"type": "ui", "text": ["Mode"]}, " is set to ", {"type": "ui", "text": ["Block-Based"]}, "."], "extent": [4561, 4678]}], "container": true, "attrs": {"id": "blocksize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pulse Length"], "extent": [4678, 4692], "body": [{"type": "para", "indent": 4, "text": ["Length of time (in seconds) that the noise pattern is held fixed; only\n    applies when ", {"type": "ui", "text": ["Mode"]}, " is set to ", {"type": "ui", "text": ["Block-Based"]}, "."], "extent": [4713, 4842]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4842, 4852], "body": [{"type": "para", "indent": 8, "text": ["The noise pattern changes on every frame in ", {"type": "ui", "text": ["Continuous"]}, " mode."], "extent": [4852, 4926]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "pulselength"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lacunarity"], "extent": [4926, 4938], "body": [{"type": "para", "indent": 4, "text": ["The ratio of block sizes between successive noise layers. Value of ", {"type": "code", "text": ["2"]}, ", for\n    example, means that the first layer has blocks that are twice the size of\n    the second layer; the second layer will in turn have blocks that are twice\n    as large as the next layer. This parameter is only applicable in\n    ", {"type": "ui", "text": ["Block-Based"]}, " mode."], "extent": [4958, 5291]}], "container": true, "attrs": {"id": "lacunarity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Roughness"], "extent": [5291, 5302], "body": [{"type": "para", "indent": 4, "text": ["The ratio of amplitudes between successive noise layers. Value of ", {"type": "code", "text": ["0.5"]}, ", for\n    instance, means that the second layer will have half the amplitude of the\n    first one. This parameter is only applicable in ", {"type": "ui", "text": ["Block-Based"]}, " mode."], "extent": [5317, 5551]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [5551, 5560], "body": [{"type": "para", "indent": 8, "text": ["Lower ", {"type": "ui", "text": ["Roughness"]}, " values will better preserve the block structure in\n        the generated noise, whereas higher ones (nearing or exceeding ", {"type": "code", "text": ["1"]}, ") will\n        yield more chaotic patterns resembling white noise."], "extent": [5560, 5781]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "rough"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Octaves"], "extent": [5781, 5794], "body": [{"type": "para", "indent": 4, "text": ["The maximum number of noise levels to compose in ", {"type": "ui", "text": ["Block-Based"]}, " mode."], "extent": [5810, 5886]}], "container": true, "attrs": {"id": "maxoct"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Control"], "extent": [5886, 5900], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Control Field"], "extent": [16, 31], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the force exerted is scaled by the content of this field."], "extent": [57, 134]}], "container": true, "attrs": {"id": "controlfield    "}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Control Range"], "extent": [134, 149], "body": [{"type": "para", "indent": 4, "text": ["Map from this range of values in the control field."], "extent": [175, 232]}], "container": true, "attrs": {"id": "controlrange    "}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remap Control Field"], "extent": [232, 253], "body": [{"type": "para", "indent": 4, "text": ["Enables or disables the control field ramp."], "extent": [280, 329]}], "container": true, "attrs": {"id": "remapcontrolfield"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Control Field Ramp"], "extent": [329, 349], "body": [{"type": "para", "indent": 4, "text": ["The ramp\u2019s vertical axis is ", {"type": "em", "text": ["strength of the effect"]}, " and the horizontal axis\n    is the ", {"type": "em", "text": ["value in the control field"]}, "."], "extent": [375, 498]}], "container": true, "attrs": {"id": "controlfieldramp"}, "role": "item"}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Visualization"], "extent": [5942, 5962], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Visualize Strength"], "extent": [5962, 5983], "body": [{"type": "para", "indent": 4, "text": ["This option can be enabled to visualize strength of the applied force at\n    different points in space."], "extent": [6002, 6111]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [6111, 6121], "body": [{"type": "para", "indent": 8, "text": ["The strengths will also be saved into the ", {"type": "ui", "text": ["Visualization Field"]}, "."], "extent": [6121, 6197]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "visualize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Mode"], "extent": [6197, 6203], "body": [{"type": "para", "indent": 4, "text": ["Determines how the visualization will appear in the viewport."], "extent": [6220, 6287]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Plane"], "extent": [6287, 6298], "body": [{"type": "para", "indent": 8, "text": ["Viewport will show a color-coded cutout of the strength field."], "extent": [6298, 6369]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Smoke"], "extent": [6369, 6380], "body": [{"type": "para", "indent": 8, "text": ["Viewport will show a fog volume whose denser areas correspond to regions\n        of higher applied strength."], "extent": [6380, 6498]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "vismode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Plane Orientation"], "extent": [6498, 6517], "body": [{"type": "para", "indent": 4, "text": ["Orientation of the cutting plane for ", {"type": "ui", "text": ["Plane"]}, " visualization."], "extent": [6535, 6602]}], "container": true, "attrs": {"id": "visplane"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Plane Position"], "extent": [6602, 6618], "body": [{"type": "para", "indent": 4, "text": ["Relative position of the cutting plane inside the bounding box."], "extent": [6644, 6713]}], "container": true, "attrs": {"id": "visplaneposition"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Color Mapping"], "extent": [6713, 6728], "body": [{"type": "para", "indent": 4, "text": ["Controls how strength values are mapped from the ", {"type": "ui", "text": ["Guide Range"]}, " to colors."], "extent": [6750, 6831]}], "container": true, "attrs": {"id": "viscolormode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Guide Range"], "extent": [6831, 6844], "body": [{"type": "para", "indent": 4, "text": ["Range of strength values that gets mapped into the ", {"type": "code", "text": ["0-1"]}, " range before color\n    conversion. The final visualization colors are controlled by\n    ", {"type": "ui", "text": ["Color Mapping"]}, "."], "extent": [6862, 7031]}], "container": true, "attrs": {"id": "visrange"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Smoke Density"], "extent": [7031, 7046], "body": [{"type": "para", "indent": 4, "text": ["Multiplier on density of the fog volume representing force strength."], "extent": [7066, 7140]}], "container": true, "attrs": {"id": "visdensity"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Bindings"], "extent": [7140, 7155], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Disturb Field"], "extent": [7155, 7171], "body": [{"type": "para", "indent": 4, "text": ["The vector field to apply the disturbance forces to."], "extent": [7186, 7244]}], "container": true, "attrs": {"id": "field"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Threshold Field"], "extent": [7244, 7261], "body": [{"type": "para", "indent": 4, "text": ["This field\u2019s values are used for thresholding purposes (when\n    ", {"type": "ui", "text": ["Threshold Range"]}, " is enabled)."], "extent": [7282, 7385]}], "container": true, "attrs": {"id": "threshfield"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Visualization Field"], "extent": [7385, 7406], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Visualize Strength"]}, " is enabled, the amount of applied force at each\n    voxel is stored in this scalar field."], "extent": [7424, 7547]}], "container": true, "attrs": {"id": "visfield"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stencil Field"], "extent": [15, 30], "body": [{"type": "para", "indent": 4, "text": ["A scalar field to use as a stencil for where to perform this node\u2019s\n    computations. Voxels whose stencil value strictly exceeds 0.5 will have the\n    operation applied, while the rest will be left unchanged."], "extent": [30, 245]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [245, 255], "body": [{"type": "para", "indent": 8, "text": ["If a stencil field isn\u2019t provided or does not exist, the operation will\n        be performed everywhere."], "extent": [255, 368]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Advanced"], "extent": [7579, 7594], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Use OpenCL"], "extent": [7594, 7607], "body": [{"type": "para", "indent": 4, "text": ["Use the OpenCL device to accelerate computations."], "extent": [7623, 7686]}], "container": true, "attrs": {"id": "opencl"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [7686, 7695], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Output"], "extent": [15, 29], "body": [{"type": "para", "indent": 4, "text": ["The operation of this output depends on what inputs are connected\n    to this node. If an object stream is input to this node, the output\n    is also an object stream containing the same objects as the input\n    (but with the data from this node attached). "], "extent": [29, 296]}, {"type": "para", "indent": 4, "text": ["If no object stream is\n    connected to this node, the output is a data output. This data\n    output can be connected to an ", {"scheme": "Node", "value": "/nodes/dop/applydata", "type": "link", "text": ["Apply Data DOP"], "fullpath": "/nodes/dop/applydata"}, ",\n    or connected directly to a data input of another data node, to\n    attach the data from this node to an object or another piece of\n    data."], "extent": [296, 606]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [7729, 7737], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["channelname"], "extent": [16, 29], "body": [{"type": "para", "indent": 4, "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "], "extent": [29, 325]}, {"type": "para", "indent": 4, "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "], "extent": [325, 519]}, {"type": "para", "indent": 4, "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"], "extent": [519, 692]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "], "extent": [692, 775]}, {"type": "para", "indent": 4, "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."], "extent": [775, 883]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACT"], "extent": [883, 891], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."], "extent": [891, 1132]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACF"], "extent": [1132, 1140], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."], "extent": [1140, 1383]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELNAME"], "extent": [1383, 1392], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1392, 1594]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to the\n    name of the relationship to which the data is being attached."], "extent": [1594, 1703]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJIDS"], "extent": [1703, 1714], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1714, 1916]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."], "extent": [1916, 2119]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJNAMES"], "extent": [2119, 2132], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2132, 2334]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."], "extent": [2334, 2519]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJIDS"], "extent": [2519, 2533], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2533, 2735]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."], "extent": [2735, 2938]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJNAMES"], "extent": [2938, 2954], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2954, 3156]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."], "extent": [3156, 3341]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ST"], "extent": [16, 20], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time for which the node is being\n    evaluated. "], "extent": [20, 107]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " ", {"type": "ui", "text": ["Offset Time"]}, " and ", {"type": "ui", "text": ["Time Scale"]}, "\n    parameters. "], "extent": [107, 326]}, {"type": "para", "indent": 4, "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"type": "code", "text": ["$ST == 0"]}, " rather than\n    ", {"type": "code", "text": ["$T == 0"]}, " or ", {"type": "code", "text": ["$FF == 1"]}, "."], "extent": [326, 555]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SF"], "extent": [555, 559], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."], "extent": [559, 700]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."], "extent": [700, 999]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TIMESTEP"], "extent": [999, 1009], "body": [{"type": "para", "indent": 4, "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."], "extent": [1009, 1181]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SFPS"], "extent": [1181, 1187], "body": [{"type": "para", "indent": 4, "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."], "extent": [1187, 1305]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SNOBJ"], "extent": [1305, 1312], "body": [{"type": "para", "indent": 4, "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "], "extent": [1312, 1523]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"type": "code", "text": ["object_$SNOBJ"]}, "."], "extent": [1523, 1621]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NOBJ"], "extent": [1621, 1627], "body": [{"type": "para", "indent": 4, "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "], "extent": [1627, 1859]}, {"type": "para", "indent": 4, "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [1859, 1991]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJ"], "extent": [1991, 1996], "body": [{"type": "para", "indent": 4, "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "], "extent": [1996, 2322]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [2322, 2616]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJID"], "extent": [2616, 2623], "body": [{"type": "para", "indent": 4, "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "], "extent": [2623, 2883]}, {"type": "para", "indent": 4, "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "], "extent": [2883, 3168]}, {"type": "para", "indent": 4, "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3168, 3406]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJIDS"], "extent": [3406, 3417], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."], "extent": [3417, 3556]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3556, 3569], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."], "extent": [3569, 3687]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCT"], "extent": [3687, 3694], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "], "extent": [3694, 3801]}, {"type": "para", "indent": 4, "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"type": "code", "text": ["$ST == $OBJCT"]}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3801, 4057]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCF"], "extent": [4057, 4064], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "], "extent": [4064, 4172]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4172, 4389]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJNAME"], "extent": [4389, 4398], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the name of the object being\n    processed. "], "extent": [4398, 4486]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "], "extent": [4486, 4748]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named ", {"type": "q", "text": ["myobject"]}, ",\n    specifying ", {"type": "code", "text": ["strcmp($OBJNAME, \"myobject\") == 0"]}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4748, 5194]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DOPNET"], "extent": [5194, 5202], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."], "extent": [5202, 5425]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ST"], "extent": [16, 20], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time for which the node is being\n    evaluated. "], "extent": [20, 107]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " ", {"type": "ui", "text": ["Offset Time"]}, " and ", {"type": "ui", "text": ["Time Scale"]}, "\n    parameters. "], "extent": [107, 326]}, {"type": "para", "indent": 4, "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"type": "code", "text": ["$ST == 0"]}, " rather than\n    ", {"type": "code", "text": ["$T == 0"]}, " or ", {"type": "code", "text": ["$FF == 1"]}, "."], "extent": [326, 555]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SF"], "extent": [555, 559], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."], "extent": [559, 700]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."], "extent": [700, 999]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TIMESTEP"], "extent": [999, 1009], "body": [{"type": "para", "indent": 4, "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."], "extent": [1009, 1181]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SFPS"], "extent": [1181, 1187], "body": [{"type": "para", "indent": 4, "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."], "extent": [1187, 1305]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SNOBJ"], "extent": [1305, 1312], "body": [{"type": "para", "indent": 4, "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "], "extent": [1312, 1523]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"type": "code", "text": ["object_$SNOBJ"]}, "."], "extent": [1523, 1621]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NOBJ"], "extent": [1621, 1627], "body": [{"type": "para", "indent": 4, "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "], "extent": [1627, 1859]}, {"type": "para", "indent": 4, "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [1859, 1991]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJ"], "extent": [1991, 1996], "body": [{"type": "para", "indent": 4, "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "], "extent": [1996, 2322]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [2322, 2616]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJID"], "extent": [2616, 2623], "body": [{"type": "para", "indent": 4, "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "], "extent": [2623, 2883]}, {"type": "para", "indent": 4, "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "], "extent": [2883, 3168]}, {"type": "para", "indent": 4, "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3168, 3406]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJIDS"], "extent": [3406, 3417], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."], "extent": [3417, 3556]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3556, 3569], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."], "extent": [3569, 3687]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCT"], "extent": [3687, 3694], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "], "extent": [3694, 3801]}, {"type": "para", "indent": 4, "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"type": "code", "text": ["$ST == $OBJCT"]}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3801, 4057]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCF"], "extent": [4057, 4064], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "], "extent": [4064, 4172]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4172, 4389]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJNAME"], "extent": [4389, 4398], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the name of the object being\n    processed. "], "extent": [4398, 4486]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "], "extent": [4486, 4748]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named ", {"type": "q", "text": ["myobject"]}, ",\n    specifying ", {"type": "code", "text": ["strcmp($OBJNAME, \"myobject\") == 0"]}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4748, 5194]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DOPNET"], "extent": [5194, 5202], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."], "extent": [5202, 5425]}], "container": true}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [5425, 5431], "body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position node"], "fullpath": "/nodes/dop/position"}, ",\n    you could write the expression:"], "extent": [5431, 5620]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "], "extent": [5620, 5650]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."], "extent": [5650, 5730]}], "container": true}], "container": true, "role": "item_group"}], "text": "Locals"}], "title": ["Gas Disturb"], "summary": ["Adds fine detail to a smoke simulation by applying ", {"type": "q", "text": ["disturbance"]}, " forces to a\nvelocity field."], "included": ["/nodes/dop/control_settings_no_influence", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_gas_stencil", "/nodes/dop/standard_locals"]}