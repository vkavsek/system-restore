{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "gasfieldvop", "icon": "DOP/gas", "tags": "volumes", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Gas Field VOP"], "extent": [81, 99]}, {"type": "summary", "indent": 0, "text": ["Runs CVEX on a set of fields."], "extent": [99, 137]}, {"type": "para", "indent": 0, "text": ["The Gas Field VOP operation runs CVEX over a set of fields.  The CVEX\nshader can be defined as a .vfl file, a Shop, or by building a CVEX\nVOP network inside this node.  The last is the most straightforward\napproach."], "extent": [137, 354]}, {"type": "para", "indent": 0, "text": ["Binding to the CVEX script controls what values are passed to which\nparameters of the script.  The default AutoBind will use the name of\nthe fields to determine which parameter they should\noverride.  If that parameter is marked as exported in the CVEX script,\nthe field will be written to.  Otherwise, the field is just read to\nget the parameter\u2019s values.  "], "extent": [354, 713]}, {"type": "para", "indent": 0, "text": ["The CVEX script is applied once for each exported field.\nLocally defined ", {"type": "code", "text": ["ix"]}, ", ", {"type": "code", "text": ["iy"]}, ", ", {"type": "code", "text": ["iz"]}, ", ", {"type": "code", "text": ["resx"]}, ", ", {"type": "code", "text": ["resy"]}, ", ", {"type": "code", "text": ["resz"]}, ", ", {"type": "code", "text": ["orig"]}, ", and ", {"type": "code", "text": ["P"]}, " bindings are\ncreated that refer to the index, resolution, center, and current voxel\nposition of the currently exported primitive."], "extent": [713, 975]}, {"type": "para", "indent": 0, "text": ["The parameters list starts with parameters created by the CVEX\nscript\u2019s parameters.  If the parameter is meant only to be bound to a\nfield, it can be hidden by setting the invisible flag on the VOP\nparameter."], "extent": [975, 1185]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1185, 1197], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Vex Setup"], "extent": [1197, 1214], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Vex Source"], "extent": [1214, 1235], "body": [{"type": "para", "indent": 16, "text": ["Where to get the CVEX script from.  Myself will refer to the VOP network built inside this node.  SHOP will use the ", {"type": "ui", "text": ["Shop Path"]}, " and ", {"type": "ui", "text": ["Script"]}, " will load the .vex file specified in the script."], "extent": [1235, 1446]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Shop Path"], "extent": [1446, 1465], "body": [{"type": "para", "indent": 16, "text": ["The CVEX Shop to apply."], "extent": [1465, 1506]}, {"type": "para", "indent": 16, "text": ["This can also point to any node that contains a CVEX VOP Network."], "extent": [1506, 1601]}, {"type": "note_group", "body": [{"type": "note", "indent": 16, "role": "item", "extent": [1601, 1623], "body": [{"type": "para", "indent": 24, "text": ["Referenced nodes parameters will be used."], "extent": [1623, 1690]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Script"], "extent": [1690, 1706], "body": [{"type": "para", "indent": 12, "text": ["The CVEX script to apply."], "extent": [1706, 1745]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Re-load VEX Functions"], "extent": [1745, 1776], "body": [{"type": "para", "indent": 12, "text": ["When in script mode, this reloads any .vex files to\n            account for updates made outside of Houdini."], "extent": [1776, 1898]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Compiler"], "extent": [1898, 1916], "body": [{"type": "para", "indent": 12, "text": ["The command line used by VOPs to compile the inside of\n            this node."], "extent": [1916, 2007]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Force Compile"], "extent": [2007, 2030], "body": [{"type": "para", "indent": 12, "text": ["Trigger a recompile of the VOP network."], "extent": [2030, 2083]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Evaluation Node Path"], "extent": [2083, 2113], "body": [{"type": "para", "indent": 12, "text": ["VEX functions like ", {"type": "code", "text": ["ch()"]}, " usually evaluate with respect to this node.\n            Providing a path here can override where the path search starts\n            from.  This is useful for embedding in a digital asset where you\n            would like the top level digital asset to be the search root."], "extent": [2113, 2423]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Export Parameters"], "extent": [2423, 2450], "body": [{"type": "para", "indent": 12, "text": ["This pattern can be used to override\n            the export option on the VEX shader to avoid writing to \n            certain fields.  The pattern matches the VEX parameter, not\n            the bound field.  The field will still be bound for\n            reading."], "extent": [2450, 2726]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Data Bindings"], "extent": [2726, 2746], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Autobind by Name"], "extent": [2746, 2773], "body": [{"type": "para", "indent": 12, "text": ["Will use the name of the field to determine which\n            field binds with which parameter.  "], "extent": [2773, 2884]}, {"type": "para", "indent": 12, "text": ["A scalar field named ", {"type": "q", "text": ["foo"]}, " will be bound to the float\n            parameter ", {"type": "q", "text": ["foo"]}, ".  A vector field ", {"type": "q", "text": ["foo"]}, " will be bound to\n            the vector (three float) parameter ", {"type": "q", "text": ["foo"]}, ".  A matrix field\n            ", {"type": "q", "text": ["foo"]}, " will be bound to the matrix (three by three)\n            parameter ", {"type": "q", "text": ["foo"]}, ".  An index field named ", {"type": "q", "text": ["foo"]}, " will be bound\n            to the integer parameter ", {"type": "q", "text": ["foo"]}, "."], "extent": [2884, 3267]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Primitive, Name"], "extent": [3267, 3292], "body": [{"type": "para", "indent": 12, "text": ["Manually specifies the bindings of each field.  "], "extent": [3292, 3354]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Stencil Field"], "extent": [3354, 3377], "body": [{"type": "para", "indent": 12, "text": ["A scalar field to use as a stencil for where to evaluate\n            the VOP network.  Voxels that are strictly greater than 0.5\n            will be run through the VOP network, others will be left\n            unchanged."], "extent": [3377, 3611]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["VEX Precision"], "extent": [3611, 3634], "body": [{"type": "para", "indent": 12, "text": ["VEX can evaluate at 32-bit or 64-bit precision.  64-bit provides\n            higher accuracy, especially for transforms."], "extent": [3666, 3812]}, {"type": "para", "indent": 12, "text": ["The auto mode will currently run in 32-bit mode as fields\n            are always 32-bit."], "extent": [3812, 3927]}], "container": true, "attrs": {"id": "vex_precision"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Inputs"], "extent": [3927, 3940], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Input 1, 2, 3, 4"], "extent": [3940, 3959], "body": [{"type": "para", "indent": 8, "text": ["These control the four virtual inputs accessible inside of VOPs."], "extent": [3959, 4033]}, {"type": "para", "indent": 8, "text": ["They can be accessed with the OpInput1-4 wires from the VOP, or with\n        the ", {"type": "code", "text": ["@OpInput1-4"]}, " string parameters when using VEXpressions."], "extent": [4033, 4180]}, {"type": "para", "indent": 8, "text": ["They can also be accessed numerically as 0-3 with VEX functions\n        that take an input number."], "extent": [4180, 4288]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["None"], "extent": [4288, 4302], "body": [{"type": "para", "indent": 12, "text": ["No geometry is wired to this input."], "extent": [4302, 4350]}], "container": true}, {"type": "dt", "indent": 8, "text": ["SOP"], "extent": [4350, 4363], "body": [{"type": "para", "indent": 12, "text": ["The SOP geometry will be cooked prior to running the VEX and\n            the result wired to this input."], "extent": [4363, 4480]}], "container": true}, {"type": "dt", "indent": 8, "text": ["DOP Data"], "extent": [4480, 4498], "body": [{"type": "para", "indent": 12, "text": ["Data in the current simulation to reference.  Specified as\n            an object/data, for example, ", {"type": "code", "text": ["pyro1/vel"]}, " to refer to the velocity\n            field of the ", {"type": "code", "text": ["pyro1"]}, " object (which will show up as three volume\n            primitives)."], "extent": [4498, 4748]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Nth Context Geometry"], "extent": [4748, 4778], "body": [{"type": "para", "indent": 12, "text": ["These refer to the SOPs wired into the parent DOP Network itself."], "extent": [4778, 4857]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["SOP Path"], "extent": [5958, 5968], "body": [{"type": "para", "indent": 4, "text": ["Path to a SOP to wire in."], "extent": [5990, 6021]}], "container": true, "attrs": {"id": "bindgeoinput"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["DOP Data"], "extent": [6021, 6031], "body": [{"type": "para", "indent": 4, "text": ["Object/data path of a piece of DOP data in THIS simulation to wire in.\n    If ", {"type": "ui", "text": ["Use This Object\u2019s Data"]}, " is enabled, this specifies the data path for data attached to the currently solved object."], "extent": [6053, 6254]}], "container": true, "attrs": {"id": "binddopinput"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use This Object\u2019s Data"], "extent": [6254, 6278], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the ", {"type": "ui", "text": ["DOP Data"]}, " specifies the name of data attached to the currently solved object.\n    This is usually equivalent to ", {"type": "code", "text": ["$OBJID/DataName"]}, ", but using ", {"type": "code", "text": ["$OBJID"]}, " requires one to set the ", {"type": "ui", "text": ["Solver Per Object"]}, " toggle which prevents mutual affectors from working with solvers such as RBD.\n    If the referenced data is the geometry being currently processed, a copy is made (similar to the ", {"type": "ui", "text": ["Myself"]}, " binding option)."], "extent": [6302, 6731]}], "container": true, "attrs": {"id": "binddopuseself"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Timestep"], "extent": [15, 29], "body": [{"type": "para", "indent": 4, "text": ["Determines if the current solver timestep will be used to apply\n    this node.  "], "extent": [29, 119]}, {"type": "para", "indent": 4, "text": ["If set, the current timestep size will be multiplied\n    by the scale and used for the time increment for this operation.\n    Otherwise, the time scale will specify an absolute fictitious time\n    to integrate by."], "extent": [119, 338]}, {"type": "para", "indent": 4, "text": ["By disabling the link between the actual real time and the\n    microsolver time, you can perform operations in a separate,\n    fictitious, time."], "extent": [338, 487]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time Scale"], "extent": [487, 499], "body": [{"type": "para", "indent": 4, "text": ["The timestep used for this microsolver will be scaled by this\n    amount.  This allows one to achieve non-realistic effects, such as\n    parts of the simulation operating at different speeds than other\n    parts.  "], "extent": [499, 723]}, {"type": "para", "indent": 4, "text": ["Similarly, it is useful if a solver needs to be evaluated\n    independently of the main timestep."], "extent": [723, 825]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Parameter Operations"], "extent": [16, 38], "body": [{"type": "para", "indent": 4, "text": ["Each data option parameter has an associated menu which specifies\n    how that parameter operates."], "extent": [38, 142]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use Default "], "extent": [142, 160], "body": [{"type": "para", "indent": 8, "text": ["Use the value from the Default Operation menu."], "extent": [160, 215]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Initial "], "extent": [215, 233], "body": [{"type": "para", "indent": 8, "text": ["Set the value of this parameter only when this data is created.\n        On all subsequent timesteps, the value of this parameter is not\n        altered. This is useful for setting up initial conditions like\n        position and velocity."], "extent": [233, 479]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Always "], "extent": [479, 496], "body": [{"type": "para", "indent": 8, "text": ["Always set the value of this parameter. This is useful when\n        specific keyframed values are required over time. This could be\n        used to keyframe the position of an object over time, or to\n        cause the geometry from a SOP to be refetched at each timestep\n        if the geometry is deforming. "], "extent": [496, 823]}, {"type": "para", "indent": 8, "text": ["You can also use this setting in\n        conjunction with the local variables for a parameter value to\n        modify a value over time. For example, in the X Position, an\n        expression like ", {"type": "code", "text": ["$tx + 0.1"]}, " would cause the object to\n        move 0.1 units to the right on each timestep."], "extent": [823, 1119]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Never "], "extent": [1119, 1135], "body": [{"type": "para", "indent": 8, "text": ["Do not ever set the value of this parameter. This option is most\n        useful when using this node to modify an existing piece of data\n        connected through the first input. "], "extent": [1135, 1333]}, {"type": "para", "indent": 8, "text": ["For example, an ", {"scheme": "Node", "value": "/nodes/dop/rbdstate", "type": "link", "text": ["RBD State\n        DOP"], "fullpath": "/nodes/dop/rbdstate"}, " may want to animate just the mass of an\n        object, and nothing else. The ", {"type": "ui", "text": ["Set Never"]}, " option could be used\n        on all parameters except for ", {"type": "ui", "text": ["Mass"]}, ", which would use ", {"type": "ui", "text": ["Set\n        Always"]}, "."], "extent": [1333, 1608]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Default Operation"], "extent": [1608, 1627], "body": [{"type": "para", "indent": 4, "text": ["For any parameters with their ", {"type": "ui", "text": ["Operation"]}, " menu set to ", {"type": "ui", "text": ["Use\n    Default"]}, ", this parameter controls what operation is used. "], "extent": [1627, 1762]}, {"type": "para", "indent": 4, "text": ["This\n    parameter has the same menu options and meanings as the ", {"type": "ui", "text": ["Parameter\n    Operations"]}, " menus, but without the ", {"type": "ui", "text": ["Use Default"]}, " choice."], "extent": [1762, 1908]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Make Objects Mutual Affectors"], "extent": [15, 46], "body": [{"type": "para", "indent": 4, "text": ["All objects connected to the first input of this node become mutual\n    affectors. "], "extent": [46, 139]}, {"type": "para", "indent": 4, "text": ["This is equivalent to using an ", {"scheme": "Node", "value": "/nodes/dop/affector", "type": "link", "text": ["Affector\n    DOP"], "fullpath": "/nodes/dop/affector"}, " to create an affector relationship between\n    ", {"type": "code", "text": ["*"]}, " and ", {"type": "code", "text": ["*"]}, " before connecting it to this node. This option makes it\n    convenient to have all objects feeding into a solver node affect\n    each other."], "extent": [139, 412]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [15, 22], "body": [{"type": "para", "indent": 4, "text": ["When an object connector is attached to the first input of this\n    node, this parameter can be used to choose a subset of those objects\n    to be affected by this node."], "extent": [45, 219]}], "container": true, "attrs": {"channels": "/group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Data Name"], "extent": [15, 26], "body": [{"type": "para", "indent": 4, "text": ["Indicates the name that should be used to attach the data to an\n    object or other piece of data. If the Data Name contains a ", {"type": "q", "text": ["/"]}, " (or\n    several), that indicates traversing inside subdata. "], "extent": [26, 227]}, {"type": "para", "indent": 4, "text": ["For example, if the ", {"scheme": "Node", "value": "/nodes/dop/fan", "type": "link", "text": ["Fan Force DOP"], "fullpath": "/nodes/dop/fan"}, " has the default Data Name\n    ", {"type": "q", "text": ["Forces/Fan"]}, ". This attaches the data with the name ", {"type": "q", "text": ["Fan"]}, " to an\n    existing piece of data named ", {"type": "q", "text": ["Forces"]}, ". If no data named ", {"type": "q", "text": ["Forces"]}, "\n    exists, a simple piece of container data is created to hold the\n    ", {"type": "q", "text": ["Fan"]}, " subdata."], "extent": [227, 530]}, {"type": "para", "indent": 4, "text": ["Different pieces of data have different requirements on what names\n    should be used for them. Except in very rare situations, the default\n    value should be used. Some exceptions are described with particular\n    pieces of data or with solvers that make use of some particular type\n    of data."], "extent": [530, 833]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Unique Data Name"], "extent": [833, 851], "body": [{"type": "para", "indent": 4, "text": ["Turning on this parameter modifies the ", {"type": "ui", "text": ["Data Name"]}, " parameter\n    value to ensure that the data created by this node is attached with\n    a unique name so it will not overwrite any existing data. "], "extent": [851, 1058]}, {"type": "para", "indent": 4, "text": ["With this\n    parameter turned off, attaching two pieces of data with the same\n    name will cause the second one to replace the first. There are\n    situations where each type of behavior is desirable. "], "extent": [1058, 1271]}, {"type": "para", "indent": 4, "text": ["If an object\n    needs to have several ", {"scheme": "Node", "value": "/nodes/dop/fan", "type": "link", "text": ["Fan Forces"], "fullpath": "/nodes/dop/fan"}, " blowing on it, it is\n    much easier to use the ", {"type": "ui", "text": ["Unique Data Name"]}, " feature to ensure that\n    each fan does not overwrite a previous fan rather than trying to\n    change the ", {"type": "ui", "text": ["Data Name"]}, " of each fan individually to avoid\n    conflicts. "], "extent": [1271, 1585]}, {"type": "para", "indent": 4, "text": ["On the other hand, if an object is known to have ", {"scheme": "Node", "value": "/nodes/dop/rbdstate", "type": "link", "text": ["RBD\n    State"], "fullpath": "/nodes/dop/rbdstate"}, " data already attached to it, leaving this\n    option turned off will allow some new ", {"scheme": "Node", "value": "/nodes/dop/rbdstate", "type": "link", "text": ["RBD State"], "fullpath": "/nodes/dop/rbdstate"}, "\n    data to overwrite the existing data."], "extent": [1585, 1827]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Solver Per Object"], "extent": [159, 178], "body": [{"type": "para", "indent": 4, "text": ["The default behavior for solvers is to attach the exact same\n    solver to all of the objects specified in the group.  This allows\n    the objects to be processed in a single pass by the solver, since\n    the parameters are identical for each object.  "], "extent": [178, 440]}, {"type": "para", "indent": 4, "text": ["However, some objects operate more logically on a single object at\n    a time.  In these cases, one may want to use ", {"type": "code", "text": ["$OBJID"]}, " expressions\n    to vary the solver parameters across the objects.  Setting this\n    toggle will create a separate solver per object, allowing ", {"type": "code", "text": ["$OBJID"]}, "\n    to vary as expected."], "extent": [440, 746]}, {"type": "para", "indent": 4, "text": ["Setting this is also required if stamping the parameters with a\n    Copy Data DOP."], "extent": [746, 833]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [5033, 5042], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/gasfieldwrangle", "type": "link", "text": "", "fullpath": "/nodes/dop/gasfieldwrangle"}], "extent": [5042, 5076]}], "container": true}], "text": "Related"}], "title": ["Gas Field VOP"], "summary": ["Runs CVEX on a set of fields."], "included": ["/nodes/dop/geometryvop", "/nodes/dop/standard_data_inputs", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_datagroup_parms", "/nodes/dop/standard_dataname_parms", "/nodes/dop/standard_dataop_parms", "/nodes/dop/standard_gas_timestep", "/nodes/dop/standard_solver_mutualparms", "/nodes/dop/standard_solver_parms", "/nodes/sop/_run_over"]}