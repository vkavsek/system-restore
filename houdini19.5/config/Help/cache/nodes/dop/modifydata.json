{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "modifydata", "icon": "DOP/modifydata", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Modify Data"], "extent": [71, 87]}, {"type": "summary", "indent": 0, "text": ["Modifies or creates options on arbitrary data."], "extent": [87, 142]}, {"type": "para", "indent": 0, "text": ["The Modify Data node can be used to change the values of specific\noptions on an existing piece of simulation data. The same task can\nusually be accomplished using a DOP node specific to the data type being\nmodified, with all Parameter Operations but one set to ", {"type": "q", "text": ["Set Never"]}, ".\nHowever using this node may be easier or clearer in certain situations."], "extent": [142, 489]}, {"type": "para", "indent": 0, "text": ["This node can also be used to attach extra custom options to a piece of\ndata for use in other parts of the network. For example, you may attach\nan option called ", {"type": "code", "text": ["hasmoved"]}, " to the Position data on an object, and set\nit to 1 if the object velocity is non-zero."], "extent": [489, 749]}, {"type": "para", "indent": 0, "text": ["You can connect either an object or a data input to this node. If a\ndata input is connected, that is the data this node will modify. This\nmode is most useful to add new options to an existing piece of data. If\nan object input is connected to this node, the ", {"type": "ui", "text": ["Data Name"]}, " parameter\nmust be set to tell this node which piece of data on the objects to\nmodify."], "extent": [749, 1107]}, {"type": "para", "indent": 0, "text": ["Modify Data can be used to create your own custom ad-hoc data types.\nThe ", {"scheme": "Node", "value": "/nodes/dop/emptydata", "type": "link", "text": ["Empty Data DOP"], "fullpath": "/nodes/dop/emptydata"}, " can be used to create an empty\ndata holder and then a Modify Data can set its values."], "extent": [1107, 1303]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [1303, 1309], "body": [{"type": "para", "indent": 4, "text": ["Some options are not editable with this node if they are read only, such as the velocity and position of a ", {"scheme": "Node", "value": "/nodes/dop/pointpos", "type": "link", "text": ["Point Position"], "fullpath": "/nodes/dop/pointpos"}, " node. "], "extent": [1309, 1463]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1463, 1475], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Activation"], "extent": [1475, 1491], "body": [{"type": "para", "indent": 8, "text": ["The input data is modified only when this parameter has a\n        non-zero value. Otherwise the data is passed through to the\n        output unmodified."], "extent": [1523, 1684]}], "container": true, "attrs": {"channels": "/activation"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Group"], "extent": [1684, 1695], "body": [{"type": "para", "indent": 8, "text": ["If an object input is given, the Group parameter determines\n        which objects within that input get modified."], "extent": [1722, 1844]}], "container": true, "attrs": {"channels": "/group"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Data Name"], "extent": [1844, 1859], "body": [{"type": "para", "indent": 8, "text": ["If an object input is given, the Data Name parameter determines\n        which data attached to those objects gets modified. This can be\n        a full data path: Forces/Gravity will try to modify the data\n        named Gravity inside the Forces container attached to the\n        object."], "extent": [1889, 2184]}], "container": true, "attrs": {"channels": "/dataname"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Number of Modifications"], "extent": [2184, 2213], "body": [{"type": "para", "indent": 8, "text": ["The number of options this node will set. This controls the\n        number of sets of option-specific parameters this node will\n        have."], "extent": [2242, 2392]}], "container": true, "attrs": {"channels": "/nummods"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Value # Name"], "extent": [2392, 2410], "body": [{"type": "para", "indent": 8, "text": ["The name of the option value to modify. If this does not match\n        an existing option, the node creates a new option of this name."], "extent": [2410, 2553]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Value # Type"], "extent": [2553, 2571], "body": [{"type": "para", "indent": 8, "text": ["Determines the type of option to modify. The type of the option\n        determines if the ", {"type": "ui", "text": ["Value # Float"]}, " or the ", {"type": "ui", "text": ["Value # String"]}, "\n        sets the option value."], "extent": [2571, 2745]}, {"type": "para", "indent": 8, "text": ["In some cases it may seem odd that the string value is used.\n        For example, vectors and matrices both are initialized with the\n        string value. Note that you can use the ", {"type": "code", "text": ["vector"]}, " and ", {"type": "code", "text": ["matrix"]}, "\n        expression functions to generate and manipulate the properly\n        formatted strings. For example, a ", {"type": "ui", "text": ["2 Vector"]}, " could be\n        initialized with ", {"type": "code", "text": ["vector(\"[1,2]\") + vector(\"[2,3]\")"]}, " which would\n        evaluate to ", {"type": "code", "text": ["[3,5]"]}, "."], "extent": [2745, 3193]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Integer"], "extent": [3193, 3210], "body": [{"type": "para", "indent": 12, "text": ["The option is a whole number. Use the ", {"type": "ui", "text": ["Value # Float"]}, " to\n            set the value."], "extent": [3210, 3308]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Bool"], "extent": [3308, 3322], "body": [{"type": "para", "indent": 12, "text": ["The option is a boolean (true or false) value. Use the\n            ", {"type": "ui", "text": ["Value # Float"]}, " to set the value. A value of 0 is false,\n            any other value is true."], "extent": [3322, 3497]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Float"], "extent": [3497, 3512], "body": [{"type": "para", "indent": 12, "text": ["The option is a floating point number. Use the ", {"type": "ui", "text": ["Value #\n            Float"]}, " to set the value."], "extent": [3512, 3619]}], "container": true}, {"type": "dt", "indent": 8, "text": ["String"], "extent": [3619, 3635], "body": [{"type": "para", "indent": 12, "text": ["The option is an arbitrary string. Use the ", {"type": "ui", "text": ["Value #\n            String"]}, " to set the value."], "extent": [3635, 3739]}], "container": true}, {"type": "dt", "indent": 8, "text": ["2 Vector"], "extent": [3739, 3757], "body": [{"type": "para", "indent": 12, "text": ["The option is a vector of length 2. Use the ", {"type": "ui", "text": ["Value #\n            String"]}, " to set the value using a format like ", {"type": "code", "text": ["[1, 2]"]}, "."], "extent": [3757, 3891]}], "container": true}, {"type": "dt", "indent": 8, "text": ["3 Vector"], "extent": [3891, 3909], "body": [{"type": "para", "indent": 12, "text": ["The option is a vector of length 3. Use the ", {"type": "ui", "text": ["Value #\n            String"]}, " to set the value using a format like ", {"type": "code", "text": ["[1, 2, 3]"]}, "."], "extent": [3909, 4046]}], "container": true}, {"type": "dt", "indent": 8, "text": ["4 Vector"], "extent": [4046, 4064], "body": [{"type": "para", "indent": 12, "text": ["The option is a vector of length 4. Use the ", {"type": "ui", "text": ["Value #\n            String"]}, " to set the value using a format like ", {"type": "code", "text": ["[1, 2, 3,\n            4]"]}, "."], "extent": [4064, 4216]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Quaternion"], "extent": [4216, 4236], "body": [{"type": "para", "indent": 12, "text": ["The option is a vector of length 4 which is interpreted as\n            a quaternion rotation. Use the ", {"type": "ui", "text": ["Value # String"]}, " to set the\n            value using a format like ", {"type": "code", "text": ["[1, 2, 3, 4]"]}, "."], "extent": [4236, 4434]}], "container": true}, {"type": "dt", "indent": 8, "text": ["3\u00d73 Matrix"], "extent": [4434, 4454], "body": [{"type": "para", "indent": 12, "text": ["The option is a matrix of 3 rows and 3 columns. Use the\n            ", {"type": "ui", "text": ["Value # String"]}, " to set the value using a format like\n            ", {"type": "code", "text": ["[[1, 2, 3] [4, 5, 6] [7, 8, 9]]"]}, "."], "extent": [4454, 4637]}], "container": true}, {"type": "dt", "indent": 8, "text": ["4\u00d74 Matrix"], "extent": [4637, 4657], "body": [{"type": "para", "indent": 12, "text": ["The option is a matrix of 4 rows and 4 columns. Use the\n            ", {"type": "ui", "text": ["Value # String"]}, " to set the value using a format like\n            ", {"type": "code", "text": ["[[1, 2, 3, 4] [5, 6, 7, 8] [9, 10, 11, 12] [13, 14, 15,\n            16]]"]}, "."], "extent": [4657, 4881]}], "container": true}, {"type": "dt", "indent": 8, "text": ["UV"], "extent": [4881, 4893], "body": [{"type": "para", "indent": 12, "text": ["The option is a vector of length 2 which represents a set\n            of 2D texture coordinates. Use the ", {"type": "ui", "text": ["Value # String"]}, " to set\n            the value using a format like ", {"type": "code", "text": ["[1, 2]"]}, "."], "extent": [4893, 5088]}], "container": true}, {"type": "dt", "indent": 8, "text": ["UVW"], "extent": [5088, 5101], "body": [{"type": "para", "indent": 12, "text": ["The option is a vector of length 3 which represents a set\n            of 3D texture coordinates. Use the ", {"type": "ui", "text": ["Value # String"]}, " to set\n            the value using a format like ", {"type": "code", "text": ["[1, 2, 3]"]}, "."], "extent": [5101, 5299]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Value # Float"], "extent": [5299, 5318], "body": [{"type": "para", "indent": 8, "text": ["The new option value, if the option is of type Boolean,\n        Integer, or Float. All other option types must use the ", {"type": "ui", "text": ["Value #\n        String"]}, " parameter with a properly formatted string."], "extent": [5318, 5516]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Value # String"], "extent": [5516, 5536], "body": [{"type": "para", "indent": 8, "text": ["The new option value, if the option is of any type other than\n        Boolean, Integer, or Float. The format of vector and matrix\n        option values are the same as for entering a vector or matrix in\n        the expression language."], "extent": [5536, 5780]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [5780, 5788], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["First"], "extent": [5788, 5799], "body": [{"type": "para", "indent": 8, "text": ["Either the data to be modified or the objects who have the data\n        attached are connected to the first input."], "extent": [5799, 5922]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [5922, 5931], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["First"], "extent": [5931, 5942], "body": [{"type": "para", "indent": 8, "text": ["If data is connected to the input, the modified input data is\n        sent to the output. If objects are connected to the input, the\n        same objects are sent to the output."], "extent": [5942, 6128]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [6128, 6136], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["ST"], "extent": [16, 20], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time for which the node is being\n    evaluated. "], "extent": [20, 107]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " ", {"type": "ui", "text": ["Offset Time"]}, " and ", {"type": "ui", "text": ["Time Scale"]}, "\n    parameters. "], "extent": [107, 326]}, {"type": "para", "indent": 4, "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"type": "code", "text": ["$ST == 0"]}, " rather than\n    ", {"type": "code", "text": ["$T == 0"]}, " or ", {"type": "code", "text": ["$FF == 1"]}, "."], "extent": [326, 555]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SF"], "extent": [555, 559], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."], "extent": [559, 700]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."], "extent": [700, 999]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TIMESTEP"], "extent": [999, 1009], "body": [{"type": "para", "indent": 4, "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."], "extent": [1009, 1181]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SFPS"], "extent": [1181, 1187], "body": [{"type": "para", "indent": 4, "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."], "extent": [1187, 1305]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SNOBJ"], "extent": [1305, 1312], "body": [{"type": "para", "indent": 4, "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "], "extent": [1312, 1523]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"type": "code", "text": ["object_$SNOBJ"]}, "."], "extent": [1523, 1621]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NOBJ"], "extent": [1621, 1627], "body": [{"type": "para", "indent": 4, "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "], "extent": [1627, 1859]}, {"type": "para", "indent": 4, "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [1859, 1991]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJ"], "extent": [1991, 1996], "body": [{"type": "para", "indent": 4, "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "], "extent": [1996, 2322]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [2322, 2616]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJID"], "extent": [2616, 2623], "body": [{"type": "para", "indent": 4, "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "], "extent": [2623, 2883]}, {"type": "para", "indent": 4, "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "], "extent": [2883, 3168]}, {"type": "para", "indent": 4, "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3168, 3406]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJIDS"], "extent": [3406, 3417], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."], "extent": [3417, 3556]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3556, 3569], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."], "extent": [3569, 3687]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCT"], "extent": [3687, 3694], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "], "extent": [3694, 3801]}, {"type": "para", "indent": 4, "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"type": "code", "text": ["$ST == $OBJCT"]}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3801, 4057]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCF"], "extent": [4057, 4064], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "], "extent": [4064, 4172]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4172, 4389]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJNAME"], "extent": [4389, 4398], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the name of the object being\n    processed. "], "extent": [4398, 4486]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "], "extent": [4486, 4748]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named ", {"type": "q", "text": ["myobject"]}, ",\n    specifying ", {"type": "code", "text": ["strcmp($OBJNAME, \"myobject\") == 0"]}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4748, 5194]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DOPNET"], "extent": [5194, 5202], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."], "extent": [5202, 5425]}], "container": true}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [5425, 5431], "body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position node"], "fullpath": "/nodes/dop/position"}, ",\n    you could write the expression:"], "extent": [5431, 5620]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "], "extent": [5620, 5650]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."], "extent": [5650, 5730]}], "container": true}], "container": true, "role": "item_group"}], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [6168, 6177], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/emptydata", "type": "link", "text": "", "fullpath": "/nodes/dop/emptydata"}], "extent": [6177, 6204]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/scriptsolver", "type": "link", "text": "", "fullpath": "/nodes/dop/scriptsolver"}], "extent": [6204, 6235]}], "container": true}], "text": "Related"}], "title": ["Modify Data"], "summary": ["Modifies or creates options on arbitrary data."], "included": ["/nodes/dop/standard_locals"]}