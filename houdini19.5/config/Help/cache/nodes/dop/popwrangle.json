{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "popwrangle", "icon": "SOP/pointwrangle", "tags": "volumes pop", "since": "13.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["POP Wrangle"], "extent": [0, 16]}, {"type": "summary", "indent": 0, "text": ["Runs a VEX snippet to modify particles."], "extent": [122, 169]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [169, 184], "body": [{"type": "para", "indent": 0, "text": ["This is a very powerful, low-level node that lets experts who are familiar with VEX tweak particles using code."], "extent": [184, 298]}, {"type": "para", "indent": 0, "text": ["This node corresponds to the ", {"scheme": "Node", "value": "/nodes/dop/popvop", "type": "link", "text": ["POP VOP DOP"], "fullpath": "/nodes/dop/popvop"}, ", but uses a textual VEX snippet instead of a VOP network."], "extent": [298, 416]}, {"type": "para", "indent": 0, "text": ["This node runs the snippet on the detail or every point in the input geometry.\nThe snippet can edit the input geometry by changing attributes.\nIt can access information from other geometry using attributes and VEX functions."], "extent": [416, 642]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Press ", {"keys": ["MMB"], "type": "keys", "text": null}, " on the node to see any error output from the snippet."], "extent": [642, 713]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can use the VEX function ", {"type": "code", "text": ["ch"]}, " to evaluate parameters.\n  The path is relative to this node (", {"type": "code", "text": ["ch(\"parm\")"]}, " will evaluate the parameter ", {"type": "code", "text": ["parm"]}, " on this node).\n  This evaluation will be done at the current time."], "extent": [713, 926]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Unlike the ", {"scheme": "Node", "value": "/nodes/sop/attribcreate", "type": "link", "text": ["Attrib Create SOP"], "fullpath": "/nodes/sop/attribcreate"}, ", this does not use local variables.\n  Further, all backtick expressions and ", {"type": "code", "text": ["$F"]}, " variables will be evaluated at frame 1,\n  not the current time.\n  Use ", {"type": "code", "text": ["@Frame"]}, ", ", {"type": "code", "text": ["@Time"]}, ", or ", {"type": "code", "text": ["@TimeInc"]}, " instead."], "extent": [926, 1176]}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Context"], "extent": [1176, 1190], "body": [{"type": "para", "indent": 0, "text": ["This node runs the snippet in the ", {"type": "strong", "text": ["CVEX context"]}, "."], "extent": [1190, 1243]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Syntax"], "extent": [1243, 1256], "body": [{"type": "para", "indent": 0, "text": ["The ", {"type": "ui", "text": ["VEX snippet"]}, " parameter lets you enter a snippet of ", {"scheme": null, "value": "/vex/", "type": "link", "text": ["VEX code"], "fullpath": "/vex/index"}, " to run on the input geometry.\nSee ", {"scheme": null, "value": "/vex/snippets", "type": "link", "text": ["VEX snippets"], "fullpath": "/vex/snippets"}, " for basic information on the syntax available in the snippet parameter.\nSee ", {"scheme": null, "value": "/vex/", "type": "link", "text": ["the VEX chapter"], "fullpath": "/vex/index"}, " for general information on the VEX language."], "extent": [16, 299]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1295, 1307], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Activation"], "extent": [45, 61], "body": [{"type": "para", "indent": 8, "text": ["Turns this node on and off. The node is only active if this\n        value is greater than 0. This is useful to control the effect of\n        this node with an ", {"scheme": null, "value": "/expressions/", "type": "link", "text": ["expression"], "fullpath": "/expressions/index"}, "."], "extent": [61, 265]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [265, 279], "body": [{"type": "para", "indent": 12, "text": ["This is activation of the node as a whole. You can\u2019t use this parameter to deactivate the node for certain particles."], "extent": [279, 410]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Group"], "extent": [410, 421], "body": [{"type": "para", "indent": 8, "text": ["Only affect a group of points (created with, for example, a\n        ", {"scheme": "Node", "value": "/nodes/dop/popgroup", "type": "link", "text": ["Group POP"], "fullpath": "/nodes/dop/popgroup"}, " or ", {"scheme": "Node", "value": "/nodes/dop/popcollisiondetect", "type": "link", "text": ["Collision\n        Detection POP"], "fullpath": "/nodes/dop/popcollisiondetect"}, ") out of all the points in \n        the current stream."], "extent": [421, 648]}], "container": true, "role": "item"}], "container": true}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Code"], "extent": [1350, 1361], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["VEXpression"], "extent": [2337, 2350], "body": [{"type": "para", "indent": 4, "text": ["A snippet of VEX code that will manipulate the point attributes.\n    You can use ", {"type": "code", "text": ["@", {"type": "var", "text": ["variable_name"]}]}, " syntax to access geometry attributes."], "extent": [2368, 2513]}], "container": true, "attrs": {"id": "snippet"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attributes to Create"], "extent": [1405, 1427], "body": [{"type": "para", "indent": 4, "text": ["Only create attributes if their names match this pattern.\n    The default pattern allows any attribute to be created."], "extent": [1427, 1554]}, {"type": "para", "indent": 4, "text": ["You can restrict the created attributes by replacing the ", {"type": "code", "text": ["*"]}, " with a list of allowed names."], "extent": [1554, 1650]}, {"type": "para", "indent": 4, "text": ["Bound attributes, such as ", {"type": "code", "text": ["vtxnum"]}, ", cannot be created and will be ignored."], "extent": [1650, 1730]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enforce Prototypes"], "extent": [16, 36], "body": [{"type": "para", "indent": 4, "text": ["Requires that you declare ", {"type": "code", "text": ["@"]}, " bindings in snippets as prototypes before using them. This applies to both attributes (for example ", {"type": "code", "text": ["@Cd"]}, ") and ", {"type": "q", "text": ["convenience"]}, " bindings such as ", {"type": "code", "text": ["@ptnum"]}, " and ", {"type": "code", "text": ["@Frame"]}, ". For example:"], "extent": [36, 248]}, {"lang": "vex", "type": "pre", "indent": 4, "text": ["\n    // Declare bindings\n    int @ptnum;\n    float @Frame;\n    vector @Cd;\n\n    // Use bindings after declaration\n    int pointnum = @ptnum;\n    float red = @Cd[0] / @Frame;\n    "], "extent": [248, 447]}, {"type": "para", "indent": 4, "text": ["Automatic binding with the ", {"type": "code", "text": ["@"]}, " syntax can be convenient, but as your scene becomes more complex there is the risk that a typo in an ", {"type": "code", "text": ["@"]}, " binding will silently just bind a non-existent attribute."], "extent": [447, 646]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Timestep"], "extent": [15, 29], "body": [{"type": "para", "indent": 4, "text": ["Determines if the current solver timestep will be used to apply\n    this node.  "], "extent": [29, 119]}, {"type": "para", "indent": 4, "text": ["If set, the current timestep size will be multiplied\n    by the scale and used for the time increment for this operation.\n    Otherwise, the time scale will specify an absolute fictitious time\n    to integrate by."], "extent": [119, 338]}, {"type": "para", "indent": 4, "text": ["By disabling the link between the actual real time and the\n    microsolver time, you can perform operations in a separate,\n    fictitious, time."], "extent": [338, 487]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time Scale"], "extent": [487, 499], "body": [{"type": "para", "indent": 4, "text": ["The timestep used for this microsolver will be scaled by this\n    amount.  This allows one to achieve non-realistic effects, such as\n    parts of the simulation operating at different speeds than other\n    parts.  "], "extent": [499, 723]}, {"type": "para", "indent": 4, "text": ["Similarly, it is useful if a solver needs to be evaluated\n    independently of the main timestep."], "extent": [723, 825]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Data Bindings"], "extent": [1799, 1819], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Geometry"], "extent": [1819, 1830], "body": [{"type": "para", "indent": 4, "text": ["The list of the geometry on the object to process."], "extent": [1830, 1886]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Evaluation Node Path"], "extent": [1886, 1908], "body": [{"type": "para", "indent": 4, "text": ["VEX functions like ", {"type": "code", "text": ["ch()"]}, " usually evaluate with respect to this node. Providing a path here can override where the path search starts from.  This is useful for embedding in a digital asset where you would like the top level digital asset to be the search root."], "extent": [1908, 2174]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Export Parameters"], "extent": [2174, 2193], "body": [{"type": "para", "indent": 4, "text": ["When a VEX parameter is exported, the bound attribute will be created if it doesn\u2019t exist.  This pattern can be used to override the export option on the VEX shader to avoid writing to or creating certain attributes.  The pattern matches the VEX parameter, not the bound attribute.  The attribute will still be bound for reading."], "extent": [2193, 2528]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Autobind by Name"], "extent": [2528, 2546], "body": [{"type": "para", "indent": 4, "text": ["Will use the name of the attribute to determine which attribute binds with which parameter.  "], "extent": [2546, 2645]}, {"type": "para", "indent": 4, "text": ["Integer attributes will bind to integer parameters.  Float attributes will bind to float, vector, point, matrix, or matrix4 depending on their tuple size.  String attributes will bind to strings."], "extent": [2645, 2846]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Name, VEX Parameter"], "extent": [2846, 2877], "body": [{"type": "para", "indent": 4, "text": ["Manually specifies the bindings of each attribute.  "], "extent": [2877, 2935]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Field Name, VEX Parameter"], "extent": [2935, 2962], "body": [{"type": "para", "indent": 4, "text": ["Optionally binds Scalar, Vector, Matrix, or Index fields from this object to the CVEX function.  They will be sampled at the current ", {"type": "code", "text": ["P"]}, " location of each element."], "extent": [2962, 3130]}, {"type": "para", "indent": 4, "text": ["You can then access these with the ", {"type": "code", "text": ["@"]}, " syntax referring to the given Parameter."], "extent": [3130, 3215]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Autobind Groups by Name"], "extent": [3215, 3240], "body": [{"type": "para", "indent": 4, "text": ["Automatically bind any groups to the integer parameter prefixed with ", {"type": "code", "text": ["group_"]}, "."], "extent": [3240, 3324]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group Name, VEX Parameter"], "extent": [3324, 3351], "body": [{"type": "para", "indent": 4, "text": ["Manually specifies the bindings of each group."], "extent": [3351, 3403]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Update Normals If Displaced"], "extent": [3403, 3432], "body": [{"type": "para", "indent": 4, "text": ["If points are being run over, and the ", {"type": "code", "text": ["P"]}, " attribute is written to,\n    but the ", {"type": "code", "text": ["N"]}, " attribute is not written to, any incoming normals will\n    become out of date.  When this option is set, vertex and point\n    normals will be updated when this occurs."], "extent": [3432, 3688]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["VEX Precision"], "extent": [3868, 3883], "body": [{"type": "para", "indent": 4, "text": ["VEX can evaluate at 32-bit or 64-bit precision.  64-bit provides\n    higher accuracy, especially for transforms."], "extent": [3906, 4028]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4028, 4038], "body": [{"type": "para", "indent": 8, "text": ["Incoming attributes will preserve their original precision, so using 64-bit VEX on 32-bit positions will convert them to 64-bit, apply the operation, then convert back to 32-bit when writing out."], "extent": [4038, 4247]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 4, "text": ["The auto mode will switch between 32-bit and 64-bit depending on the preferred precision of the incoming geometry. When run in 64-bit precision, any created attributes will be 64-bit. When run in 32-bit any created attributes will be 32-bit. Use ", {"scheme": "Node", "value": "/nodes/sop/attribcast", "type": "link", "text": "", "fullpath": "/nodes/sop/attribcast"}, " to change the preferred precision."], "extent": [4247, 4556]}], "container": true, "attrs": {"id": "vex_precision"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Inputs"], "extent": [3736, 3749], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Input 1, 2, 3, 4"], "extent": [3749, 3768], "body": [{"type": "para", "indent": 4, "text": ["These control the four virtual inputs accessible inside of VOPs."], "extent": [3768, 3838]}, {"type": "para", "indent": 4, "text": ["They can be accessed with the OpInput1-4 wires from the VOP, or with the ", {"type": "code", "text": ["@OpInput1-4"]}, " string parameters when using VEXpressions."], "extent": [3838, 3973]}, {"type": "para", "indent": 4, "text": ["They can also be accessed numerically as 0-3 with VEX functions that take an input number."], "extent": [3973, 4069]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [4069, 4079], "body": [{"type": "para", "indent": 8, "text": ["No geometry is wired to this input."], "extent": [4079, 4123]}], "container": true}, {"type": "dt", "indent": 4, "text": ["SOP"], "extent": [4123, 4132], "body": [{"type": "para", "indent": 8, "text": ["The SOP geometry will be cooked prior to running the VEX and the result wired to this input."], "extent": [4132, 4233]}], "container": true}, {"type": "dt", "indent": 4, "text": ["DOP Data"], "extent": [4233, 4247], "body": [{"type": "para", "indent": 8, "text": ["Data in the current simulation to reference.  Specified as\n        an object/data, for example, ", {"type": "code", "text": ["pyro1/vel"]}, " to refer to the velocity\n        field of the ", {"type": "code", "text": ["pyro1"]}, " object (which will show up as three volume\n        primitives)."], "extent": [4247, 4481]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Myself"], "extent": [4481, 4493], "body": [{"type": "para", "indent": 8, "text": ["Referring to the geometry currently being processed is special as you have to ensure a copy is made so the VEX functions can refer to its original form.  This handles that for you."], "extent": [4493, 4682]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Nth Context Geometry"], "extent": [4682, 4708], "body": [{"type": "para", "indent": 8, "text": ["These refer to the SOPs wired into the parent DOP Network itself."], "extent": [4708, 4782]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Myself (No Reads from Outputs)"], "extent": [4782, 4818], "body": [{"type": "para", "indent": 8, "text": ["Refers the currently processed geometry.  Does not make a copy\n        so it is up to the user to ensure no reads are made from\n        any attributes that are bound."], "extent": [4818, 4994]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["SOP Path"], "extent": [5958, 5968], "body": [{"type": "para", "indent": 4, "text": ["Path to a SOP to wire in."], "extent": [5990, 6021]}], "container": true, "attrs": {"id": "bindgeoinput"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["DOP Data"], "extent": [6021, 6031], "body": [{"type": "para", "indent": 4, "text": ["Object/data path of a piece of DOP data in THIS simulation to wire in.\n    If ", {"type": "ui", "text": ["Use This Object\u2019s Data"]}, " is enabled, this specifies the data path for data attached to the currently solved object."], "extent": [6053, 6254]}], "container": true, "attrs": {"id": "binddopinput"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use This Object\u2019s Data"], "extent": [6254, 6278], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the ", {"type": "ui", "text": ["DOP Data"]}, " specifies the name of data attached to the currently solved object.\n    This is usually equivalent to ", {"type": "code", "text": ["$OBJID/DataName"]}, ", but using ", {"type": "code", "text": ["$OBJID"]}, " requires one to set the ", {"type": "ui", "text": ["Solver Per Object"]}, " toggle which prevents mutual affectors from working with solvers such as RBD.\n    If the referenced data is the geometry being currently processed, a copy is made (similar to the ", {"type": "ui", "text": ["Myself"]}, " binding option)."], "extent": [6302, 6731]}], "container": true, "attrs": {"id": "binddopuseself"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Bindings"], "extent": [5137, 5152], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Geometry"], "extent": [680, 694], "body": [{"type": "para", "indent": 8, "text": ["The name of the simulation data to apply the POP node to.\n        This commonly is Geometry, but POP Networks can be designed\n        to apply to different geometry if desired."], "extent": [694, 879]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Evaluation Node Path"], "extent": [879, 905], "body": [{"type": "para", "indent": 8, "text": ["For nodes with local expressions, this controls where ", {"type": "code", "text": ["ch()"]}, "\n        style expressions in VEX are evaluated with respect to.  By\n        making this ", {"type": "code", "text": ["."]}, ", you can ensure relative references work.\n        It is important to promote this if you are embedding a node inside\n        an HDA if you are also exporting the local expressions."], "extent": [905, 1248]}], "container": true, "role": "item"}], "container": true}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [5198, 5207], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/dop/popvop", "type": "link", "text": "", "fullpath": "/nodes/dop/popvop"}], "extent": [5207, 5229]}], "container": true}], "text": "Related"}], "title": ["POP Wrangle"], "summary": ["Runs a VEX snippet to modify particles."], "included": ["/nodes/dop/geometryvop", "/nodes/dop/standard_data_inputs", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_datagroup_parms", "/nodes/dop/standard_dataname_parms", "/nodes/dop/standard_dataop_parms", "/nodes/dop/standard_gas_timestep", "/nodes/dop/standard_pop_parms", "/nodes/dop/standard_solver_mutualparms", "/nodes/dop/standard_solver_parms", "/nodes/sop/_run_over", "/nodes/sop/pointwrangle", "/nodes/sop/wrangle_syntax", "/vex/_enforce_prototypes"]}