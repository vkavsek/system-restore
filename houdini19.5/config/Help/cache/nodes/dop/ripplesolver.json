{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "ripplesolver", "icon": "DOP/ripplesolver", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Ripple Solver"], "extent": [75, 93]}, {"type": "summary", "indent": 0, "text": ["Animates wave propagation across Ripple Objects."], "extent": [93, 150]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [150, 165], "body": [{"type": "para", "indent": 0, "text": ["When you attach this solver to an object with Ripple Object\ndata (usually created by either a ", {"scheme": "Node", "value": "/nodes/dop/rippleobject", "type": "link", "text": ["Ripple Object"], "fullpath": "/nodes/dop/rippleobject"}, "\ndynamics node or a combination of ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject"}, "\nand ", {"scheme": "Node", "value": "/nodes/dop/rippleconfigureobject", "type": "link", "text": ["Ripple Configure Object"], "fullpath": "/nodes/dop/rippleconfigureobject"}, "),\nit animates wave propagation across the object\u2019s surface by\nmoving the surface\u2019s points."], "extent": [165, 525]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 0, "role": "item", "extent": [525, 533], "body": [], "container": true, "attrs": {"src": "/videos/dynamics/ripple_height.mp4", "loop": "true"}}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["Two types of forces affect wave evolution:"], "extent": [595, 639]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["The ", {"type": "ui", "text": ["Wave speed"]}, " value controls how fast waves move across the\n  surface."], "extent": [639, 720], "body": [{"type": "para", "indent": 2, "text": ["You can also paint ", {"type": "em", "text": ["per-point"]}, " wave speed attributes (see the attributes\n  section below) to make some areas of the surface communicate waves\n  faster or slower than others.\n  This lets you paint ", {"type": "q", "text": ["islands"]}, " of zero wave speed. Waves will bounce off\n  these areas and the surface within the area will remain at rest."], "extent": [720, 1038]}, {"type": "para", "indent": 2, "text": ["The local curvature of the surface determines the displacement speed.\n  While the solver does displacement per-point, when it calculates\n  curvature it uses the connectivity of the points. In the case of a\n  height field, this has the effect of propagating ripples across the\n  surface of the height field."], "extent": [1038, 1350]}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The ", {"type": "ui", "text": ["Rest Spring"]}, " value pulls the surface back towards its rest shape\n  at each time step. Higher values will dissipate waves faster and\n  make the entire surface lose wave energy and eventually settle down\n  to the rest shape."], "extent": [1350, 1585], "body": [{"type": "para", "indent": 2, "text": ["You can also paint ", {"type": "em", "text": ["per-point"]}, " rest-spring attributes (see the attributes\n  section below) to make some areas of the surface more resilient\n  than others."], "extent": [1585, 1743]}], "container": true}], "container": true}, {"type": "para", "indent": 0, "text": ["Ripple propagation, while easiest to understand on\na height field, ", {"type": "em", "text": ["is not restricted to grid topology"]}, ".  Ripples can propagate\nalong a curve, through a 3d lattice of points, or even across a\ncomplicated triangular mesh."], "extent": [1743, 1965]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 0, "role": "item", "extent": [1965, 1973], "body": [], "container": true, "attrs": {"src": "/images/dynamics/ripple_sphere.mp4", "loop": "true"}}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["You can expand on the ripple solver\u2019s behavior by using it as\npart of a multi-solver setup.\nYou can combine the Ripple solver with additional SOP Solvers to add bumps\nor other effects on top of the ripple."], "extent": [2035, 2242]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [2242, 2247], "body": [{"type": "para", "indent": 4, "text": ["When the neighboring points don\u2019t move with the ripple, they cause a boundary condition that triggers the waves to bounce off them. You can use a gradient of conservation to feather in to have a more absorbing boundary. "], "extent": [2247, 2473]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Attributes"], "extent": [2473, 2490], "body": [{"type": "para", "indent": 0, "text": ["You can  ", {"scheme": null, "value": "/model/attributes", "type": "link", "text": ["create attributes"], "fullpath": "/model/attributes"}, "  on the Ripple Object\u2019s\ninitial geometry to influence its behavior. Most of these attributes allow\nfine-tuning of the Ripple Solver by overriding default values set in this\nnode."], "extent": [2490, 2718]}, {"tag": "table", "attrs": {"id": "wave_attrib_table"}, "type": "pxml", "indent": 0, "extent": [16, 47], "body": [{"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [47, 56], "body": [{"tag": "th", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Name"], "extent": [56, 73]}, {"tag": "th", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Class"], "extent": [73, 91]}, {"tag": "th", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Type"], "extent": [91, 108]}, {"tag": "th", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Description"], "extent": [108, 132]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [132, 141], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [{"type": "code", "text": ["v"]}], "extent": [141, 157]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Point"], "extent": [157, 175]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Vector"], "extent": [175, 194]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" "], "extent": [194, 208], "body": [{"type": "para", "indent": 12, "text": ["The current velocity of the point.  Momentum is passed\n            from frame to frame through this."], "extent": [208, 321]}], "container": true}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [321, 330], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [{"type": "code", "text": ["conservation"]}], "extent": [330, 357]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Point"], "extent": [357, 375]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Float"], "extent": [375, 393]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" "], "extent": [393, 407], "body": [{"type": "para", "indent": 12, "text": ["Overrides the conservation parameter of the Wave Solver\n            in a per-point manner. "], "extent": [407, 511]}], "container": true}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [511, 520], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [{"type": "code", "text": ["wavespeed"]}], "extent": [520, 544]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Point"], "extent": [544, 562]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Float"], "extent": [562, 580]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" "], "extent": [580, 594], "body": [{"type": "para", "indent": 12, "text": ["Overrides the wavespeed parameter of the Wave Solver\n            in a per-point manner.  "], "extent": [594, 709]}, {"type": "note_group", "body": [{"type": "note", "indent": 12, "role": "item", "extent": [709, 727], "body": [{"type": "para", "indent": 16, "text": ["Adaptive substepping does not take overridden wavespeeds into account. Therefore, the value on the Wave Solver node should be the maximum of the values on the points."], "extent": [727, 910]}], "container": true}], "container": true, "role": "item_group"}], "container": true}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [910, 919], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [{"type": "code", "text": ["springk"]}], "extent": [919, 941]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Point"], "extent": [941, 959]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Float"], "extent": [959, 977]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" "], "extent": [977, 991], "body": [{"type": "para", "indent": 12, "text": ["Overrides the rest spring parameter of the Wave Solver\n            on a per-point manner."], "extent": [991, 1093]}], "container": true}], "container": true}], "container": true}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2751, 2763], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Adaptive Substep"], "extent": [2763, 2782], "body": [{"type": "para", "indent": 4, "text": ["For high wave speeds and small edge lengths, the computation\n    can become unstable. To prevent this, an optimal substep is\n    computed by comparing the wave speed with the minimum edge\n    length.  "], "extent": [2782, 2993]}, {"type": "para", "indent": 4, "text": ["Because computing the proper substep size can be\n    expensive, after one has fixed the topology and parameters one\n    can turn off adaptive substep and just set the minimum substep to the\n    proper calculated value. (You can get the calculated value from the\n    ", {"type": "code", "text": ["wave2d_sop/foreach1/Number Range"]}, " parameter.)"], "extent": [2993, 3315]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [3315, 3325], "body": [{"type": "para", "indent": 8, "text": ["This does not take into account painted wave speeds - the wave speed should be set to the maximum of any painted wave speeds."], "extent": [3325, 3460]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["CFL Condition"], "extent": [3460, 3475], "body": [{"type": "para", "indent": 4, "text": ["Adjusts how conservative the adaptive substep should be.\n    Values less than 1 will produce smaller substeps than are\n    required, larger than 1 will produce larger.  "], "extent": [3475, 3654]}, {"type": "para", "indent": 4, "text": ["Larger values of\n    CFL are likely dangerous as the automatically computed value\n    is close to the maximum."], "extent": [3654, 3770]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Substep"], "extent": [3770, 3783], "body": [{"type": "para", "indent": 4, "text": ["Regardless of the adaptive substep computation, this number of\n    substeps will be performed.  This is also the number of\n    substeps to use if adaptive substep is turned off."], "extent": [3783, 3966]}, {"type": "para", "indent": 4, "text": ["If high rest springs are present, it might be useful to\n    increase the minimum substep to reduce dampening."], "extent": [3966, 4081]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Substep"], "extent": [4081, 4094], "body": [{"type": "para", "indent": 4, "text": ["No more than this number of substeps will be performed.\n    However, if the adaptive calculation is requiring more than\n    these, it likely will be unstable."], "extent": [4094, 4258]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Conservation"], "extent": [4258, 4272], "body": [{"type": "para", "indent": 4, "text": ["How much energy is conserved in the system.  The\n    velocity is modified by this rate directly.   It measures the\n    fraction of velocity that will be kept after one second of\n    animation.  "], "extent": [4272, 4476]}, {"type": "para", "indent": 4, "text": ["1 means no velocity is lost, 0.5 means 50% after\n    one second, and 0 means the velocity is zeroed out every\n    frame."], "extent": [4476, 4602]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Wave Speed"], "extent": [4602, 4614], "body": [{"type": "para", "indent": 4, "text": ["How fast the ripples travel from point to point.  If Use Edge\n    Len is off, this is measured in terms of topology - distance\n    between each edge is considered 1.  Otherwise, it is\n    proportional to the average edge length at the node."], "extent": [4614, 4860]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Spring"], "extent": [4860, 4873], "body": [{"type": "para", "indent": 4, "text": ["The strength of the springs tying the points to their rest\n    positions.  Because the wave speed calculation only looks at\n    curvature of the displacement field, it will not restore the\n    geometry to the rest state.  "], "extent": [4873, 5105]}, {"type": "para", "indent": 4, "text": ["The total displacement will be\n    preserved by the wave speed.  Adding rest springs will drag\n    the points back to their origin, and possibly induce new\n    ripples in doing so."], "extent": [5105, 5291]}, {"type": "para", "indent": 4, "text": ["The spring is solved implicitly so large values can be used\n    with small time steps.  However, doing so will introduce\n    considerable dampening in the spring behavior - if this is\n    undesired, a lower minimum substep can be used."], "extent": [5291, 5532]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Normal Frame"], "extent": [5532, 5550], "body": [{"type": "para", "indent": 4, "text": ["By default, the stored velocities and curvature computations\n    are done in world space.  Alternatively, one can use the ", {"type": "code", "text": ["rnml"]}, "\n    attribute to define all displacements in terms of the rest\n    geometry\u2019s normal.  This allows ripples to properly bend around\n    curves in the surface."], "extent": [5550, 5842]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Rest Data"], "extent": [5842, 5857], "body": [{"type": "para", "indent": 4, "text": ["Governs if the ", {"type": "code", "text": ["rest"]}, " and ", {"type": "code", "text": ["rnml"]}, " attribute should be used or if a\n    separate Geometry data should be used as the rest geometry."], "extent": [5857, 5992]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Data"], "extent": [5992, 6003], "body": [{"type": "para", "indent": 4, "text": ["Name of the Geometry data which is attached to this object\n    that should be used as the rest data."], "extent": [6003, 6109]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Parameter Operations"], "extent": [16, 38], "body": [{"type": "para", "indent": 4, "text": ["Each data option parameter has an associated menu which specifies\n    how that parameter operates."], "extent": [38, 142]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use Default "], "extent": [142, 160], "body": [{"type": "para", "indent": 8, "text": ["Use the value from the Default Operation menu."], "extent": [160, 215]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Initial "], "extent": [215, 233], "body": [{"type": "para", "indent": 8, "text": ["Set the value of this parameter only when this data is created.\n        On all subsequent timesteps, the value of this parameter is not\n        altered. This is useful for setting up initial conditions like\n        position and velocity."], "extent": [233, 479]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Always "], "extent": [479, 496], "body": [{"type": "para", "indent": 8, "text": ["Always set the value of this parameter. This is useful when\n        specific keyframed values are required over time. This could be\n        used to keyframe the position of an object over time, or to\n        cause the geometry from a SOP to be refetched at each timestep\n        if the geometry is deforming. "], "extent": [496, 823]}, {"type": "para", "indent": 8, "text": ["You can also use this setting in\n        conjunction with the local variables for a parameter value to\n        modify a value over time. For example, in the X Position, an\n        expression like ", {"type": "code", "text": ["$tx + 0.1"]}, " would cause the object to\n        move 0.1 units to the right on each timestep."], "extent": [823, 1119]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Never "], "extent": [1119, 1135], "body": [{"type": "para", "indent": 8, "text": ["Do not ever set the value of this parameter. This option is most\n        useful when using this node to modify an existing piece of data\n        connected through the first input. "], "extent": [1135, 1333]}, {"type": "para", "indent": 8, "text": ["For example, an ", {"scheme": "Node", "value": "/nodes/dop/rbdstate", "type": "link", "text": ["RBD State\n        DOP"], "fullpath": "/nodes/dop/rbdstate"}, " may want to animate just the mass of an\n        object, and nothing else. The ", {"type": "ui", "text": ["Set Never"]}, " option could be used\n        on all parameters except for ", {"type": "ui", "text": ["Mass"]}, ", which would use ", {"type": "ui", "text": ["Set\n        Always"]}, "."], "extent": [1333, 1608]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Default Operation"], "extent": [1608, 1627], "body": [{"type": "para", "indent": 4, "text": ["For any parameters with their ", {"type": "ui", "text": ["Operation"]}, " menu set to ", {"type": "ui", "text": ["Use\n    Default"]}, ", this parameter controls what operation is used. "], "extent": [1627, 1762]}, {"type": "para", "indent": 4, "text": ["This\n    parameter has the same menu options and meanings as the ", {"type": "ui", "text": ["Parameter\n    Operations"]}, " menus, but without the ", {"type": "ui", "text": ["Use Default"]}, " choice."], "extent": [1762, 1908]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Make Objects Mutual Affectors"], "extent": [15, 46], "body": [{"type": "para", "indent": 4, "text": ["All objects connected to the first input of this node become mutual\n    affectors. "], "extent": [46, 139]}, {"type": "para", "indent": 4, "text": ["This is equivalent to using an ", {"scheme": "Node", "value": "/nodes/dop/affector", "type": "link", "text": ["Affector\n    DOP"], "fullpath": "/nodes/dop/affector"}, " to create an affector relationship between\n    ", {"type": "code", "text": ["*"]}, " and ", {"type": "code", "text": ["*"]}, " before connecting it to this node. This option makes it\n    convenient to have all objects feeding into a solver node affect\n    each other."], "extent": [139, 412]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [15, 22], "body": [{"type": "para", "indent": 4, "text": ["When an object connector is attached to the first input of this\n    node, this parameter can be used to choose a subset of those objects\n    to be affected by this node."], "extent": [45, 219]}], "container": true, "attrs": {"channels": "/group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Data Name"], "extent": [15, 26], "body": [{"type": "para", "indent": 4, "text": ["Indicates the name that should be used to attach the data to an\n    object or other piece of data. If the Data Name contains a ", {"type": "q", "text": ["/"]}, " (or\n    several), that indicates traversing inside subdata. "], "extent": [26, 227]}, {"type": "para", "indent": 4, "text": ["For example, if the ", {"scheme": "Node", "value": "/nodes/dop/fan", "type": "link", "text": ["Fan Force DOP"], "fullpath": "/nodes/dop/fan"}, " has the default Data Name\n    ", {"type": "q", "text": ["Forces/Fan"]}, ". This attaches the data with the name ", {"type": "q", "text": ["Fan"]}, " to an\n    existing piece of data named ", {"type": "q", "text": ["Forces"]}, ". If no data named ", {"type": "q", "text": ["Forces"]}, "\n    exists, a simple piece of container data is created to hold the\n    ", {"type": "q", "text": ["Fan"]}, " subdata."], "extent": [227, 530]}, {"type": "para", "indent": 4, "text": ["Different pieces of data have different requirements on what names\n    should be used for them. Except in very rare situations, the default\n    value should be used. Some exceptions are described with particular\n    pieces of data or with solvers that make use of some particular type\n    of data."], "extent": [530, 833]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Unique Data Name"], "extent": [833, 851], "body": [{"type": "para", "indent": 4, "text": ["Turning on this parameter modifies the ", {"type": "ui", "text": ["Data Name"]}, " parameter\n    value to ensure that the data created by this node is attached with\n    a unique name so it will not overwrite any existing data. "], "extent": [851, 1058]}, {"type": "para", "indent": 4, "text": ["With this\n    parameter turned off, attaching two pieces of data with the same\n    name will cause the second one to replace the first. There are\n    situations where each type of behavior is desirable. "], "extent": [1058, 1271]}, {"type": "para", "indent": 4, "text": ["If an object\n    needs to have several ", {"scheme": "Node", "value": "/nodes/dop/fan", "type": "link", "text": ["Fan Forces"], "fullpath": "/nodes/dop/fan"}, " blowing on it, it is\n    much easier to use the ", {"type": "ui", "text": ["Unique Data Name"]}, " feature to ensure that\n    each fan does not overwrite a previous fan rather than trying to\n    change the ", {"type": "ui", "text": ["Data Name"]}, " of each fan individually to avoid\n    conflicts. "], "extent": [1271, 1585]}, {"type": "para", "indent": 4, "text": ["On the other hand, if an object is known to have ", {"scheme": "Node", "value": "/nodes/dop/rbdstate", "type": "link", "text": ["RBD\n    State"], "fullpath": "/nodes/dop/rbdstate"}, " data already attached to it, leaving this\n    option turned off will allow some new ", {"scheme": "Node", "value": "/nodes/dop/rbdstate", "type": "link", "text": ["RBD State"], "fullpath": "/nodes/dop/rbdstate"}, "\n    data to overwrite the existing data."], "extent": [1585, 1827]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Solver Per Object"], "extent": [159, 178], "body": [{"type": "para", "indent": 4, "text": ["The default behavior for solvers is to attach the exact same\n    solver to all of the objects specified in the group.  This allows\n    the objects to be processed in a single pass by the solver, since\n    the parameters are identical for each object.  "], "extent": [178, 440]}, {"type": "para", "indent": 4, "text": ["However, some objects operate more logically on a single object at\n    a time.  In these cases, one may want to use ", {"type": "code", "text": ["$OBJID"]}, " expressions\n    to vary the solver parameters across the objects.  Setting this\n    toggle will create a separate solver per object, allowing ", {"type": "code", "text": ["$OBJID"]}, "\n    to vary as expected."], "extent": [440, 746]}, {"type": "para", "indent": 4, "text": ["Setting this is also required if stamping the parameters with a\n    Copy Data DOP."], "extent": [746, 833]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [6142, 6150], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Input"], "extent": [15, 28], "body": [{"type": "para", "indent": 4, "text": ["This optional input can be used to control which simulation objects\n    are modified by this node. Any objects connected through this input\n    and which match the ", {"type": "ui", "text": ["Group"]}, " parameter field will be modified. "], "extent": [28, 246]}, {"type": "para", "indent": 4, "text": ["If this input is not connected, this node can be used in conjunction with an\n    Apply Data node, or can be used as an input to another data node."], "extent": [246, 397]}], "container": true}, {"type": "dt", "indent": 0, "text": ["All Other Inputs"], "extent": [397, 415], "body": [{"type": "para", "indent": 4, "text": ["If this node has more input connectors, other data nodes can be\n    attached to act as modifiers for the data created by this node. "], "extent": [415, 557]}, {"type": "para", "indent": 4, "text": ["The specific types of subdata that are meaningful vary from node to\n    node. Click ", {"keys": ["MMB"], "type": "keys", "text": null}, " an input connector to see a list of available\n    data nodes that can be meaningfully attached."], "extent": [557, 749]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [6183, 6192], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Output"], "extent": [15, 29], "body": [{"type": "para", "indent": 4, "text": ["The operation of this output depends on what inputs are connected\n    to this node. If an object stream is input to this node, the output\n    is also an object stream containing the same objects as the input\n    (but with the data from this node attached). "], "extent": [29, 296]}, {"type": "para", "indent": 4, "text": ["If no object stream is\n    connected to this node, the output is a data output. This data\n    output can be connected to an ", {"scheme": "Node", "value": "/nodes/dop/applydata", "type": "link", "text": ["Apply Data DOP"], "fullpath": "/nodes/dop/applydata"}, ",\n    or connected directly to a data input of another data node, to\n    attach the data from this node to an object or another piece of\n    data."], "extent": [296, 606]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [6226, 6234], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["channelname"], "extent": [16, 29], "body": [{"type": "para", "indent": 4, "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "], "extent": [29, 325]}, {"type": "para", "indent": 4, "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "], "extent": [325, 519]}, {"type": "para", "indent": 4, "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"], "extent": [519, 692]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "], "extent": [692, 775]}, {"type": "para", "indent": 4, "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."], "extent": [775, 883]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACT"], "extent": [883, 891], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."], "extent": [891, 1132]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACF"], "extent": [1132, 1140], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."], "extent": [1140, 1383]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELNAME"], "extent": [1383, 1392], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1392, 1594]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to the\n    name of the relationship to which the data is being attached."], "extent": [1594, 1703]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJIDS"], "extent": [1703, 1714], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1714, 1916]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."], "extent": [1916, 2119]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJNAMES"], "extent": [2119, 2132], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2132, 2334]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."], "extent": [2334, 2519]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJIDS"], "extent": [2519, 2533], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2533, 2735]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."], "extent": [2735, 2938]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJNAMES"], "extent": [2938, 2954], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2954, 3156]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."], "extent": [3156, 3341]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ST"], "extent": [16, 20], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time for which the node is being\n    evaluated. "], "extent": [20, 107]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " ", {"type": "ui", "text": ["Offset Time"]}, " and ", {"type": "ui", "text": ["Time Scale"]}, "\n    parameters. "], "extent": [107, 326]}, {"type": "para", "indent": 4, "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"type": "code", "text": ["$ST == 0"]}, " rather than\n    ", {"type": "code", "text": ["$T == 0"]}, " or ", {"type": "code", "text": ["$FF == 1"]}, "."], "extent": [326, 555]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SF"], "extent": [555, 559], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."], "extent": [559, 700]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."], "extent": [700, 999]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TIMESTEP"], "extent": [999, 1009], "body": [{"type": "para", "indent": 4, "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."], "extent": [1009, 1181]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SFPS"], "extent": [1181, 1187], "body": [{"type": "para", "indent": 4, "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."], "extent": [1187, 1305]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SNOBJ"], "extent": [1305, 1312], "body": [{"type": "para", "indent": 4, "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "], "extent": [1312, 1523]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"type": "code", "text": ["object_$SNOBJ"]}, "."], "extent": [1523, 1621]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NOBJ"], "extent": [1621, 1627], "body": [{"type": "para", "indent": 4, "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "], "extent": [1627, 1859]}, {"type": "para", "indent": 4, "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [1859, 1991]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJ"], "extent": [1991, 1996], "body": [{"type": "para", "indent": 4, "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "], "extent": [1996, 2322]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [2322, 2616]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJID"], "extent": [2616, 2623], "body": [{"type": "para", "indent": 4, "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "], "extent": [2623, 2883]}, {"type": "para", "indent": 4, "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "], "extent": [2883, 3168]}, {"type": "para", "indent": 4, "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3168, 3406]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJIDS"], "extent": [3406, 3417], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."], "extent": [3417, 3556]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3556, 3569], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."], "extent": [3569, 3687]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCT"], "extent": [3687, 3694], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "], "extent": [3694, 3801]}, {"type": "para", "indent": 4, "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"type": "code", "text": ["$ST == $OBJCT"]}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3801, 4057]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCF"], "extent": [4057, 4064], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "], "extent": [4064, 4172]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4172, 4389]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJNAME"], "extent": [4389, 4398], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the name of the object being\n    processed. "], "extent": [4398, 4486]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "], "extent": [4486, 4748]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named ", {"type": "q", "text": ["myobject"]}, ",\n    specifying ", {"type": "code", "text": ["strcmp($OBJNAME, \"myobject\") == 0"]}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4748, 5194]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DOPNET"], "extent": [5194, 5202], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."], "extent": [5202, 5425]}], "container": true}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [5425, 5431], "body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position node"], "fullpath": "/nodes/dop/position"}, ",\n    you could write the expression:"], "extent": [5431, 5620]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "], "extent": [5620, 5650]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."], "extent": [5650, 5730]}], "container": true}], "container": true, "role": "item_group"}], "text": "Locals"}], "title": ["Ripple Solver"], "summary": ["Animates wave propagation across Ripple Objects."], "included": ["/nodes/dop/standard_data_inputs", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_datagroup_parms", "/nodes/dop/standard_dataname_parms", "/nodes/dop/standard_dataop_parms", "/nodes/dop/standard_locals", "/nodes/dop/standard_solver_mutualparms", "/nodes/dop/standard_solver_parms", "/nodes/dop/standard_wave_attribs"]}