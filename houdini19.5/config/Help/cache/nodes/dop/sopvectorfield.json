{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "sopvectorfield", "icon": "dop/sopvectorfield", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["SOP Vector Field"], "extent": [79, 100]}, {"type": "summary", "indent": 0, "text": ["Creates a vector field from a SOP Volume Primitive."], "extent": [100, 160]}, {"type": "para", "indent": 0, "text": ["The Vector Field DOP creates a Vector Field data that can be attached\nto simulation objects and manipulated by solvers.  A Vector Field is\nan axis-aligned box divided into individual voxels.  Each voxel is\ngiving a 3d vector.  "], "extent": [160, 389]}, {"type": "para", "indent": 0, "text": ["The meaning of these numbers could vary. They could represent force directions or a color field.  The Vector Field is initialized with data from a SOP network."], "extent": [389, 550]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [550, 556], "body": [{"type": "para", "indent": 4, "text": ["The field data is imported from SOPs prior to any transformation defined by the Position Data Path."], "extent": [556, 661]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [661, 673], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Use SOP Dimensions"], "extent": [673, 697], "body": [{"type": "para", "indent": 8, "text": ["Overrides the ", {"type": "ui", "text": ["Divisions"]}, ", ", {"type": "ui", "text": ["Center"]}, ", and ", {"type": "ui", "text": ["Size"]}, " options according\n        the properties of the volume primitive in the specified SOP.\n        This attempts to bring the SOP back at the same size and\n        resolution it was supported.  "], "extent": [697, 959]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [959, 973], "body": [{"type": "para", "indent": 12, "text": ["This may not work if the SOP has been transformed, especially if rotated, as the DOP scalar field has to be axis aligned.  Only the first specified volume primitive will be used to calculate the override - the other two axes will be sampled in that space."], "extent": [973, 1242]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["SOP Resize Only"], "extent": [1242, 1263], "body": [{"type": "para", "indent": 8, "text": ["Restricts ", {"type": "ui", "text": ["Use SOP Dimenstions"]}, " option to only override ", {"type": "ui", "text": ["Center"]}, " \n        and ", {"type": "ui", "text": ["Size"]}, ". This is useful for customizing the resolution of the\n        vector field."], "extent": [1263, 1451]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Two Dimensional"], "extent": [16, 33], "body": [{"type": "para", "indent": 4, "text": ["One of the divisions of the voxel grid will be forced to one to\n    create a two dimensional field."], "extent": [33, 137]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Plane"], "extent": [137, 144], "body": [{"type": "para", "indent": 4, "text": ["If set to two dimensional, this plane determines which axes remain\n    unaffected."], "extent": [144, 231]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Division Method"], "extent": [231, 248], "body": [{"type": "para", "indent": 4, "text": ["If non square, the specified size is divided into the given number\n    of divisions of voxels.  The sides of these voxels may not be\n    equal, however, possibly leading to distorted simulations."], "extent": [248, 449]}, {"type": "para", "indent": 4, "text": ["When an axis is specified, that axis is considered authoritative\n    for determining the number of divisions.  The chosen axis' size\n    will be divided by the uniform divisions to yield the voxel\n    size.  The divisions for the other axes will then be adjusted to\n    the closest integer multiple that fits in the required size."], "extent": [449, 789]}, {"type": "para", "indent": 4, "text": ["Finally, the size along non-chosen axes will be changed to\n    represent uniform voxel sizes.  If the ", {"type": "ui", "text": ["Max Axis"]}, " option is chosen,\n    the maximum sized axis is used."], "extent": [789, 963]}, {"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["By Size"]}, " is specified, the ", {"type": "ui", "text": ["Division Size"]}, " will be used to\n    compute the number of voxels that fit in the given sized box."], "extent": [963, 1102]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Uniform Divisions"], "extent": [1102, 1121], "body": [{"type": "para", "indent": 4, "text": ["The resolution of the key axis on the voxel grid.  This allows one\n    to control the overall resolution with one parameter and still\n    preserve uniform voxels.  The ", {"type": "ui", "text": ["Uniform Voxels"]}, " option specifies\n    which axis should be used as the reference - it is usually safest\n    to use the maximum axis."], "extent": [1121, 1428]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Divisions"], "extent": [1428, 1439], "body": [{"type": "para", "indent": 4, "text": ["The resolution of the voxel grid that will be used to calculate\n    the smoke object. Higher resolutions allow for finer detail in\n    both the appearance and in the resulting motion. However, doubling the\n    divisions requires eight times the memory. "], "extent": [1439, 1702]}, {"type": "para", "indent": 4, "text": ["Since the substepping should be proportional to the voxel size,\n    doubling the divisions may require double the substepping, resulting in sixteen times the simulation time."], "extent": [1702, 1881]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Division Size"], "extent": [1881, 1896], "body": [{"type": "para", "indent": 4, "text": ["The explicit size of the voxels.  The number of voxels will be\n    computed by fitting an integer number of voxels of this size into\n    the given bounds."], "extent": [1896, 2055]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Size"], "extent": [2055, 2061], "body": [{"type": "para", "indent": 4, "text": ["The size of the voxel grid. The size of each voxel will be this\n    divided by the divisions."], "extent": [2061, 2159]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Center"], "extent": [2159, 2167], "body": [{"type": "para", "indent": 4, "text": ["The position in world space of the center of the voxel grid."], "extent": [2167, 2232]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Voxel Sampling"], "extent": [1489, 1509], "body": [{"type": "para", "indent": 8, "text": ["The overall box will be divided into the specified number of\n        small boxes, or voxels.  However, the question remains where\n        on these voxels the field\u2019s vectors should be stored."], "extent": [1509, 1710]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Center"], "extent": [1710, 1726], "body": [{"type": "para", "indent": 12, "text": ["The vector will be stored at the center of each voxel.  The\n            total number of samples thus matches the number of boxes."], "extent": [1726, 1868]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Faces"], "extent": [1868, 1883], "body": [{"type": "para", "indent": 12, "text": ["The vector will be split and each component will be stored\n            on one of the voxel\u2019s faces.  "], "extent": [1883, 2010]}, {"type": "para", "indent": 12, "text": ["The x component on the x\n            face, the y component on the y face, and the z component\n            on the z face.  Along that dimension, the number of\n            samples will be one higher to store the start and end\n            voxel\u2019s face values."], "extent": [2010, 2279]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Edges"], "extent": [2279, 2294], "body": [{"type": "para", "indent": 12, "text": ["The vector will be split and each component will be stored\n            on the center of one of the voxel\u2019s edges."], "extent": [2294, 2433]}, {"type": "para", "indent": 12, "text": ["The dimensions involved will be one\n            larger to account for the boundaries."], "extent": [2433, 2531]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Corner"], "extent": [2531, 2547], "body": [{"type": "para", "indent": 12, "text": ["The value will be stored on the corners of each voxel."], "extent": [2547, 2627]}, {"type": "para", "indent": 12, "text": ["The number of samples will be one higher in each dimension\n            than the division count to contain all the boundary\n            values."], "extent": [2627, 2782]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Closed Ends"], "extent": [2782, 2799], "body": [{"type": "para", "indent": 8, "text": ["Determines the behavior of boundary values.  "], "extent": [2799, 2862]}, {"type": "para", "indent": 8, "text": ["If set, the\n        boundary will be enforced with the ", {"type": "ui", "text": ["External Direction"]}, ".\n        Otherwise, the boundary is left free."], "extent": [2862, 2996]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["X, Y, Z"], "extent": [2996, 3013], "body": [{"type": "para", "indent": 12, "text": ["When closed ends is set, these select which\n            sides will be closed."], "extent": [3013, 3103]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Border Type"], "extent": [3103, 3120], "body": [{"type": "para", "indent": 8, "text": ["The behavior when the field is sampled outside of its\n        defined box."], "extent": [3120, 3204]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Constant"], "extent": [3204, 3222], "body": [{"type": "para", "indent": 12, "text": ["The external direction will be returned."], "extent": [3222, 3275]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Repeat"], "extent": [3275, 3291], "body": [{"type": "para", "indent": 12, "text": ["The field will wrap, returning values from the\n            opposite side of the field."], "extent": [3291, 3390]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Streak"], "extent": [3390, 3406], "body": [{"type": "para", "indent": 12, "text": ["The value at the edge of the field closest to the\n            sample will be returned."], "extent": [3406, 3505]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Extrapolated"], "extent": [3505, 3527], "body": [{"type": "para", "indent": 12, "text": ["The value at the edge of the field closest to the sample\n            will be used.  However, it will then be added to the\n            dot product of the voxel size with the difference of voxel\n            indices.  This results in the correct extrapolation of\n            axis aligned rest fields.  For non-axis aligned rest\n            fields, the ", {"scheme": "Node", "value": "/nodes/dop/gasrest", "type": "link", "text": ["Gas Rest DOP"], "fullpath": "/nodes/dop/gasrest"}, " will set up the ratios properly."], "extent": [3527, 3953]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["External Direction"], "extent": [3953, 3977], "body": [{"type": "para", "indent": 8, "text": ["What value to enforce on the boundary of the vector field."], "extent": [3977, 4044]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Scale Values"], "extent": [4044, 4062], "body": [{"type": "para", "indent": 8, "text": ["The incoming SOP field will be multiplied by this value."], "extent": [4062, 4127]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Tolerance"], "extent": [4127, 4142], "body": [{"type": "para", "indent": 8, "text": ["The absolute tolerance to use for lossy compression of the\n        vector field.  This can reduce memory usage by detecting\n        constant areas or using a lower bit-depth representation.  "], "extent": [4142, 4351]}, {"type": "para", "indent": 8, "text": ["A value of 0 only allows lossless compression."], "extent": [4351, 4406]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Use 16bit Float"], "extent": [4406, 4427], "body": [{"type": "para", "indent": 8, "text": ["The tiles will be stored using a 16 bit float rather than 32\n        bit float.  This uses half the memory, but at the cost of\n        reduced precision and increased computation.  "], "extent": [4427, 4618]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [4618, 4632], "body": [{"type": "para", "indent": 16, "text": ["All computations are still done in 32 bit floats."], "extent": [4632, 4699]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Sop Path"], "extent": [4699, 4713], "body": [{"type": "para", "indent": 8, "text": ["The SOP to extract the three volume primitives from.  "], "extent": [4713, 4785]}, {"type": "para", "indent": 8, "text": ["After the\n        primitives are extracted, this field is erased.  To reload the\n        vector data every frame, use ", {"type": "ui", "text": ["Set Always"]}, "."], "extent": [4785, 4927]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Primitive Numbers"], "extent": [4927, 4950], "body": [{"type": "para", "indent": 8, "text": ["Which primitive in the SOP are the volume primitives to\n        correspond to the x, y, and z values for the vector field."], "extent": [4950, 5082]}, {"type": "para", "indent": 8, "text": ["If the primitive is a vector-valued VDB, the corresponding\n        tuple value will be be extracted.  To load a vector field\n        from a vector vdb, the same vector vdb\u2019s primitive number should\n        be specified for each of the x, y, and z axes."], "extent": [5082, 5343]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Time"], "extent": [5343, 5353], "body": [{"type": "para", "indent": 8, "text": ["The time to evaluate the SOP at, in seconds.  ", {"type": "code", "text": ["$T"]}, " is a suitable\n        value to evaluate at the current global time."], "extent": [5353, 5481]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Use Object Transform"], "extent": [5481, 5507], "body": [{"type": "para", "indent": 8, "text": ["Turn on this option to embed the transform from the parent\n        object of the SOP along with the geometry.   "], "extent": [5507, 5629]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [5629, 5643], "body": [{"type": "para", "indent": 12, "text": ["This does not change the contents of the vector field."], "extent": [5643, 5711]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Re-evaluate SOPs to Interpolate Geometry"], "extent": [5711, 5757], "body": [{"type": "para", "indent": 8, "text": ["Normally when a solver asks for geometry data in a sub-step, the\n        simulation will simply linearly interpolate position data from integral\n        frames. However, this is not exact. Turning this option on re-evaluates\n        the geometry network for each substep. This is more accurate, but can\n        be very expensive."], "extent": [5757, 6095]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Slice"], "extent": [16, 23], "body": [{"type": "para", "indent": 4, "text": ["Which slice to use.  Should be a number between 0 and the number of slices - 1."], "extent": [23, 107]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Slice Divisions"], "extent": [107, 124], "body": [{"type": "para", "indent": 4, "text": ["Number of pieces to cut the volume into along each axis.  The total number of pieces, or slices, created will be the product of these numbers.  Ie, 2, 3, 4 will create 24 slices."], "extent": [124, 307]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Overlap Voxels Negative, Positive"], "extent": [307, 342], "body": [{"type": "para", "indent": 4, "text": ["Adds a padding on the lower/upper side of the slices.  The slices start by dividing space evenly, but then this overlap will cause them to overlap with their neighbors.  The field exchange nodes use this overlap to determine what is communicated."], "extent": [342, 593]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Position Data Path"], "extent": [16, 36], "body": [{"type": "para", "indent": 4, "text": ["The optional relative path for Position data.  This will be used to\n    transform the fluid box, allowing for non-axis aligned fluid sims.  A value\n    of ", {"type": "code", "text": ["../Position"]}, " will allow you to attach a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position DOP"], "fullpath": "/nodes/dop/position"}, " to your fluid object and thus reorient the fluid."], "extent": [36, 319]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [6171, 6179], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Input"], "extent": [15, 28], "body": [{"type": "para", "indent": 4, "text": ["This optional input can be used to control which simulation objects\n    are modified by this node. Any objects connected through this input\n    and which match the ", {"type": "ui", "text": ["Group"]}, " parameter field will be modified. "], "extent": [28, 246]}, {"type": "para", "indent": 4, "text": ["If this input is not connected, this node can be used in conjunction with an\n    Apply Data node, or can be used as an input to another data node."], "extent": [246, 397]}], "container": true}, {"type": "dt", "indent": 0, "text": ["All Other Inputs"], "extent": [397, 415], "body": [{"type": "para", "indent": 4, "text": ["If this node has more input connectors, other data nodes can be\n    attached to act as modifiers for the data created by this node. "], "extent": [415, 557]}, {"type": "para", "indent": 4, "text": ["The specific types of subdata that are meaningful vary from node to\n    node. Click ", {"keys": ["MMB"], "type": "keys", "text": null}, " an input connector to see a list of available\n    data nodes that can be meaningfully attached."], "extent": [557, 749]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [6215, 6224], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Output"], "extent": [15, 29], "body": [{"type": "para", "indent": 4, "text": ["The operation of this output depends on what inputs are connected\n    to this node. If an object stream is input to this node, the output\n    is also an object stream containing the same objects as the input\n    (but with the data from this node attached). "], "extent": [29, 296]}, {"type": "para", "indent": 4, "text": ["If no object stream is\n    connected to this node, the output is a data output. This data\n    output can be connected to an ", {"scheme": "Node", "value": "/nodes/dop/applydata", "type": "link", "text": ["Apply Data DOP"], "fullpath": "/nodes/dop/applydata"}, ",\n    or connected directly to a data input of another data node, to\n    attach the data from this node to an object or another piece of\n    data."], "extent": [296, 606]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [6261, 6269], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["channelname"], "extent": [16, 29], "body": [{"type": "para", "indent": 4, "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "], "extent": [29, 325]}, {"type": "para", "indent": 4, "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "], "extent": [325, 519]}, {"type": "para", "indent": 4, "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"], "extent": [519, 692]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "], "extent": [692, 775]}, {"type": "para", "indent": 4, "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."], "extent": [775, 883]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACT"], "extent": [883, 891], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."], "extent": [891, 1132]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACF"], "extent": [1132, 1140], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."], "extent": [1140, 1383]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELNAME"], "extent": [1383, 1392], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1392, 1594]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to the\n    name of the relationship to which the data is being attached."], "extent": [1594, 1703]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJIDS"], "extent": [1703, 1714], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1714, 1916]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."], "extent": [1916, 2119]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJNAMES"], "extent": [2119, 2132], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2132, 2334]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."], "extent": [2334, 2519]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJIDS"], "extent": [2519, 2533], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2533, 2735]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."], "extent": [2735, 2938]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJNAMES"], "extent": [2938, 2954], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2954, 3156]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."], "extent": [3156, 3341]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ST"], "extent": [16, 20], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time for which the node is being\n    evaluated. "], "extent": [20, 107]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " ", {"type": "ui", "text": ["Offset Time"]}, " and ", {"type": "ui", "text": ["Time Scale"]}, "\n    parameters. "], "extent": [107, 326]}, {"type": "para", "indent": 4, "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"type": "code", "text": ["$ST == 0"]}, " rather than\n    ", {"type": "code", "text": ["$T == 0"]}, " or ", {"type": "code", "text": ["$FF == 1"]}, "."], "extent": [326, 555]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SF"], "extent": [555, 559], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."], "extent": [559, 700]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."], "extent": [700, 999]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TIMESTEP"], "extent": [999, 1009], "body": [{"type": "para", "indent": 4, "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."], "extent": [1009, 1181]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SFPS"], "extent": [1181, 1187], "body": [{"type": "para", "indent": 4, "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."], "extent": [1187, 1305]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SNOBJ"], "extent": [1305, 1312], "body": [{"type": "para", "indent": 4, "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "], "extent": [1312, 1523]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"type": "code", "text": ["object_$SNOBJ"]}, "."], "extent": [1523, 1621]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NOBJ"], "extent": [1621, 1627], "body": [{"type": "para", "indent": 4, "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "], "extent": [1627, 1859]}, {"type": "para", "indent": 4, "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [1859, 1991]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJ"], "extent": [1991, 1996], "body": [{"type": "para", "indent": 4, "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "], "extent": [1996, 2322]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [2322, 2616]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJID"], "extent": [2616, 2623], "body": [{"type": "para", "indent": 4, "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "], "extent": [2623, 2883]}, {"type": "para", "indent": 4, "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "], "extent": [2883, 3168]}, {"type": "para", "indent": 4, "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3168, 3406]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJIDS"], "extent": [3406, 3417], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."], "extent": [3417, 3556]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3556, 3569], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."], "extent": [3569, 3687]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCT"], "extent": [3687, 3694], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "], "extent": [3694, 3801]}, {"type": "para", "indent": 4, "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"type": "code", "text": ["$ST == $OBJCT"]}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3801, 4057]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCF"], "extent": [4057, 4064], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "], "extent": [4064, 4172]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4172, 4389]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJNAME"], "extent": [4389, 4398], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the name of the object being\n    processed. "], "extent": [4398, 4486]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "], "extent": [4486, 4748]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named ", {"type": "q", "text": ["myobject"]}, ",\n    specifying ", {"type": "code", "text": ["strcmp($OBJNAME, \"myobject\") == 0"]}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4748, 5194]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DOPNET"], "extent": [5194, 5202], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."], "extent": [5202, 5425]}], "container": true}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [5425, 5431], "body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position node"], "fullpath": "/nodes/dop/position"}, ",\n    you could write the expression:"], "extent": [5431, 5620]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "], "extent": [5620, 5650]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."], "extent": [5650, 5730]}], "container": true}], "container": true, "role": "item_group"}], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [6336, 6345], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/sopvectorfield", "type": "link", "text": "", "fullpath": "/nodes/dop/sopvectorfield"}], "extent": [6345, 6377]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/vectorfieldvisualization", "type": "link", "text": "", "fullpath": "/nodes/dop/vectorfieldvisualization"}], "extent": [6377, 6421]}], "container": true}], "text": "Related"}], "title": ["SOP Vector Field"], "summary": ["Creates a vector field from a SOP Volume Primitive."], "included": ["/nodes/dop/standard_data_inputs", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_fluidpositionpath", "/nodes/dop/standard_gas_divisions", "/nodes/dop/standard_gas_slice", "/nodes/dop/standard_locals"]}