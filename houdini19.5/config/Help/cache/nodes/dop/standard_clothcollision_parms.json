{"type": "root", "attrs": {"type": "include"}, "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Collide with objects"], "extent": [16, 38], "body": [{"type": "para", "indent": 4, "text": ["If enabled, the geometry in this object will collide with all other objects. These other objects may belong to the same solver or they may be be ", {"scheme": "Node", "value": "/nodes/dop/staticobject", "type": "link", "text": ["Static Objects"], "fullpath": "/nodes/dop/staticobject"}, ", ", {"scheme": "Node", "value": "/nodes/dop/rbdobject", "type": "link", "text": ["RBD Objects"], "fullpath": "/nodes/dop/rbdobject"}, ", or the ", {"scheme": "Node", "value": "/nodes/dop/groundplane", "type": "link", "text": ["Ground Plane"], "fullpath": "/nodes/dop/groundplane"}, ". When the ", {"type": "ui", "text": ["Collision Detection"]}, " parameter on the Static Object is set to ", {"type": "ui", "text": ["Use Volume Collisions"]}, ", then the polygon vertices will be tested for collision against the signed distance field (SDF) of the Static Object. When ", {"type": "ui", "text": ["Collision Detection"]}, " is set to ", {"type": "ui", "text": ["Use Surface Collisions"]}, ", then geometry-based continuous collision detection is used. The geometry-based collisions collide points against polygons, and edges against edges."], "extent": [67, 772]}, {"type": "para", "indent": 4, "text": ["When geometry-based collisions are used, only polygons and tetrahedrons in the ", {"scheme": "Node", "value": "/nodes/dop/staticobject", "type": "link", "text": ["Static Object"], "fullpath": "/nodes/dop/staticobject"}, " are considered. Other types of primitives, for example spheres, are be ignored. The geometry of the external objects (e.g. Static Object) is treated as being one-sided; only the outsides of the polygons, determined by the winding order, oppose collisions."], "extent": [772, 1150]}, {"type": "para", "indent": 4, "text": ["When volume-based collisions are enabled, only points will be colliding against the volumes, not the interiors of polygons and tetrahedrons. When colliding against small volumes, this may mean that you need to increase the number of points on your mesh to get accurate collision results."], "extent": [1150, 1443]}], "container": true, "attrs": {"id": "collideindependent"}}, {"type": "dt", "indent": 0, "text": ["Collide with objects in this solver"], "extent": [1443, 1480], "body": [{"type": "para", "indent": 4, "text": ["When enabled, this object will collide with other objects that have the same solver. These collisions are handled using continuous collision detection, based on the geometry (polygons and/or tetrahedrons). For collisions between objects on the same solver, the polygons are treated as two-sided. Both sides of the polygons collide. The surface of a tetrahedral mesh only collides on one side: the outside."], "extent": [1509, 1920]}], "container": true, "attrs": {"id": "collidecodependent"}}, {"type": "dt", "indent": 0, "text": ["Collide within this object"], "extent": [1920, 1948], "body": [{"type": "para", "indent": 4, "text": ["If disabled, then no two polygons within this object can collide with each other."], "extent": [1970, 2061]}], "container": true, "attrs": {"id": "collideself"}}, {"type": "dt", "indent": 0, "text": ["Collide within each component"], "extent": [2061, 2092], "body": [{"type": "para", "indent": 4, "text": ["If disabled, then no two polygons that belong on the same connected component may collide with each other."], "extent": [2123, 2236]}], "container": true, "attrs": {"id": "collideselfcomponent"}}, {"type": "dt", "indent": 0, "text": ["Collide within each fracture part"], "extent": [2236, 2271], "body": [{"type": "para", "indent": 4, "text": ["This option only has an effect when fracturing is enabled on the solver. If disabled, then no two polygons that belong on the same fracture part may collide with each other. Fracture parts are controlled by the integer-valued ", {"type": "code", "text": ["fracturepart"]}, " primitive attribute."], "extent": [2304, 2571]}], "container": true, "attrs": {"id": "collideselffracturepart"}}, {"type": "dt", "indent": 0, "text": ["Collision Radius"], "extent": [2571, 2589], "body": [{"type": "para", "indent": 4, "text": ["This is the radius of an imaginary padding layer around the polygons. This layer consists of the region of space that has a distance of at most ", {"type": "ui", "text": ["Collision Radius"]}, " to some polygon. For two-sided collision surfaces, such as cloth geometry, the layer applies to both sides of each polygon (back and front). For one-sided collision surfaces, such as polygons in a ", {"scheme": "Node", "value": "/nodes/dop/staticobject", "type": "link", "text": ["Static Object"], "fullpath": "/nodes/dop/staticobject"}, ", the collision radius is applied only on the front side of the polygons. The ", {"scheme": "Node", "value": "/nodes/dop/femsolver", "type": "link", "text": ["FEM Solver"], "fullpath": "/nodes/dop/femsolver"}, " tries to ensure that the layers for the objects don\u2019t penetrate each other or pass through each other."], "extent": [2614, 3231]}, {"type": "para", "indent": 4, "text": ["For example, when a pair of two-sided polygons collide, one with a thickness of 0.01 and one with a thickness of 0.02, the solver will try to separate polygons of these objects by a distance of 0.03. "], "extent": [3231, 3437]}, {"type": "para", "indent": 4, "text": ["The ", {"type": "ui", "text": ["Thickness"]}, " parameter is one of the very few parameters that is scale dependent. It is very important that you adjust this parameter when you change the scale or amount of detail of your geometry."], "extent": [3437, 3645]}, {"type": "para", "indent": 4, "text": ["Use a ", {"type": "ui", "text": ["Thickness"]}, " that is significantly smaller than the length of the shortest edge in your simulation geometry. Typically, the ", {"type": "ui", "text": ["Thickness"]}, " should not exceed 1% percent of the average edge length. To avoid problems with self collisions, you should keep the polygons (and/or tetrahedrons) in your geometry fairly even-sized. Avoid polygons that have very small edges, compared to the average size of the polygons in your cloth geometry."], "extent": [3645, 4091]}], "container": true, "attrs": {"id": "collisionradius"}}, {"type": "dt", "indent": 0, "text": ["Friction"], "extent": [4091, 4101], "body": [{"type": "para", "indent": 4, "text": ["The coefficient of friction of the object. A value of 0 means the object is frictionless. This governs how much the velocity that is tangential to the contact plane is affected by collisions. When two objects are in contact, then the solver multiplies the friction coefficients of the involved object to get the effective friction coefficient for that contact."], "extent": [4120, 4486]}], "container": true, "attrs": {"id": "friction"}}], "container": true}]}