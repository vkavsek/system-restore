{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "wireglueconstraint", "icon": "DOP/wireglueconstraint", "tags": "wire", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Wire Glue Constraint"], "extent": [99, 124]}, {"type": "summary", "indent": 0, "text": ["Constraints a wire point to a certain position and direction."], "extent": [124, 194]}, {"type": "para", "indent": 0, "text": ["This involves constraining some point on the ", {"scheme": "Node", "value": "/nodes/dop/wireobject", "type": "link", "text": ["Wire Object"], "fullpath": "/nodes/dop/wireobject"}, " to a ", {"type": "q", "text": ["goal"]}, " location and orientation derived from animation on the Wire Object\u2019s\ngeometry, another simulation object or from a position and orientation\nin world space."], "extent": [194, 442]}, {"type": "para", "indent": 0, "text": ["This node is useful when simulating hair or fur by letting you animate\nthe roots of the hairs in the source geometry and have the simulated wires\ncreated from them follow along."], "extent": [442, 621]}, {"level": 2, "id": "includeme", "container": true, "type": "h", "indent": 0, "text": ["Using Wire Glue Constraint"], "extent": [470, 515], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["Click the ", {"scheme": "Icon", "value": "DOP/wireglueconstraint", "type": "link", "text": "", "fullpath": "/shelf/DOP/wireglueconstraint"}, {"scheme": "Node", "value": "/nodes/dop/wireglueconstraint", "type": "link", "text": ["Wire Glue Constraint"], "fullpath": "/nodes/dop/wireglueconstraint"}, " tool on the ", {"type": "ui", "text": ["Wires"]}, " tab."], "extent": [515, 656]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Select the dynamic object or points to constrain and press ", {"keys": ["Enter"], "type": "keys", "text": null}, " to confirm your selection."], "extent": [656, 758], "body": [{"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [758, 772], "body": [{"type": "para", "indent": 12, "text": ["If you select the whole object, the constraint will be placed at the root of the object."], "extent": [772, 886]}], "container": true}], "container": true, "role": "item_group"}], "container": true}], "container": true}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/shelf/wire_glue_constraint.jpg", "type": "img", "text": ""}], "extent": [886, 938]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [668, 680], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Constraint"], "extent": [680, 701], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Constrained Object"], "extent": [701, 730], "body": [{"type": "para", "indent": 12, "text": ["Identifies the wire object to be constrained."], "extent": [761, 819]}], "container": true, "attrs": {"channels": "/group"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Constrained Points"], "extent": [819, 847], "body": [{"type": "para", "indent": 12, "text": ["Identifies the points in the wire object to be constrained."], "extent": [880, 952]}], "container": true, "attrs": {"channels": "/ptgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Constrain To Internal Animation"], "extent": [952, 993], "body": [{"type": "para", "indent": 12, "text": ["Constrains points to animation present on the input geometry.  "], "extent": [1031, 1120]}, {"type": "para", "indent": 12, "text": ["The ", {"type": "ui", "text": ["Use Deforming Geometry"]}, " parameter on the constrained Wire Object\u2019s\n            node should be enabled to make the animation available to the DOP\n            simulation."], "extent": [1120, 1308]}], "container": true, "attrs": {"channels": "/useanimation"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Goal Object"], "extent": [1308, 1329], "body": [{"type": "para", "indent": 12, "text": ["Identifies an wire object used to determine the goal\n            position. "], "extent": [1364, 1465]}, {"type": "para", "indent": 12, "text": ["If this parameter is left blank then the objects\n            will be constrained to a world space position."], "extent": [1465, 1585]}], "container": true, "attrs": {"channels": "/goalgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Goal Points"], "extent": [1585, 1606], "body": [{"type": "para", "indent": 12, "text": ["Identifies the points in the goal object to use for the goal\n            location.  The goal points are paired with the constrained \n            points in the order in which they are given."], "extent": [1639, 1842]}, {"type": "para", "indent": 12, "text": ["If there are more constrained points than goal points, the \n            ", {"type": "q", "text": ["leftover"]}, " points are constrained to the last specified goal\n            point.  ", {"type": "q", "text": ["Leftover"]}, " goal points will not be used."], "extent": [1842, 2049]}, {"type": "para", "indent": 12, "text": ["If no points are specified, the initial position of\n            the constrained point should be used."], "extent": [2049, 2163]}], "container": true, "attrs": {"channels": "/goalpts"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Goal Location"], "extent": [2163, 2186], "body": [{"type": "para", "indent": 12, "text": ["Specifies a location in world space to which the wire object\n            will be constrained."], "extent": [2240, 2346]}], "container": true, "attrs": {"channels": "/goalposx /goalposy /goalposz"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Constrain Position"], "extent": [2346, 2374], "body": [{"type": "para", "indent": 12, "text": ["Causes spatial constraints to be created for each specified\n            point."], "extent": [2417, 2508]}], "container": true, "attrs": {"channels": "/constrainposition"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Constrain Rotation"], "extent": [2508, 2536], "body": [{"type": "para", "indent": 12, "text": ["Causes rotational constraints to be created for each\n            specified point."], "extent": [2579, 2673]}], "container": true, "attrs": {"channels": "/constrainrotation"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Goal Rotation"], "extent": [2673, 2696], "body": [{"type": "para", "indent": 12, "text": ["Specifies the goal rotation for the constrained wire object."], "extent": [2734, 2807]}], "container": true, "attrs": {"channels": "/goalrotation"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Mirror Constraint"], "extent": [2807, 2834], "body": [{"type": "para", "indent": 12, "text": ["If enabled, all objects involved in the constraint will be made\n            mutual affectors."], "extent": [2866, 2972]}], "container": true, "attrs": {"channels": "/mirror"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Guide Options"], "extent": [16, 36], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Show Guide Geometry"], "extent": [36, 62], "body": [{"type": "para", "indent": 8, "text": ["Turning on this option causes guide geometry to be displayed in\n        the viewport representing this constraint."], "extent": [62, 185]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Radius"], "extent": [185, 197], "body": [{"type": "para", "indent": 8, "text": ["Controls the radius of the spheres drawn in the viewport as\n        guide geometry for this constraint."], "extent": [227, 348]}], "container": true, "attrs": {"channels": "/guiderad"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Color"], "extent": [348, 359], "body": [{"type": "para", "indent": 8, "text": ["Sets the color of the constraint in the viewport."], "extent": [359, 418]}, {"type": "para", "indent": 8, "text": ["Using different colors for hard and spring constraint relationships makes it easy to see when a two state constraint switches from one state to the other."], "extent": [418, 590]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Show Object Link"], "extent": [590, 612], "body": [{"type": "para", "indent": 8, "text": ["This parameter controls the display of guide geometry\n        connecting the constraint to the constrained object."], "extent": [648, 771]}], "container": true, "attrs": {"channels": "/showobjectlink"}, "role": "item"}], "container": true}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Activation"], "extent": [15, 27], "body": [{"type": "para", "indent": 4, "text": ["Determines if this node should do anything on a given timestep and\n    for a particular object. If this parameter is an expression, it is\n    evaluated for each object (even if data sharing is turned on). "], "extent": [55, 270]}, {"type": "para", "indent": 4, "text": ["If it evaluates to a non-zero value, then the data is attached to that\n    object. If it evaluates to zero, no data is attached, and data\n    previously attached by this node is removed."], "extent": [270, 461]}], "container": true, "attrs": {"channels": "/activation"}, "role": "item"}], "container": true}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [3055, 3063], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Input"], "extent": [15, 28], "body": [{"type": "para", "indent": 4, "text": ["This optional input can be used to control which simulation objects\n    are modified by this node. Any objects connected through this input\n    and which match the ", {"type": "ui", "text": ["Group"]}, " parameter field will be modified. "], "extent": [28, 246]}, {"type": "para", "indent": 4, "text": ["If this input is not connected, this node can be used in conjunction with an\n    Apply Data node, or can be used as an input to another data node."], "extent": [246, 397]}], "container": true}, {"type": "dt", "indent": 0, "text": ["All Other Inputs"], "extent": [397, 415], "body": [{"type": "para", "indent": 4, "text": ["If this node has more input connectors, other data nodes can be\n    attached to act as modifiers for the data created by this node. "], "extent": [415, 557]}, {"type": "para", "indent": 4, "text": ["The specific types of subdata that are meaningful vary from node to\n    node. Click ", {"keys": ["MMB"], "type": "keys", "text": null}, " an input connector to see a list of available\n    data nodes that can be meaningfully attached."], "extent": [557, 749]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [3099, 3108], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Output"], "extent": [15, 29], "body": [{"type": "para", "indent": 4, "text": ["The operation of this output depends on what inputs are connected\n    to this node. If an object stream is input to this node, the output\n    is also an object stream containing the same objects as the input\n    (but with the data from this node attached). "], "extent": [29, 296]}, {"type": "para", "indent": 4, "text": ["If no object stream is\n    connected to this node, the output is a data output. This data\n    output can be connected to an ", {"scheme": "Node", "value": "/nodes/dop/applydata", "type": "link", "text": ["Apply Data DOP"], "fullpath": "/nodes/dop/applydata"}, ",\n    or connected directly to a data input of another data node, to\n    attach the data from this node to an object or another piece of\n    data."], "extent": [296, 606]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [3145, 3153], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["ST"], "extent": [16, 20], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time for which the node is being\n    evaluated. "], "extent": [20, 107]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " ", {"type": "ui", "text": ["Offset Time"]}, " and ", {"type": "ui", "text": ["Time Scale"]}, "\n    parameters. "], "extent": [107, 326]}, {"type": "para", "indent": 4, "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"type": "code", "text": ["$ST == 0"]}, " rather than\n    ", {"type": "code", "text": ["$T == 0"]}, " or ", {"type": "code", "text": ["$FF == 1"]}, "."], "extent": [326, 555]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SF"], "extent": [555, 559], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."], "extent": [559, 700]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."], "extent": [700, 999]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TIMESTEP"], "extent": [999, 1009], "body": [{"type": "para", "indent": 4, "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."], "extent": [1009, 1181]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SFPS"], "extent": [1181, 1187], "body": [{"type": "para", "indent": 4, "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."], "extent": [1187, 1305]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SNOBJ"], "extent": [1305, 1312], "body": [{"type": "para", "indent": 4, "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "], "extent": [1312, 1523]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"type": "code", "text": ["object_$SNOBJ"]}, "."], "extent": [1523, 1621]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NOBJ"], "extent": [1621, 1627], "body": [{"type": "para", "indent": 4, "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "], "extent": [1627, 1859]}, {"type": "para", "indent": 4, "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [1859, 1991]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJ"], "extent": [1991, 1996], "body": [{"type": "para", "indent": 4, "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "], "extent": [1996, 2322]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [2322, 2616]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJID"], "extent": [2616, 2623], "body": [{"type": "para", "indent": 4, "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "], "extent": [2623, 2883]}, {"type": "para", "indent": 4, "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "], "extent": [2883, 3168]}, {"type": "para", "indent": 4, "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3168, 3406]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJIDS"], "extent": [3406, 3417], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."], "extent": [3417, 3556]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3556, 3569], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."], "extent": [3569, 3687]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCT"], "extent": [3687, 3694], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "], "extent": [3694, 3801]}, {"type": "para", "indent": 4, "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"type": "code", "text": ["$ST == $OBJCT"]}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3801, 4057]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCF"], "extent": [4057, 4064], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "], "extent": [4064, 4172]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4172, 4389]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJNAME"], "extent": [4389, 4398], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the name of the object being\n    processed. "], "extent": [4398, 4486]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "], "extent": [4486, 4748]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named ", {"type": "q", "text": ["myobject"]}, ",\n    specifying ", {"type": "code", "text": ["strcmp($OBJNAME, \"myobject\") == 0"]}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4748, 5194]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DOPNET"], "extent": [5194, 5202], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."], "extent": [5202, 5425]}], "container": true}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [5425, 5431], "body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position node"], "fullpath": "/nodes/dop/position"}, ",\n    you could write the expression:"], "extent": [5431, 5620]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "], "extent": [5620, 5650]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."], "extent": [5650, 5730]}], "container": true}], "container": true, "role": "item_group"}], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3185, 3194], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/wireobject", "type": "link", "text": "", "fullpath": "/nodes/dop/wireobject"}], "extent": [3194, 3223]}], "container": true}], "text": "Related"}], "title": ["Wire Glue Constraint"], "summary": ["Constraints a wire point to a certain position and direction."], "included": ["/nodes/dop/standard_conrelguide_parms", "/nodes/dop/standard_data_inputs", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_dataactive_parms", "/nodes/dop/standard_locals", "/shelf/wireglueconstraint"]}