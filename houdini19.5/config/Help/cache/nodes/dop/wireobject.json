{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "wireobject", "icon": "DOP/wireobject", "tags": "wire", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Wire Object"], "extent": [83, 99]}, {"type": "summary", "indent": 0, "text": ["Creates a Wire Object from SOP Geometry."], "extent": [99, 148]}, {"type": "para", "indent": 0, "text": ["The Wire Object DOP creates a Wire Object inside the DOP simulation. It creates a new object and attaches the subdata required for it to be a\nproperly conforming Wire Object."], "extent": [148, 324]}, {"type": "para", "indent": 0, "text": ["The SOP geometry used to define wire objects are expected to contain a set\nof curves.  These curves may be closed curves (eg. polygons) and will be\nconnected if multiple curves share a common point.  This lets wire objects\ndescribe structures such as ropes, trees, bridges, and spider webs."], "extent": [324, 616]}, {"level": 2, "id": "includeme", "container": true, "type": "h", "indent": 0, "text": ["Using Wire Object"], "extent": [324, 360], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["Select the objects to convert to wire objects and press ", {"keys": ["Enter"], "type": "keys", "text": null}, " to confirm your selection."], "extent": [360, 473]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Click the ", {"scheme": "Icon", "value": "DOP/wireobject", "type": "link", "text": "", "fullpath": "/shelf/DOP/wireobject"}, {"scheme": "Node", "value": "/nodes/dop/wireobject", "type": "link", "text": ["Wire Object"], "fullpath": "/nodes/dop/wireobject"}, " tool from the ", {"type": "ui", "text": ["Wires"]}, " tab."], "extent": [473, 575]}], "container": true}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [575, 587], "body": [], "container": true, "attrs": {"src": "/videos/shelf/wire_object.mp4"}}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Attributes"], "extent": [655, 672], "body": [{"type": "para", "indent": 0, "text": ["You can ", {"scheme": null, "value": "/model/attributes", "type": "link", "text": ["create attributes"], "fullpath": "/model/attributes"}, "  on the wire object\u2019s\nRestGeometry to influence its behavior. Most of these attributes allow\nfine-tuning of the wire by scaling values set in this node. Point,\nprimitive, or detail attributes of the same name will be used if the\nvertex attributes are not present."], "extent": [672, 984]}, {"tag": "table", "attrs": {}, "type": "pxml", "indent": 0, "extent": [16, 24], "body": [{"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [24, 33], "body": [{"tag": "th", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Name"], "extent": [33, 51]}, {"tag": "th", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Class"], "extent": [51, 70]}, {"tag": "th", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Type"], "extent": [70, 88]}, {"tag": "th", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Description"], "extent": [88, 113]}, {"tag": "th", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Scaling Factor"], "extent": [113, 141]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [141, 150], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["width"]}], "extent": [150, 171]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Edge (vertex)"], "extent": [171, 198]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float"], "extent": [198, 217]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Width of each edge."], "extent": [217, 250]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Yes"], "extent": [250, 267]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [267, 276], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["density"]}], "extent": [276, 299]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [299, 318]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float"], "extent": [318, 337]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Density of each point."], "extent": [337, 373]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Yes"], "extent": [373, 390]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [390, 399], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["orient"]}], "extent": [399, 421]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [421, 440]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float4"], "extent": [440, 460]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" "], "extent": [460, 474], "body": [{"type": "para", "indent": 12, "text": ["Initial orientation of each point. This value is stored as a quaternion."], "extent": [474, 559]}], "container": true}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [559, 575]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [575, 584], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["v"]}], "extent": [584, 601]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [601, 620]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Vector"], "extent": [620, 640]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Initial velocity of each point."], "extent": [640, 685]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [685, 701]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [701, 710], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["w"]}], "extent": [710, 727]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [727, 746]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Vector"], "extent": [746, 766]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" "], "extent": [766, 780], "body": [{"type": "para", "indent": 12, "text": ["Initial angular velocity of each point measured in radians per second."], "extent": [780, 863]}], "container": true}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [863, 879]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [879, 888], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["friction"]}], "extent": [888, 912]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [912, 931]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float"], "extent": [931, 950]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Friction of each point."], "extent": [950, 987]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Yes"], "extent": [987, 1004]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [1004, 1013], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["dynamicfriction"]}], "extent": [1013, 1044]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [1044, 1063]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float"], "extent": [1063, 1082]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Defines how much to scale the friction value when there is motion at the point of contact."], "extent": [1082, 1186]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Yes"], "extent": [1186, 1203]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [1203, 1212], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["klinear"]}], "extent": [1212, 1235]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Edge (vertex)"], "extent": [1235, 1262]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float"], "extent": [1262, 1281]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Defines how strongly the wire resists stretching."], "extent": [1281, 1344]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Yes"], "extent": [1344, 1361]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [1361, 1370], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["damplinear"]}], "extent": [1370, 1396]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Edge (vertex)"], "extent": [1396, 1423]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float"], "extent": [1423, 1442]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" "], "extent": [1442, 1456], "body": [{"type": "para", "indent": 12, "text": ["Defines how strongly the wire resists oscillation due to stretching forces."], "extent": [1456, 1544]}], "container": true}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Yes"], "extent": [1544, 1561]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [1561, 1570], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["kangular"]}], "extent": [1570, 1594]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Edge (vertex)"], "extent": [1594, 1621]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float"], "extent": [1621, 1640]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Defines how strongly the wire resists bending."], "extent": [1640, 1700]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Yes"], "extent": [1700, 1717]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [1717, 1726], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["dampangular"]}], "extent": [1726, 1753]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Edge (vertex)"], "extent": [1753, 1780]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float"], "extent": [1780, 1799]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" "], "extent": [1799, 1813], "body": [{"type": "para", "indent": 12, "text": ["Defines how strongly the wire resists oscillation due to bending forces."], "extent": [1813, 1898]}], "container": true}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Yes"], "extent": [1898, 1915]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [1915, 1924], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["targetstiffness"]}], "extent": [1924, 1955]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [1955, 1974]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float"], "extent": [1974, 1993]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Defines how strongly the wire resists deforming from the animated position."], "extent": [1993, 2082]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Yes"], "extent": [2082, 2099]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [2099, 2108], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["targetdamping"]}], "extent": [2108, 2137]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [2137, 2156]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float"], "extent": [2156, 2175]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Defines how strongly the wire resists oscillation relative to the animated position."], "extent": [2175, 2273]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Yes"], "extent": [2273, 2290]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [2290, 2299], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["normaldrag"]}], "extent": [2299, 2325]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [2325, 2344]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float"], "extent": [2344, 2363]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" The component of drag in the directions normal to the wire.  Increasing this will make the wire go along with any wind that blows normal to the wire."], "extent": [2363, 2526]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Yes"], "extent": [2526, 2543]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [2543, 2552], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["tangentdrag"]}], "extent": [2552, 2579]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [2579, 2598]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float"], "extent": [2598, 2617]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" The component of drag in the direction tangent to the wire.  Increasing this will make the wire go along with any wind that blows tangent to the wire."], "extent": [2617, 2781]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Yes"], "extent": [2781, 2798]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [2798, 2807], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["nocollide"]}], "extent": [2807, 2832]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Edge (vertex)"], "extent": [2832, 2859]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float or Integer"], "extent": [2859, 2889]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Collision detection for the edge is disabled if either of the points defining the edge have values greater than 0.5.  This attribute is only used when the Wire Solver\u2019s ", {"type": "ui", "text": ["Collision Handling"]}, " parameter is set to ", {"type": "ui", "text": ["SDF"]}, "."], "extent": [2889, 3123]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [3123, 3139]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [3139, 3148], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["restP"]}], "extent": [3148, 3169]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [3169, 3188]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Vector"], "extent": [3188, 3208]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Rest position of each point."], "extent": [3208, 3250]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [3250, 3266]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [3266, 3275], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["restorient"]}], "extent": [3275, 3301]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [3301, 3320]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float4"], "extent": [3320, 3340]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Rest orientation of each point."], "extent": [3340, 3385]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [3385, 3401]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [3401, 3410], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["gluetoanimation"]}], "extent": [3410, 3441]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [3441, 3460]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float or Integer"], "extent": [3460, 3490]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Values greater than 0.5 cause a point\u2019s position and orientation to be constrained to the input geometry."], "extent": [3490, 3609]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [3609, 3625]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [3625, 3634], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["pintoanimation"]}], "extent": [3634, 3664]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [3664, 3683]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float or Integer"], "extent": [3683, 3713]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Values greater than 0.5 cause a point\u2019s position to be constrained to the input geometry."], "extent": [3713, 3816]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [3816, 3832]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [3832, 3841], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["animationP"]}], "extent": [3841, 3867]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [3867, 3886]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Vector"], "extent": [3886, 3906]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Target position of each point."], "extent": [3906, 3950]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [3950, 3966]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [3966, 3975], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["animationorient"]}], "extent": [3975, 4006]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [4006, 4025]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Float4"], "extent": [4025, 4045]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Target orientation of each point."], "extent": [4045, 4092]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [4092, 4108]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [4108, 4117], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["animationv"]}], "extent": [4117, 4143]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [4143, 4162]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Vector"], "extent": [4162, 4182]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Target velocity of each point."], "extent": [4182, 4226]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [4226, 4242]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [4242, 4251], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["animationw"]}], "extent": [4251, 4277]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [4277, 4296]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Vector"], "extent": [4296, 4316]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Target angular velocity of each point."], "extent": [4316, 4368]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [4368, 4384]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [4384, 4393], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["independentcollisionallowed"]}], "extent": [4393, 4436]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [4436, 4455]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Integer"], "extent": [4455, 4476]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" A value of 0 disables the external collisions for the point. A value of 1 enables external collisions.  This attribute is only used when the Wire Solver\u2019s ", {"type": "ui", "text": ["Collision Handling"]}, " parameter is set to ", {"type": "ui", "text": ["Local Geometric"]}, " or ", {"type": "ui", "text": ["Global Geometric"]}, "."], "extent": [4476, 4732]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [4732, 4748]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "text": [" "], "extent": [4748, 4758], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["independentcollisionresolved"]}], "extent": [4758, 4802]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [4802, 4821]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Integer"], "extent": [4821, 4842]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" A value of 0 temporarily disables external collisions for the point, indicating that the collision was not properly resolved. This is updated each step.  This attribute is only used when the Wire Solver\u2019s ", {"type": "ui", "text": ["Collision Handling"]}, " parameter is set to ", {"type": "ui", "text": ["Local Geometric"]}, " or ", {"type": "ui", "text": ["Global Geometric"]}, "."], "extent": [4842, 5148]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [5148, 5164]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "text": [" "], "extent": [5164, 5174], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["codependentcollisionallowed"]}], "extent": [5174, 5217]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [5217, 5236]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Integer"], "extent": [5236, 5257]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" A value of 0 disables the soft body (objects solved by the same solver) collisions for the point. A value of 1 enables soft body collisions.  This attribute is only used when the Wire Solver\u2019s ", {"type": "ui", "text": ["Collision Handling"]}, " parameter is set to ", {"type": "ui", "text": ["Local Geometric"]}, " or ", {"type": "ui", "text": ["Global Geometric"]}, "."], "extent": [5257, 5551]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [5551, 5567]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "text": [" "], "extent": [5567, 5577], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["codependentcollisionresolved"]}], "extent": [5577, 5621]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [5621, 5640]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Integer"], "extent": [5640, 5661]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" A value of 0 temporarily disables soft body (objects solved by the same solver) collisions for the point, indicating that the collision was not properly resolved. This is updated each step.  This attribute is only used when the Wire Solver\u2019s ", {"type": "ui", "text": ["Collision Handling"]}, " parameter is set to ", {"type": "ui", "text": ["Local Geometric"]}, " or ", {"type": "ui", "text": ["Global Geometric"]}, "."], "extent": [5661, 6004]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [6004, 6020]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [6020, 6029], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["selfcollisionallowed"]}], "extent": [6029, 6065]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [6065, 6084]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Integer"], "extent": [6084, 6105]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" A value of 0 disables the self collisions for the point. A value of 1 enables self collisions.  This attribute is only used when the Wire Solver\u2019s ", {"type": "ui", "text": ["Collision Handling"]}, " parameter is set to ", {"type": "ui", "text": ["Local Geometric"]}, " or ", {"type": "ui", "text": ["Global Geometric"]}, "."], "extent": [6105, 6353]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [6353, 6369]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [6369, 6378], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" ", {"type": "code", "text": ["selfcollisionresolved"]}], "extent": [6378, 6415]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Point"], "extent": [6415, 6434]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" Integer"], "extent": [6434, 6455]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" A value of 0 temporarily disables self collisions for the point, indicating that the collision was not properly resolved. This is updated each step.  This attribute is only used when the Wire Solver\u2019s ", {"type": "ui", "text": ["Collision Handling"]}, " parameter is set to ", {"type": "ui", "text": ["Local Geometric"]}, " or ", {"type": "ui", "text": ["Global Geometric"]}, "."], "extent": [6455, 6757]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [" No"], "extent": [6757, 6773]}], "container": true}], "container": true}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [1022, 1027], "body": [{"type": "para", "indent": 4, "text": ["Mass is distributed to the points of a wire object according to the width and length of each segment."], "extent": [1027, 1134]}, {"type": "para", "indent": 4, "text": ["Both the ", {"type": "ui", "text": ["Mass"]}, " and ", {"type": "ui", "text": ["Density"]}, " parameters let you adjust the total mass of the object. ", {"type": "ui", "text": ["Density"]}, " is the default method, since it lets you have consistent behavior regardless of the volume of wires you give it. For example, if you make a wire twice as long, it will become twice as heavy. "], "extent": [1134, 1433]}], "container": true}, {"type": "tip", "indent": 0, "role": "item", "extent": [1433, 1438], "body": [{"type": "para", "indent": 4, "text": ["The default value of 1000 is the density of water. Try a lighter value, such as 600 for hair."], "extent": [1438, 1541]}], "container": true}], "container": true, "role": "item_group"}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [1541, 1547], "body": [{"type": "para", "indent": 4, "text": ["When the Wire Solver\u2019s ", {"type": "ui", "text": ["Collision Handling"]}, " parameter is set to SDF, it uses an alternate method for detection and processing collisions. With this alternate method, the ", {"type": "code", "text": ["nocollide"]}, " attribute should be used instead of ", {"type": "code", "text": ["selfcollisionsallowed"]}, "."], "extent": [1547, 1797]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1797, 1809], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Creation Frame Specifies Simulation Frame"], "extent": [16, 59], "body": [{"type": "para", "indent": 4, "text": ["Determines if the creation frame refers to global Houdini\n    frames (", {"type": "code", "text": ["$F"]}, ") or to simulation specific frames (", {"type": "code", "text": ["$SF"]}, ").  The\n    latter is affected by the offset time and scale time at the\n    DOP network level."], "extent": [59, 278]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Creation Frame"], "extent": [278, 294], "body": [{"type": "para", "indent": 4, "text": ["The frame number on which the object will be created. The\n    object is created only when the current frame number is equal to\n    this parameter value. This means the DOP Network must evaluate a\n    timestep at the specified frame, or the object will not be\n    created. "], "extent": [294, 576]}, {"type": "para", "indent": 4, "text": ["For example, if this value is set to 3.5, the\n    ", {"type": "ui", "text": ["Timestep"]}, " parameter of the DOP Network must be changed to\n    ", {"type": "code", "text": ["1/(2*$FPS)"]}, " to ensure the DOP Network has a timestep at frame\n    3.5."], "extent": [576, 772]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number of Objects"], "extent": [772, 791], "body": [{"type": "para", "indent": 4, "text": ["Instead of making a single object, you can create a number of\n    identical objects. You can set each object\u2019s parameters\n    individually by using the ", {"type": "code", "text": ["$OBJID"]}, " expression."], "extent": [791, 973]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Object Name"], "extent": [973, 986], "body": [{"type": "para", "indent": 4, "text": ["The name for the created object.  This is the name that shows up\n    in the details view and is used to reference this particular\n    object externally.  "], "extent": [986, 1150]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1150, 1160], "body": [{"type": "para", "indent": 8, "text": ["While it is possible to have many objects with the same name, this complicates writing references, so it is recommended to use something like ", {"type": "code", "text": ["$OBJID"]}, " in the name."], "extent": [1160, 1333]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Solve On Creation Frame"], "extent": [1333, 1358], "body": [{"type": "para", "indent": 4, "text": ["For the newly created objects, this parameter controls whether\n    or not the solver for that object should solve for the object on\n    the timestep in which it was created. "], "extent": [1358, 1542]}, {"type": "para", "indent": 4, "text": ["Usually this parameter will be turned on if this node is creating objects in the middle of a simulation rather than creating objects for the initial state of the simulation."], "extent": [1542, 1721]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Allow Caching"], "extent": [1721, 1736], "body": [{"type": "para", "indent": 4, "text": ["By preventing a large object from being cached, you can ensure\n    there is enough room in the cache for the previous frames of its\n    collision geometry."], "extent": [1736, 1897]}, {"type": "para", "indent": 4, "text": ["This option should only be set when you are working with a very large sim.\n    It is much better just to use a larger memory cache if possible."], "extent": [1897, 2045]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Object Transform"], "extent": [16, 38], "body": [{"type": "para", "indent": 4, "text": ["The transform of the object containing the chosen SOP is applied to the\n    geometry."], "extent": [61, 152]}], "container": true, "attrs": {"id": "usetransform"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["SOP Path"], "extent": [152, 162], "body": [], "container": true, "attrs": {"id": "soppath"}, "role": "item"}], "container": true}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Initial State"], "extent": [180, 200], "body": [{"type": "para", "indent": 8, "text": ["The path to a SOP (or an Object, in which case the display SOP\n        is used) which will be the initial pose for this simulation object."], "extent": [200, 349]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Position"], "extent": [349, 363], "body": [{"type": "para", "indent": 8, "text": ["Initial position in world space of the object."], "extent": [395, 451]}], "container": true, "attrs": {"channels": "/tx /ty /tz"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Rotation"], "extent": [451, 465], "body": [{"type": "para", "indent": 8, "text": ["Initial orientation of the object. This is in RX/RY/RZ format."], "extent": [497, 569]}], "container": true, "attrs": {"channels": "/rx /ry /rz"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Pivot"], "extent": [569, 580], "body": [{"type": "para", "indent": 8, "text": ["Local space position around which rotation is applied."], "extent": [612, 676]}], "container": true, "attrs": {"channels": "/px /py /pz"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Velocity"], "extent": [676, 690], "body": [{"type": "para", "indent": 8, "text": ["Initial velocity of the object."], "extent": [728, 769]}], "container": true, "attrs": {"channels": "/velx /vely /velz"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Angular Velocity"], "extent": [769, 791], "body": [{"type": "para", "indent": 8, "text": ["Initial angular velocity of the object."], "extent": [838, 887]}], "container": true, "attrs": {"channels": "/angvelx /angvely /angvelz"}, "role": "item"}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Geometry"], "extent": [887, 902], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Import Rest Geometry"], "extent": [902, 929], "body": [{"type": "para", "indent": 8, "text": ["Causes the Rest Geometry to be re-evaluated each frame."], "extent": [955, 1020]}], "container": true, "attrs": {"id": "animategeom"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Rest Geometry"], "extent": [1020, 1039], "body": [{"type": "para", "indent": 8, "text": ["The path to a SOP (or an Object, in which case the display SOP\n        is used) which will be the rest geometry for this object."], "extent": [1066, 1204]}], "container": true, "attrs": {"id": "restgeometry"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Import Target Geometry"], "extent": [1204, 1232], "body": [{"type": "para", "indent": 8, "text": ["Causes the Target Geometry to be re-evaluated each frame."], "extent": [1267, 1334]}], "container": true, "attrs": {"id": "importtargetgeometry"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Target Geometry"], "extent": [1334, 1355], "body": [{"type": "para", "indent": 8, "text": ["The path to a SOP (or an Object, in which case the display SOP\n        is used) which will be the target geometry for this object."], "extent": [1384, 1524]}], "container": true, "attrs": {"id": "targetgeometry"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Target Stiffness"], "extent": [1524, 1546], "body": [{"type": "para", "indent": 8, "text": ["This parameter defines how strongly the wire resists deforming from the\n        animated position."], "extent": [1576, 1684]}], "container": true, "attrs": {"id": "targetstiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Target Damping"], "extent": [1684, 1704], "body": [{"type": "para", "indent": 8, "text": ["This parameter defines how strongly the wire resists oscillation\n        relative to the animated position."], "extent": [1732, 1849]}], "container": true, "attrs": {"id": "targetdamping"}, "role": "item"}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Material"], "extent": [1849, 1864], "body": [{"level": 3, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Physical"], "extent": [1864, 1884], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Compute Mass"], "extent": [15, 29], "body": [{"type": "para", "indent": 4, "text": ["Determines if the mass will be calculated automatically from the\n    object\u2019s density and volume."], "extent": [29, 131]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Density"], "extent": [131, 140], "body": [{"type": "para", "indent": 4, "text": ["The mass of a wire object is its volume times its density. The\n    volume is affected by the width parameter."], "extent": [165, 279]}], "container": true, "attrs": {"channels": "/density"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Mass"], "extent": [279, 285], "body": [{"type": "para", "indent": 4, "text": ["The absolute mass of the object."], "extent": [307, 344]}], "container": true, "attrs": {"channels": "/mass"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Width"], "extent": [344, 351], "body": [{"type": "para", "indent": 4, "text": ["The width of the wire object defines the diameter of each\n    cylindrical section."], "extent": [374, 461]}], "container": true, "attrs": {"channels": "/width"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Friction"], "extent": [461, 471], "body": [{"type": "para", "indent": 4, "text": ["The coefficient of friction of the object. A value of 0 means the\n    object is frictionless. This governs how much the tangential\n    velocity is affected by collisions."], "extent": [497, 672]}], "container": true, "attrs": {"channels": "/friction"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Dynamic Friction Scale"], "extent": [672, 696], "body": [{"type": "para", "indent": 4, "text": ["An object sliding may have a lower friction coefficient than an\n    object at rest. This is the scale factor that relates the two. It is\n    not a friction coefficient, but a scale between zero and one. "], "extent": [729, 942]}, {"type": "para", "indent": 4, "text": ["A value of one means that dynamic friction is equal to static\n    friction. A scale of zero means that as soon as static friction is\n    overcome the object acts without friction."], "extent": [942, 1126]}], "container": true, "attrs": {"channels": "/dynamicfriction"}, "role": "item"}], "container": true}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Elasticity"], "extent": [1929, 1950], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Linear Spring Constant"], "extent": [15, 39], "body": [{"type": "para", "indent": 4, "text": ["This parameter defines how strongly the wire resists stretching."], "extent": [64, 133]}], "container": true, "attrs": {"channels": "/klinear"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Linear Damping Constant"], "extent": [133, 158], "body": [{"type": "para", "indent": 4, "text": ["This parameter defines how strongly the wire resists oscillation due\n    to stretch forces."], "extent": [186, 282]}], "container": true, "attrs": {"channels": "/damplinear"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Angular Spring Constant"], "extent": [282, 307], "body": [{"type": "para", "indent": 4, "text": ["This parameter defines how strongly the wire resists bending."], "extent": [333, 399]}], "container": true, "attrs": {"channels": "/kangular"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Angular Damping Constant"], "extent": [399, 425], "body": [{"type": "para", "indent": 4, "text": ["This parameter defines how strongly the wire resists oscillation due\n    to bending forces."], "extent": [454, 550]}], "container": true, "attrs": {"channels": "/dampangular"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Adjust For Length"], "extent": [550, 569], "body": [{"type": "para", "indent": 4, "text": ["Enabling this parameter will adjust spring and damper strengths\n    according to segment lengths. This allows wire flexibility behavior\n    to be independent of segment resolution."], "extent": [602, 787]}], "container": true, "attrs": {"channels": "/adjustforlength"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Adjust For Mass"], "extent": [787, 804], "body": [{"type": "para", "indent": 4, "text": ["Enabling this parameter will adjust spring and damper strengths\n    according to segment masses. This allows wire flexibility behavior\n    to be independent of mass."], "extent": [835, 1005]}], "container": true, "attrs": {"channels": "/adjustformass"}, "role": "item"}], "container": true}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Plasticity"], "extent": [2001, 2022], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Stretch Threshold"], "extent": [15, 34], "body": [{"type": "para", "indent": 4, "text": ["This parameter defines the amount of stretching allowed before the\n    wire is permanently stretched."], "extent": [75, 181]}], "container": true, "attrs": {"channels": "/plasticstretchthreshold"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stretch Rate"], "extent": [181, 195], "body": [{"type": "para", "indent": 4, "text": ["This parameter defines how quickly a wire\u2019s permanent shape becomes\n    stretched."], "extent": [231, 318]}], "container": true, "attrs": {"channels": "/plasticstretchrate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stretch Hardening"], "extent": [318, 337], "body": [{"type": "para", "indent": 4, "text": ["This parameter defines how a wire becomes stiffer (if greater than 1) or\n    weaker (if less than 1) when permanently stretched."], "extent": [378, 511]}], "container": true, "attrs": {"channels": "/plasticstretchhardening"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bend Threshold"], "extent": [511, 527], "body": [{"type": "para", "indent": 4, "text": ["This parameter defines the amount of bending allowed before the\n    wire is permanently bent."], "extent": [565, 663]}], "container": true, "attrs": {"channels": "/plasticbendthreshold"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bend Rate"], "extent": [663, 674], "body": [{"type": "para", "indent": 4, "text": ["This parameter defines how quickly a wire\u2019s permanent shape becomes\n    bent."], "extent": [707, 789]}], "container": true, "attrs": {"channels": "/plasticbendrate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bend Hardening"], "extent": [789, 805], "body": [{"type": "para", "indent": 4, "text": ["This parameter defines how a wire becomes stiffer (if greater than 1) or\n    weaker (if less than 1) when permanently bent."], "extent": [843, 971]}], "container": true, "attrs": {"channels": "/plasticbendhardening"}, "role": "item"}], "container": true}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Fracturing"], "extent": [2072, 2089], "body": [{"type": "para", "indent": 4, "text": ["Enable Fracturing"], "extent": [2089, 2112], "body": [{"type": "para", "indent": 8, "text": ["If enabled, the wire object will break at shared points when a segment\n        stretches beyond the fracture threshold."], "extent": [2143, 2272]}], "container": true, "attrs": {"id": "enablefracturing"}}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Fracture Threshold"], "extent": [2272, 2296], "body": [{"type": "para", "indent": 8, "text": ["This is the amount of relative stretch that will cause the geometry to\n        break up into separate parts during the simulation. For example, if the\n        threshold is set to 0.1, then the geometry may break in places where\n        there is more than 10% stretch compared to the rest geometry."], "extent": [2328, 2635]}], "container": true, "attrs": {"id": "fracturethreshold"}, "role": "item"}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Collisions"], "extent": [2635, 2652], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Collide Independent"], "extent": [2652, 2678], "body": [{"type": "para", "indent": 8, "text": ["If enabled, the wire object will be prevented from touching or\n        passing through any affectors that have a Volume collider label\n        (e.g., RBD Objects or the ground plane). This can make the\n        simulation slower."], "extent": [2678, 2916]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Collide Codependent"], "extent": [2916, 2941], "body": [{"type": "para", "indent": 8, "text": ["If enabled, the wire object will be prevented from touching or\n        passing through all of its wire affectors. This can make the\n        simulation much slower."], "extent": [2941, 3114]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Collide Self"], "extent": [3114, 3132], "body": [{"type": "para", "indent": 8, "text": ["If enabled, the wire object will be prevented from touching or\n        passing through itself. This can make the simulation much slower."], "extent": [3132, 3278]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Repulsion"], "extent": [3278, 3293], "body": [{"type": "para", "indent": 8, "text": ["A repulsion force is applied to gently push apart these pieces of\n        geometry when the two pieces of geometry overlap (including overlap \n        of the collision width). This parameter controls the strength of\n        the force. "], "extent": [3316, 3561]}], "container": true, "attrs": {"id": "repulsion"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Collision Width"], "extent": [3561, 3582], "body": [{"type": "para", "indent": 8, "text": ["The width that is used to calculate whether the wire \n        object has collided. This is scaled by the same point attributes \n        as the width found in the ", {"type": "ui", "text": ["Physical"]}, " tab. This width acts as a \n        diameter, creating a cylinder of this diameter between the end points \n        of a wire segment. "], "extent": [3582, 3900]}, {"type": "para", "indent": 8, "text": ["When a wire object collides with a cloth object, the ", {"type": "ui", "text": ["Cloth Thickness"]}, " \n        parameter in the cloth object will be used (it is used in the same\n        way as described by the cloth object). "], "extent": [3900, 4106]}, {"type": "para", "indent": 8, "text": ["When a wire object collides with a non-wire, non-cloth object, \n        then only the wire object will have a film around it (the polygons\n        in the non-wire object will be treated as having a thickness of zero). "], "extent": [4106, 4334]}], "container": true, "role": "item"}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Drag"], "extent": [4334, 4345], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Normal Drag"], "extent": [4345, 4363], "body": [{"type": "para", "indent": 8, "text": ["The component of drag in the directions normal to the wire.  Increasing\n        this will make the wire go along with any wind that blows against it. For\n        realistic wire-wind interaction, the Normal Drag should be chosen larger\n        (about 10 times larger) than the tangent drag."], "extent": [4388, 4687]}], "container": true, "attrs": {"id": "normaldrag"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Tangent Drag"], "extent": [4687, 4705], "body": [{"type": "para", "indent": 8, "text": ["The component of drag in the direction tangent to the wire.  Increasing\n        this will make the wire go along with any wind that blows tangent to the\n        wire."], "extent": [4731, 4907]}], "container": true, "attrs": {"id": "tangentdrag"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["External Velocity Field"], "extent": [4907, 4936], "body": [{"type": "para", "indent": 8, "text": ["The name of the external velocity fields on affectors that the wire will\n        respond to. The default is ", {"type": "code", "text": ["vel"]}, ", which will make the wire react to fluids\n        and smoke when the ", {"type": "ui", "text": ["Tangent Drag"]}, " and the ", {"type": "ui", "text": ["Normal Drag"]}, " have been\n        chosen sufficiently large. The ", {"type": "ui", "text": ["Tangent Drag"]}, " and ", {"type": "ui", "text": ["Normal Drag"]}, " forces\n        are computed by comparing the wire\u2019s velocity with the external velocity."], "extent": [4972, 5380]}], "container": true, "attrs": {"id": "externalvelocityfield"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["External Velocity Offset"], "extent": [5380, 5410], "body": [{"type": "para", "indent": 8, "text": ["This offset is added to any velocity that\u2019s read from the velocity field.\n        When there\u2019s no velocity field, then the offset can be used to create a\n        wind force which has constant velocity everywhere. This wind effect is\n        more realistic and more accurate than the wind that is generated by DOP\n        Forces."], "extent": [5447, 5785]}], "container": true, "attrs": {"id": "externalvelocityoffset"}, "role": "item"}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Visualization"], "extent": [5785, 5805], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Width"], "extent": [15, 22], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to visualize the wire\u2019s collision width in the viewport."], "extent": [53, 127]}], "container": true, "attrs": {"channels": "/visualizewidth"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Width Color"], "extent": [127, 140], "body": [], "container": true, "attrs": {"channels": "/widthcolorr /widthcolorg /widthcolorb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Penetration"], "extent": [195, 208], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to visualize the parts of the wire object which have collided, but which did not have the collision resolved."], "extent": [245, 372]}], "container": true, "attrs": {"channels": "/visualizepenetration"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Penetration Color"], "extent": [372, 391], "body": [{"type": "para", "indent": 4, "text": ["Use this parameter to choose the color for visualizing the wire\u2019s width in\n    the viewport."], "extent": [464, 561]}], "container": true, "attrs": {"channels": "/penetrationcolorr /penetrationcolorg /penetrationcolorb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Force Scale"], "extent": [561, 574], "body": [{"type": "para", "indent": 4, "text": ["This is used to define the scale of the force lines drawn in the\n    viewport. Use a small value if the lines are too long and\n    distracting, and a large value if you can\u2019t see any lines."], "extent": [602, 796]}], "container": true, "attrs": {"channels": "/forcescale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Torque Scale"], "extent": [796, 810], "body": [{"type": "para", "indent": 4, "text": ["This is used to define the scale of the torque lines drawn in the\n    viewport. Use a small value if the lines are too long and\n    distracting, and a large value if you can\u2019t see any lines."], "extent": [839, 1034]}], "container": true, "attrs": {"channels": "/torquescale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["External Force"], "extent": [1034, 1050], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to see external forces, applied by DOPs Force nodes\n    (such as the ", {"scheme": "Node", "value": "/nodes/dop/fan", "type": "link", "text": ["Fan DOP"], "fullpath": "/nodes/dop/fan"}, ")."], "extent": [1050, 1161]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["External Force Color"], "extent": [1161, 1183], "body": [{"type": "para", "indent": 4, "text": ["Use this parameter to choose the color for external forces in the\n    viewport."], "extent": [1250, 1334]}], "container": true, "attrs": {"channels": "/fexternalcolorr /fexternalcolorg /fexternalcolorb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["External Torque"], "extent": [1334, 1351], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to see external torques, applied by DOPs Force nodes\n    (such as the ", {"scheme": "Node", "value": "/nodes/dop/drag", "type": "link", "text": ["Drag DOP"], "fullpath": "/nodes/dop/drag"}, ")."], "extent": [1351, 1465]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["External Torque Color"], "extent": [1465, 1488], "body": [{"type": "para", "indent": 4, "text": ["Use this parameter to choose the color for external torques in the\n    viewport."], "extent": [1555, 1640]}], "container": true, "attrs": {"channels": "/texternalcolorr /texternalcolorg /texternalcolorb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Internal Force"], "extent": [1640, 1656], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to see internal forces generated by a Wire Solver to\n    resist stretching."], "extent": [1656, 1749]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Internal Force Color"], "extent": [1749, 1771], "body": [{"type": "para", "indent": 4, "text": ["Use this parameter to choose the color for internal forces in the\n    viewport."], "extent": [1838, 1922]}], "container": true, "attrs": {"channels": "/finternalcolorr /finternalcolorg /finternalcolorb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Internal Torque"], "extent": [1922, 1939], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to see internal torques generated by a ", {"scheme": "Node", "value": "/nodes/dop/wiresolver", "type": "link", "text": ["Wire Solver"], "fullpath": "/nodes/dop/wiresolver"}, " to resist bending."], "extent": [1939, 2048]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Internal Torque Color"], "extent": [2048, 2071], "body": [{"type": "para", "indent": 4, "text": ["Use this parameter to choose the color for internal torques in the\n    viewport."], "extent": [2138, 2223]}], "container": true, "attrs": {"channels": "/tinternalcolorr /tinternalcolorg /tinternalcolorb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Collision Force"], "extent": [2223, 2240], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to see the force preventing collisions in the viewport. This includes wire/volume collisions, wire/wire collisions and self-collisions."], "extent": [2240, 2393]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Collision Force Color"], "extent": [2393, 2416], "body": [{"type": "para", "indent": 4, "text": ["Use this parameter to choose the color for collision forces in the\n    viewport."], "extent": [2486, 2571]}], "container": true, "attrs": {"channels": "/fcollisioncolorr /fcollisioncolorg /fcollisioncolorb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constraint Force"], "extent": [2571, 2589], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to see forces generated by a ", {"scheme": "Node", "value": "/nodes/dop/wiresolver", "type": "link", "text": ["Wire Solver"], "fullpath": "/nodes/dop/wiresolver"}, " to satisfy\n    constraints."], "extent": [2589, 2697]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constraint Force Color"], "extent": [2697, 2721], "body": [{"type": "para", "indent": 4, "text": ["Use this parameter to choose the color for constraint forces in the\n    viewport."], "extent": [2794, 2880]}], "container": true, "attrs": {"channels": "/fconstraintcolorr /fconstraintcolorg /fconstraintcolorb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constraint Torque"], "extent": [2880, 2899], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to see torques generated by a ", {"scheme": "Node", "value": "/nodes/dop/wiresolver", "type": "link", "text": ["Wire Solver"], "fullpath": "/nodes/dop/wiresolver"}, " to satisfy constraints."], "extent": [2899, 3004]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constraint Torque Color"], "extent": [3004, 3029], "body": [{"type": "para", "indent": 4, "text": ["Use this parameter to choose the color for constraint torques in the\n    viewport."], "extent": [3102, 3189]}], "container": true, "attrs": {"channels": "/tconstraintcolorr /tconstraintcolorg /tconstraintcolorb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Impacts"], "extent": [3189, 3198], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to see impacts in the viewport. The impacts may appear in strange locations: they are shown at the position where a collision ", {"type": "em", "text": ["would"]}, " have happened."], "extent": [3198, 3364]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Impacts Scale"], "extent": [3364, 3379], "body": [{"type": "para", "indent": 4, "text": ["This is used to define the scale of the lines drawn in the viewport\n    to show impacts. "], "extent": [3409, 3508]}, {"type": "para", "indent": 4, "text": ["Use a small value if the lines are too long and\n    distracting, and a large value if you can\u2019t see the lines."], "extent": [3508, 3623]}], "container": true, "attrs": {"channels": "/impactsscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Impacts Color"], "extent": [3623, 3638], "body": [{"type": "para", "indent": 4, "text": ["Use this parameter to choose the color for impacts in the viewport."], "extent": [3699, 3771]}], "container": true, "attrs": {"channels": "/impactscolorr /impactscolorg /impactscolorb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Show Substep Impacts"], "extent": [3771, 3793], "body": [{"type": "para", "indent": 4, "text": ["Use this to show all impacts during a DOPs step. The ", {"scheme": "Node", "value": "/nodes/dop/wiresolver", "type": "link", "text": ["wire solver"], "fullpath": "/nodes/dop/wiresolver"}, " takes many substeps per DOPs step. If this is cleared, only the impacts for the current substep are shown."], "extent": [3793, 3991]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Axis"], "extent": [3991, 3997], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to see each point\u2019s orientation."], "extent": [3997, 4047]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Axis Scale"], "extent": [4047, 4059], "body": [{"type": "para", "indent": 4, "text": ["This is used to define the scale of the axis lines drawn in the\n    viewport. Use a small value if the lines are too long and\n    distracting, and a large value if you can\u2019t see any lines."], "extent": [4086, 4279]}], "container": true, "attrs": {"channels": "/axisscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["X Axis Color"], "extent": [4279, 4293], "body": [{"type": "para", "indent": 4, "text": ["Use this parameter to choose the color for local x-axis."], "extent": [4348, 4409]}], "container": true, "attrs": {"channels": "/xaxiscolorr /xaxiscolorg /xaxiscolorb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Y Axis Color"], "extent": [4409, 4423], "body": [{"type": "para", "indent": 4, "text": ["Use this parameter to choose the color for local y-axis."], "extent": [4478, 4539]}], "container": true, "attrs": {"channels": "/yaxiscolorr /yaxiscolorg /yaxiscolorb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Z Axis Color"], "extent": [4539, 4553], "body": [{"type": "para", "indent": 4, "text": ["Use this parameter to choose the color for local z-axis."], "extent": [4608, 4669]}], "container": true, "attrs": {"channels": "/zaxiscolorr /zaxiscolorg /zaxiscolorb"}, "role": "item"}], "container": true}]}], "text": "Parameters"}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [1883, 1888], "body": [{"type": "para", "indent": 4, "text": ["There is no bounciness parameter on wires. However, an external force could be applied to mimic bounciness."], "extent": [1888, 2001]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [2001, 2010], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["First"], "extent": [2010, 2021], "body": [{"type": "para", "indent": 8, "text": ["The wire object created by this node is sent through the single\n        output."], "extent": [2021, 2109]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [2109, 2117], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["ST"], "extent": [16, 20], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time for which the node is being\n    evaluated. "], "extent": [20, 107]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " ", {"type": "ui", "text": ["Offset Time"]}, " and ", {"type": "ui", "text": ["Time Scale"]}, "\n    parameters. "], "extent": [107, 326]}, {"type": "para", "indent": 4, "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"type": "code", "text": ["$ST == 0"]}, " rather than\n    ", {"type": "code", "text": ["$T == 0"]}, " or ", {"type": "code", "text": ["$FF == 1"]}, "."], "extent": [326, 555]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SF"], "extent": [555, 559], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."], "extent": [559, 700]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."], "extent": [700, 999]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TIMESTEP"], "extent": [999, 1009], "body": [{"type": "para", "indent": 4, "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."], "extent": [1009, 1181]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SFPS"], "extent": [1181, 1187], "body": [{"type": "para", "indent": 4, "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."], "extent": [1187, 1305]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SNOBJ"], "extent": [1305, 1312], "body": [{"type": "para", "indent": 4, "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "], "extent": [1312, 1523]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"type": "code", "text": ["object_$SNOBJ"]}, "."], "extent": [1523, 1621]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NOBJ"], "extent": [1621, 1627], "body": [{"type": "para", "indent": 4, "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "], "extent": [1627, 1859]}, {"type": "para", "indent": 4, "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [1859, 1991]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJ"], "extent": [1991, 1996], "body": [{"type": "para", "indent": 4, "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "], "extent": [1996, 2322]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [2322, 2616]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJID"], "extent": [2616, 2623], "body": [{"type": "para", "indent": 4, "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "], "extent": [2623, 2883]}, {"type": "para", "indent": 4, "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "], "extent": [2883, 3168]}, {"type": "para", "indent": 4, "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3168, 3406]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJIDS"], "extent": [3406, 3417], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."], "extent": [3417, 3556]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3556, 3569], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."], "extent": [3569, 3687]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCT"], "extent": [3687, 3694], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "], "extent": [3694, 3801]}, {"type": "para", "indent": 4, "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"type": "code", "text": ["$ST == $OBJCT"]}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [3801, 4057]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCF"], "extent": [4057, 4064], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "], "extent": [4064, 4172]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4172, 4389]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJNAME"], "extent": [4389, 4398], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the name of the object being\n    processed. "], "extent": [4398, 4486]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "], "extent": [4486, 4748]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named ", {"type": "q", "text": ["myobject"]}, ",\n    specifying ", {"type": "code", "text": ["strcmp($OBJNAME, \"myobject\") == 0"]}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group"}, ")."], "extent": [4748, 5194]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DOPNET"], "extent": [5194, 5202], "body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."], "extent": [5202, 5425]}], "container": true}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [5425, 5431], "body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position node"], "fullpath": "/nodes/dop/position"}, ",\n    you could write the expression:"], "extent": [5431, 5620]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "], "extent": [5620, 5650]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."], "extent": [5650, 5730]}], "container": true}], "container": true, "role": "item_group"}], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2149, 2158], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/wireconfigureobject", "type": "link", "text": "", "fullpath": "/nodes/dop/wireconfigureobject"}], "extent": [2158, 2195]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/wirephysparms", "type": "link", "text": "", "fullpath": "/nodes/dop/wirephysparms"}], "extent": [2195, 2226]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/wireelasticity", "type": "link", "text": "", "fullpath": "/nodes/dop/wireelasticity"}], "extent": [2226, 2258]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/wireplasticity", "type": "link", "text": "", "fullpath": "/nodes/dop/wireplasticity"}], "extent": [2258, 2290]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/softbodytargetproperties", "type": "link", "text": "", "fullpath": "/nodes/dop/softbodytargetproperties"}], "extent": [2290, 2332]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/dragproperties", "type": "link", "text": "", "fullpath": "/nodes/dop/dragproperties"}], "extent": [2332, 2364]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/wirevolumecollider", "type": "link", "text": "", "fullpath": "/nodes/dop/wirevolumecollider"}], "extent": [2364, 2400]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/wirewirecollider", "type": "link", "text": "", "fullpath": "/nodes/dop/wirewirecollider"}], "extent": [2400, 2434]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/wirevisualization", "type": "link", "text": "", "fullpath": "/nodes/dop/wirevisualization"}], "extent": [2434, 2469]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/wiresolver", "type": "link", "text": "", "fullpath": "/nodes/dop/wiresolver"}], "extent": [2469, 2498]}], "container": true}], "text": "Related"}], "title": ["Wire Object"], "summary": ["Creates a Wire Object from SOP Geometry."], "included": ["/nodes/dop/standard_locals", "/nodes/dop/standard_objcreation", "/nodes/dop/standard_wireelasticity_parms", "/nodes/dop/standard_wireobjectattribs", "/nodes/dop/standard_wireobjecttabs", "/nodes/dop/standard_wirephys_parms", "/nodes/dop/standard_wireplasticity_parms", "/nodes/dop/standard_wirevisualization_parms", "/shelf/wireobject"]}