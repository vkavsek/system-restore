{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "camera", "icon": "OBJ/camera", "group": "rendering", "since": "17.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Camera"], "extent": [0, 11]}, {"type": "summary", "indent": 0, "text": ["Adds a USD camera to the scene."], "extent": [105, 145]}, {"level": 2, "id": "oview", "container": true, "type": "h", "indent": 0, "text": ["Creating vs. editing prims"], "extent": [5373, 5414], "body": [{"type": "para", "indent": 0, "text": ["This node belongs to a class of ", {"type": "strong", "text": ["nodes that create or edit USD prims directly"]}, ". These nodes operate in ", {"type": "em", "text": ["Create mode"]}, " or ", {"type": "em", "text": ["Edit mode"]}, ". This is controlled by a ", {"type": "ui", "text": ["Create primitives"]}, " checkbox or a ", {"type": "em", "text": ["Create/Edit popup menu"]}, ". In create mode, the node creates new prims. In edit mode, the node changes the attributes on an existing prim. The ", {"type": "em", "text": ["Edit mode"]}, " has two variations. ", {"type": "em", "text": ["Edit"]}, " will not modify primitives which have a ", {"type": "code", "text": ["houdini:editable"]}, " attribute set to ", {"type": "code", "text": ["false"]}, ". ", {"type": "em", "text": ["Force edit"]}, " will modify a primitive regardless of the existence or value of this attribute. This attribute can be set on a primitive using the ", {"scheme": null, "value": "/nodes/lop/configureprimitive", "type": "link", "text": ["Configure Primitives LOP"], "fullpath": "/nodes/lop/configureprimitive"}, "."], "extent": [5414, 6076]}, {"type": "para", "indent": 0, "text": ["Parameters that correspond to a USD attribute have a pop-up menu to the left that controls ", {"type": "em", "text": ["how"]}, " the node authors the attribute."], "extent": [6076, 6206]}, {"type": "para", "indent": 0, "text": ["In addition to that, any connectable USD attributes (i.e., the ones in the ", {"type": "code", "text": ["inputs:"]}, " namespace) will have menu items that allow disconnecting them from their sources."], "extent": [6206, 6374]}, {"type": "box_group", "body": [{"ext": null, "type": "box", "indent": 0, "role": "item", "extent": [6374, 6380], "body": [{"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Pop-up menu item "], "role": "th", "extent": [6407, 6431], "container": true, "attrs": {"width": "25%"}}, {"type": "cell", "indent": 8, "text": ["Meaning "], "role": "th", "extent": [6451, 6470]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Set or Create "], "role": "td", "extent": [6470, 6491], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Sets the attribute to the given value, whether it previously existed or not."], "extent": [6491, 6577]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Set If Exists "], "role": "td", "extent": [6577, 6597], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Only set the attribute to the given value if it previously existed."], "extent": [6597, 6674]}, {"type": "para", "indent": 8, "text": ["Use this mode to make sure an attribute is only set on primitives of the correct type. For example, only ", {"type": "code", "text": ["UsdGeomSphere"]}, " primitives are likely to have a ", {"type": "code", "text": ["radius"]}, " attribute."], "extent": [6674, 6856]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Block "], "role": "td", "extent": [6856, 6868], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Makes the attribute appear to not exist, so it takes on its default value. (If the attribute doesn\u2019t already exist on the prim, this does nothing.)"], "extent": [6868, 7025]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Disconnect Input "], "role": "td", "extent": [7025, 7048], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Deletes the attribute input connection to its source. Input connections take precedence over attribute values, so disconnecting an input allows the attribute value to take effect."], "extent": [7048, 7237]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Do Nothing "], "role": "td", "extent": [7237, 7254], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Ignore this parameter, don\u2019t create or change the attribute in any way."], "extent": [7254, 7336]}]}], "divider": false}]}], "container": true, "attrs": {"id": "control_menu"}}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Editing the camera in the viewport"], "extent": [177, 218], "body": [{"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 0, "text": [" Enter the Camera state"], "role": "item", "extent": [218, 251], "body": [{"type": "para", "indent": 4, "text": ["Select the Camera node in the network, then in the viewport click the ", {"scheme": "Icon", "value": "TOOLS/handles", "type": "link", "text": "", "fullpath": "/nodes/lop/TOOLS/handles"}, " Handles tool, or press ", {"keys": ["Enter"], "type": "keys", "text": null}, "."], "extent": [251, 381]}], "container": true}], "container": true, "role": "item_group"}, {"type": "table", "thead": [], "body": [{"type": "row", "body": [{"type": "cell", "indent": 0, "text": ["Look at "], "role": "td", "extent": [381, 391], "container": true, "attrs": {"width": "15%"}}, {"type": "cell", "indent": 4, "text": [{"keys": ["Shift", "T"], "type": "keys", "text": null}, " "], "role": "td", "extent": [408, 428], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": ["Press ", {"keys": ["Shift", "T"], "type": "keys", "text": null}, " to show/hide the ", {"type": "q", "text": ["look at"]}, " handle."], "extent": [428, 494]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Position the look-at handle to set a look-at constraint on the camera. Use the handles to orbit or elevate the camera relative to the target point."], "extent": [494, 653]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["This turns on the ", {"type": "ui", "text": ["Enable look at"]}, " parameter in the camera\u2019s Constraints section."], "extent": [653, 748]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["To constrain the camera to look at another USD prim, fill in the ", {"type": "ui", "text": ["Look at primitive"]}, " parameter."], "extent": [748, 857]}], "container": true}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 0, "text": ["Depth of field "], "role": "td", "extent": [857, 874], "container": true}, {"type": "cell", "indent": 4, "text": [{"keys": ["Shift", "F"], "type": "keys", "text": null}, " "], "role": "td", "extent": [874, 894], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": ["Press ", {"keys": ["Shift", "F"], "type": "keys", "text": null}, " to show a visualization of the focal plane in the view. The visualization shows a line where the plane intersects geometry."], "extent": [894, 1049]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["When looking through a camera, you can ", {"keys": ["Shift"], "type": "keys", "text": null}, "-click or drag on a surface to move the focal plane to intersect that point."], "extent": [1049, 1185]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["When not at the camera from outside, you can use a handle on the focal plane to move it."], "extent": [1185, 1285]}], "container": true}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/lop/camera_focal_plane.jpg", "type": "img", "text": ""}], "extent": [1285, 1344]}]}], "divider": false}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips"], "extent": [1344, 1355], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Cameras in USD are always ", {"type": "q", "text": ["Y up"]}, ", regardless of the stage\u2019s orientation, and look down the -Z axis."], "extent": [1355, 1459]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The parameters on ths node are in millimeters. USD expects camera values to be in ", {"type": "q", "text": ["tenths of a world unit"]}, ", which means the parameters and values on the prim will sometimes be different."], "extent": [1459, 1650]}], "container": true}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1650, 1662], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Sampling Behavior"], "extent": [2196, 2216], "body": [{"type": "para", "indent": 4, "text": ["Cooking this node can generate many USD time samples, rather than just a single time sample at the current time. This can be equivalent to having a ", {"scheme": "Node", "value": "/nodes/lop/cache", "type": "link", "text": ["Cache LOP"], "fullpath": "/nodes/lop/cache"}, " following this node, but it will evaluate much faster, and does not cache data from any other nodes. This allows animated data to be authored to USD without introducing a node time dependency which would then cause all following nodes to also be time dependent. This can vastly improve playback performance of some LOP Networks."], "extent": [2216, 2725]}, {"type": "para", "indent": 4, "text": ["In all sampling modes, if a parameter on this node does not vary with time, and does not rely on other time sampled data from the stage, only a single default value will be generated in USD for the corresponding attribute. USD time samples are only generated for parameters that may vary over time."], "extent": [2725, 3029]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Sample Current Frame"], "extent": [3029, 3055], "body": [{"type": "para", "indent": 8, "text": ["A single time sample will be generated for the current time."], "extent": [3055, 3125]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sample Frame Range If Input Is Not Time Dependent"], "extent": [3125, 3180], "body": [{"type": "para", "indent": 8, "text": ["If the input to this node is time dependent, this node behaves as if it is in ", {"type": "code", "text": ["Sample current frame"]}, " mode. Otherwise it behaves as if it is in ", {"type": "code", "text": ["Sample frame range"]}, " mode."], "extent": [3180, 3359]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sample Frame Range"], "extent": [3359, 3383], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "ui", "text": ["Start/End/Inc"]}, " parameter is used to generate multiple times at which this node\u2019s parameters are evaluated, and a USD time sample is created for each attribute at each one of these times."], "extent": [3383, 3586]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start/End/Inc"], "extent": [3586, 3601], "body": [{"type": "para", "indent": 4, "text": ["When the ", {"type": "ui", "text": ["Sampling behavior"]}, " is ", {"type": "code", "text": ["Sample frame range"]}, ", this parameter controls the number and spacing of base time samples to be generated by this node. The default values of this parameter are ", {"type": "code", "text": ["@ropstart"]}, ", ", {"type": "code", "text": ["@ropend"]}, ", and ", {"type": "code", "text": ["@ropinc"]}, ". These values correspond to the start, end, and step size of the global Houdini animation settings when interacting with Houdini. When using a ROP node to generate a range of frames, these values correspond to the start, end, and increment values specified on the ROP node being executed. This default ensures that a USD file written to disk will contain time samples for exactly the frame range requested by the ROP (regardless of the Houdini animation settings)."], "extent": [3601, 4303]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Subframe Sampling"], "extent": [56, 79], "body": [{"type": "para", "indent": 8, "text": ["For each primary sample generated by this node, these parameters can cuase additional samples to be generated aroudn that primary sample time. This is most often used to ensure that accurate data exists at exactly the camera shutter open and close times, as well as at the primary sample time."], "extent": [79, 382]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Shutter"], "extent": [382, 395], "body": [{"type": "para", "indent": 8, "text": ["Controls the method used to specify the shutter open and close times relative to the primary sample times."], "extent": [395, 511]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Specify Manually"], "extent": [511, 537], "body": [{"type": "para", "indent": 12, "text": ["The ", {"type": "ui", "text": ["Shutter open/close"]}, " parameter values provide exact offset values relative to the primary sample time."], "extent": [537, 659]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Use Camera Prim"], "extent": [659, 684], "body": [{"type": "para", "indent": 12, "text": ["The ", {"type": "ui", "text": ["Camera prim"]}, " parameter provides the scene graph path of a camera primitive from which the shutter open and close times are extracted to provide the offset values relative to the primary time sample."], "extent": [684, 903]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Shutter Open/Close"], "extent": [903, 927], "body": [{"type": "para", "indent": 8, "text": ["When the ", {"type": "ui", "text": ["Shutter"]}, " mode is ", {"type": "code", "text": ["Specify Manually"]}, ", these two offset values are added to the primary sample time to indicate the shutter open and close times. The open time should be less than or equal to zero, and the close time should be greater than or equal to zero."], "extent": [927, 1204]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Camera Prim"], "extent": [1204, 1221], "body": [{"type": "para", "indent": 8, "text": ["Scene graph path of a camera prim on the input node\u2019s stage. The shutter open and close attribute values are read from this primitive."], "extent": [1221, 1365]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Samples"], "extent": [1365, 1378], "body": [{"type": "para", "indent": 8, "text": ["The number of subframe samples to create for each primary sample. These samples are evenly distributed between the shutter open and close times. Note that such an even distribution may or may not create a sample at exactly the primary sample time."], "extent": [1378, 1635]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Always Include Frame Sample"], "extent": [1635, 1668], "body": [{"type": "para", "indent": 8, "text": ["Enable this option to force a sample to be created at exactly the primary sample time. If the ", {"type": "ui", "text": ["Samples"]}, " values together with the shutter open and close times already place a sample at the primary sample time, turning on this option will have no effect. Otherwise, this option will cause an addition sample to be added. This means that the actual number of samples per primary sample may in fact be one more than the number specified in the ", {"type": "ui", "text": ["Samples"]}, " parameter."], "extent": [1668, 2143]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Action"], "extent": [50, 62], "body": [{"type": "para", "indent": 8, "text": ["Whether this node should create new prims, or edit existing prims. In addition, the ", {"type": "code", "text": ["Force Edit"]}, " option can be chosen to cause this node to ignore the ", {"type": "code", "text": ["houdini:editable"]}, " attribute on prims, and always edit the specified attributes. This is in contrast to the ", {"type": "code", "text": ["Edit"]}, " mode which will trigger a warning and not set attributes on prims with the ", {"type": "code", "text": ["houdini:editable"]}, " attribute set to ", {"type": "code", "text": ["false"]}, "."], "extent": [88, 483]}], "container": true, "attrs": {"id": "createprims"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Primitive Path"], "extent": [483, 503], "body": [{"type": "para", "indent": 8, "text": ["In create mode, this lets you control where in the scene graph to create the prim(s)."], "extent": [526, 621]}, {"type": "para", "indent": 8, "text": ["The default is usually ", {"type": "code", "text": ["/$OS"]}, ". This creates a primitive at the root level with the same name as the node (for example, ", {"type": "code", "text": ["/tube1"]}, "). This is a useful default for preventing naming conflicts, but terrible for organization. You should try to remember to change the ", {"type": "ui", "text": ["Primitive path"]}, " to a better value when you create prims."], "extent": [621, 950]}, {"type": "para", "indent": 8, "text": ["For example, instead of naming models after the node that created them, you might want to name them after the geometry inside, and organize them under a ", {"type": "code", "text": ["/Models"]}, " branch."], "extent": [950, 1130]}, {"type": "para", "indent": 8, "text": ["The ", {"type": "q", "text": ["Create primitives"]}, " section contains basic controls for how to create the new prim(s)."], "extent": [1130, 1230]}], "container": true, "attrs": {"id": "primpath"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Primitives"], "extent": [1230, 1246], "body": [{"type": "para", "indent": 8, "text": ["In edit mode, the node has a ", {"type": "ui", "text": ["Primitive pattern"]}, " parameter. This lets you specify the prim(s) the node should operate on. You can click the select button beside the text box to select the primitives from the scene graph tree. You can also use ", {"scheme": null, "value": "/solaris/pattern", "type": "link", "text": ["primitive patterns"], "fullpath": "/solaris/pattern"}, " for advanced matching, including matching all prims in a collection."], "extent": [1272, 1633]}], "container": true, "attrs": {"id": "primpattern"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Initialize Parameters For Edit"], "extent": [1633, 1669], "body": [{"type": "para", "indent": 8, "text": ["In edit mode, changes the state of all control menu parameters to ", {"type": "code", "text": ["Do Nothing"]}, ", so that this node will not apply any changes. Also grabs the current values of each property from the first ", {"type": "ui", "text": ["Primitives"]}, " match, and sets the values of the corresponding parameters to match. This means that changing any parameter\u2019s control menu to ", {"type": "code", "text": ["Set or Create"]}, " mode will set the property to its current value, making it easier to apply changes to an existing value rather than setting a brand new value."], "extent": [1695, 2192]}], "container": true, "attrs": {"id": "initforedit"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Primitives"], "extent": [7383, 7403], "body": [{"type": "para", "indent": 4, "text": ["This section only appears when the node is creating primitives."], "extent": [7403, 7472]}, {"type": "para", "indent": 4, "text": ["For example:"], "extent": [7472, 7490]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["If you want to create a new cube primitive at ", {"type": "code", "text": ["/world/objects/cube1"]}, " on an empty stage: Set ", {"type": "ui", "text": ["Primitive Specifier"]}, " to ", {"type": "q", "text": ["Define"]}, ", and the ", {"type": "ui", "text": ["Parent Primitive Type"]}, " to ", {"type": "q", "text": ["Xform"]}, "."], "extent": [7490, 7672]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["If you want to override the radius of a sphere at ", {"type": "code", "text": ["/world/objects/sphere1"]}, ": Set ", {"type": "ui", "text": ["Primitive Specifier"]}, " to ", {"type": "q", "text": ["Over"]}, ", and the ", {"type": "ui", "text": ["Parent Primitive Type"]}, " to None. This makes sure the primitive types of any existing ancestor prims are not be modified by this node."], "extent": [7672, 7938]}], "container": true}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Primitive Count"], "extent": [7938, 7959], "body": [{"type": "para", "indent": 8, "text": ["The number of primitives to create."], "extent": [7959, 8004]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Primitive Kind"], "extent": [8004, 8024], "body": [{"type": "para", "indent": 8, "text": ["Set all created prims to have this ", {"scheme": null, "value": "/solaris/usd#kinds", "type": "link", "text": ["kind"], "fullpath": "/solaris/usd#kinds", "fragment": "#kinds"}, "."], "extent": [8047, 8118]}], "container": true, "attrs": {"id": "primkind"}}, {"type": "dt", "indent": 4, "text": ["Primitive Specifier"], "extent": [8118, 8143], "body": [{"type": "para", "indent": 8, "text": ["The USD operator to use when creating the new prims."], "extent": [8167, 8229]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Define"], "extent": [8229, 8245], "body": [{"type": "para", "indent": 12, "text": ["Authors a completely new prim. Use this if you want to create a brand new prim or replace an existing prim."], "extent": [8245, 8366]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Over"], "extent": [8366, 8380], "body": [{"type": "para", "indent": 12, "text": ["Authors an override of an existing prim. Attributes not explicitly authored on this prim will get their values from the existing prim on the lower layer."], "extent": [8380, 8547]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Class"], "extent": [8547, 8562], "body": [{"type": "para", "indent": 12, "text": ["Define a primitive class. This is usually not necessary unless you are doing deep USD magic."], "extent": [8562, 8668]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "specifier"}}, {"type": "dt", "indent": 4, "text": ["Class Ancestor"], "extent": [8668, 8688], "body": [{"type": "para", "indent": 8, "text": ["If the ", {"type": "ui", "text": ["Specifier"]}, " is ", {"type": "code", "text": ["Define"]}, " or ", {"type": "code", "text": ["Over"]}, ", this parameter will cause some ancestor primitives to be authored with a specifier of ", {"type": "code", "text": ["Class"]}, ". This makes it easy to create an ", {"type": "code", "text": ["Over"]}, " or ", {"type": "code", "text": ["Define"]}, " within a ", {"type": "code", "text": ["Class"]}, " without having to use two separate nodes. When the ", {"type": "ui", "text": ["Specifier"]}, " is ", {"type": "code", "text": ["Class"]}, ", this parameter is disabled because the entire primitive hierarchy is already authored as ", {"type": "code", "text": ["Class"]}, " primitives."], "extent": [8716, 9118]}], "container": true, "attrs": {"id": "classancestor"}}, {"type": "dt", "indent": 4, "text": ["Parent Primitive Type"], "extent": [9118, 9145], "body": [{"type": "para", "indent": 8, "text": ["If any parents of a path in ", {"type": "ui", "text": ["Primitive paths"]}, " do not exist, this node will automatically create them. In this case, it will create parent nodes of this type."], "extent": [9174, 9344]}], "container": true, "attrs": {"id": "parentprimtype"}}], "container": true}], "container": true, "role": "item"}], "container": true}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Base properties"], "extent": [1830, 1852], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Transform"], "extent": [2224, 2239], "body": [{"type": "para", "indent": 8, "text": ["How the transform parameters below apply to the primitive. (Because each USD prim can contain multiple transforms, ", {"type": "em", "text": ["and"]}, " be affected by parent transforms, there are many different ways to apply new transforms.)"], "extent": [2278, 2498]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Append"], "extent": [2498, 2514], "body": [{"type": "para", "indent": 12, "text": ["Apply the parameters as a new, most local transform."], "extent": [2514, 2580]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Prepend"], "extent": [2580, 2597], "body": [{"type": "para", "indent": 12, "text": ["Apply the parameters as a new, ", {"type": "em", "text": ["least"]}, " local transform."], "extent": [2597, 2666]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Overwrite or Append"], "extent": [2666, 2695], "body": [{"type": "para", "indent": 12, "text": ["If a local transform exists with the name ", {"type": "code", "text": ["xformOp:transform"]}, ", ", {"type": "em", "text": ["overwrite"]}, " it with the parameters. Otherwise, apply it as a new, most local transform."], "extent": [2695, 2859]}, {"type": "para", "indent": 12, "text": ["If this replaces an existing transform, that transform\u2019s order in the local transform stack is not affected."], "extent": [2859, 2981]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Overwrite or Prepend"], "extent": [2981, 3011], "body": [{"type": "para", "indent": 12, "text": ["Like ", {"type": "q", "text": ["Overwrite or Append"]}, ", but ", {"type": "em", "text": ["least"]}, " local."], "extent": [3011, 3071]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Apply Transform in World Space"], "extent": [3071, 3111], "body": [{"type": "para", "indent": 12, "text": ["Apply the parameters as a new, most local transform. However, prior to applying the transform, it is updated so that the result of the transform appears as if the transform was being applied in world space, before any local or ancestor transformations were applied to the primitive."], "extent": [3111, 3407]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Replace All Local Transforms"], "extent": [3407, 3445], "body": [{"type": "para", "indent": 12, "text": ["The transform specified in the remaining transform parameters is always applied as a new transform. Prior to applying this transform, all existing transform operations on the local transform stack are cleared so that only the supplied transform remains on the local transform stack (though ancestor transforms still have an effect)."], "extent": [3445, 3791]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "xn__xformOptransform_51a"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Transform order"], "extent": [3791, 3812], "body": [{"type": "para", "indent": 8, "text": ["The order in which Houdini applies translates, rotates, and scales, and the order in which it applies rotation."], "extent": [3831, 3952]}], "container": true, "attrs": {"id": "xOrd"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Translate"], "extent": [3952, 3967], "body": [{"type": "para", "indent": 8, "text": ["Movement amount along XYZ axes."], "extent": [3983, 4024]}], "container": true, "attrs": {"id": "t"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Rotate"], "extent": [4024, 4036], "body": [{"type": "para", "indent": 8, "text": ["Degrees rotation around XYZ axes."], "extent": [4052, 4095]}], "container": true, "attrs": {"id": "r"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Scale"], "extent": [4095, 4106], "body": [{"type": "para", "indent": 8, "text": ["Non-uniform scaling along XYZ axes."], "extent": [4122, 4167]}], "container": true, "attrs": {"id": "s"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Uniform scale"], "extent": [4167, 4186], "body": [{"type": "para", "indent": 8, "text": ["Scales the object uniformly along all three axes."], "extent": [4206, 4266]}], "container": true, "attrs": {"id": "scale"}, "role": "item"}], "container": true}, {"level": 3, "type": "sep", "indent": 4, "text": [" Pivot Transform "], "extent": [4266, 4294], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Pivot translate"], "extent": [4320, 4345], "body": [{"type": "para", "indent": 12, "text": ["Moves the local origin of the object."], "extent": [4365, 4416]}], "container": true, "attrs": {"id": "p"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Pivot rotate"], "extent": [4416, 4438], "body": [{"type": "para", "indent": 12, "text": ["Rotates the local origin of the object after translation."], "extent": [4459, 4531]}], "container": true, "attrs": {"id": "pr"}, "role": "item"}], "container": true}], "container": true, "attrs": {"id": "pivot_xform"}}, {"level": 3, "id": "constraints", "container": true, "type": "h", "indent": 0, "text": ["Constraints"], "extent": [9344, 9376], "body": [{"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [9376, 9383], "body": [{"type": "para", "indent": 4, "text": ["USD currently does not have look-at constraints. This node calculates the per-frame transform to fulfill the constraint and applies it to the object."], "extent": [9383, 9538]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["See the ", {"scheme": null, "value": "/nodes/lop/light#tool", "type": "link", "text": ["Light tool help"], "fullpath": "/nodes/lop/light#tool", "fragment": "#tool"}, " for how to set up the look-at constraint interactively in the viewport."], "extent": [9538, 9659]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Look At"], "extent": [9659, 9675], "body": [{"type": "para", "indent": 4, "text": ["Turns on the constraint that orients this object to look at a point or another object."], "extent": [9675, 9767]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Position"], "extent": [9767, 9782], "body": [{"type": "para", "indent": 4, "text": ["???"], "extent": [9782, 9791]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Look At Position"], "extent": [9791, 9809], "body": [{"type": "para", "indent": 4, "text": ["If ", {"type": "ui", "text": ["Enable look at"]}, " is on and, this is a point in space this object will look at. If ", {"type": "ui", "text": ["Look at primitive"]}, " is not blank, this is an ", {"type": "strong", "text": ["offset"]}, " from the centroid of the target object (in the local space of that object)."], "extent": [9809, 10033]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Look At Primitive"], "extent": [10033, 10052], "body": [{"type": "para", "indent": 4, "text": ["The path to a USD prim this object should look at. If this is not blank, ", {"type": "ui", "text": ["Look at position"]}, " is an ", {"type": "strong", "text": ["offset"]}, " from this centroid of the target object."], "extent": [10052, 10207]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Up Vector Method"], "extent": [10207, 10225], "body": [{"type": "para", "indent": 4, "text": ["Controls how the up vector is set."], "extent": [10225, 10265]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["X Axis"], "extent": [10265, 10277], "body": [{"type": "para", "indent": 8, "text": ["Use (1,0,0) as the up axis."], "extent": [10277, 10314]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Y Axis"], "extent": [10314, 10326], "body": [{"type": "para", "indent": 8, "text": ["Use (0,1,0) as the up axis."], "extent": [10326, 10363]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [10363, 10375], "body": [{"type": "para", "indent": 8, "text": ["Us the value of the Up Vector parameter as the up axis."], "extent": [10375, 10440]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Up Vector"], "extent": [10440, 10451], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Up vector method"]}, " is ", {"type": "q", "text": ["custom"]}, ", this is the up axis to use for the look-at constraint."], "extent": [10451, 10550]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Twist"], "extent": [10550, 10557], "body": [{"type": "para", "indent": 4, "text": ["A twist rotation (around the -Z axis, clockwise, in degrees), applied after the lookout transform."], "extent": [10557, 10662]}], "container": true, "role": "item"}], "container": true}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["View"], "extent": [1941, 1952], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Projection"], "extent": [1952, 1965], "body": [{"type": "para", "indent": 4, "text": ["Whether the view through this camera is perspective or orthographic."], "extent": [1965, 2039]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clipping Range"], "extent": [2039, 2055], "body": [{"type": "para", "indent": 4, "text": ["Don\u2019t show geometry closer than the near distance or farther away than the far distance (in world units)."], "extent": [2055, 2166]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Focal Length"], "extent": [2166, 2180], "body": [{"type": "para", "indent": 4, "text": ["Perspective focal length in millimeters. This drives an expression on a hidden parameter to generate a value in the units expected by USD, which is tenths of a world unit, as defined by the stage\u2019s meters per unit setting."], "extent": [2180, 2408]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Aperture"], "extent": [2408, 2418], "body": [{"type": "para", "indent": 4, "text": ["These parameters control the size and position of the virtual sensor of the camera primitive."], "extent": [2418, 2517]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Control Aperture"], "extent": [2517, 2539], "body": [{"type": "para", "indent": 8, "text": ["Similar to the standard control menus associated with each parameter on an Edit Properties LOP, this menu controls how both the horizontal and vertical aperture attributes should be handled."], "extent": [2539, 2739], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Set Horizontal Aperture and Aspect Ratio"], "extent": [2739, 2793], "body": [{"type": "para", "indent": 16, "text": ["Rather than specifying the horizontal and vertical aperture sizes separately, this mode presents the horizontal aperture control and an ", {"type": "ui", "text": ["Aspect ratio"]}, " parameter which is used to calculate the vertical aperture value from the horizontal aperture value."], "extent": [2793, 3064]}], "container": true}], "container": true}], "container": true}, {"type": "para", "indent": 8, "text": ["All other choices in this menu behave like every other control menu, presenting separate horizontal and vertical aperture value parameters which can be set directly, or used to modify existing values."], "extent": [3064, 3274]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Horizontal Aperture"], "extent": [3274, 3299], "body": [{"type": "para", "indent": 8, "text": ["Horizontal aperture in millimeters. This drives an expression on a hidden parameter to generate a value in the units expected by USD, which is tenths of a world unit, as defined by the stage\u2019s meters per unit setting."], "extent": [3299, 3526]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Vertical Aperture"], "extent": [3526, 3549], "body": [{"type": "para", "indent": 8, "text": ["Vertical aperture in millimeters. This drives an expression on a hidden parameter to generate a value in the units expected by USD, which is tenths of a world unit, as defined by the stage\u2019s meters per unit setting."], "extent": [3549, 3774]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Aspect Ratio"], "extent": [3774, 3792], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Control aperture"]}, " is set to ", {"type": "code", "text": ["Set Horizontal Aperture and Aspect Ratio"]}, ", this parameter specifies the desired aperture aspect ratio used to calculate the vertical aperture from the horizontal aperture. Render Settings and Render Product nodes can use the camera aperture aspect ratio to set the correct resolution automatically."], "extent": [3792, 4137]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Offsets"], "extent": [4137, 4150], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Horizontal Aperture Offset"], "extent": [4150, 4186], "body": [{"type": "para", "indent": 12, "text": ["Horizontal offset of the aperture from the center of the image defined by the view frustum expressed in millimeters. This drives an expression on a hidden parameter to generate a value in the units expected by USD, which is tenths of a world unit, as defined by the stage\u2019s meters per unit setting."], "extent": [4186, 4498]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Vertical Aperture Offset"], "extent": [4498, 4532], "body": [{"type": "para", "indent": 12, "text": ["Vertical offset of the aperture from the center of the image defined by the view frustum expressed in millimeters. This drives an expression on a hidden parameter to generate a value in the units expected by USD, which is tenths of a world unit, as defined by the stage\u2019s meters per unit setting."], "extent": [4532, 4842]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Viewport Control"], "extent": [4842, 4864], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Scale Guide Geometry"], "extent": [4864, 4894], "body": [{"type": "para", "indent": 12, "text": ["Applies a uniform scaling factor the the guide geometry drawn for the camera in the viewport. The default value is an expression that inverts the ", {"type": "q", "text": ["meters per unit"]}, " value of the USD stage to produce a consistent real-world size for the guide geometry."], "extent": [4894, 5158]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Show in Viewport Camera Menu"], "extent": [5158, 5196], "body": [{"type": "para", "indent": 12, "text": ["Turn off this option to prevent this camera from showing up in the camera menu in the viewport. This can be useful to hide cameras that are used for texture projection or other utility purposes, and are not actually meant for viewing the scene."], "extent": [5196, 5466]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Background Image"], "extent": [5466, 5492], "body": [{"type": "para", "indent": 12, "text": ["Draw a background image behind the geometry in the viewer when looking through this camera. This can be used to replace background elements in the scene with a pre-rendered image, saving memory and processing time."], "extent": [5492, 5720]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Foreground Image"], "extent": [5720, 5746], "body": [{"type": "para", "indent": 12, "text": ["Draw a foreground image over the geometry in the viewer when looking through this camera. If the image contains a depth AOV, this is used to z-composite the image into the scene. This can be used to replace large portions of the scene with a pre-rendered image, saving memory and processing time."], "extent": [5746, 6056]}], "container": true}], "container": true}, {"type": "para", "indent": 8, "text": ["Houdini uses ", {"scheme": null, "value": "/io/ocio", "type": "link", "text": ["OCIO"], "fullpath": "/io/ocio"}, " to color correct images loaded from disk. It may be able to ", {"scheme": null, "value": "/io/ocio#guess", "type": "link", "text": ["guess the image\u2019s color space"], "fullpath": "/io/ocio#guess", "fragment": "#guess"}, " based on the image filename (for example, ", {"type": "code", "text": ["myimage-srgb.exr"]}, ") or format."], "extent": [6056, 6274]}], "container": true}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Sampling"], "extent": [6274, 6289], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Shutter Open"], "extent": [6289, 6304], "body": [{"type": "para", "indent": 4, "text": ["Shutter-open time, relative to the start of frame, in ", {"type": "code", "text": ["UsdTimeCode"]}, " units. This is used to calculate motion blur. You can use a negative value to indicate that the shutter opens ", {"type": "em", "text": ["before"]}, " each frame."], "extent": [6304, 6508]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shutter Close"], "extent": [6508, 6523], "body": [{"type": "para", "indent": 4, "text": ["Shutter-close time, relative to the start of frame, in ", {"type": "code", "text": ["UsdTimeCode"]}, " units. If this is not greater than ", {"type": "ui", "text": ["Shutter open"]}, " there the shutter will never open and the renderer will produce a black image."], "extent": [6523, 6728]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Focus Distance"], "extent": [6728, 6744], "body": [{"type": "para", "indent": 4, "text": ["Distance from the camera to the focal plane, in world units."], "extent": [6744, 6810]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["F-Stop"], "extent": [6810, 6818], "body": [{"type": "para", "indent": 4, "text": ["The ratio of the focal length to the camera aperture size. Default is ", {"type": "code", "text": ["0"]}, ", which turns off focusing."], "extent": [6818, 6924]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Exposure"], "extent": [6924, 6934], "body": [{"type": "para", "indent": 4, "text": ["Exposure adjustment, as a log base-2 value.  The default\n    of 0.0 has no effect.  A value of 1.0 will double the\n    image-plane intensities in a rendered image; a value of\n    -1.0 will halve them."], "extent": [6934, 7140]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "title": ["Camera"], "summary": ["Adds a USD camera to the scene."], "included": ["/nodes/lop/_sampling", "/nodes/lop/_simple_prims"]}