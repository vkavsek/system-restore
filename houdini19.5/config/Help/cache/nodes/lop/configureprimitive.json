{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "configureprimitive", "icon": "LOP/configureprimitive", "group": "prims", "since": "18.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Configure Primitives"], "extent": [0, 25]}, {"type": "summary", "indent": 0, "text": ["Edits various metadata on one or more primitives."], "extent": [139, 197]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [197, 212], "body": [{"type": "para", "indent": 0, "text": ["The metadata on primitives is a ", {"type": "q", "text": ["grab bag"]}, " of useful settings, such as:"], "extent": [212, 286]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Visibility and draw mode."], "extent": [286, 315]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["For what types of render the prim is used."], "extent": [315, 361]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Bookkeeping information such as references to files on disk."], "extent": [361, 425]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["How primitives are traversed."], "extent": [425, 458]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Space where studios or tools can store their own arbitrary per-prim data."], "extent": [458, 536]}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips"], "extent": [536, 547], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["This node will only author a bit of metadata if the corresponding parameter has its checkbox turned on. If the checkbox for a parameter is off, the node will not change any existing metadata corresponding to that parameter."], "extent": [547, 775]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can easily switch the draw mode of primitives in the scene using the controls in the ", {"scheme": null, "value": "/ref/panes/scenegraphtree", "type": "link", "text": ["Scene Graph Tree pane"], "fullpath": "/ref/panes/scenegraphtree"}, ". The controls in the pane modify an in-memory ", {"type": "q", "text": ["view layer"]}, " that is not saved to disk, so they are more useful for working interactively."], "extent": [775, 1055]}], "container": true}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1055, 1067], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Primitives"], "extent": [16, 28], "body": [{"type": "para", "indent": 4, "text": ["The primitive(s) the node should operate on. You can drag primitives from the scene graph tree pane into this textbox to add their paths, or click the ", {"scheme": "Icon", "value": "BUTTONS/reselect", "type": "link", "text": "", "fullpath": "/nodes/lop/BUTTONS/reselect"}, " Reselect button beside the text box to select the primitives in the viewer, or ", {"keys": ["Ctrl"], "type": "keys", "text": null}, "-click the Reselect button to choose prims from a pop-up tree window. You can also use ", {"scheme": null, "value": "/solaris/pattern", "type": "link", "text": ["primitive patterns"], "fullpath": "/solaris/pattern"}, " for advanced matching, including matching all prims in a collection (using ", {"type": "code", "text": ["/path/to/prim.collection:", {"type": "var", "text": ["name"]}]}, ")."], "extent": [50, 554]}], "container": true, "attrs": {"id": "primpattern"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [1092, 1098], "body": [{"type": "para", "indent": 8, "text": ["Set the primitive\u2019s type. Changing the type of an existing primitive can lead to unexpected results, as all existing attributes on the primitive will remain, and not all attributes have any meaning or the same meaning in a different primitive type. However this capability can be invaluable in performing low level corrections to scenes that may have been authored incorrectly."], "extent": [1098, 1485]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Specifier"], "extent": [1485, 1496], "body": [{"type": "para", "indent": 4, "text": ["Set the primitive\u2019s ", {"scheme": null, "value": "/solaris/usd#specifiers", "type": "link", "text": ["specifier"], "fullpath": "/solaris/usd#specifiers", "fragment": "#specifiers"}, " in the active layer. Note that this may not change the composed specifier for the primitive, depending on whether a different specifier is already set in another layer. In particular, an ", {"type": "code", "text": ["Over"]}, " specifier opinion is weaker than any other specifier opinion, even if the other opinion is on a weaker layer."], "extent": [1496, 1861]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Purpose"], "extent": [1861, 1870], "body": [{"type": "para", "indent": 8, "text": ["Set the primitive\u2019s ", {"type": "em", "text": ["purpose"]}, ". Purposes are a way to control what gets rendered. The viewer/renderer only shows primitives tagged with one of a specified set of purposes."], "extent": [1870, 2050]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Default"], "extent": [2050, 2067], "body": [{"type": "para", "indent": 16, "text": ["No set purpose, rendered by default."], "extent": [2067, 2121]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Render"], "extent": [2121, 2137], "body": [{"type": "para", "indent": 16, "text": ["Should be used to tag high-resolution geometry that should appear in final renders."], "extent": [2137, 2238]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Proxy"], "extent": [2238, 2253], "body": [{"type": "para", "indent": 16, "text": ["Should be used to tag faster/cheaper/lower-resolution proxy geometry. This may be used for test renders."], "extent": [2253, 2375]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Guide"], "extent": [2375, 2390], "body": [{"type": "para", "indent": 16, "text": ["Should be sued to tag ", {"type": "q", "text": ["guide geometry"]}, " that should appear in an interactive viewer but not a rendered image. For example, collision geometry for a simulation."], "extent": [2390, 2566]}], "container": true}], "container": true}, {"type": "para", "indent": 8, "text": ["If you set up purposes on your primitives, then you can control visibility of all primitives with the same purpose at render time by setting what purposes are visible in the render settings."], "extent": [2566, 2766]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [2766, 2780], "body": [{"type": "para", "indent": 16, "text": ["If you set a primitive to have a Render purpose, there should be a corresponding prim with its purpose set to ", {"type": "q", "text": ["Proxy"]}, ", and on the ", {"type": "q", "text": ["Render"]}, " prim you should set the ", {"type": "ui", "text": ["Proxy primitive"]}, " (below) to the path of the ", {"type": "q", "text": ["Proxy"]}, " prim."], "extent": [2780, 3021]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Proxy Primitive"], "extent": [3021, 3038], "body": [{"type": "para", "indent": 8, "text": ["For a primitive with Render Purpose, this metadata holds the path to the primitive with Proxy purpose which corresponds to this render primitive."], "extent": [3038, 3193]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Kind"], "extent": [3193, 3199], "body": [{"type": "para", "indent": 8, "text": ["See ", {"scheme": null, "value": "/solaris/usd#kinds", "type": "link", "text": ["Kinds and the model hierarchy"], "fullpath": "/solaris/usd#kinds", "fragment": "#kinds"}, " for an explanation of kinds and how they should be used. To maintain a proper model hierarchy, you should apply a kind to any prim whose descendants contain geometry."], "extent": [3199, 3430]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["None"], "extent": [3430, 3444], "body": [{"type": "para", "indent": 16, "text": ["Mark this prim as not having a kind."], "extent": [3444, 3498]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Assembly"], "extent": [3498, 3516], "body": [{"type": "para", "indent": 16, "text": ["Mark this prim as an ", {"type": "q", "text": ["important"]}, " group of models (for example, if a prop is made up of smaller moving parts, the top level of the prop would be an Assembly, and the sub-parts would be Groups and/or Components)."], "extent": [3516, 3744]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Group"], "extent": [3744, 3759], "body": [{"type": "para", "indent": 16, "text": ["Mark this prim as a group of models."], "extent": [3759, 3813]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Component"], "extent": [3813, 3832], "body": [{"type": "para", "indent": 16, "text": ["Mark this prim as a ", {"type": "q", "text": ["leaf"]}, " model."], "extent": [3832, 3883]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Sub-component"], "extent": [3883, 3906], "body": [{"type": "para", "indent": 16, "text": ["Mark this prim as a subordinate part under a Component model."], "extent": [3906, 3985]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Instanceable"], "extent": [3985, 3999], "body": [{"type": "para", "indent": 8, "text": ["See ", {"scheme": null, "value": "/solaris/usd#instancing", "type": "link", "text": ["Instancing"], "fullpath": "/solaris/usd#instancing", "fragment": "#instancing"}, " for an explanation of instanceable primitives. If a prim is marked as ", {"type": "q", "text": ["instanceable"]}, ", all duplicates of that prim (and its descendants) are automatically replaced with lightweight references to a single ", {"type": "q", "text": ["master"]}, " instance. You can still change attributes on instanceable prim (for example, to give each instance its own transform), but you can\u2019t edit any of its descendants."], "extent": [3999, 4423]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Draw Mode"], "extent": [4423, 4434], "body": [{"type": "para", "indent": 8, "text": ["Controls how the renderer draws geometry under this prim. These options allow you to replace extremely heavy geometry in the viewer with faster, cheaper alternatives. Descendants of this prim will inherit this setting unless they change it."], "extent": [4434, 4684]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [4684, 4698], "body": [{"type": "para", "indent": 16, "text": ["You can easily switch the draw mode of primitives in the scene using the controls in the ", {"scheme": null, "value": "/ref/panes/scenegraphtree", "type": "link", "text": ["Scene Graph Tree pane"], "fullpath": "/ref/panes/scenegraphtree"}, ". The controls in the pane modify an in-memory ", {"type": "q", "text": ["view layer"]}, " that is not saved to disk, so they are more useful for working interactively."], "extent": [4698, 4991]}], "container": true}], "container": true, "role": "item_group"}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Full Geometry"], "extent": [4991, 5014], "body": [{"type": "para", "indent": 16, "text": ["Draw the geometry as usual."], "extent": [5014, 5059]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Origin Axes"], "extent": [5059, 5080], "body": [{"type": "para", "indent": 16, "text": ["Instead of drawing the geometry, draw a ", {"type": "q", "text": ["jack"]}, " (three lines along the X, Y, and Z axes) aligned to the geometry\u2019s local space, at its local origin."], "extent": [5080, 5245]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Bounding Box"], "extent": [5245, 5267], "body": [{"type": "para", "indent": 16, "text": ["Instead of drawing the geometry, draw a world-space-aligned box representing the bounding box of the geometry."], "extent": [5267, 5395]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Textured Cards"], "extent": [5395, 5419], "body": [{"type": "para", "indent": 16, "text": ["Draws rectangular polygons with optional textures within or around the bounding box of this primitive. A variety of other attributes are used to control the appearance of these cards. They may be drawn as a bounding box, or as three cards that meet at the origin. The texture maps for each of the six visible card faces are also controlled though attributes."], "extent": [5419, 5795]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Visibility"], "extent": [5795, 5807], "body": [{"type": "para", "indent": 8, "text": ["For performance reasons, the options for this metadata are Inherit or Invisible (there is no explicit ", {"type": "q", "text": ["Visible"]}, " value). This means that when you mark a primitive is marked invisible, all its descendants are made invisible as well."], "extent": [5807, 6047]}, {"type": "para", "indent": 8, "text": ["It can be useful to animate this setting over time, unlike most of the metadata on this node."], "extent": [6047, 6150]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Activation"], "extent": [6150, 6162], "body": [{"type": "para", "indent": 8, "text": ["If you turn this off, the primitive has no effect on the scene (for example, a light object will not cast light), it becomes invisible, and behaves as if it has no children."], "extent": [6162, 6345]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Asset Identifier"], "extent": [6345, 6363], "body": [{"type": "para", "indent": 8, "text": ["Stores the file path or asset ID of the file this primitive came from. USD does not use this metadata, but it may be useful for internal tools."], "extent": [6363, 6516]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Asset Name"], "extent": [6516, 6528], "body": [{"type": "para", "indent": 8, "text": ["A human readable name that may describe the asset. This may be authored by a pipeline/asset management tool. USD does not use this metadata, but it may be useful for internal tools."], "extent": [6528, 6719]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Asset Version"], "extent": [6719, 6734], "body": [{"type": "para", "indent": 8, "text": ["For version-controlled assets, the version number of the asset when the scene was authored. This may be authored by a pipeline/asset management tool. USD does not use this metadata, but it may be useful for internal tools."], "extent": [6734, 6966]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Asset Dependencies"], "extent": [6966, 6986], "body": [{"type": "para", "indent": 8, "text": ["An optional list of other files that are loaded indirectly by the asset file. This may be authored by a pipeline/asset management tool. USD does not use this metadata, but it may be useful for internal tools."], "extent": [6986, 7204]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Asset Info Count"], "extent": [7204, 7222], "body": [{"type": "para", "indent": 8, "text": ["Additional named values to associate with the asset info dictionary on these primitives. Set the number of items to set/edit, or use the plus and minus buttons to add or remove items."], "extent": [7222, 7415]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Asset Info Name"], "extent": [7415, 7432], "body": [{"type": "para", "indent": 8, "text": ["For each item of asset info, the name of the item."], "extent": [7432, 7492]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Asset Info Type"], "extent": [7492, 7509], "body": [{"type": "para", "indent": 8, "text": ["For each item of asset info, the data type of the value."], "extent": [7509, 7575]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["String"], "extent": [7575, 7591], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a single string."], "extent": [7591, 7648]}], "container": true}, {"type": "dt", "indent": 8, "text": ["String Array"], "extent": [7648, 7670], "body": [{"type": "para", "indent": 16, "text": ["The value is parsed into an array of substring, respecting quotes to group space separated words into a single substring."], "extent": [7670, 7809]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Token"], "extent": [7809, 7824], "body": [{"type": "para", "indent": 16, "text": ["Like a string, but represented as a USD Token, which generally should not contain spaces. Using this specific data type may be necessary to match scripts or tools later in your pipeline."], "extent": [7824, 8028]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Token Array"], "extent": [8028, 8049], "body": [{"type": "para", "indent": 16, "text": ["Like a string array, but because USD Tokens generally aren\u2019t expected to have spaces, the string is parsed into tokens using a simpler algorithm which ignores quotes and always splits the string where there is whitespace."], "extent": [8049, 8288]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Float"], "extent": [8288, 8303], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a floating point number."], "extent": [8303, 8368]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Integer"], "extent": [8368, 8385], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a whole integer value."], "extent": [8385, 8448]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Boolean"], "extent": [8448, 8465], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a True or False value."], "extent": [8465, 8528]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Asset Info Value"], "extent": [8528, 8546], "body": [{"type": "para", "indent": 8, "text": ["For each item of asset info, the value to associate with the name."], "extent": [8546, 8622]}, {"type": "para", "indent": 8, "text": ["(Behind the scenes there are several different parameters (", {"type": "code", "text": ["assetinfostrvalue", {"type": "var", "text": ["n"]}]}, ", ", {"type": "code", "text": ["assetinfofloatvalue", {"type": "var", "text": ["n"]}]}, ", ", {"type": "code", "text": ["assetinfointvalue", {"type": "var", "text": ["n"]}]}, ", ", {"type": "code", "text": ["assetinfoboolvalue", {"type": "var", "text": ["n"]}]}, ") all labeled ", {"type": "ui", "text": ["Asset info value"]}, ", with the visible one controlled by the ", {"type": "ui", "text": ["Asset info type"]}, " value. This may be relevant if you are using expressions or scripting these values.)"], "extent": [8622, 8975]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Icon"], "extent": [8975, 8981], "body": [{"type": "para", "indent": 8, "text": ["A path to an icon or image file that should be associated with the selected primitives in the Scene Graph Tree. This icon path is stored in a the primitive\u2019s custom data dictionary."], "extent": [8981, 9172]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Allow LOPs to Edit This Primitive"], "extent": [9172, 9207], "body": [{"type": "para", "indent": 8, "text": ["Applies a Houdini-specific attribute to the primitive which controls whether Edit Properties LOP node are allowed to modify this primitive. Disallowing the editing of a particular primitive can be used to prevent accidental modifications of cameras or other critical scene elements. Note that this toggle does not affect all edits of this primitive in LOPs, only the Edit Properties type LOP nodes respect this attribute."], "extent": [9207, 9638]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Allow Viewport Selection of This Primitive"], "extent": [9638, 9682], "body": [{"type": "para", "indent": 8, "text": ["Applies a Houdini-specific attribute to the primitive which controls whether or not the primitive can be selected in the viewport. Setting this attribute to on a primitive also affects all descendants of the primitive that do not specify their own explicit value for this attribute."], "extent": [9682, 9974]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hide Primitive In Scene Graph Trees"], "extent": [9974, 10011], "body": [{"type": "para", "indent": 8, "text": ["Sets the ", {"type": "code", "text": ["hidden"]}, " USD metadata to the primitive which controls whether or not this primitive (and its descendants) should be visible in the scene graph tree pane. Primitives tagged as hidden will still be visible in the viewport unless the primitive is also marked as invisible or inactive. Note that the scene graph tree pane provides an option to ignore this attribute (primarily for debugging purposes)."], "extent": [10011, 10427]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Apply API Schemas"], "extent": [10427, 10446], "body": [{"type": "para", "indent": 8, "text": ["See ", {"scheme": null, "value": "/solaris/usd#schemas", "type": "link", "text": ["schemas"], "fullpath": "/solaris/usd#schemas", "fragment": "#schemas"}, " for an explanation of API schemas. Primitives automatically keep a record of which API schemas have been ", {"type": "q", "text": ["applied"]}, " to them. This parameter allows to list ", {"type": "em", "text": ["additional"]}, " API schemas to apply to this primitive."], "extent": [10446, 10697]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Custom Data Count"], "extent": [16, 35], "body": [{"type": "para", "indent": 8, "text": ["The metadata of every prim contains a dictionary for use by software packages and/or studios to store ", {"type": "em", "text": ["custom data"]}, ". You can set or edit multiple custom key-value pairs here. Set the number of items to set/edit, or use the plus and minus buttons to add or remove items."], "extent": [35, 314]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Custom Data Name"], "extent": [314, 332], "body": [{"type": "para", "indent": 8, "text": ["For each item of custom data, the name of the item."], "extent": [332, 393]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Custom Data Type"], "extent": [393, 411], "body": [{"type": "para", "indent": 8, "text": ["For each item of custom data, the data type of the value."], "extent": [411, 478]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["String"], "extent": [478, 494], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a single string."], "extent": [494, 551]}], "container": true}, {"type": "dt", "indent": 8, "text": ["String Array"], "extent": [551, 573], "body": [{"type": "para", "indent": 16, "text": ["The value is parsed into an array of substring, respecting quotes to group space separated words into a single substring."], "extent": [573, 712]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Token"], "extent": [712, 727], "body": [{"type": "para", "indent": 16, "text": ["Like a string, but represented as a USD Token, which generally should not contain spaces. Using this specific data type may be necessary to match scripts or tools later in your pipeline."], "extent": [727, 931]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Token Array"], "extent": [931, 952], "body": [{"type": "para", "indent": 16, "text": ["Like a string array, but because USD Tokens generally aren\u2019t expected to have spaces, the string is parsed into tokens using a simpler algorithm which ignores quotes and always splits the string where there is whitespace."], "extent": [952, 1191]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Float"], "extent": [1191, 1206], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a floating point number."], "extent": [1206, 1271]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Integer"], "extent": [1271, 1288], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a whole integer value."], "extent": [1288, 1351]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Boolean"], "extent": [1351, 1368], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a True or False value."], "extent": [1368, 1431]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Custom Data Value"], "extent": [1431, 1450], "body": [{"type": "para", "indent": 8, "text": ["For each item of custom data, the value to associate with the name."], "extent": [1450, 1527]}, {"type": "para", "indent": 8, "text": ["(Behind the scenes there are several different parameters (", {"type": "code", "text": ["customdatastrvalue", {"type": "var", "text": ["n"]}]}, ", ", {"type": "code", "text": ["customdatafloatvalue", {"type": "var", "text": ["n"]}]}, ", ", {"type": "code", "text": ["customdataintvalue", {"type": "var", "text": ["n"]}]}, ", ", {"type": "code", "text": ["customdataboolvalue", {"type": "var", "text": ["n"]}]}, ") all labeled ", {"type": "ui", "text": ["Custom data value"]}, ", with the visible one controlled by the ", {"type": "ui", "text": ["Custom data type"]}, " value. This may be relevant if you are using expressions or scripting these values.)"], "extent": [1527, 1886]}], "container": true, "role": "item"}], "container": true}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [10721, 10730], "body": [{"type": "related_item_group", "body": [{"ext": null, "type": "related_item", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/configurestage", "type": "link", "text": "", "fullpath": "/nodes/lop/configurestage"}], "role": "item", "extent": [10730, 10759]}, {"ext": null, "type": "related_item", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/configurelayer", "type": "link", "text": "", "fullpath": "/nodes/lop/configurelayer"}], "role": "item", "extent": [10759, 10787]}, {"ext": null, "type": "related_item", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/configureproperty", "type": "link", "text": "", "fullpath": "/nodes/lop/configureproperty"}], "role": "item", "extent": [10787, 10819]}], "container": true, "role": "item_group"}], "text": "Related"}], "title": ["Configure Primitives"], "summary": ["Edits various metadata on one or more primitives."], "included": ["/nodes/lop/_custom_data", "/nodes/lop/_primpattern"]}