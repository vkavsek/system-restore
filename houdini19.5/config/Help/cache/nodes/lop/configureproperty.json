{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "configureproperty", "icon": "LOP/configureproperty", "group": "attrs", "since": "18.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Configure Properties"], "extent": [0, 25]}, {"type": "summary", "indent": 0, "text": ["Configures metadata on properties (relationships and attributes)."], "extent": [137, 211]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [211, 226], "body": [{"type": "para", "indent": 0, "text": ["This node modifies attribute ", {"type": "em", "text": ["metadata"]}, " (extra settings that can affect how the attribute is interpreted). To set an attribute\u2019s ", {"type": "em", "text": ["value"]}, ", use ", {"scheme": "Node", "value": "/nodes/lop/editproperties", "type": "link", "text": ["Edit Properties"], "fullpath": "/nodes/lop/editproperties"}, ", Attribute Wrangle ", {"scheme": "Node", "value": "/nodes/lop/attributewrangle", "type": "link", "text": "", "fullpath": "/nodes/lop/attributewrangle"}, ", or other LOP nodes that author attributes interactively (such as ", {"scheme": "Node", "value": "/nodes/lop/edit", "type": "link", "text": ["Edit"], "fullpath": "/nodes/lop/edit"}, ") or at a higher level."], "extent": [226, 569]}, {"type": "para", "indent": 0, "text": ["The metadata on properties is a ", {"type": "q", "text": ["grab bag"]}, " of useful settings, such as:"], "extent": [569, 642]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Animation settings."], "extent": [642, 665]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Color space."], "extent": [665, 681]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Array size."], "extent": [681, 696]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Space where studios or tools can store their own arbitrary per-property data."], "extent": [696, 778]}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips"], "extent": [778, 789], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["This node will only author a bit of metadata if the corresponding parameter has its checkbox turned on. If the checkbox for a parameter is off, the node will not change any existing metadata corresponding to that parameter."], "extent": [789, 1017]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Metadata on attributes cannot meaningfully be animated."], "extent": [1017, 1077]}], "container": true}, {"type": "para", "indent": 0, "text": ["The Configure Properties node provides the ability to set metadata on USD properties (attributes and relationships). Property metadata changes the way that the USD system interprets the attribute values. This node can also be used to add custom data to properties. Custom data is a set of named values that can be attached to a property, primitive, or layer. These custom data values are ignored by USD, but may be useful for transmitting studio-specific data from one application to another."], "extent": [1077, 1572]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1572, 1584], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Primitives"], "extent": [16, 28], "body": [{"type": "para", "indent": 4, "text": ["The primitive(s) the node should operate on. You can drag primitives from the scene graph tree pane into this textbox to add their paths, or click the ", {"scheme": "Icon", "value": "BUTTONS/reselect", "type": "link", "text": "", "fullpath": "/nodes/lop/BUTTONS/reselect"}, " Reselect button beside the text box to select the primitives in the viewer, or ", {"keys": ["Ctrl"], "type": "keys", "text": null}, "-click the Reselect button to choose prims from a pop-up tree window. You can also use ", {"scheme": null, "value": "/solaris/pattern", "type": "link", "text": ["primitive patterns"], "fullpath": "/solaris/pattern"}, " for advanced matching, including matching all prims in a collection (using ", {"type": "code", "text": ["/path/to/prim.collection:", {"type": "var", "text": ["name"]}]}, ")."], "extent": [50, 554]}], "container": true, "attrs": {"id": "primpattern"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Properties"], "extent": [1609, 1621], "body": [{"type": "para", "indent": 8, "text": ["A space separated list of property names which should be affected by this node. Normal Houdini string matching rules apply (accepting wildcards and using ", {"type": "code", "text": ["^"]}, " to exclude patterns). The node compares this pattern against every property name on every selected primitive. This can mean the node affects a different set of properties on each primitive."], "extent": [1621, 1978]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Variability"], "extent": [1978, 1991], "body": [{"type": "para", "indent": 8, "text": ["This is a hint to the USD system indicating whether the property can vary over time, or should be uniform over all time."], "extent": [1991, 2121]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Color Space"], "extent": [2121, 2134], "body": [{"type": "para", "indent": 8, "text": ["For attributes with a color data type, this metadata affects how USD interprets the color value. See the USD documentation for further information on how USD uses this color space metadata."], "extent": [2134, 2333]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Interpolation"], "extent": [2333, 2348], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["For primvar attributes, the Interpolation metadata controls how the primvar is applied to the geometry. Options are:\n        Constant (Detail)"], "extent": [2348, 2500], "body": [{"type": "para", "indent": 16, "text": ["The attribute should be an array with a single value which is applied to the entire geometry. Equivalent to Houdini Detail attributes in SOPs."], "extent": [2500, 2659]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Uniform (Primitive)"], "extent": [2659, 2688], "body": [{"type": "para", "indent": 16, "text": ["The attribute should be an array with a separate value for each polygon in a Mesh primitive, or curve in a BasisCurves primitive (same length as the ", {"type": "code", "text": ["faceVertexCounts"]}, " or ", {"type": "code", "text": ["curveVertexCounts"]}, " attributes). Equivalent to Houdini Primitive attributes in SOPs."], "extent": [2688, 2960]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Vertex (Point)"], "extent": [2960, 2984], "body": [{"type": "para", "indent": 16, "text": ["The attribute should be an array with a separate value for each point in the primitive (same length as the ", {"type": "code", "text": ["points"]}, " attribute). Equivalent to Houdini Point attributes in SOPs."], "extent": [2984, 3176]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Varying (Vertex)"], "extent": [3176, 3202], "body": [{"type": "para", "indent": 16, "text": ["The attribute should be an array with a separate value for each point used by each polygon (same length as the ", {"type": "code", "text": ["faceVertexIndices"]}, " attribute). This is equivalent to ", {"type": "code", "text": ["Vertex"]}, " interpolation on BasisCurves primitives. Equivalent to Houdini Vertex attributes in SOPs."], "extent": [3202, 3482]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Face Varying (Vertex)"], "extent": [3482, 3513], "body": [{"type": "para", "indent": 16, "text": ["The attribute should be an array with a separate value for each point used by each polygon (same length as the ", {"type": "code", "text": ["faceVertexIndices"]}, " attribute). This is equivalent to ", {"type": "code", "text": ["Vertex"]}, " interpolation on BasisCurves primitives. Equivalent to Houdini Vertex attributes in SOPs. This is the same as Varying interpolation except for how the interpolation is performed on the surface or curve between vertices. See the USD documentation for more information."], "extent": [3513, 3972]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Size"], "extent": [3972, 3986], "body": [{"type": "para", "indent": 8, "text": ["For a primvar attribute, this metadata controls how many elements of the array belong to each component of the geometry. This is necessary because primvar values are always flat arrays. As an example, suppose a single square exists in a Mesh primitive. A primvar with Vertex interpolation should have four values (one for each corner). With an element size of 1, this primvar attribute should have exactly four elements of whatever data type is set on the attribute (strings, vectors, colours, etc). With an element size of 5, the primvar attribute value should be an array of 20 elements, of which 5 belong to each corner of the square."], "extent": [3986, 4633]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Custom Data Count"], "extent": [16, 35], "body": [{"type": "para", "indent": 8, "text": ["The metadata of every prim contains a dictionary for use by software packages and/or studios to store ", {"type": "em", "text": ["custom data"]}, ". You can set or edit multiple custom key-value pairs here. Set the number of items to set/edit, or use the plus and minus buttons to add or remove items."], "extent": [35, 314]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Custom Data Name"], "extent": [314, 332], "body": [{"type": "para", "indent": 8, "text": ["For each item of custom data, the name of the item."], "extent": [332, 393]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Custom Data Type"], "extent": [393, 411], "body": [{"type": "para", "indent": 8, "text": ["For each item of custom data, the data type of the value."], "extent": [411, 478]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["String"], "extent": [478, 494], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a single string."], "extent": [494, 551]}], "container": true}, {"type": "dt", "indent": 8, "text": ["String Array"], "extent": [551, 573], "body": [{"type": "para", "indent": 16, "text": ["The value is parsed into an array of substring, respecting quotes to group space separated words into a single substring."], "extent": [573, 712]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Token"], "extent": [712, 727], "body": [{"type": "para", "indent": 16, "text": ["Like a string, but represented as a USD Token, which generally should not contain spaces. Using this specific data type may be necessary to match scripts or tools later in your pipeline."], "extent": [727, 931]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Token Array"], "extent": [931, 952], "body": [{"type": "para", "indent": 16, "text": ["Like a string array, but because USD Tokens generally aren\u2019t expected to have spaces, the string is parsed into tokens using a simpler algorithm which ignores quotes and always splits the string where there is whitespace."], "extent": [952, 1191]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Float"], "extent": [1191, 1206], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a floating point number."], "extent": [1206, 1271]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Integer"], "extent": [1271, 1288], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a whole integer value."], "extent": [1288, 1351]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Boolean"], "extent": [1351, 1368], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a True or False value."], "extent": [1368, 1431]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Custom Data Value"], "extent": [1431, 1450], "body": [{"type": "para", "indent": 8, "text": ["For each item of custom data, the value to associate with the name."], "extent": [1450, 1527]}, {"type": "para", "indent": 8, "text": ["(Behind the scenes there are several different parameters (", {"type": "code", "text": ["customdatastrvalue", {"type": "var", "text": ["n"]}]}, ", ", {"type": "code", "text": ["customdatafloatvalue", {"type": "var", "text": ["n"]}]}, ", ", {"type": "code", "text": ["customdataintvalue", {"type": "var", "text": ["n"]}]}, ", ", {"type": "code", "text": ["customdataboolvalue", {"type": "var", "text": ["n"]}]}, ") all labeled ", {"type": "ui", "text": ["Custom data value"]}, ", with the visible one controlled by the ", {"type": "ui", "text": ["Custom data type"]}, " value. This may be relevant if you are using expressions or scripting these values.)"], "extent": [1527, 1886]}], "container": true, "role": "item"}], "container": true}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [4657, 4666], "body": [{"type": "related_item_group", "body": [{"ext": null, "type": "related_item", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/configurestage", "type": "link", "text": "", "fullpath": "/nodes/lop/configurestage"}], "role": "item", "extent": [4666, 4695]}, {"ext": null, "type": "related_item", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/configurelayer", "type": "link", "text": "", "fullpath": "/nodes/lop/configurelayer"}], "role": "item", "extent": [4695, 4723]}, {"ext": null, "type": "related_item", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/configureprimitive", "type": "link", "text": "", "fullpath": "/nodes/lop/configureprimitive"}], "role": "item", "extent": [4723, 4757]}], "container": true, "role": "item_group"}], "text": "Related"}], "title": ["Configure Properties"], "summary": ["Configures metadata on properties (relationships and attributes)."], "included": ["/nodes/lop/_custom_data", "/nodes/lop/_primpattern"]}