{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "instancer", "icon": "SOP/copytopoints", "since": "17.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Instancer"], "extent": [0, 14]}, {"type": "summary", "indent": 0, "text": ["Instances or copies primitives onto points."], "extent": [108, 160]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [160, 175], "body": [{"type": "para", "indent": 0, "text": ["USD supports two types of instancing: ", {"type": "em", "text": ["instanceable primitives"]}, " (where multiple copies of the same branch are aliases to shared storage) and ", {"type": "em", "text": ["point instancing"]}, " (where USD stores ", {"type": "em", "text": ["points"]}, " and ", {"type": "em", "text": ["prototypes"]}, " to copy onto the points, but only draws the copies at render time). See ", {"scheme": null, "value": "/solaris/usd#instancing", "type": "link", "text": ["USD instancing"], "fullpath": "/solaris/usd#instancing", "fragment": "#instancing"}, " for more information."], "extent": [175, 516]}, {"type": "para", "indent": 0, "text": ["This node can do both types of instancing: it can create a point instancer, or it can place instanceable prims based on the locations of points. (It can also reference in ", {"type": "em", "text": ["real separate copies"]}, " instead of instanceable prims.)"], "extent": [516, 743]}, {"type": "para", "indent": 0, "text": ["The thing or things you want to create multiples of are called the ", {"type": "em", "text": ["prototypes"]}, ". This node assumes the prototypes already exist, connected to the first or second input."], "extent": [743, 913]}, {"type": "para", "indent": 0, "text": ["The points you want to instance/copy onto are called the ", {"type": "em", "text": ["targets"]}, ". The targets can be points or prim positions in the input scene graph tree, or you can generate them in the SOP subnet inside this node, or in a SOP node elsewhere in the node hierarchy."], "extent": [913, 1169]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Example"], "extent": [1169, 1183], "body": [{"type": "fig_group", "body": [{"ext": null, "type": "fig", "indent": 0, "text": [" ", {"scheme": "Image", "value": "/images/nodes/lop/point_instancer_lop.jpg", "type": "img", "text": ""}], "role": "item", "extent": [1183, 1241], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["In the network editor, use the ", {"keys": ["Tab"], "type": "keys", "text": null}, " menu to create a Torus."], "extent": [1241, 1311], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "q", "text": ["Torus"]}, " tool actually creates a SOP Create node that imports the result of a ", {"scheme": "Node", "value": "/nodes/sop/torus", "type": "link", "text": ["Torus SOP"], "fullpath": "/nodes/sop/torus"}, " into USD."], "extent": [1311, 1438]}, {"type": "para", "indent": 8, "text": ["On the SOP Create node, set the ", {"type": "ui", "text": ["Import path prefix"]}, " to ", {"type": "code", "text": ["/Geometry/torus"]}, "."], "extent": [1438, 1524]}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Add a ", {"scheme": "Node", "value": "/nodes/lop/sphere", "type": "link", "text": ["Sphere LOP"], "fullpath": "/nodes/lop/sphere"}, ". Set the ", {"type": "ui", "text": ["Primitive path"]}, " to ", {"type": "code", "text": ["/Geometry/ball"]}, " and the ", {"type": "ui", "text": ["Uniform scale"]}, " to ", {"type": "code", "text": ["0.05"]}, "."], "extent": [1524, 1651]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Add a ", {"scheme": "Node", "value": "/nodes/lop/cone", "type": "link", "text": ["Cone LOP"], "fullpath": "/nodes/lop/cone"}, ". Set the ", {"type": "ui", "text": ["Primitive path"]}, " to ", {"type": "code", "text": ["/Geometry/cone"]}, " and the ", {"type": "ui", "text": ["Uniform scale"]}, " to ", {"type": "code", "text": ["0.05"]}, "."], "extent": [1651, 1774]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Add a ", {"scheme": "Node", "value": "/nodes/lop/sphere", "type": "link", "text": ["Cylinder LOP"], "fullpath": "/nodes/lop/sphere"}, ". Set the ", {"type": "ui", "text": ["Primitive path"]}, " to ", {"type": "code", "text": ["/Geometry/tube"]}, " and the ", {"type": "ui", "text": ["Uniform scale"]}, " to ", {"type": "code", "text": ["0.05"]}, "."], "extent": [1774, 1903]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Add an Instancer LOP."], "extent": [1903, 1932], "body": [{"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": ["Set the ", {"type": "ui", "text": ["Primitive path"]}, " to ", {"type": "code", "text": ["/Geometry/shapes"]}, "."], "extent": [1932, 1993]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Set the ", {"type": "ui", "text": ["Method"]}, " to ", {"type": "q", "text": ["Point instancer"]}, "."], "extent": [1993, 2045]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Set the ", {"type": "ui", "text": ["Location source"]}, " to ", {"type": "q", "text": ["First input\u2019s points"]}, "."], "extent": [2045, 2111]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Set the ", {"type": "ui", "text": ["Location primitives"]}, " to ", {"type": "code", "text": ["/Geometry/torus/mesh_0"]}, "."], "extent": [2111, 2183]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Set the ", {"type": "ui", "text": ["Prototype source"]}, " to ", {"type": "q", "text": ["First input"]}, "."], "extent": [2183, 2241]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Set the ", {"type": "ui", "text": ["Prototype primitives"]}, " to ", {"type": "code", "text": ["/Geometry/ball /Geometry/cone /Geometry/tube"]}, "."], "extent": [2241, 2336]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Set the ", {"type": "ui", "text": ["Prototype index"]}, " to ", {"type": "q", "text": ["Random"]}], "extent": [2336, 2387]}], "container": true}, {"type": "para", "indent": 8, "text": ["The node randomly instances a ball, cone, or tube at each point of the torus."], "extent": [2387, 2475]}], "container": true}], "container": true}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "special_attrs", "container": true, "type": "h", "indent": 0, "text": ["Special SOP attributes"], "extent": [2475, 2520], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can create a ", {"type": "code", "text": ["usdvisibility"]}, " point string SOP attribute to control the visibility metadata of the corresponding USD prim or point instance. The value should be either ", {"type": "code", "text": ["invisible"]}, " or ", {"type": "code", "text": ["inherit"]}, "."], "extent": [2520, 2721], "body": [{"type": "para", "indent": 4, "text": ["If you create point instances, this visibility information is converted to an ", {"type": "code", "text": ["invisibleIds"]}, " USD attribute."], "extent": [2721, 2834]}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["How to"], "extent": [2834, 2847], "body": [{"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 0, "text": [" Scatter each prototype\u2019s variant"], "role": "item", "extent": [2847, 2890], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["Use an ", {"scheme": "Node", "value": "/nodes/lop/explorevariants", "type": "link", "text": ["Explore Variants"], "fullpath": "/nodes/lop/explorevariants"}, " node on the second input of the Instancer LOP."], "extent": [2890, 2995]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Specify the variant set(s) you want as prototypes."], "extent": [2995, 3053]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["On the Instancer node, set ", {"type": "ui", "text": ["Prototype Primitives"]}, " to target the prototypes generated from the Explore Variants node."], "extent": [3053, 3179]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Turn ", {"type": "em", "text": ["off"]}, " ", {"type": "ui", "text": ["Only Copy Specified Prototype Primitives"]}, "."], "extent": [3179, 3243]}], "container": true}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [3243, 3255], "body": [{"level": 3, "type": "sep", "indent": 0, "text": [" General "], "extent": [3255, 3272]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Primitive Path"], "extent": [3272, 3289], "body": [{"type": "para", "indent": 4, "text": ["The scene graph path at which to create the point instancer prim (when ", {"type": "ui", "text": ["Method"]}, " is ", {"type": "q", "text": ["Point instancer"]}, "), or the parent of all created prims (when ", {"type": "ui", "text": ["Method"]}, " is anything other than ", {"type": "q", "text": ["Point Instancer"]}, ")."], "extent": [3308, 3513]}], "container": true, "attrs": {"id": "primpath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primitive Kind"], "extent": [3513, 3529], "body": [{"type": "para", "indent": 4, "text": ["If the prim at ", {"type": "ui", "text": ["Primitive path"]}, " doesn\u2019t exist, this node creates it. If it creates the prim, it sets this as the prim\u2019s ", {"scheme": null, "value": "/solaris/usd#kind", "type": "link", "text": ["kind"], "fullpath": "/solaris/usd#kind", "fragment": "#kind"}, "."], "extent": [3548, 3701]}], "container": true, "attrs": {"id": "primkind"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Method"], "extent": [3701, 3709], "body": [{"type": "para", "indent": 4, "text": ["See ", {"scheme": null, "value": "/solaris/usd#instancing", "type": "link", "text": ["Instancing in USD"], "fullpath": "/solaris/usd#instancing", "fragment": "#instancing"}, " for more information."], "extent": [3726, 3801]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Point Instancer"], "extent": [3801, 3822], "body": [{"type": "para", "indent": 8, "text": ["Create a point instancer. This is a single prim (with the prototypes as children) that draws the instanced geometry on-demand in the viewer or renderer."], "extent": [3822, 3984]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Instanceable Reference"], "extent": [3984, 4012], "body": [{"type": "para", "indent": 8, "text": ["Creates an ", {"scheme": null, "value": "/solaris/usd#instancing", "type": "link", "text": ["instanceable prim"], "fullpath": "/solaris/usd#instancing", "fragment": "#instancing"}, " at each point. These are separate prims in the scene graph tree, and can individual overrides on each top-level prim, but they share a ", {"type": "q", "text": ["shadow"]}, " copy of their descendant prims, so their descendants are not editable or individually override-able."], "extent": [4012, 4321]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Reference"], "extent": [4321, 4336], "body": [{"type": "para", "indent": 8, "text": ["Creates a separate prim at each point that references in the ", {"type": "q", "text": ["prototype"]}, " prim(s). These references take up more storage space than instanceable prims, but you can edit/override the descendant prims."], "extent": [4336, 4544]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Instanceable Inherit"], "extent": [4544, 4570], "body": [{"type": "para", "indent": 8, "text": ["Just like ", {"type": "q", "text": ["Instanceable Reference"]}, " except the instance primitives inherit from the source primitive rather than reference it."], "extent": [4570, 4705]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Inherit"], "extent": [4705, 4718], "body": [{"type": "para", "indent": 8, "text": ["Just like ", {"type": "q", "text": ["Reference"]}, " except the instance primitives inherit from the source primitive rather than reference it."], "extent": [4718, 4840]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Instanceable Specialize"], "extent": [4840, 4869], "body": [{"type": "para", "indent": 8, "text": ["Just like ", {"type": "q", "text": ["Instanceable Reference"]}, " except the instance primitives specialize from the source primitive rather than reference it."], "extent": [4869, 5007]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Specialize"], "extent": [5007, 5023], "body": [{"type": "para", "indent": 8, "text": ["Just like ", {"type": "q", "text": ["Reference"]}, " except the instance primitives specialize from the source primitive rather than reference it."], "extent": [5023, 5148]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "method"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Set Extents"], "extent": [5148, 5161], "body": [{"type": "para", "indent": 4, "text": ["Compute the extents (bounding box) of the instanced geometry and store this on the instancer prim.  "], "extent": [5186, 5292]}], "container": true, "attrs": {"id": "setextents"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Target Points "], "extent": [5292, 5314]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Location Source"], "extent": [5314, 5332], "body": [{"type": "para", "indent": 4, "text": ["Where to get the points to copy onto."], "extent": [5362, 5405]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Internal SOP"], "extent": [5405, 5423], "body": [{"type": "para", "indent": 8, "text": ["Build a SOP network in the subnet inside this node to generate the points."], "extent": [5423, 5507]}], "container": true}, {"type": "dt", "indent": 4, "text": ["External SOP"], "extent": [5507, 5525], "body": [{"type": "para", "indent": 8, "text": ["Get the points from the output of a SOP elsewhere in the Houdini node hierarchy."], "extent": [5525, 5615]}], "container": true}, {"type": "dt", "indent": 4, "text": ["First input\u2019s primitives"], "extent": [5615, 5645], "body": [{"type": "para", "indent": 8, "text": ["Use the positions of primitives in the first input as the target points."], "extent": [5645, 5727]}], "container": true}, {"type": "dt", "indent": 4, "text": ["First input\u2019s points"], "extent": [5727, 5753], "body": [{"type": "para", "indent": 8, "text": ["Get the points from a geometry prim, or the positions from another point instancer in the first input."], "extent": [5753, 5865]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "transformsourcemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["SOP Path"], "extent": [5865, 5875], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Location source"]}, " is ", {"type": "q", "text": ["External SOP"]}, ", the node path of the SOP node that generates the target points."], "extent": [5898, 6011]}], "container": true, "attrs": {"id": "pointsoppath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Group"], "extent": [6011, 6024], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Location source"]}, " is ", {"type": "q", "text": ["Internal SOP"]}, " or ", {"type": "q", "text": ["External SOP"]}, ", get the points from this named group in the SOP geometry."], "extent": [6048, 6173]}], "container": true, "attrs": {"id": "pointsopgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Location Primitives"], "extent": [6173, 6194], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Location source"]}, " is ", {"type": "q", "text": ["First input\u2019s primitives"]}, ", this is the scene graph paths of the primitives whose positions you want to use as target points. When ", {"type": "ui", "text": ["Location source"]}, " is ", {"type": "q", "text": ["First input\u2019s points"]}, ", this is a the scene graph path(s) of one or more geometry prims containing target points (such as a polygonal mesh). In either case you can use ", {"scheme": null, "value": "/solaris/pattern", "type": "link", "text": ["pattern syntax"], "fullpath": "/solaris/pattern"}, " to select multiple primitives."], "extent": [6220, 6640]}], "container": true, "attrs": {"id": "locationpattern"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prune Mode"], "extent": [6640, 6652], "body": [{"type": "para", "indent": 4, "text": ["You can delete or hide a certain percentage of the target points. This may be useful if the target points come from an overly dense point cloud, or to speed up display when you're first setting up the instancer. The default is ", {"type": "q", "text": ["None"]}, " to not delete or hide any points."], "extent": [6672, 6945]}], "container": true, "attrs": {"id": "prunemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prune Amount"], "extent": [6945, 6959], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Prune mode"]}, " is ", {"type": "q", "text": ["Delete"]}, " or ", {"type": "q", "text": ["Set visibility"]}, ", the percentage of points to delete or hide. This can be used to improve performance while setting up the operator."], "extent": [6981, 7154]}], "container": true, "attrs": {"id": "pruneamount"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Set Orientation"], "extent": [7154, 7171], "body": [{"type": "para", "indent": 4, "text": ["Rotate the instanced primitives based on standard ", {"scheme": null, "value": "/copy/instanceattrs", "type": "link", "text": ["instancing SOP attributes"], "fullpath": "/copy/instanceattrs"}, " on the points. These SOP attributes include ", {"type": "code", "text": ["N"]}, ", ", {"type": "code", "text": ["up"]}, " , and ", {"type": "code", "text": ["orient"]}, "."], "extent": [7191, 7364]}], "container": true, "attrs": {"id": "setorient"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Set Scale"], "extent": [7364, 7375], "body": [{"type": "para", "indent": 4, "text": ["Scale the instanced primitives based on standard ", {"scheme": null, "value": "/copy/instanceattrs", "type": "link", "text": ["instancing SOP attributes"], "fullpath": "/copy/instanceattrs"}, " on the points. These SOP attributes include ", {"type": "code", "text": ["scale"]}, " and ", {"type": "code", "text": ["pscale"]}, "."], "extent": [7394, 7562]}], "container": true, "attrs": {"id": "setscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Make Transform Source Primitives Invisible"], "extent": [7562, 7606], "body": [{"type": "para", "indent": 4, "text": ["Set the visibility of the ", {"type": "ui", "text": ["Location primitives"]}, " to ", {"type": "q", "text": ["hidden"]}, " in the output. The default is on."], "extent": [7632, 7733]}], "container": true, "attrs": {"id": "hidesourceprims"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Attributes to Copy"], "extent": [7733, 7759], "body": [{"type": "para", "indent": 4, "text": ["A list of attributes on the template points to copy to instances. When creating a Point Instancer, an array primvar will be created for each listed attribute, with an entry for each point\u2019s value. When creating reference primitives, an attribute of the same name and type will be created on each primitive."], "extent": [7777, 8090]}], "container": true, "attrs": {"id": "attribs"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Primitive Naming "], "extent": [8090, 8115]}, {"type": "para", "indent": 0, "text": ["These parameters are visible when ", {"type": "ui", "text": ["Method"]}, " is ", {"type": "q", "text": ["References"]}, " or ", {"type": "q", "text": ["Instanceable references"]}, "."], "extent": [8115, 8208]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Instance Base Name"], "extent": [8208, 8228], "body": [{"type": "para", "indent": 4, "text": ["A prefix string for the names of prims created by this node. The node appends the point index to this string to create each name. This name is then appended to the ", {"type": "ui", "text": ["Primitive path"]}, " value to create the reference prim path. This is ignored if ", {"type": "ui", "text": ["Use path attribute"]}, " is on (below) and the path attribute exists."], "extent": [8251, 8567]}], "container": true, "attrs": {"id": "instancename"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Path Attribute"], "extent": [8567, 8587], "body": [{"type": "para", "indent": 4, "text": ["Use a string attribute on the target points to create the reference prim path."], "extent": [8611, 8695]}], "container": true, "attrs": {"id": "usenameattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Make Primitive Paths Unique"], "extent": [8695, 8724], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Use path attribute"]}, " is on, if a path attribute is not unique append an identifier to ensure uniqueness."], "extent": [8750, 8867]}], "container": true, "attrs": {"id": "makeuniquepaths"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Path Attribute"], "extent": [8867, 8883], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Use path attribute"]}, " is on, the name of a string attribute on each point containing the path to use for the prim created at that point. The path in this attribute is appended to the ", {"type": "ui", "text": ["Primitive path"]}, " value. If this attribute doesn\u2019t exist, the node falls back to using ", {"type": "ui", "text": ["Instance base name"]}, "."], "extent": [8904, 9210]}, {"type": "para", "indent": 4, "text": ["If the paths in the attribute aren\u2019t unique, and ", {"type": "ui", "text": ["Make primitive paths unique"]}, " is off, the node will only create one reference per path. In this case the node will show a warning."], "extent": [9210, 9398]}], "container": true, "attrs": {"id": "nameattrib"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Prototypes "], "extent": [9398, 9417]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Prototype Source"], "extent": [9417, 9436], "body": [{"type": "para", "indent": 4, "text": ["Whether the prim(s) you want to reference/instance onto the points is/are in the first input or the second input. "], "extent": [9462, 9582]}], "container": true, "attrs": {"id": "protosourcemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prototype Reference Type"], "extent": [9582, 9608], "body": [{"type": "para", "indent": 4, "text": ["If ", {"type": "ui", "text": ["Prototype source"]}, " is ", {"type": "q", "text": ["First input"]}, ", this parameter controls the composition type to use when creating references to the source primitives from within the ", {"type": "q", "text": ["Prototypes"]}, " folder in the scene graph. This parameter can be ", {"type": "q", "text": ["Reference"]}, ", ", {"type": "q", "text": ["Inherit"]}, ", or ", {"type": "q", "text": ["Specialize"]}, ". See ", {"scheme": null, "value": "/solaris/usd#inherits", "type": "link", "text": ["inherits and specializes"], "fullpath": "/solaris/usd#inherits", "fragment": "#inherits"}, " for more information about how these choices differ from a simple reference."], "extent": [9631, 10029]}], "container": true, "attrs": {"id": "protoreftype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Make Prototype Source Primitives Invisible"], "extent": [10029, 10073], "body": [{"type": "para", "indent": 4, "text": ["If ", {"type": "ui", "text": ["Prototype source"]}, " is ", {"type": "q", "text": ["First input"]}, " and this is on, the node sets the visibility of the prims used as primitives to ", {"type": "q", "text": ["hidden"]}, " in the output. The default is on."], "extent": [10104, 10273]}], "container": true, "attrs": {"id": "hideprotosourceprims"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Entire Stage as Prototype"], "extent": [10273, 10304], "body": [{"type": "para", "indent": 4, "text": ["If ", {"type": "ui", "text": ["Prototype source"]}, " is ", {"type": "q", "text": ["Second input"]}, " and this is on, the node copies everything from the second input\u2019s scene graph tree under a new prim and uses that as the prototype. This lets you build a node chain that builds the prototype and connect it to the second input, and not have to specify which prim in the second input to use."], "extent": [10327, 10665], "body": [{"type": "para", "indent": 5, "text": ["Using this option implies that there is only one prototype, because this node has no multi-input. If you have several full stages you want to use as prototypes, combine them with a ", {"scheme": "Node", "value": "/nodes/lop/graftstages", "type": "link", "text": ["Graft Stages LOP"], "fullpath": "/nodes/lop/graftstages"}, " first, and feed the result into the second input, but with this option turned off."], "extent": [10665, 10975]}], "container": true}], "container": true, "attrs": {"id": "protouseroot"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Only Copy Specified Prototype Prims"], "extent": [10975, 11012], "body": [{"type": "para", "indent": 4, "text": ["If ", {"type": "ui", "text": ["Prototype source"]}, " is ", {"type": "q", "text": ["Second input"]}, " and ", {"type": "ui", "text": ["Use Entire Stage as Prototype"]}, " is off, this controls whether to only copy the prototype primitives specified by ", {"type": "ui", "text": ["Prototype Primitives"]}, ", or the entire stage. The default is on."], "extent": [11041, 11277]}, {"type": "para", "indent": 4, "text": ["Using this option can result in a smaller stage, but requires that the prototype sources are fully self-contained (for example they cannot refer to materials that sit elsewhere in the prim hierarchy)."], "extent": [11277, 11483]}], "container": true, "attrs": {"id": "onlycopyprotoprims"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prototype Parent Kind"], "extent": [11483, 11506], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Use entire stage"]}, " is on, this sets the ", {"scheme": null, "value": "/solaris/usd#kinds", "type": "link", "text": ["kind"], "fullpath": "/solaris/usd#kinds", "fragment": "#kinds"}, " of the prim the node creates as a parent for root prims from the second input. The default is None."], "extent": [11530, 11708]}], "container": true, "attrs": {"id": "protorootkind"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prototype Primitives"], "extent": [11708, 11730], "body": [{"type": "para", "indent": 4, "text": ["The scene graph path(s) of the primitive(s) you want to use as prototype(s). You can use ", {"scheme": null, "value": "/solaris/pattern", "type": "link", "text": ["pattern syntax"], "fullpath": "/solaris/pattern"}, " to select multiple primitives."], "extent": [11753, 11912]}], "container": true, "attrs": {"id": "protopattern"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prototype Index"], "extent": [11912, 11929], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Random"], "extent": [11953, 11965], "body": [{"type": "para", "indent": 8, "text": ["Choose the prototype at each point randomly."], "extent": [11965, 12019]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Index"], "extent": [12019, 12030], "body": [{"type": "para", "indent": 8, "text": ["Specify a single prototype to use at each point in a parameter. This lets you drive the parameter using an expression (for example, based on a context option)."], "extent": [12030, 12199]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Index Attribute"], "extent": [12199, 12220], "body": [{"type": "para", "indent": 8, "text": ["Use the value of an integer attribute on the target point as an index into the list of prototypes."], "extent": [12220, 12328]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Name Attribute"], "extent": [12328, 12348], "body": [{"type": "para", "indent": 8, "text": ["Use the value of a string attribute to select the prototype by name. (The name of each prototype is copied from the original prim used to create the prototype. The node may add numbers to the prototype names to make them unique.)"], "extent": [12348, 12587]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Path Attribute"], "extent": [12587, 12607], "body": [{"type": "para", "indent": 8, "text": ["Use the value of a string attribute to select the prototype by path."], "extent": [12607, 12685]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "protoindexsrc"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Seed"], "extent": [12685, 12691], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Prototype index"]}, " is ", {"type": "q", "text": ["Random"]}, ", the seed for the random number generator."], "extent": [12706, 12791]}], "container": true, "attrs": {"id": "seed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Index"], "extent": [12791, 12798], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Prototype index"]}, " is ", {"type": "q", "text": ["Index"]}, ", the index of the prototype to use, from the list of primitives in ", {"type": "ui", "text": ["Prototype primitives"]}, ". You can use an expression to choose the index based on some other factor."], "extent": [12814, 13022]}], "container": true, "attrs": {"id": "index"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Index Attribute"], "extent": [13022, 13039], "body": [{"type": "para", "indent": 4, "text": ["An integer attribute on the target points that specifies the prototype to use."], "extent": [13059, 13143]}], "container": true, "attrs": {"id": "indexattr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Name Attribute"], "extent": [13143, 13159], "body": [{"type": "para", "indent": 4, "text": ["A string attribute on the template points that specifies the name of the prototype to use."], "extent": [13178, 13274]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [13274, 13284], "body": [{"type": "para", "indent": 8, "text": ["USD Point Instancer primitives don\u2019t inherently have the ability to address prototypes by name. This node finds the prototype by name, then sets the corresponding index in the ", {"type": "code", "text": ["protoIndices"]}, " array attribute on the point instancer prim."], "extent": [13284, 13529]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "nameattr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Path Attribute"], "extent": [13529, 13545], "body": [{"type": "para", "indent": 4, "text": ["A string attribute on the template points that specifies the path of the prototype to use."], "extent": [13564, 13660]}], "container": true, "attrs": {"id": "pathattr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Warn on Skipped Instances"], "extent": [13660, 13687], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Prototype Index"]}, " is ", {"type": "q", "text": ["Index Attribute"]}, ", ", {"type": "q", "text": ["Name Attribute"]}, " or ", {"type": "q", "text": ["Path Attribute"]}, ", this toggle controls whether or not to emit a warning when an instance is skipped due to there being no match between the attribute data and the prototype list."], "extent": [13715, 13965]}], "container": true, "attrs": {"id": "warnonskipped"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}], "title": ["Instancer"], "summary": ["Instances or copies primitives onto points."]}