{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "karmastandardrendervars", "icon": "LOP/karmastandardrendervars", "since": "18.0", "tags": "rendering,karma", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Karma Standard Render Vars"], "extent": [134, 165]}, {"type": "summary", "indent": 0, "text": ["Create standard karma render vars (AOVs/Image Planes)."], "extent": [165, 228]}, {"type": "para", "indent": 0, "text": ["The Karma Standard Render Vars LOP creates standard karma render vars primitives and populates them with predefined expressions for the various image planes. \nTo add additional render vars, for example using custom light path expressions, you can use the ", {"scheme": "Node", "value": "/nodes/lop/additionalrendervars", "type": "link", "text": ["Additional Render Vars LOP"], "fullpath": "/nodes/lop/additionalrendervars"}, "."], "extent": [228, 546]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [546, 558], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["LPE Tag AOV Limit"], "extent": [558, 578], "body": [{"type": "para", "indent": 4, "text": ["When splitting AOVs per lights' LPE Tag, specify the maximum number of LPE Tag AOVs beyond which the node will emit a warning."], "extent": [600, 732]}], "container": true, "attrs": {"id": "lpeaovlimit"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Omit LPE Tags"], "extent": [732, 747], "body": [{"type": "para", "indent": 4, "text": ["When splitting AOVs per lights' LPE Tag, specify a space separated list of lights' LPE Tags which will not create new AOVs."], "extent": [766, 895]}], "container": true, "attrs": {"id": "omitlpes"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["The following parameters are available next to each common render var:"], "extent": [895, 967]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Filter field"], "extent": [967, 981], "body": [{"type": "para", "indent": 4, "text": ["You can use ", {"scheme": null, "value": "/solaris/filters", "type": "link", "text": ["Solaris filter syntax"], "fullpath": "/solaris/filters"}, " in this parameter to filter the sample values. The default ", {"type": "code", "text": ["[\"ubox\", {}]"]}, " simply averages all the sample values within each pixel."], "extent": [981, 1170]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["\nSplit per LPE Tag"], "extent": [1170, 1343], "body": [{"type": "para", "indent": 4, "text": ["Creates additional AOVs for each unique light LPE Tag. To manage LPE Tags for lights, see the ", {"scheme": "Node", "value": "/nodes/lop/lpetag", "type": "link", "text": ["LPE Tag LOP node"], "fullpath": "/nodes/lop/lpetag"}, "."], "extent": [1343, 1479]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Component Level Outputs"], "extent": [1479, 1509], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Beauty"], "extent": [1509, 1518], "body": [{"type": "para", "indent": 4, "text": ["Add the beauty output as a ", {"type": "code", "text": ["color4f"]}, " render var named ", {"type": "code", "text": ["C"]}, "."], "extent": [1535, 1599]}], "container": true, "attrs": {"id": "beauty"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Beauty Unshadowed"], "extent": [1599, 1618], "body": [{"type": "para", "indent": 4, "text": ["Add the unoccluded (unshadowed) beauty output as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["beautyunshadowed"]}, ", using the LPE ", {"type": "code", "text": ["unoccluded;C.*"]}, "."], "extent": [1645, 1780]}], "container": true, "attrs": {"id": "beautyunshadowed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combined Diffuse"], "extent": [1780, 1798], "body": [{"type": "para", "indent": 4, "text": ["Add the combined (any number of bounces) diffuse surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["combineddiffuse"]}, ", using the LPE ", {"type": "code", "text": ["C<RD>.*L"]}, "."], "extent": [1824, 1984]}], "container": true, "attrs": {"id": "combineddiffuse"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direct Diffuse"], "extent": [1984, 2000], "body": [{"type": "para", "indent": 4, "text": ["Add the direct (no bounces) diffuse surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["directdiffuse"]}, ", using the LPE ", {"type": "code", "text": ["C<RD>L"]}, "."], "extent": [2024, 2167]}], "container": true, "attrs": {"id": "directdiffuse"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Indirect Diffuse"], "extent": [2167, 2185], "body": [{"type": "para", "indent": 4, "text": ["Add the indirect (one or more bounces) diffuse surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["indirectdiffuse"]}, ", using the LPE ", {"type": "code", "text": ["C<RD>.+L"]}, "."], "extent": [2211, 2369]}], "container": true, "attrs": {"id": "indirectdiffuse"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combined Diffuse Unshadowed"], "extent": [2369, 2398], "body": [{"type": "para", "indent": 4, "text": ["Add the combined (any number of bounces) unoccluded diffuse surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["combineddiffuseunshadowed"]}, ", using the LPE ", {"type": "code", "text": ["unoccluded;C<RD>.*"]}, "."], "extent": [2434, 2625]}], "container": true, "attrs": {"id": "combineddiffuseunshadowed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direct Diffuse Unshadowed"], "extent": [2625, 2652], "body": [{"type": "para", "indent": 4, "text": ["Add the direct (no bounces) unoccluded diffuse surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["directdiffuseunshadowed"]}, ", using the LPE ", {"type": "code", "text": ["unoccluded;C<RD>L"]}, "."], "extent": [2686, 2861]}], "container": true, "attrs": {"id": "directdiffuseunshadowed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Indirect Diffuse Unshadowed"], "extent": [2861, 2890], "body": [{"type": "para", "indent": 4, "text": ["Add the indirect (one or more bounces) unoccluded diffuse surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["indirectdiffuseunshadowed"]}, ", using the LPE ", {"type": "code", "text": ["unoccluded;C<RD>.+L"]}, "."], "extent": [2926, 3116]}], "container": true, "attrs": {"id": "indirectdiffuseunshadowed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combined Glossy Reflection"], "extent": [3116, 3144], "body": [{"type": "para", "indent": 4, "text": ["Add the combined (any number of bounces) glossy surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["combinedglossyreflection"]}, ", using the LPE ", {"type": "code", "text": ["C<RG>.*"]}, "."], "extent": [3183, 3350]}], "container": true, "attrs": {"id": "combinedglossyreflection"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direct Glossy Reflection"], "extent": [3350, 3376], "body": [{"type": "para", "indent": 4, "text": ["Add the direct (no bounces) glossy surface reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["directglossyreflection"]}, ", using the LPE ", {"type": "code", "text": ["C<RG>L"]}, "."], "extent": [3409, 3560]}], "container": true, "attrs": {"id": "directglossyreflection"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Indirect Glossy Reflection"], "extent": [3560, 3588], "body": [{"type": "para", "indent": 4, "text": ["Add the indirect (one or more bounces) glossy reflection component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["indirectglossyreflection"]}, ", using the LPE ", {"type": "code", "text": ["C<RG>.+L"]}, "."], "extent": [3623, 3781]}], "container": true, "attrs": {"id": "indirectglossyreflection"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Glossy Transmission"], "extent": [3781, 3802], "body": [{"type": "para", "indent": 4, "text": ["Add the glossy transmission component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["glossytransmission"]}, ", using the LPE ", {"type": "code", "text": ["C<TG>.*"]}, "."], "extent": [3831, 3953]}], "container": true, "attrs": {"id": "glossytransmission"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Visible Lights"], "extent": [3953, 3969], "body": [{"type": "para", "indent": 4, "text": ["Add the visible lights component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["visiblelights"]}, ", using the LPE ", {"type": "code", "text": ["CL"]}, "."], "extent": [3993, 4100]}], "container": true, "attrs": {"id": "visiblelights"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combined Emission"], "extent": [4100, 4119], "body": [{"type": "para", "indent": 4, "text": ["Add the combined (any number of bounces) emission component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["combinedemission"]}, ", using the LPE ", {"type": "code", "text": ["C.*O"]}, "."], "extent": [4146, 4285]}], "container": true, "attrs": {"id": "combinedemission"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direct Emission"], "extent": [4285, 4302], "body": [{"type": "para", "indent": 4, "text": ["Add the direct (no bounces) emission component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["directemission"]}, ", using the LPE ", {"type": "code", "text": ["CO"]}, "."], "extent": [4327, 4449]}], "container": true, "attrs": {"id": "directemission"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Indirect Emission"], "extent": [4449, 4468], "body": [{"type": "para", "indent": 4, "text": ["Add the indirect (one or more bounces) emission component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["indirectemission"]}, ", using the LPE ", {"type": "code", "text": ["C.+O"]}, "."], "extent": [4495, 4632]}], "container": true, "attrs": {"id": "indirectemission"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combined Volume"], "extent": [4632, 4649], "body": [{"type": "para", "indent": 4, "text": ["Add the combined (any number of bounces) volume component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["combinedvolume"]}, ", using the LPE ", {"type": "code", "text": ["CV.*L"]}, "."], "extent": [4674, 4810]}], "container": true, "attrs": {"id": "combinedvolume"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direct Volume"], "extent": [4810, 4825], "body": [{"type": "para", "indent": 4, "text": ["Add the direct (no bounces) volume component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["directvolume"]}, ", using the LPE ", {"type": "code", "text": ["CVL"]}, "."], "extent": [4848, 4967]}], "container": true, "attrs": {"id": "directvolume"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Indirect Volume"], "extent": [4967, 4984], "body": [{"type": "para", "indent": 4, "text": ["Add the indirect (one or more bounces) volume component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["indirectvolume"]}, ", using the LPE ", {"type": "code", "text": ["CV.+L"]}, "."], "extent": [5009, 5143]}], "container": true, "attrs": {"id": "indirectvolume"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["BSDF Labelled ", {"type": "code", "text": ["coat"]}], "extent": [5143, 5165], "body": [{"type": "para", "indent": 4, "text": ["Add the coat component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["coat"]}, ", using the LPE ", {"type": "code", "text": ["C<...'coat'>.*"]}, "."], "extent": [5180, 5280]}], "container": true, "attrs": {"id": "coat"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["BSDF Labelled ", {"type": "code", "text": ["sss"]}], "extent": [5280, 5301], "body": [{"type": "para", "indent": 4, "text": ["Add the sss component as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["sss"]}, ", using the LPE ", {"type": "code", "text": ["C<...'sss'>.*"]}, "."], "extent": [5315, 5413]}], "container": true, "attrs": {"id": "sss"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Ray Level Outputs"], "extent": [5413, 5438], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Ray Origin (P)"], "extent": [5438, 5455], "body": [{"type": "para", "indent": 4, "text": ["Add the ray origin as a ", {"type": "code", "text": ["point3f"]}, " render var named ", {"type": "code", "text": ["rayorigin"]}, "."], "extent": [5474, 5543]}], "container": true, "attrs": {"id": "rayorigin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ray Direction (D)"], "extent": [5543, 5562], "body": [{"type": "para", "indent": 4, "text": ["Add the ray direction as a ", {"type": "code", "text": ["vector3f"]}, " render var named ", {"type": "code", "text": ["raydirection"]}, "."], "extent": [5584, 5660]}], "container": true, "attrs": {"id": "raydirection"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time (Shutter Time)"], "extent": [5660, 5681], "body": [{"type": "para", "indent": 4, "text": ["Add the shutter time as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["time"]}, "."], "extent": [5702, 5766]}], "container": true, "attrs": {"id": "shuttertime"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Near (Near Bias)"], "extent": [5766, 5784], "body": [{"type": "para", "indent": 4, "text": ["Add the near bias as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["near"]}, "."], "extent": [5798, 5859]}], "container": true, "attrs": {"id": "near"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Far (Max Distance)"], "extent": [5859, 5879], "body": [{"type": "para", "indent": 4, "text": ["Add the max distance as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["far"]}, "."], "extent": [5892, 5955]}], "container": true, "attrs": {"id": "far"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Mask (Intersection Mask)"], "extent": [5955, 5981], "body": [{"type": "para", "indent": 4, "text": ["Add the mask (alpha) as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["mask"]}, "."], "extent": [5995, 6059]}], "container": true, "attrs": {"id": "mask"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Contribution"], "extent": [6059, 6073], "body": [{"type": "para", "indent": 4, "text": ["Add the ray contribution as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["contribution"]}, "."], "extent": [6095, 6171]}], "container": true, "attrs": {"id": "contribution"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["P (World Space)"], "extent": [6171, 6188], "body": [{"type": "para", "indent": 4, "text": ["Add the world space position as a ", {"type": "code", "text": ["point3f"]}, " render var named ", {"type": "code", "text": ["P"]}, "."], "extent": [6206, 6277]}], "container": true, "attrs": {"id": "position"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Depth (Camera Space)"], "extent": [6277, 6299], "body": [{"type": "para", "indent": 4, "text": ["Add the depth as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["depth"]}, "."], "extent": [6314, 6372]}], "container": true, "attrs": {"id": "depth"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hitstack"], "extent": [6372, 6382], "body": [{"type": "para", "indent": 4, "text": ["Add the ray hit stack as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["hitstack"]}, "."], "extent": [6400, 6469]}], "container": true, "attrs": {"id": "hitstack"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element (Raw ID)"], "extent": [6469, 6487], "body": [{"type": "para", "indent": 4, "text": ["Add the element ID as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["element"]}, "."], "extent": [6504, 6569]}], "container": true, "attrs": {"id": "element"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prim ID"], "extent": [6569, 6578], "body": [{"type": "para", "indent": 4, "text": ["Add the primitive identifier as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["primid"]}, "."], "extent": [6594, 6668]}], "container": true, "attrs": {"id": "primid"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["UV"], "extent": [6668, 6672], "body": [{"type": "para", "indent": 4, "text": ["Add the primitive hit UV as a ", {"type": "code", "text": ["float3"]}, " render var named ", {"type": "code", "text": ["UV"]}, "."], "extent": [6684, 6751]}], "container": true, "attrs": {"id": "uv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hit Dist"], "extent": [6751, 6761], "body": [{"type": "para", "indent": 4, "text": ["Add the primitive hit distance as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["hitdist"]}, "."], "extent": [6778, 6855]}], "container": true, "attrs": {"id": "hitdist"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["dPdz"], "extent": [6855, 6861], "body": [{"type": "para", "indent": 4, "text": ["Add the dPdz (Z-depth delta for the current microvolume) as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["dPdz"]}, "."], "extent": [6875, 6975]}], "container": true, "attrs": {"id": "dPdz"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["N (Smooth Normal)"], "extent": [6975, 6994], "body": [{"type": "para", "indent": 4, "text": ["Add the primitive hit normal as a ", {"type": "code", "text": ["normal3f"]}, " render var named ", {"type": "code", "text": ["N"]}, "."], "extent": [7008, 7080]}], "container": true, "attrs": {"id": "hitN"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ng (Geometric Normal)"], "extent": [7080, 7103], "body": [{"type": "para", "indent": 4, "text": ["Add the primitive geometric normal as a ", {"type": "code", "text": ["normal3f"]}, " render var named ", {"type": "code", "text": ["Ng"]}, "."], "extent": [7118, 7197]}], "container": true, "attrs": {"id": "hitNg"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flags"], "extent": [7197, 7204], "body": [{"type": "para", "indent": 4, "text": ["Add the ray flags as a ", {"type": "code", "text": ["float"]}, " render var named ", {"type": "code", "text": ["flags"]}, "."], "extent": [7219, 7282]}], "container": true, "attrs": {"id": "flags"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Raw"], "extent": [7282, 7292], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Albedo"], "extent": [7292, 7301], "body": [{"type": "para", "indent": 4, "text": ["Add the albedo output as a ", {"type": "code", "text": ["color3f"]}, " render var named ", {"type": "code", "text": ["export_basecolor"]}, ". Only available with shaders that export this information, such as the principled shader."], "extent": [7318, 7487]}], "container": true, "attrs": {"id": "albedo"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [7487, 7496], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/additionalrendervars", "type": "link", "text": "", "fullpath": "/nodes/lop/additionalrendervars"}], "extent": [7496, 7531]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/karma", "type": "link", "text": "", "fullpath": "/nodes/lop/karma"}], "extent": [7531, 7550]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/karmarenderproperties", "type": "link", "text": "", "fullpath": "/nodes/lop/karmarenderproperties"}], "extent": [7550, 7585]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/renderproduct", "type": "link", "text": "", "fullpath": "/nodes/lop/renderproduct"}], "extent": [7585, 7612]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/rendersettings", "type": "link", "text": "", "fullpath": "/nodes/lop/rendersettings"}], "extent": [7612, 7640]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/rendervar", "type": "link", "text": "", "fullpath": "/nodes/lop/rendervar"}], "extent": [7640, 7663]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "/render/lpe", "type": "link", "text": ["Light Path Expressions"], "fullpath": "/render/lpe"}], "extent": [7663, 7703]}], "container": true}], "text": "Related"}], "title": ["Karma Standard Render Vars"], "summary": ["Create standard karma render vars (AOVs/Image Planes)."]}