{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "light", "version": "2.0", "icon": "OBJ/hlight", "group": "lighting", "since": "18.0", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Light"], "extent": [0, 10]}, {"type": "summary", "indent": 0, "text": ["Creates or edits a USD Light prim. This node also adds some useful Karma-specific attributes."], "extent": [116, 217]}, {"level": 2, "id": "oview", "container": true, "type": "h", "indent": 0, "text": ["Creating vs. editing prims"], "extent": [5373, 5414], "body": [{"type": "para", "indent": 0, "text": ["This node belongs to a class of ", {"type": "strong", "text": ["nodes that create or edit USD prims directly"]}, ". These nodes operate in ", {"type": "em", "text": ["Create mode"]}, " or ", {"type": "em", "text": ["Edit mode"]}, ". This is controlled by a ", {"type": "ui", "text": ["Create primitives"]}, " checkbox or a ", {"type": "em", "text": ["Create/Edit popup menu"]}, ". In create mode, the node creates new prims. In edit mode, the node changes the attributes on an existing prim. The ", {"type": "em", "text": ["Edit mode"]}, " has two variations. ", {"type": "em", "text": ["Edit"]}, " will not modify primitives which have a ", {"type": "code", "text": ["houdini:editable"]}, " attribute set to ", {"type": "code", "text": ["false"]}, ". ", {"type": "em", "text": ["Force edit"]}, " will modify a primitive regardless of the existence or value of this attribute. This attribute can be set on a primitive using the ", {"scheme": null, "value": "/nodes/lop/configureprimitive", "type": "link", "text": ["Configure Primitives LOP"], "fullpath": "/nodes/lop/configureprimitive"}, "."], "extent": [5414, 6076]}, {"type": "para", "indent": 0, "text": ["Parameters that correspond to a USD attribute have a pop-up menu to the left that controls ", {"type": "em", "text": ["how"]}, " the node authors the attribute."], "extent": [6076, 6206]}, {"type": "para", "indent": 0, "text": ["In addition to that, any connectable USD attributes (i.e., the ones in the ", {"type": "code", "text": ["inputs:"]}, " namespace) will have menu items that allow disconnecting them from their sources."], "extent": [6206, 6374]}, {"type": "box_group", "body": [{"ext": null, "type": "box", "indent": 0, "role": "item", "extent": [6374, 6380], "body": [{"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Pop-up menu item "], "role": "th", "extent": [6407, 6431], "container": true, "attrs": {"width": "25%"}}, {"type": "cell", "indent": 8, "text": ["Meaning "], "role": "th", "extent": [6451, 6470]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Set or Create "], "role": "td", "extent": [6470, 6491], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Sets the attribute to the given value, whether it previously existed or not."], "extent": [6491, 6577]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Set If Exists "], "role": "td", "extent": [6577, 6597], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Only set the attribute to the given value if it previously existed."], "extent": [6597, 6674]}, {"type": "para", "indent": 8, "text": ["Use this mode to make sure an attribute is only set on primitives of the correct type. For example, only ", {"type": "code", "text": ["UsdGeomSphere"]}, " primitives are likely to have a ", {"type": "code", "text": ["radius"]}, " attribute."], "extent": [6674, 6856]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Block "], "role": "td", "extent": [6856, 6868], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Makes the attribute appear to not exist, so it takes on its default value. (If the attribute doesn\u2019t already exist on the prim, this does nothing.)"], "extent": [6868, 7025]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Disconnect Input "], "role": "td", "extent": [7025, 7048], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Deletes the attribute input connection to its source. Input connections take precedence over attribute values, so disconnecting an input allows the attribute value to take effect."], "extent": [7048, 7237]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 4, "text": ["Do Nothing "], "role": "td", "extent": [7237, 7254], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Ignore this parameter, don\u2019t create or change the attribute in any way."], "extent": [7254, 7336]}]}], "divider": false}]}], "container": true, "attrs": {"id": "control_menu"}}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "light_state", "container": true, "type": "h", "indent": 0, "text": ["Editing lights in the viewport"], "extent": [249, 300], "body": [{"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 0, "role": "item", "extent": [300, 309], "body": [], "container": true, "attrs": {"src": "/videos/light_tool.mp4"}}], "container": true, "role": "item_group"}, {"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 0, "text": [" Enter the Light state"], "role": "item", "extent": [343, 374], "body": [{"type": "para", "indent": 4, "text": ["Select the Light node in the network, then in the viewport click the ", {"scheme": "Icon", "value": "TOOLS/handles", "type": "link", "text": "", "fullpath": "/nodes/lop/TOOLS/handles"}, " Handles tool, or press ", {"keys": ["Enter"], "type": "keys", "text": null}, "."], "extent": [374, 503]}], "container": true}], "container": true, "role": "item_group"}, {"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 0, "text": ["Mode "], "role": "th", "extent": [503, 511], "container": true}, {"type": "cell", "indent": 4, "text": ["Key "], "role": "th", "extent": [511, 522], "container": true}, {"type": "cell", "indent": 8, "text": ["Description "], "role": "th", "extent": [522, 545]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 0, "text": ["Default "], "role": "td", "extent": [545, 556], "container": true}, {"type": "cell", "indent": 4, "text": [{"keys": ["Shift", "A"], "type": "keys", "text": null}, " "], "role": "td", "extent": [556, 576], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Position the light using handles."], "extent": [576, 619]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 0, "text": ["Diffuse "], "role": "td", "extent": [619, 629], "container": true}, {"type": "cell", "indent": 4, "text": [{"keys": ["Shift", "D"], "type": "keys", "text": null}, " "], "role": "td", "extent": [629, 649], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Click or drag on a surface to place the light normal to that point."], "extent": [649, 726]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 0, "text": ["Specular "], "role": "td", "extent": [726, 737], "container": true}, {"type": "cell", "indent": 4, "text": [{"keys": ["Shift", "S"], "type": "keys", "text": null}, " "], "role": "td", "extent": [737, 757], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Click or drag on a surface to place the light so there\u2019s a reflected highlight at that point."], "extent": [757, 860]}, {"type": "para", "indent": 8, "text": ["You should look through the render camera when using this mode, since it only sets the highlight to show up a certain location ", {"type": "em", "text": ["from the current point of view"]}, "."], "extent": [860, 1030]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 0, "text": ["Shadow "], "role": "td", "extent": [1030, 1039], "container": true}, {"type": "cell", "indent": 4, "text": [{"keys": ["Shift", "F"], "type": "keys", "text": null}, " "], "role": "td", "extent": [1039, 1059], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Click on a lit surface to place the pivot point."], "extent": [1059, 1117]}, {"type": "para", "indent": 8, "text": ["This should be on the part of the model you want to control the shadow for (for example, the edge of a window frame, or a prominent feature of the model)."], "extent": [1117, 1281]}, {"type": "para", "indent": 8, "text": [{"keys": ["Shift"], "type": "keys", "text": null}, "-click or drag a point on the shadowed surface to move the point on the shadow corresponding to the pivot point."], "extent": [1281, 1412]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 0, "text": ["Look at "], "role": "td", "extent": [1412, 1422], "container": true}, {"type": "cell", "indent": 4, "text": [{"keys": ["Shift", "T"], "type": "keys", "text": null}, " "], "role": "td", "extent": [1422, 1442], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 8, "text": ["Position the look-at handle to set a look-at constraint on the light. Use the handles to orbit or elevate the light relative to the target point."], "extent": [1442, 1597]}, {"type": "para", "indent": 8, "text": ["This turns on the ", {"type": "ui", "text": ["Enable look at"]}, " parameter in the Light\u2019s Constraints section."], "extent": [1597, 1689]}, {"type": "para", "indent": 8, "text": ["To constrain the light to look at another USD prim, fill in the ", {"type": "ui", "text": ["Look at primitive"]}, " parameter."], "extent": [1689, 1795]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 0, "text": ["All "], "role": "td", "extent": [1795, 1801], "container": true}, {"type": "cell", "indent": 4, "role": "td", "extent": [1801, 1807], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": [{"keys": ["Ctrl"], "type": "keys", "text": null}, "-drag left/right to move light closer/farther."], "extent": [1807, 1873]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"keys": ["Ctrl", "Shift"], "type": "keys", "text": null}, "-drag left/right to change intensity/exposure (see below)."], "extent": [1873, 1959]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"keys": ["mouse_wheel"], "type": "keys", "text": null}, " to change step size of ", {"keys": ["Ctrl"], "type": "keys", "text": null}, "-drags."], "extent": [1959, 2025]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"keys": ["RMB"], "type": "keys", "text": null}, " to show an options menu."], "extent": [2025, 2069]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Turn on ", {"type": "ui", "text": [{"keys": ["RMB"], "type": "keys", "text": null}, " \u25b8 Keep Brightness"]}, " to adjust the light to maintain the same brightness on the surface while moving it closer/farther."], "extent": [2069, 2217]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Turn on ", {"type": "ui", "text": [{"keys": ["RMB"], "type": "keys", "text": null}, " \u25b8 Keep Orientation"]}, " to prevent the light from rotating as it moves to be normal to where you click on a surface."], "extent": [2217, 2360]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["In the ", {"keys": ["RMB"], "type": "keys", "text": null}, " menu, you can choose whether ", {"keys": ["Ctrl", "Shift"], "type": "keys", "text": null}, "-drag changes the light\u2019s ", {"type": "ui", "text": ["Intensity"]}, " or ", {"type": "ui", "text": ["Exposure"]}, "."], "extent": [2360, 2489]}], "container": true}]}], "divider": false}]}]}, {"level": 2, "id": "point", "container": true, "type": "h", "indent": 0, "text": ["Point Light shelf tool"], "extent": [2489, 2526], "body": [{"type": "summary", "indent": 0, "text": ["Adds a point light to the scene. A point light radiates light equally in all directions from a point in space. It is the most efficient type of light to calculate."], "extent": [2526, 2699]}]}, {"level": 2, "id": "spot", "container": true, "type": "h", "indent": 0, "text": ["Spot Light shelf tool"], "extent": [2699, 2734], "body": [{"type": "summary", "indent": 0, "text": ["Adds a spot light to the scene. A spot light casts light from a point in space, in a certain direction. The beam of light is cone shaped, with a radius and falloff at the edges."], "extent": [2734, 2921]}]}, {"level": 2, "id": "area", "container": true, "type": "h", "indent": 0, "text": ["Area Light shelf tool"], "extent": [2921, 2956], "body": [{"type": "summary", "indent": 0, "text": ["Simulates a light in the shape of a line, rectangle, disk, or sphere."], "extent": [2956, 3035]}]}, {"level": 2, "id": "geo", "container": true, "type": "h", "indent": 0, "text": ["Geometry Light shelf tool"], "extent": [3035, 3073], "body": [{"type": "summary", "indent": 0, "text": ["Simulates a light with the shape and color of a geometry object you select."], "extent": [3073, 3157]}, {"type": "para", "indent": 0, "text": ["Geometry lights can be expensive to render. For simple cases you may want to try to simulate the effect you want using ", {"scheme": null, "value": "pointlight", "type": "link", "text": ["point lights"], "fullpath": "/nodes/lop/pointlight"}, " and/or ", {"scheme": null, "value": "arealight", "type": "link", "text": ["area lights"], "fullpath": "/nodes/lop/arealight"}, ". However, the geometry light is very useful since it\u2019s more straightforward than using tricks with simple lights, and it uses the object\u2019s surface shader to color the emitted light."], "extent": [3157, 3516]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Select the object you want to emit light, then click the ", {"scheme": "Icon", "value": "OBJ/light_geo", "type": "link", "text": "", "fullpath": "/nodes/lop/OBJ/light_geo"}, " Geometry Light tool on the shelf."], "extent": [3516, 3631], "body": [{"type": "para", "indent": 4, "text": ["or"], "extent": [3631, 3639]}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["With nothing selected, click the ", {"scheme": "Icon", "value": "OBJ/light_geo", "type": "link", "text": "", "fullpath": "/nodes/lop/OBJ/light_geo"}, " Geometry Light tool on the shelf, then select the object(s) you want to act as portals for the environment light and press ", {"keys": ["Enter"], "type": "keys", "text": null}, "."], "extent": [3639, 3830]}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [3830, 3836], "body": [{"type": "para", "indent": 4, "text": ["To get geometry lights to emit color based on their assigned surface shader, you need to define an export variable named ", {"type": "code", "text": ["Ce"]}, ". This holds the emitted light. You can also use ", {"type": "q", "text": ["emission"]}, " in the USD Preview Shader."], "extent": [3836, 4053]}, {"type": "para", "indent": 4, "text": ["The object also has to have the ", {"type": "q", "text": ["Treat As Light Source"]}, " property enabled."], "extent": [4053, 4133]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "volume", "container": true, "type": "h", "indent": 0, "text": ["Volume Light shelf tool"], "extent": [4133, 4172], "body": [{"type": "summary", "indent": 0, "text": ["Simulates illumination from an emissive volume."], "extent": [4172, 4228]}, {"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Select the volume geometry you want to emit light."], "extent": [4228, 4282]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["On the ", {"type": "ui", "text": ["Lights and Cameras"]}, " shelf tab, click the ", {"scheme": "Icon", "value": "SHELF/volumelight", "type": "link", "text": "", "fullpath": "/nodes/lop/SHELF/volumelight"}, " Volume Light tool."], "extent": [4282, 4380]}], "container": true}, {"type": "para", "indent": 0, "text": ["The volume light takes over the emission (", {"type": "code", "text": ["Ce"]}, ") component, which is treated as direct lighting for the new light source - making it possible to separate it into a distinct per-light deep raster plane separate from the combined ", {"type": "code", "text": ["direct_emission"]}, " and ", {"type": "code", "text": ["indirect_emission"]}, " planes."], "extent": [4380, 4658]}, {"type": "para", "indent": 0, "text": ["Emission is disabled on the original object for all secondary rays (such as reflections) by disabling the ", {"scheme": "Mantra", "value": "/props/mantra#vm_emitillum", "type": "link", "text": "", "fallback_text": "vm_emitillum", "fullpath": "/props/mantra#vm_emitillum", "fragment": "#vm_emitillum"}, " property on the source object.\nThis ensures only the new light object directly illuminates other objects.\n(This property is on the ", {"type": "ui", "text": ["Shading"]}, " tab of the source object if you want to re-enable it.)"], "extent": [4658, 4986]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [4986, 4998], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Sampling Behavior"], "extent": [2196, 2216], "body": [{"type": "para", "indent": 4, "text": ["Cooking this node can generate many USD time samples, rather than just a single time sample at the current time. This can be equivalent to having a ", {"scheme": "Node", "value": "/nodes/lop/cache", "type": "link", "text": ["Cache LOP"], "fullpath": "/nodes/lop/cache"}, " following this node, but it will evaluate much faster, and does not cache data from any other nodes. This allows animated data to be authored to USD without introducing a node time dependency which would then cause all following nodes to also be time dependent. This can vastly improve playback performance of some LOP Networks."], "extent": [2216, 2725]}, {"type": "para", "indent": 4, "text": ["In all sampling modes, if a parameter on this node does not vary with time, and does not rely on other time sampled data from the stage, only a single default value will be generated in USD for the corresponding attribute. USD time samples are only generated for parameters that may vary over time."], "extent": [2725, 3029]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Sample Current Frame"], "extent": [3029, 3055], "body": [{"type": "para", "indent": 8, "text": ["A single time sample will be generated for the current time."], "extent": [3055, 3125]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sample Frame Range If Input Is Not Time Dependent"], "extent": [3125, 3180], "body": [{"type": "para", "indent": 8, "text": ["If the input to this node is time dependent, this node behaves as if it is in ", {"type": "code", "text": ["Sample current frame"]}, " mode. Otherwise it behaves as if it is in ", {"type": "code", "text": ["Sample frame range"]}, " mode."], "extent": [3180, 3359]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sample Frame Range"], "extent": [3359, 3383], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "ui", "text": ["Start/End/Inc"]}, " parameter is used to generate multiple times at which this node\u2019s parameters are evaluated, and a USD time sample is created for each attribute at each one of these times."], "extent": [3383, 3586]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start/End/Inc"], "extent": [3586, 3601], "body": [{"type": "para", "indent": 4, "text": ["When the ", {"type": "ui", "text": ["Sampling behavior"]}, " is ", {"type": "code", "text": ["Sample frame range"]}, ", this parameter controls the number and spacing of base time samples to be generated by this node. The default values of this parameter are ", {"type": "code", "text": ["@ropstart"]}, ", ", {"type": "code", "text": ["@ropend"]}, ", and ", {"type": "code", "text": ["@ropinc"]}, ". These values correspond to the start, end, and step size of the global Houdini animation settings when interacting with Houdini. When using a ROP node to generate a range of frames, these values correspond to the start, end, and increment values specified on the ROP node being executed. This default ensures that a USD file written to disk will contain time samples for exactly the frame range requested by the ROP (regardless of the Houdini animation settings)."], "extent": [3601, 4303]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Subframe Sampling"], "extent": [56, 79], "body": [{"type": "para", "indent": 8, "text": ["For each primary sample generated by this node, these parameters can cuase additional samples to be generated aroudn that primary sample time. This is most often used to ensure that accurate data exists at exactly the camera shutter open and close times, as well as at the primary sample time."], "extent": [79, 382]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Shutter"], "extent": [382, 395], "body": [{"type": "para", "indent": 8, "text": ["Controls the method used to specify the shutter open and close times relative to the primary sample times."], "extent": [395, 511]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Specify Manually"], "extent": [511, 537], "body": [{"type": "para", "indent": 12, "text": ["The ", {"type": "ui", "text": ["Shutter open/close"]}, " parameter values provide exact offset values relative to the primary sample time."], "extent": [537, 659]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Use Camera Prim"], "extent": [659, 684], "body": [{"type": "para", "indent": 12, "text": ["The ", {"type": "ui", "text": ["Camera prim"]}, " parameter provides the scene graph path of a camera primitive from which the shutter open and close times are extracted to provide the offset values relative to the primary time sample."], "extent": [684, 903]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Shutter Open/Close"], "extent": [903, 927], "body": [{"type": "para", "indent": 8, "text": ["When the ", {"type": "ui", "text": ["Shutter"]}, " mode is ", {"type": "code", "text": ["Specify Manually"]}, ", these two offset values are added to the primary sample time to indicate the shutter open and close times. The open time should be less than or equal to zero, and the close time should be greater than or equal to zero."], "extent": [927, 1204]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Camera Prim"], "extent": [1204, 1221], "body": [{"type": "para", "indent": 8, "text": ["Scene graph path of a camera prim on the input node\u2019s stage. The shutter open and close attribute values are read from this primitive."], "extent": [1221, 1365]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Samples"], "extent": [1365, 1378], "body": [{"type": "para", "indent": 8, "text": ["The number of subframe samples to create for each primary sample. These samples are evenly distributed between the shutter open and close times. Note that such an even distribution may or may not create a sample at exactly the primary sample time."], "extent": [1378, 1635]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Always Include Frame Sample"], "extent": [1635, 1668], "body": [{"type": "para", "indent": 8, "text": ["Enable this option to force a sample to be created at exactly the primary sample time. If the ", {"type": "ui", "text": ["Samples"]}, " values together with the shutter open and close times already place a sample at the primary sample time, turning on this option will have no effect. Otherwise, this option will cause an addition sample to be added. This means that the actual number of samples per primary sample may in fact be one more than the number specified in the ", {"type": "ui", "text": ["Samples"]}, " parameter."], "extent": [1668, 2143]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Action"], "extent": [50, 62], "body": [{"type": "para", "indent": 8, "text": ["Whether this node should create new prims, or edit existing prims. In addition, the ", {"type": "code", "text": ["Force Edit"]}, " option can be chosen to cause this node to ignore the ", {"type": "code", "text": ["houdini:editable"]}, " attribute on prims, and always edit the specified attributes. This is in contrast to the ", {"type": "code", "text": ["Edit"]}, " mode which will trigger a warning and not set attributes on prims with the ", {"type": "code", "text": ["houdini:editable"]}, " attribute set to ", {"type": "code", "text": ["false"]}, "."], "extent": [88, 483]}], "container": true, "attrs": {"id": "createprims"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Primitive Path"], "extent": [483, 503], "body": [{"type": "para", "indent": 8, "text": ["In create mode, this lets you control where in the scene graph to create the prim(s)."], "extent": [526, 621]}, {"type": "para", "indent": 8, "text": ["The default is usually ", {"type": "code", "text": ["/$OS"]}, ". This creates a primitive at the root level with the same name as the node (for example, ", {"type": "code", "text": ["/tube1"]}, "). This is a useful default for preventing naming conflicts, but terrible for organization. You should try to remember to change the ", {"type": "ui", "text": ["Primitive path"]}, " to a better value when you create prims."], "extent": [621, 950]}, {"type": "para", "indent": 8, "text": ["For example, instead of naming models after the node that created them, you might want to name them after the geometry inside, and organize them under a ", {"type": "code", "text": ["/Models"]}, " branch."], "extent": [950, 1130]}, {"type": "para", "indent": 8, "text": ["The ", {"type": "q", "text": ["Create primitives"]}, " section contains basic controls for how to create the new prim(s)."], "extent": [1130, 1230]}], "container": true, "attrs": {"id": "primpath"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Primitives"], "extent": [1230, 1246], "body": [{"type": "para", "indent": 8, "text": ["In edit mode, the node has a ", {"type": "ui", "text": ["Primitive pattern"]}, " parameter. This lets you specify the prim(s) the node should operate on. You can click the select button beside the text box to select the primitives from the scene graph tree. You can also use ", {"scheme": null, "value": "/solaris/pattern", "type": "link", "text": ["primitive patterns"], "fullpath": "/solaris/pattern"}, " for advanced matching, including matching all prims in a collection."], "extent": [1272, 1633]}], "container": true, "attrs": {"id": "primpattern"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Initialize Parameters For Edit"], "extent": [1633, 1669], "body": [{"type": "para", "indent": 8, "text": ["In edit mode, changes the state of all control menu parameters to ", {"type": "code", "text": ["Do Nothing"]}, ", so that this node will not apply any changes. Also grabs the current values of each property from the first ", {"type": "ui", "text": ["Primitives"]}, " match, and sets the values of the corresponding parameters to match. This means that changing any parameter\u2019s control menu to ", {"type": "code", "text": ["Set or Create"]}, " mode will set the property to its current value, making it easier to apply changes to an existing value rather than setting a brand new value."], "extent": [1695, 2192]}], "container": true, "attrs": {"id": "initforedit"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Primitives"], "extent": [7383, 7403], "body": [{"type": "para", "indent": 4, "text": ["This section only appears when the node is creating primitives."], "extent": [7403, 7472]}, {"type": "para", "indent": 4, "text": ["For example:"], "extent": [7472, 7490]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["If you want to create a new cube primitive at ", {"type": "code", "text": ["/world/objects/cube1"]}, " on an empty stage: Set ", {"type": "ui", "text": ["Primitive Specifier"]}, " to ", {"type": "q", "text": ["Define"]}, ", and the ", {"type": "ui", "text": ["Parent Primitive Type"]}, " to ", {"type": "q", "text": ["Xform"]}, "."], "extent": [7490, 7672]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["If you want to override the radius of a sphere at ", {"type": "code", "text": ["/world/objects/sphere1"]}, ": Set ", {"type": "ui", "text": ["Primitive Specifier"]}, " to ", {"type": "q", "text": ["Over"]}, ", and the ", {"type": "ui", "text": ["Parent Primitive Type"]}, " to None. This makes sure the primitive types of any existing ancestor prims are not be modified by this node."], "extent": [7672, 7938]}], "container": true}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Primitive Count"], "extent": [7938, 7959], "body": [{"type": "para", "indent": 8, "text": ["The number of primitives to create."], "extent": [7959, 8004]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Primitive Kind"], "extent": [8004, 8024], "body": [{"type": "para", "indent": 8, "text": ["Set all created prims to have this ", {"scheme": null, "value": "/solaris/usd#kinds", "type": "link", "text": ["kind"], "fullpath": "/solaris/usd#kinds", "fragment": "#kinds"}, "."], "extent": [8047, 8118]}], "container": true, "attrs": {"id": "primkind"}}, {"type": "dt", "indent": 4, "text": ["Primitive Specifier"], "extent": [8118, 8143], "body": [{"type": "para", "indent": 8, "text": ["The USD operator to use when creating the new prims."], "extent": [8167, 8229]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Define"], "extent": [8229, 8245], "body": [{"type": "para", "indent": 12, "text": ["Authors a completely new prim. Use this if you want to create a brand new prim or replace an existing prim."], "extent": [8245, 8366]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Over"], "extent": [8366, 8380], "body": [{"type": "para", "indent": 12, "text": ["Authors an override of an existing prim. Attributes not explicitly authored on this prim will get their values from the existing prim on the lower layer."], "extent": [8380, 8547]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Class"], "extent": [8547, 8562], "body": [{"type": "para", "indent": 12, "text": ["Define a primitive class. This is usually not necessary unless you are doing deep USD magic."], "extent": [8562, 8668]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "specifier"}}, {"type": "dt", "indent": 4, "text": ["Class Ancestor"], "extent": [8668, 8688], "body": [{"type": "para", "indent": 8, "text": ["If the ", {"type": "ui", "text": ["Specifier"]}, " is ", {"type": "code", "text": ["Define"]}, " or ", {"type": "code", "text": ["Over"]}, ", this parameter will cause some ancestor primitives to be authored with a specifier of ", {"type": "code", "text": ["Class"]}, ". This makes it easy to create an ", {"type": "code", "text": ["Over"]}, " or ", {"type": "code", "text": ["Define"]}, " within a ", {"type": "code", "text": ["Class"]}, " without having to use two separate nodes. When the ", {"type": "ui", "text": ["Specifier"]}, " is ", {"type": "code", "text": ["Class"]}, ", this parameter is disabled because the entire primitive hierarchy is already authored as ", {"type": "code", "text": ["Class"]}, " primitives."], "extent": [8716, 9118]}], "container": true, "attrs": {"id": "classancestor"}}, {"type": "dt", "indent": 4, "text": ["Parent Primitive Type"], "extent": [9118, 9145], "body": [{"type": "para", "indent": 8, "text": ["If any parents of a path in ", {"type": "ui", "text": ["Primitive paths"]}, " do not exist, this node will automatically create them. In this case, it will create parent nodes of this type."], "extent": [9174, 9344]}], "container": true, "attrs": {"id": "parentprimtype"}}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [5165, 5171], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Cylinder Light"], "extent": [5191, 5211], "body": [{"type": "para", "indent": 8, "text": ["Light emitted outward from a cylinder.\n        The cylinder is centered at the origin and has its major axis on the X \n        axis. The cylinder does not emit light from the flat end-caps."], "extent": [5211, 5410]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Distant Light"], "extent": [5410, 5429], "body": [{"type": "para", "indent": 8, "text": ["Light emitted from a distant source along the -Z axis.\n        Also known as a directional light."], "extent": [5429, 5536]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Disk Light"], "extent": [5536, 5552], "body": [{"type": "para", "indent": 8, "text": ["Light emitted from one side of a circular disk.\n        The disk is centered in the XY plane and emits light along the -Z axis."], "extent": [5552, 5689]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Geometry Light"], "extent": [5689, 5709], "body": [{"type": "para", "indent": 8, "text": ["Light emitted outward from a geometric prim (UsdGeomGprim),\n        which is typically a mesh."], "extent": [5709, 5813]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Point Light"], "extent": [5813, 5830], "body": [{"type": "para", "indent": 8, "text": ["Like a sphere light, but with zero radius. "], "extent": [5830, 5883]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Rectangle Light"], "extent": [5883, 5904], "body": [{"type": "para", "indent": 8, "text": ["Light emitted from one side of a rectangle.\n        The rectangle is centered in the XY plane and emits light along the -Z \n        axis. The rectangle is 1 unit in length in the X and Y axis.  In the \n        default position, a texture file\u2019s min coordinates should be at (+X, +Y)\n        and max coordinates at (-X, -Y)."], "extent": [5904, 6237]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sphere Light"], "extent": [6237, 6255], "body": [{"type": "para", "indent": 8, "text": ["Light emitted outward from a sphere."], "extent": [6255, 6301]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "lighttype"}, "role": "item"}], "container": true}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Transform"], "extent": [6301, 6317], "body": [{"type": "box_group", "body": [{"ext": null, "type": "box", "indent": 0, "role": "item", "extent": [2192, 2198], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Transform"], "extent": [2224, 2239], "body": [{"type": "para", "indent": 8, "text": ["How the transform parameters below apply to the primitive. (Because each USD prim can contain multiple transforms, ", {"type": "em", "text": ["and"]}, " be affected by parent transforms, there are many different ways to apply new transforms.)"], "extent": [2278, 2498]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Append"], "extent": [2498, 2514], "body": [{"type": "para", "indent": 12, "text": ["Apply the parameters as a new, most local transform."], "extent": [2514, 2580]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Prepend"], "extent": [2580, 2597], "body": [{"type": "para", "indent": 12, "text": ["Apply the parameters as a new, ", {"type": "em", "text": ["least"]}, " local transform."], "extent": [2597, 2666]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Overwrite or Append"], "extent": [2666, 2695], "body": [{"type": "para", "indent": 12, "text": ["If a local transform exists with the name ", {"type": "code", "text": ["xformOp:transform"]}, ", ", {"type": "em", "text": ["overwrite"]}, " it with the parameters. Otherwise, apply it as a new, most local transform."], "extent": [2695, 2859]}, {"type": "para", "indent": 12, "text": ["If this replaces an existing transform, that transform\u2019s order in the local transform stack is not affected."], "extent": [2859, 2981]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Overwrite or Prepend"], "extent": [2981, 3011], "body": [{"type": "para", "indent": 12, "text": ["Like ", {"type": "q", "text": ["Overwrite or Append"]}, ", but ", {"type": "em", "text": ["least"]}, " local."], "extent": [3011, 3071]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Apply Transform in World Space"], "extent": [3071, 3111], "body": [{"type": "para", "indent": 12, "text": ["Apply the parameters as a new, most local transform. However, prior to applying the transform, it is updated so that the result of the transform appears as if the transform was being applied in world space, before any local or ancestor transformations were applied to the primitive."], "extent": [3111, 3407]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Replace All Local Transforms"], "extent": [3407, 3445], "body": [{"type": "para", "indent": 12, "text": ["The transform specified in the remaining transform parameters is always applied as a new transform. Prior to applying this transform, all existing transform operations on the local transform stack are cleared so that only the supplied transform remains on the local transform stack (though ancestor transforms still have an effect)."], "extent": [3445, 3791]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "xn__xformOptransform_51a"}}, {"type": "dt", "indent": 4, "text": ["Transform order"], "extent": [3791, 3812], "body": [{"type": "para", "indent": 8, "text": ["The order in which Houdini applies translates, rotates, and scales, and the order in which it applies rotation."], "extent": [3831, 3952]}], "container": true, "attrs": {"id": "xOrd"}}, {"type": "dt", "indent": 4, "text": ["Translate"], "extent": [3952, 3967], "body": [{"type": "para", "indent": 8, "text": ["Movement amount along XYZ axes."], "extent": [3983, 4024]}], "container": true, "attrs": {"id": "t"}}, {"type": "dt", "indent": 4, "text": ["Rotate"], "extent": [4024, 4036], "body": [{"type": "para", "indent": 8, "text": ["Degrees rotation around XYZ axes."], "extent": [4052, 4095]}], "container": true, "attrs": {"id": "r"}}, {"type": "dt", "indent": 4, "text": ["Scale"], "extent": [4095, 4106], "body": [{"type": "para", "indent": 8, "text": ["Non-uniform scaling along XYZ axes."], "extent": [4122, 4167]}], "container": true, "attrs": {"id": "s"}}, {"type": "dt", "indent": 4, "text": ["Uniform scale"], "extent": [4167, 4186], "body": [{"type": "para", "indent": 8, "text": ["Scales the object uniformly along all three axes."], "extent": [4206, 4266]}], "container": true, "attrs": {"id": "scale"}}], "container": true}, {"level": 3, "type": "sep", "indent": 4, "text": [" Pivot Transform "], "extent": [4266, 4294], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Pivot translate"], "extent": [4320, 4345], "body": [{"type": "para", "indent": 12, "text": ["Moves the local origin of the object."], "extent": [4365, 4416]}], "container": true, "attrs": {"id": "p"}}, {"type": "dt", "indent": 8, "text": ["Pivot rotate"], "extent": [4416, 4438], "body": [{"type": "para", "indent": 12, "text": ["Rotates the local origin of the object after translation."], "extent": [4459, 4531]}], "container": true, "attrs": {"id": "pr"}}], "container": true}], "container": true, "attrs": {"id": "pivot_xform"}}], "container": true, "attrs": {"id": "transform_block"}}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "light_base_props", "container": true, "type": "h", "indent": 0, "text": ["Base properties"], "extent": [16, 57], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Radius"], "extent": [57, 66], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Type"]}, " is Cylinder, Disk, or Sphere, the radius of the light."], "extent": [83, 157]}], "container": true, "attrs": {"id": "radius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Length"], "extent": [157, 165], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Type"]}, " is Cylinder, the length of the light from end to end."], "extent": [182, 255]}], "container": true, "attrs": {"id": "length"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Geometry"], "extent": [255, 265], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Type"]}, " is Geometry, the path to a geometry prim to use as the light shape."], "extent": [284, 371]}], "container": true, "attrs": {"id": "geometry"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Width"], "extent": [371, 378], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Type"]}, " is Rectangle, the width of the light area."], "extent": [394, 456]}], "container": true, "attrs": {"id": "width"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Height"], "extent": [456, 464], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Type"]}, " is Rectangle, the height of the light area."], "extent": [481, 544]}], "container": true, "attrs": {"id": "height"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Angle"], "extent": [544, 551], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Type"]}, " is Distant, the angular size of the light in degrees."], "extent": [567, 640]}, {"type": "para", "indent": 4, "text": ["As an example, the Sun is approximately 0.53 degrees as seen from Earth. Higher values broaden the light and therefore soften shadow edges."], "extent": [640, 785]}], "container": true, "attrs": {"id": "angle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Exposure"], "extent": [785, 795], "body": [{"type": "para", "indent": 4, "text": ["Scales the power output exponentially as a power of 2, similar to an F-stop control. ", {"type": "code", "text": ["0"]}, " does not scale intensity, negative numbers scale intensity down by the square, positive numbers scale intensity up. Often you will set the ", {"type": "ui", "text": ["Intensity"]}, " to what looks like the right amount of light, and then use this parameter to ", {"type": "q", "text": ["tweak"]}, " it."], "extent": [814, 1150]}], "container": true, "attrs": {"id": "exposure"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Intensity"], "extent": [1150, 1161], "body": [{"type": "para", "indent": 4, "text": ["A linear scale on the power output of the light."], "extent": [1181, 1235]}], "container": true, "attrs": {"id": "intensity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Color"], "extent": [1235, 1242], "body": [{"type": "para", "indent": 4, "text": ["The color of the light, in energy-linear terms."], "extent": [1258, 1311]}], "container": true, "attrs": {"id": "color"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Texture"], "extent": [1311, 1320], "body": [{"type": "para", "indent": 4, "text": ["Maps a texture to the area geometry of lights. This is currently only supported with rectangular lights."], "extent": [1350, 1460]}], "container": true, "attrs": {"id": "xn__texturefile_0ta"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable color temperature"], "extent": [1460, 1486], "body": [{"type": "para", "indent": 4, "text": ["Use ", {"type": "ui", "text": ["Color temperature"]}, " to control the light color. The color calculated by ", {"type": "ui", "text": ["Color temperature"]}, " is ", {"type": "strong", "text": ["multiplied"]}, " by the RGB color in ", {"type": "ui", "text": ["Color"]}, ", so if you want the ", {"type": "q", "text": ["pure"]}, " temperature color, you should set ", {"type": "ui", "text": ["Color"]}, " to ", {"type": "code", "text": ["1.0, 1.0, 1.0"]}, "."], "extent": [1519, 1761]}], "container": true, "attrs": {"id": "enableColorTemperature"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Color temperature"], "extent": [1761, 1780], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Enable color temperature"]}, " is on, the temperature (in degrees Kelvin) to simulate. The valid range is from ", {"type": "code", "text": ["1000"]}, " to ", {"type": "code", "text": ["10000"]}, ". Lower values are warmer and higher values are cooler. The default is a common white point, D65."], "extent": [1807, 2041]}, {"type": "para", "indent": 4, "text": ["If necessary, you can compute the same color value using the ", {"type": "code", "text": ["UsdLuxBlackbodyTemperatureAsRgb()"]}, " function from the USD library."], "extent": [2041, 2174]}], "container": true, "attrs": {"id": "colorTemperature"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Normalize power"], "extent": [2174, 2191], "body": [{"type": "para", "indent": 4, "text": ["Divides the set power output (intensity scaled by exposure) by the surface area or angular size of the light. This makes it easier to adjust and compare energy output without it being affected by the size of the light."], "extent": [2211, 2435]}], "container": true, "attrs": {"id": "normalize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Diffuse multiplier"], "extent": [2435, 2455], "body": [{"type": "para", "indent": 4, "text": ["Scales the effect this light has on the diffuse response of shaders. This is a non-physical ", {"type": "q", "text": ["tweak"]}, "."], "extent": [2473, 2579]}], "container": true, "attrs": {"id": "diffuse"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Specular multiplier"], "extent": [2579, 2600], "body": [{"type": "para", "indent": 4, "text": ["Scales the effect this light has on the specular response of shaders. This is a non-physical ", {"type": "q", "text": ["tweak"]}, "."], "extent": [2619, 2726]}], "container": true, "attrs": {"id": "specular"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale Guide Geometry"], "extent": [2726, 2748], "body": [{"type": "para", "indent": 4, "text": ["Applies a uniform scaling factor the the guide geometry drawn for the light in the viewport. The default value is an expression that inverts the ", {"type": "q", "text": ["meters per unit"]}, " value of the USD stage to produce a consistent real-world size for the guide geometry."], "extent": [2784, 3039]}], "container": true, "attrs": {"id": "xn__houdiniguidescale_s3a"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Show in Viewport Camera Menu"], "extent": [3039, 3069], "body": [{"type": "para", "indent": 4, "text": ["Turn off this option to prevent this light from showing up in the camera menu in the viewport. This can be useful to hide lights that are embedded in props, or other lights that are not meant to be modified."], "extent": [3107, 3321]}], "container": true, "attrs": {"id": "xn__houdiniinviewermenu_16a"}, "role": "item"}], "container": true}]}, {"level": 2, "id": "light_shaping_props", "container": true, "type": "h", "indent": 0, "text": ["Shaping"], "extent": [3321, 3357], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Spotlight"], "extent": [3357, 3369], "body": [{"type": "para", "indent": 4, "text": ["Add the necessary API to the light to turn it into a spotlight."], "extent": [3395, 3464]}], "container": true, "attrs": {"id": "spotlightenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Angle"], "extent": [3464, 3471], "body": [{"type": "para", "indent": 4, "text": ["The spread angle of the spotlight beam, in degrees."], "extent": [3507, 3564]}], "container": true, "attrs": {"id": "xn__shapingconeangle_51ae"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Softness"], "extent": [3564, 3574], "body": [{"type": "para", "indent": 4, "text": ["Blurs the edges of the spotlight beam, simulating light leakage and bounce."], "extent": [3613, 3694]}], "container": true, "attrs": {"id": "xn__shapingconesoftness_16ae"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Left barndoor"], "extent": [3694, 3709], "body": [{"type": "para", "indent": 4, "text": ["Slides in a light blocker from the left, covering part of the spotlight cone. ", {"type": "code", "text": ["1.0"]}, " reaches all the way across the cone, blocking all light."], "extent": [3732, 3878]}], "container": true, "attrs": {"id": "barndoorleft"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Left barndoor edge"], "extent": [3878, 3898], "body": [{"type": "para", "indent": 4, "text": ["Extends the solid light blocker above by an additional soft edge. ", {"type": "code", "text": ["1.0"]}, " creates a gradient as wide as the spotlight cone."], "extent": [3925, 4052]}], "container": true, "attrs": {"id": "barndoorleftedge"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Right barndoor"], "extent": [4052, 4068], "body": [{"type": "para", "indent": 4, "text": ["Slides in a light blocker from the right, covering part of the spotlight cone. ", {"type": "code", "text": ["1.0"]}, " reaches all the way across the cone, blocking all light."], "extent": [4092, 4239]}], "container": true, "attrs": {"id": "barndoorright"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Right barndoor edge"], "extent": [4239, 4260], "body": [{"type": "para", "indent": 4, "text": ["Extends the solid light blocker above by an additional soft edge. ", {"type": "code", "text": ["1.0"]}, " creates a gradient as wide as the spotlight cone."], "extent": [4288, 4415]}], "container": true, "attrs": {"id": "barndoorrightedge"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Top barndoor"], "extent": [4415, 4429], "body": [{"type": "para", "indent": 4, "text": ["Slides in a light blocker from the top, covering part of the spotlight cone. ", {"type": "code", "text": ["1.0"]}, " reaches all the way across the cone, blocking all light."], "extent": [4451, 4596]}], "container": true, "attrs": {"id": "barndoortop"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Top barndoor edge"], "extent": [4596, 4615], "body": [{"type": "para", "indent": 4, "text": ["Extends the solid light blocker above by an additional soft edge. ", {"type": "code", "text": ["1.0"]}, " creates a gradient as wide as the spotlight cone."], "extent": [4641, 4768]}], "container": true, "attrs": {"id": "barndoortopedge"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bottom barndoor"], "extent": [4768, 4785], "body": [{"type": "para", "indent": 4, "text": ["Slides in a light blocker from the bottom, covering part of the spotlight cone. ", {"type": "code", "text": ["1.0"]}, " reaches all the way across the cone, blocking all light."], "extent": [4810, 4958]}], "container": true, "attrs": {"id": "barndoorbottom"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bottom barndoor edge"], "extent": [4958, 4980], "body": [{"type": "para", "indent": 4, "text": ["Extends the solid light blocker above by an additional soft edge. ", {"type": "code", "text": ["1.0"]}, " creates a gradient as wide as the spotlight cone."], "extent": [5009, 5137]}], "container": true, "attrs": {"id": "barndoorbottomedge"}, "role": "item"}], "container": true}, {"level": 5, "type": "sep", "indent": 0, "extent": [5137, 5143]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Focus (checkbox)"], "extent": [5143, 5162], "body": [{"type": "para", "indent": 4, "text": ["Add the necessary API to the light to be able to focus the beam."], "extent": [5184, 5254]}], "container": true, "attrs": {"id": "focusenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Focus"], "extent": [5254, 5261], "body": [{"type": "para", "indent": 4, "text": ["A control to shape the spread of light. Higher focus values pull light towards the center and narrow the spread. (This is implemented as an off-axis cosine power exponent.)"], "extent": [5292, 5470]}], "container": true, "attrs": {"id": "xn__shapingfocus_nva"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Focus tint"], "extent": [5470, 5482], "body": [{"type": "para", "indent": 4, "text": ["Off-axis color tint, tints the light in the falloff region. The default is black."], "extent": [5517, 5605]}], "container": true, "attrs": {"id": "xn__shapingfocusTint_51a"}, "role": "item"}], "container": true}, {"level": 5, "type": "sep", "indent": 0, "extent": [5605, 5611]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["IES"], "extent": [5611, 5617], "body": [{"type": "para", "indent": 4, "text": ["Add the necessary API to the light to use an IES file describing angular distribution of light."], "extent": [5637, 5738]}], "container": true, "attrs": {"id": "iesenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["File"], "extent": [5738, 5744], "body": [{"type": "para", "indent": 4, "text": ["An IES (Illumination Engineering Society) format file to use to control angular distribution of light."], "extent": [5778, 5886]}], "container": true, "attrs": {"id": "xn__shapingiesfile_wyad"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Angle scale"], "extent": [5886, 5899], "body": [{"type": "para", "indent": 4, "text": ["A global scale on angles found in the IES file."], "extent": [5939, 5993]}], "container": true, "attrs": {"id": "xn__shapingiesangleScale_o8ad"}, "role": "item"}], "container": true}]}, {"level": 2, "id": "shadow_props", "container": true, "type": "h", "indent": 0, "text": ["Shadow"], "extent": [5993, 6021], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable"], "extent": [6021, 6030], "body": [{"type": "para", "indent": 4, "text": ["When this is on, objects hit by this light will cast shadows (subject to shadow masks)."], "extent": [6061, 6154]}], "container": true, "attrs": {"id": "xn__shadowenable_mva"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Color"], "extent": [6154, 6161], "body": [{"type": "para", "indent": 4, "text": ["Tints the color of shadows cast by this light. Changing this from black (", {"type": "code", "text": ["0, 0, 0"]}, ") is a non-physical ", {"type": "q", "text": ["tweak"]}, "."], "extent": [6191, 6307]}], "container": true, "attrs": {"id": "xn__shadowcolor_zta"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Falloff"], "extent": [6307, 6316], "body": [{"type": "para", "indent": 4, "text": ["The near distance at which shadow falloff begins."], "extent": [6348, 6403]}, {"type": "para", "indent": 4, "text": ["The default value (-1) indicates no falloff."], "extent": [6403, 6453]}], "container": true, "attrs": {"id": "xn__shadowfalloff_8wa"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Falloff Gamma"], "extent": [6453, 6468], "body": [{"type": "para", "indent": 4, "text": ["A gamma (i.e., exponential) control over shadow strength with linear distance within the falloff zone (between ", {"type": "ui", "text": ["Falloff"]}, " and ", {"type": "ui", "text": ["Distance"]}, "."], "extent": [6505, 6651]}], "container": true, "attrs": {"id": "xn__shadowfalloffGamma_e5a"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Distance"], "extent": [6651, 6661], "body": [{"type": "para", "indent": 4, "text": ["The maximum distance to check for objects shadowing this light. The default is ", {"type": "code", "text": ["-1"]}, ", meaning no limit. Setting this may speed up rendering if you know all objects you want shadowed are within a certain distance."], "extent": [6694, 6912]}], "container": true, "attrs": {"id": "xn__shadowdistance_vya"}, "role": "item"}], "container": true}]}, {"level": 2, "id": "karma_light_props", "container": true, "type": "h", "indent": 0, "text": ["Karma"], "extent": [6912, 6944], "body": [{"type": "parameters_item_group", "body": [{"ext": null, "type": "parameters_item", "indent": 0, "text": ["Active Radius"], "role": "item", "extent": [32660, 32677], "body": [{"type": "para", "indent": 4, "text": ["Artificially clamp the illumination distance from the light. Outside this radius,\n    the light will have no effect."], "extent": [32735, 32857]}], "container": true, "attrs": {"hprop": "karma:light:activeradius", "kagroup": "Light"}, "id": "karma:light:activeradius"}, {"ext": null, "type": "parameters_item", "indent": 0, "text": ["MIS Bias"], "role": "item", "extent": [33493, 33505], "body": [{"type": "para", "indent": 4, "text": ["Controls whether multiple importance sampling will sample from the BSDF,\n    the light, or both the BSDF and light."], "extent": [33561, 33682]}], "container": true, "attrs": {"hprop": "karma:light:misbias", "kagroup": "Sampling"}, "id": "karma:light:misbias"}, {"ext": null, "type": "parameters_item", "indent": 0, "text": ["Sampling Quality"], "role": "item", "extent": [33682, 33702], "body": [{"type": "para", "indent": 4, "text": ["This is the per-light sampling quality, that acts as a multiplier on the global ", {"type": "em", "text": ["Light Sampling Quality"]}, ". Increasing the quality will add\n    additional samples for this light source, improving the sampling quality\n    of this light relative to other light sources."], "extent": [33766, 34037]}], "container": true, "attrs": {"hprop": "karma:light:samplingquality", "kagroup": "Sampling"}, "id": "karma:light:samplingquality"}, {"ext": null, "type": "parameters_item", "indent": 0, "text": ["Force Uniform Sampling"], "role": "item", "extent": [36612, 36638], "body": [{"type": "para", "indent": 4, "text": ["When using the light tree for rendering, Karma will try to put any light\n    source that\u2019s compatible into the tree.  This option can force a light to\n    be excluded from the tree and subject to uniform sampling, which can \n    sometimes yield an improved sampling quality the light at the expense\n    of speed."], "extent": [36709, 37027]}], "container": true, "attrs": {"hprop": "karma:light:force_uniform_sampling", "kagroup": "Sampling"}, "id": "karma:light:force_uniform_sampling"}, {"ext": null, "type": "parameters_item", "indent": 0, "text": ["Category"], "role": "item", "extent": [37186, 37198], "body": [{"type": "para", "indent": 4, "text": ["The category identifier used to select this light source for illumination."], "extent": [37254, 37334]}], "container": true, "attrs": {"hprop": "karma:light:category", "kagroup": "Shading"}, "id": "karma:light:category"}, {"ext": null, "type": "parameters_item", "indent": 0, "text": ["Maximum HDRI Size"], "role": "item", "extent": [37334, 37355], "body": [{"type": "para", "indent": 4, "text": ["If an environment map is larger than this resolution, it will be scaled\n    down when performing texture analysis.  If the map has some very small,\n    very bright values, this filtering may affect how sampling of the\n    environment map is performed."], "extent": [37418, 37675]}], "container": true, "attrs": {"hprop": "karma:light:hdri_max_isize", "kagroup": "Sampling"}, "id": "karma:light:hdri_max_isize"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips"], "extent": [6532, 6543], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Lights do not generally support non-uniform scale values, so by default the ", {"type": "ui", "text": ["Scale"]}, " parameter of this node is hidden. In versions of Houdini before 19.0, this parameter was visible, so for backward compatibility, the ", {"type": "ui", "text": ["Scale"]}, " parameter will be visible if any of the scale components are not ", {"type": "code", "text": ["1.0"]}, ". Reverting this parameter to its default values will cause the parameter to disappear from the parameter dialog."], "extent": [6543, 6959]}], "container": true}]}], "text": "Parameters"}], "title": ["Light"], "summary": ["Creates or edits a USD Light prim. This node also adds some useful Karma-specific attributes."], "included": ["/nodes/lop/_render_prims", "/nodes/lop/_sampling", "/nodes/lop/_simple_prims", "/props/karma"]}