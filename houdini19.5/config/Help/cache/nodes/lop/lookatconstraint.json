{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "lookatconstraint", "icon": "SHELF/lookat", "tags": "constraints", "since": "18.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Look At Constraint"], "extent": [0, 23]}, {"type": "summary", "indent": 0, "text": ["Constrains a prim to always point toward a target."], "extent": [130, 188]}, {"level": 2, "id": "about", "container": true, "type": "h", "indent": 0, "text": ["Solaris constraints"], "extent": [1325, 1359], "body": [{"type": "para", "indent": 0, "text": ["Currently, USD does not support constraints. Parametric constraints are probably antithetical to USD\u2019s design mission of being descriptive, immutable, and idempotent."], "extent": [1359, 1528]}, {"type": "para", "indent": 0, "text": ["As a layer above USD, that generates USD, the LOP network can compute dynamic constraints, and ", {"type": "q", "text": ["bake"]}, " the results as time samples when it writes the USD to disk."], "extent": [1528, 1694]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Notes and tips"], "extent": [219, 240], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["By default, the rotation is computed to point the Z- axis towards a target while orienting the Y+ axis towards an up vector. This is to match how cameras and lights work."], "extent": [240, 415]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You ", {"type": "strong", "text": ["cannot"]}, " use a nested point instance as a source (the thing that looks)."], "extent": [415, 495]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You ", {"type": "strong", "text": ["can"]}, " use a nested point instance as a target (the thing looked at)."], "extent": [495, 572]}], "container": true}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [572, 584], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Source"], "extent": [584, 598], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [598, 605], "body": [{"type": "para", "indent": 4, "text": ["Whether the source (the thing that looks) is a regular primitive, or a point instance. You ", {"type": "strong", "text": ["cannot"]}, " use a nested point instance as a source."], "extent": [605, 751]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"type": "include_group", "body": [{"ext": "_constraints#source", "type": "include", "indent": 0, "role": "item", "extent": [751, 782]}], "container": true, "role": "item_group"}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Source Instances"], "extent": [126, 144], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Source \u25b8 Type"]}, " is ", {"type": "q", "text": ["Point Intance"]}, ", the point instance to use, using ", {"type": "code", "text": ["/", {"type": "var", "text": ["path"]}, "[", {"type": "var", "text": ["instance_index"]}, "]"]}, " syntax (for example, ", {"type": "code", "text": ["/geometry/instancer[1]"]}, ")."], "extent": [170, 331]}], "container": true, "attrs": {"id": "sourceinstances"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Look At"], "extent": [823, 837], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Target Source"], "extent": [837, 853], "body": [{"type": "para", "indent": 4, "text": ["Where to get the target to look at: a prim from the first input or the second input, or a world space position specified by a parameter."], "extent": [853, 995]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Target Position"], "extent": [995, 1012], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Target source"]}, " is ", {"type": "q", "text": ["Position"]}, ", the world space position to look at. You can use expressions to compute or animate the target position."], "extent": [1012, 1159]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [1159, 1165], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Target source"]}, " is ", {"type": "q", "text": ["First input"]}, " or ", {"type": "q", "text": ["Second input"]}, ", whether the thing to look at is a regular primitive, or a point instance. (You ", {"type": "strong", "text": ["can"]}, " use a nested point instance as a target.)"], "extent": [1165, 1356]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"type": "include_group", "body": [{"ext": "_constaints#target", "type": "include", "indent": 0, "role": "item", "extent": [1356, 1386]}, {"ext": "_constaints#targetinstance", "type": "include", "indent": 0, "role": "item", "extent": [1386, 1424]}, {"ext": "_constaints#hidetarget", "type": "include", "indent": 0, "role": "item", "extent": [1424, 1458]}], "container": true, "role": "item_group"}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Import Time"], "extent": [807, 820], "body": [{"type": "para", "indent": 4, "text": ["Specify the frame at which the source and/or target geometry are imported into the embedded sopnet to build the constraints. \n    The default ", {"type": "q", "text": ["$FF"]}, " expression forces the constraint LOP to be time dependent, which is needed when operating on a non time-dependent\n    network that has time samples driving the source or target primitives.\n    However, for better performance with a non time-dependent network with no time samples, it is recommended to use a static value instead."], "extent": [841, 1325]}], "container": true, "attrs": {"id": "importtime"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Orientation"], "extent": [1494, 1512], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Look At Axis"], "extent": [5987, 6001], "body": [{"type": "para", "indent": 4, "text": ["Which axis on the source object to match to the look at vector. You can use this to compensate for the orientation the source object was created in. This can\u2019t be the same as the ", {"type": "ui", "text": ["Look up axis"]}, "."], "extent": [6022, 6224]}], "container": true, "attrs": {"id": "lookataxis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Look Up Axis"], "extent": [6224, 6238], "body": [{"type": "para", "indent": 4, "text": ["Which axis on the source object to match to the up vector. You can use this to compensate for the orientation the source object was created in.  This can\u2019t be the same as the ", {"type": "ui", "text": ["Look at axis"]}, "."], "extent": [6259, 6457]}], "container": true, "attrs": {"id": "lookupaxis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Up Vector"], "extent": [1599, 1610], "body": [{"type": "para", "indent": 4, "text": ["How to compute the up vector."], "extent": [1610, 1645]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["X Axis"], "extent": [1645, 1657], "body": [{"type": "para", "indent": 8, "text": ["Use the world +X direction as the up vector."], "extent": [1657, 1711]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Y Axis"], "extent": [1711, 1723], "body": [{"type": "para", "indent": 8, "text": ["Use the world +Y direction as the up vector."], "extent": [1723, 1777]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Z Axis"], "extent": [1777, 1789], "body": [{"type": "para", "indent": 8, "text": ["Use the world +Z direction as the up vector."], "extent": [1789, 1843]}], "container": true}, {"type": "dt", "indent": 4, "text": ["From Primitive"], "extent": [1843, 1863], "body": [{"type": "para", "indent": 8, "text": ["Rotate the source prim so its up vector points at a specific prim as it moves along the curve."], "extent": [1863, 1967]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [1967, 1979], "body": [{"type": "para", "indent": 8, "text": ["Use the vector in the ", {"type": "ui", "text": ["Up vector"]}, " parameter."], "extent": [1979, 2035]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Up Vector Source"], "extent": [2035, 2053], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Up Vector"]}, " is ", {"type": "q", "text": ["from primitive"]}, ", where to get the primitive to point the up vector at (the first or second input)."], "extent": [2053, 2180]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Up Vector Xform"], "extent": [5797, 5814], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Look at mode"]}, " is ", {"type": "q", "text": ["from primitive"]}, ", the scene graph path of the prim to point the up vector at. (This does not support point instances.)"], "extent": [5838, 5987]}], "container": true, "attrs": {"id": "upvectorxform"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Twist"], "extent": [2226, 2233], "body": [{"type": "para", "indent": 4, "text": ["Angle (in degrees) to rotate around the look at direction."], "extent": [2233, 2298]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2298, 2307], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/lookatconstraint", "type": "link", "text": "", "fullpath": "/nodes/lop/lookatconstraint"}], "extent": [2307, 2338]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/parentconstraint", "type": "link", "text": "", "fullpath": "/nodes/lop/parentconstraint"}], "extent": [2338, 2368]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/pointsconstraint", "type": "link", "text": "", "fullpath": "/nodes/lop/pointsconstraint"}], "extent": [2368, 2398]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/surfaceconstraint", "type": "link", "text": "", "fullpath": "/nodes/lop/surfaceconstraint"}], "extent": [2398, 2429]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/constraintsurface", "type": "link", "text": "", "fullpath": "/nodes/lop/constraintsurface"}], "extent": [2429, 2462]}], "container": true}], "text": "Related"}], "title": ["Look At Constraint"], "summary": ["Constrains a prim to always point toward a target."], "included": ["/nodes/lop/_constraints", "/nodes/lop/_snippet_token", "/nodes/lop/followpathconstraint"]}