{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "materiallibrary", "icon": "LOP/materiallibrary", "since": "17.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Material Library"], "extent": [0, 21]}, {"type": "summary", "indent": 0, "text": ["Authors USD material primitives from shader VOP nodes."], "extent": [115, 178]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [178, 193], "body": [{"type": "para", "indent": 0, "text": ["This node translates shader VOP nodes into USD material primitives. "], "extent": [193, 264]}, {"type": "para", "indent": 0, "text": ["A newly created Material Library node uses a pattern asterisk in the Material VOP parameter to match children VOP nodes inside the LOP and translate them into USD materials. See ", {"scheme": null, "value": "#usdmat", "type": "link", "text": ["USD materials"], "fullpath": "/nodes/lop/materiallibrary#usdmat", "fragment": "#usdmat"}, " below."], "extent": [264, 474]}, {"type": "para", "indent": 0, "text": ["Alternatively, this LOP can also import Houdini VOP materials from other VOP networks (such as ", {"type": "code", "text": ["/mat"]}, "), using ", {"type": "code", "text": ["Auto-fill Materials"]}, " button."], "extent": [474, 615]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips"], "extent": [615, 626], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can use patterns in ", {"type": "code", "text": ["Material VOP"]}, " parameter"], "extent": [626, 678]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can define a common USD path for all materials, using ", {"type": "code", "text": ["Material Path Prefix"]}, " parameter. Any material whose ", {"type": "code", "text": ["Material Path"]}, " multi-parm instance is not an absolute path will use it as a prefix."], "extent": [678, 877]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The ", {"type": "code", "text": ["Material Path Prefix"]}, " parameter can be used to specify either the ancestor primitive (if the path ends with a slash), or the ancestor path and the shader primitive name prefix (if the path does not end with a slash)."], "extent": [877, 1102]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["If you want to re-do importing all materials (for example, to grab new materials), click ", {"type": "ui", "text": ["Clear"]}, " in the multi-parm, then click ", {"type": "ui", "text": ["Auto-fill materials"]}, " again."], "extent": [1102, 1265]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Even though this node allows you to assign the material at the same time you import it, we recommend you use a separate node (", {"scheme": "Node", "value": "/nodes/lop/materiallinker", "type": "link", "text": ["Material Linker"], "fullpath": "/nodes/lop/materiallinker"}, " or ", {"scheme": "Node", "value": "/nodes/lop/assignmaterial", "type": "link", "text": ["Assign Material"], "fullpath": "/nodes/lop/assignmaterial"}, ") to assign materials. Keeping the two operations separate makes your network easier to understand for others."], "extent": [1265, 1592]}], "container": true}]}, {"level": 2, "id": "usdmat", "container": true, "type": "h", "indent": 0, "text": ["USD materials"], "extent": [1592, 1621], "body": [{"type": "para", "indent": 0, "text": ["Inside the Material Library LOP, the VOP nodes, their parameters, and inputs represent ", {"type": "strong", "text": ["USD shaders"]}, ", their attributes and input connectors.  For example, a Principled Shader VOP represents a Karma material, and the Pxr Surface VOP represents a USD RenderMan shader. "], "extent": [1621, 1891]}, {"type": "para", "indent": 0, "text": ["The Collect VOP can gather several shaders for different renderers to create a USD material that contains all of them."], "extent": [1891, 2011]}, {"type": "para", "indent": 0, "text": ["You can connect the shader VOPs can be connected to one another, and the node will translate these as USD shader connections. (For example, if you connect the output of a USD UV Texture VOP to the input of USD Preview Surface VOP.)"], "extent": [2011, 2244]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [2244, 2249], "body": [{"type": "para", "indent": 4, "text": ["To import materials from inside this node, set the ", {"type": "ui", "text": ["Material network"]}, " to ", {"type": "code", "text": ["."]}, " (a single period)."], "extent": [2249, 2352]}], "container": true}, {"type": "tip", "indent": 0, "role": "item", "extent": [2352, 2357], "body": [{"type": "para", "indent": 4, "text": ["You can use Visualize VOP ('x' hotkey) to debug the shader node network.  If the shader translator for a given shader node supports output value visualization via the Visualize VOP node, then the USD Material will be authored in such a way that geometry will be shaded using the value of the shader node feeding into the Visualize VOP."], "extent": [2357, 2698]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2698, 2710], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Material Network"], "extent": [2710, 2729], "body": [{"type": "para", "indent": 4, "text": ["Node path to the VOP network containing material nodes to import. The node looks for materials here when you click ", {"type": "ui", "text": ["Auto-fill materials"]}, ". Set this to ", {"type": "code", "text": ["."]}, " (a single period) to use the VOP subnet inside this node."], "extent": [2729, 2948]}, {"type": "para", "indent": 4, "text": ["This is a hidden parameter, which is set and used by Auto-fill button."], "extent": [2948, 3024]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Container Path"], "extent": [3024, 3040], "body": [{"type": "para", "indent": 4, "text": ["The default parent scene graph path of newly created materials. This is prefixed to the material names to get the material prim path when you click ", {"type": "ui", "text": ["Auto-fill materials"]}, "."], "extent": [3040, 3218]}, {"type": "para", "indent": 4, "text": ["This is a hidden parameter, which is set and used by Auto-fill button."], "extent": [3218, 3294]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Auto-fill Materials"], "extent": [3294, 3315], "body": [{"type": "para", "indent": 4, "text": ["Click this to automatically create instances of the multi-parm for each material node in the ", {"type": "ui", "text": ["Material network"]}, "."], "extent": [3315, 3435]}, {"type": "para", "indent": 4, "text": ["This button will bring up a pop-up dialog prompting for the material network inside which to look for nodes with material flag turned on. Each such node will be filled into own multi-parm instance. The dialog also asks for the USD path at which to author the USD material translated from that node."], "extent": [3435, 3739]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Auto-generate Preview Surface Shaders"], "extent": [3739, 3778], "body": [{"type": "para", "indent": 4, "text": ["When possible, the LOP will generate a USD Preview Surface shader primitive. This shader type is part of the USD standard and should be implemented by all USD renderers, so this shader (which may be an approximation of the original shader) should show up in any renderer, even if the renderer doesn\u2019t understand the original shader type."], "extent": [3778, 4121]}, {"type": "para", "indent": 4, "text": ["Note, if textures are involved, the auto-generated preview network will wire the alpha output of a USD Texture Reader primitive to the opacity input of a USD Preview Surface shader primitive. Some renderers, like Storm, are known to mishandle the opacity, leading to artifacts in the viewport. To workaround such cases, you can turn this toggle off and then you can manually create a USD Preview network inside, feeding it to the Collect VOP along with the original surface shader."], "extent": [4121, 4608]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Allow Shader Parameter Animation"], "extent": [4608, 4642], "body": [{"type": "para", "indent": 4, "text": ["When it is turned off, all USD values are assumed non-animatable and will be authored at a default time code. And, with this option turned on, shader node parameters that are time-dependent will get translated to USD values at non-default time codes, while time-independent parameters will still author a value at a default time code."], "extent": [4665, 5005]}, {"type": "para", "indent": 4, "text": ["Note, checking parameter time dependency can be costly and may add up to a large portion of the shader translation time. Since the vast majority of shader nodes don\u2019t have animated parameters, this toggle is off by default to save the work involved in checking it."], "extent": [5005, 5276]}], "container": true, "attrs": {"id": "allowparmanim"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Parent Primitive Type"], "extent": [5276, 5299], "body": [{"type": "para", "indent": 4, "text": ["If the intermediate prims in a material path don\u2019t exist, the node will create them. This controls the type of the intermediate prims this node creates."], "extent": [5323, 5481]}], "container": true, "attrs": {"id": "parentprimtype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Material Path Prefix"], "extent": [5481, 5503], "body": [{"type": "para", "indent": 4, "text": ["This is automatically prefixed to any material paths that are not absolute (do not start with a slash). This lets you specify relative paths in the multi-parm, and set their common USD parent hierarchy in this one parameter."], "extent": [5523, 5753]}], "container": true, "attrs": {"id": "pathprefix"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number of Materials"], "extent": [5753, 5774], "body": [{"type": "para", "indent": 4, "text": ["The number of materials to import. Set the number or click the plus and minus buttons to add or remove material imports."], "extent": [5774, 5900]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Include Only VOPs with Material Flag Set"], "extent": [5900, 5942], "body": [{"type": "para", "indent": 4, "text": ["If ", {"type": "ui", "text": ["Material VOP"]}, " is a pattern, this excludes nodes that don\u2019t have the Material flag on. Default is off."], "extent": [5942, 6059]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Material VOP"], "extent": [6059, 6073], "body": [{"type": "para", "indent": 4, "text": ["The Houdini node path to a VOP node representing a shader or material. This can be a node pattern, in which case this node will import all matched nodes as USD materials."], "extent": [6073, 6249]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Material Path"], "extent": [6249, 6264], "body": [{"type": "para", "indent": 4, "text": ["The scene graph path at which to create the USD prim. If this is an absolute path (starts with a slash), it is used as-is. If this path is relative, it is relative to the path in the ", {"type": "ui", "text": ["Path Prefix"]}, " parameter."], "extent": [6281, 6496]}], "container": true, "attrs": {"id": "usdpath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Assign to Geometry"], "extent": [6496, 6516], "body": [{"type": "para", "indent": 4, "text": ["When this is on, you can assign the newly imported material to USD geometry prims using the ", {"type": "ui", "text": ["Geometry Path"]}, " parameter below."], "extent": [6516, 6648]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Geometry Path"], "extent": [6648, 6663], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Assign to Geometry"]}, " is on, assigns the newly imported material to the primitives listed in this parameter."], "extent": [6663, 6784]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [6784, 6793], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/lightfilterlibrary", "type": "link", "text": "", "fullpath": "/nodes/lop/lightfilterlibrary"}], "extent": [6793, 6827]}], "container": true}], "text": "Related"}], "title": ["Material Library"], "summary": ["Authors USD material primitives from shader VOP nodes."]}