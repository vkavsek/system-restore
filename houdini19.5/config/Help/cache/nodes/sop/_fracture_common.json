{"type": "root", "attrs": {"type": "include"}, "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Fracture Direction"], "extent": [16, 36], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Auto (Bounding Box)"], "extent": [64, 89], "body": [{"type": "para", "indent": 8, "text": ["Determines the direction automatically based on the oriented bounding box."], "extent": [89, 173]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Vector"], "extent": [173, 185], "body": [{"type": "para", "indent": 8, "text": ["Uses the vector specified as the direction of fracturing."], "extent": [185, 252]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fracturedirection"}}, {"type": "dt", "indent": 0, "text": ["Detriangulate"], "extent": [252, 267], "body": [{"type": "para", "indent": 4, "text": ["Converts geometry back to the original N-gons after applying a ", {"scheme": "Node", "value": "/nodes/sop/boolean", "type": "link", "text": ["boolean"], "fullpath": "/nodes/sop/boolean"}, " operation (which internally converts the geometry to triangles).\n    Disabling this may be necessary to avoid producing self-intersections when multiple levels of fracturing are performed.\n    See the ", {"scheme": "Node", "value": "/nodes/sop/boolean#tips", "type": "link", "text": ["Boolean SOP tips"], "fullpath": "/nodes/sop/boolean#tips", "fragment": "#tips"}, " for more information."], "extent": [290, 649]}], "container": true, "attrs": {"id": "detriangulate"}}, {"type": "dt", "indent": 0, "text": ["Scatter Points"], "extent": [649, 665], "body": [{"type": "para", "indent": 4, "text": ["The number of points to scatter."], "extent": [685, 723]}], "container": true, "attrs": {"id": "scatterpts"}}, {"type": "dt", "indent": 0, "text": ["Scatter Points Scaling"], "extent": [723, 747], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [774, 784], "body": [{"type": "para", "indent": 8, "text": ["Do not affect the number of scattered points."], "extent": [784, 839]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Piece Volume"], "extent": [839, 866], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the number of scattered points by the piece\u2019s volume. "], "extent": [866, 941]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "text": [" "], "role": "item", "extent": [941, 956], "body": [{"type": "para", "indent": 12, "text": ["This is only available with the ", {"type": "ui", "text": ["Concrete"]}, " material."], "extent": [956, 1024]}, {"type": "para", "indent": 12, "text": ["Large pieces can generate a lot more points.  Use the ", {"type": "ui", "text": ["Remap Range"]}, " option for better control over the total number of points being generated."], "extent": [1024, 1182]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Max Axis Length"], "extent": [1182, 1212], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the number of scattered points by the piece\u2019s bounding box\u2019s maximum axis length."], "extent": [1212, 1314]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [1314, 1328], "body": [{"type": "para", "indent": 12, "text": ["This is only available with the ", {"type": "ui", "text": ["Concrete"]}, " material."], "extent": [1328, 1409]}, {"type": "para", "indent": 12, "text": ["Large pieces can generate a lot more points.  Use the ", {"type": "ui", "text": ["Remap Range"]}, " option for better control over the total number of points being generated."], "extent": [1409, 1567]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [1567, 1591], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the number of scattered points by the average value across the piece of the given attribute."], "extent": [1591, 1704]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "scatterptsscaling"}}, {"type": "dt", "indent": 0, "text": ["Remap Range"], "extent": [1704, 1717], "body": [{"type": "para", "indent": 4, "text": ["Enables fitting the range of the piece\u2019s volume or max axis length value to a min and max range."], "extent": [1737, 1839]}, {"type": "para", "indent": 4, "text": ["Values outside the input range will be clamped to the input range."], "extent": [1839, 1911]}], "container": true, "attrs": {"id": "remaprange"}}, {"type": "dt", "indent": 0, "text": ["Input Min/Max"], "extent": [1911, 1926], "body": [{"type": "para", "indent": 4, "text": ["Specifies the input\u2019s minimum and maximum values."], "extent": [1947, 2002]}], "container": true, "attrs": {"id": "inputminmax"}}, {"type": "dt", "indent": 0, "text": ["Output Min/Max"], "extent": [2002, 2018], "body": [{"type": "para", "indent": 4, "text": ["Specifies the output\u2019s minimum and maximum values."], "extent": [2040, 2096]}], "container": true, "attrs": {"id": "outputminmax"}}, {"type": "dt", "indent": 0, "text": ["Scatter Points Attribute"], "extent": [2096, 2122], "body": [{"type": "para", "indent": 4, "text": ["The name of the primitive or point float attribute to use as multiplier. The average value across the piece being fractured will be used."], "extent": [2148, 2291]}], "container": true, "attrs": {"id": "scatterptsattrib"}}, {"type": "dt", "indent": 0, "text": ["Scatter Seed"], "extent": [2291, 2305], "body": [{"type": "para", "indent": 4, "text": ["The random seed for scattering points."], "extent": [2326, 2370]}], "container": true, "attrs": {"id": "scatterseed"}}, {"type": "dt", "indent": 0, "text": ["Use Input Points"], "extent": [2370, 2388], "body": [{"type": "para", "indent": 4, "text": ["Use points from the fourth input."], "extent": [2409, 2452]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [2452, 2462], "body": [{"type": "para", "indent": 8, "text": ["If a name attribute exists on the points, only points with a matching name will be used for the piece being fractured."], "extent": [2462, 2598]}, {"type": "para", "indent": 8, "text": ["Wildcards are supported."], "extent": [2598, 2632]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "useinputpts"}}, {"type": "dt", "indent": 0, "text": ["Input Points"], "extent": [2632, 2646], "body": [{"type": "para", "indent": 4, "text": ["The group of points from the fourth input to use."], "extent": [2664, 2720]}], "container": true, "attrs": {"id": "inputpts"}}, {"type": "dt", "indent": 0, "text": ["Enable Chipping"], "extent": [2720, 2737], "body": [{"type": "para", "indent": 4, "text": ["Break off corners of pieces to create chips."], "extent": [2761, 2811]}], "container": true, "attrs": {"id": "enablechipping"}}, {"type": "dt", "indent": 0, "text": ["Chipping Ratio"], "extent": [2811, 2827], "body": [{"type": "para", "indent": 4, "text": ["The overall ratio out of all the pieces to perform chipping on."], "extent": [2851, 2920]}], "container": true, "attrs": {"id": "chipping_ratio"}}, {"type": "dt", "indent": 0, "text": ["Seed"], "extent": [2920, 2926], "body": [{"type": "para", "indent": 4, "text": ["The overall seed for the ratio of chipping."], "extent": [2949, 2998]}], "container": true, "attrs": {"id": "chipping_seed"}}, {"type": "dt", "indent": 0, "text": ["Randomness"], "extent": [2998, 3010], "body": [{"type": "para", "indent": 4, "text": ["Randomizes the chipping ratio for each piece by this amount, when fracturing per piece."], "extent": [3039, 3132]}], "container": true, "attrs": {"id": "chipping_randomness"}}, {"type": "dt", "indent": 0, "text": ["Corner Ratio"], "extent": [3132, 3146], "body": [{"type": "para", "indent": 4, "text": ["The ratio of corner points to use to generate chipping cutting planes."], "extent": [3176, 3252]}], "container": true, "attrs": {"id": "chipping_cornerratio"}}, {"type": "dt", "indent": 0, "text": ["Corner Depth"], "extent": [3252, 3266], "body": [{"type": "para", "indent": 4, "text": ["A normalized distance from corner to the center of the piece where the chipping plane will be instantiated."], "extent": [3296, 3409]}], "container": true, "attrs": {"id": "chipping_cornerdepth"}}, {"type": "dt", "indent": 0, "text": ["Directional Noise"], "extent": [3409, 3428], "body": [{"type": "para", "indent": 4, "text": ["Amount of noise to add to the corner normal to align the cutting plane to."], "extent": [3463, 3544]}], "container": true, "attrs": {"id": "chipping_directionalnoise"}}, {"type": "dt", "indent": 0, "text": ["Crease Weights"], "extent": [3544, 3560], "body": [{"type": "para", "indent": 4, "text": ["Creases control the strength of pull of the polygon faces on the subdivision surfaces, much like a magnet drawing the surface towards the reference polygon. \n    When this is turned on, a ", {"type": "code", "text": ["creaseweights"]}, " attribute will be created and the specified value will be applied to the vertices at the interface between the outside and inside faces. \n    See the ", {"scheme": "Node", "value": "/nodes/sop/subdivide", "type": "link", "text": ["Subdivide SOP"], "fullpath": "/nodes/sop/subdivide"}, " for more details."], "extent": [3590, 4002]}], "container": true, "attrs": {"id": "detail_creaseweights"}}, {"type": "dt", "indent": 0, "text": ["Weight"], "extent": [4002, 4010], "body": [{"type": "para", "indent": 4, "text": ["Specify the ", {"type": "code", "text": ["creaseweights"]}, " value. "], "extent": [4033, 4078]}], "container": true, "attrs": {"id": "detail_weight"}}, {"type": "dt", "indent": 0, "text": ["Search Radius"], "extent": [4078, 4093], "body": [{"type": "para", "indent": 4, "text": ["When re-wiring incoming constraints, specify the search radius within which to look for matching connections. "], "extent": [4127, 4243]}], "container": true, "attrs": {"id": "constraints_searchradius"}}, {"type": "dt", "indent": 0, "text": ["Use Tags"], "extent": [4243, 4253], "body": [{"type": "para", "indent": 4, "text": ["Creates a ", {"type": "code", "text": ["constraint_tag"]}, " string attribute on the constraint primitives instead of using groups. This allows for more flexibility and matches the Vellum constraints."], "extent": [4282, 4454]}], "container": true, "attrs": {"id": "constraints_usetags"}}, {"type": "dt", "indent": 0, "text": ["Apply Constraint Properties"], "extent": [4454, 4483], "body": [{"type": "para", "indent": 4, "text": ["Applies constraint properties to the output constraint geometry.\n    The ", {"scheme": "Node", "value": "/nodes/sop/rbdconstraintproperties", "type": "link", "text": ["RBD Constraint Properties SOP"], "fullpath": "/nodes/sop/rbdconstraintproperties"}, " can be used for advanced constraint setups."], "extent": [4520, 4707]}], "container": true, "attrs": {"id": "constraints_applyproperties"}}, {"type": "dt", "indent": 0, "text": ["Glue Constraint Name"], "extent": [4707, 4729], "body": [{"type": "include_group", "body": [{"ext": "/nodes/sop/rbdconstraintproperties#glue_constraintname/", "type": "include", "indent": 4, "role": "item", "extent": [4759, 4830]}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "constraints_gluename"}}, {"type": "dt", "indent": 0, "text": ["Enable Color"], "extent": [4830, 4844], "body": [{"type": "para", "indent": 4, "text": ["Adds a color to the various constraints being created for quick identification."], "extent": [4877, 4962]}], "container": true, "attrs": {"id": "constraints_enablecolor"}}, {"type": "dt", "indent": 0, "text": ["Color"], "extent": [4962, 4969], "body": [{"type": "para", "indent": 4, "text": ["Specifies the color for the constraints."], "extent": [5004, 5050]}], "container": true, "attrs": {"id": "constraints_concretecolor"}}, {"type": "dt", "indent": 0, "text": ["Chipping Strength"], "extent": [5050, 5069], "body": [{"type": "para", "indent": 4, "text": ["The strength of glue bonds for corner chips."], "extent": [5107, 5156]}], "container": true, "attrs": {"id": "constraints_chippingstrength"}}], "container": true}], "included": ["/nodes/dop/bulletsoftconrel", "/nodes/dop/glueconrel", "/nodes/dop/standard_bulletconstraint_parm", "/nodes/dop/standard_data_idparms", "/nodes/dop/standard_data_inputs", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_data_parms", "/nodes/dop/standard_dataactive_parms", "/nodes/dop/standard_datagroup_parms", "/nodes/dop/standard_dataname_parms", "/nodes/dop/standard_dataop_parms", "/nodes/dop/standard_datashare_parms", "/nodes/dop/standard_locals", "/nodes/sop/rbdconstraintproperties"]}