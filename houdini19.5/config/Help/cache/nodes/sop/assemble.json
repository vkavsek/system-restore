{"type": "root", "attrs": {"type": "node", "context": "sop", "icon": "SOP/assemble", "internal": "assemble", "tags": "breaking", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Assemble"], "extent": [0, 13]}, {"type": "summary", "indent": 0, "text": ["Cleans up a series of break operations and creates the resulting pieces."], "extent": [97, 177]}, {"type": "para", "indent": 0, "text": ["This operator is used to finish the process of breaking a piece of geometry. It uses the groups and connected pieces created by the ", {"scheme": "Node", "value": "/nodes/sop/break", "type": "link", "text": ["Break"], "fullpath": "/nodes/sop/break"}, " operator to output a set of disconnected pieces."], "extent": [177, 382]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [382, 388], "body": [{"type": "para", "indent": 4, "text": ["If your broken object is made into a dynamic object, you do not need to append an assemble because one will be added automatically."], "extent": [388, 529]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["The assemble node cleans up the geometry. The following screen captures show what the geometry looks like before using the assemble tool, and after."], "extent": [529, 679]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/shelf/assemble_before.jpg", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/shelf/assemble_after.jpg", "type": "img", "text": ""}], "extent": [679, 764]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [764, 776], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [776, 784], "body": [{"type": "para", "indent": 4, "text": ["The group that will be finalized.  Ideally this should encompass \n    all geometry that has been affected by a ", {"scheme": "Node", "value": "/nodes/sop/break", "type": "link", "text": ["Break"], "fullpath": "/nodes/sop/break"}, " operator."], "extent": [800, 948]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Inside Group"], "extent": [948, 962], "body": [{"type": "para", "indent": 4, "text": ["The group name corresponding to the inside faces created by the \n    preceding break operators.  This name should remain consistent \n    for all breaks affecting the same geometry."], "extent": [985, 1171]}], "container": true, "attrs": {"id": "inside_group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Prefix"], "extent": [1171, 1186], "body": [{"type": "para", "indent": 4, "text": ["The prefix applied to the name attribute and names of the groups\n    created by the operator. "], "extent": [1210, 1314]}, {"type": "para", "indent": 4, "text": ["For example, an object broken into 3 parts and given an Output \n    Prefix of ", {"type": "code", "text": ["piece"]}, " will have three groups named ", {"type": "code", "text": ["piece0"]}, ", ", {"type": "code", "text": ["piece1"]}, " \n    and ", {"type": "code", "text": ["piece2"]}, "."], "extent": [1314, 1472]}], "container": true, "attrs": {"id": "outside_group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Piece Attribute"], "extent": [1472, 1489], "body": [{"type": "para", "indent": 4, "text": ["An integer primitive attribute with the piece number will be created\n    storing which piece the primitive belongs to."], "extent": [1489, 1613]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Groups"], "extent": [1613, 1628], "body": [{"type": "para", "indent": 4, "text": ["Create a new group for each piece."], "extent": [1628, 1668]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Name Attribute"], "extent": [1668, 1691], "body": [{"type": "para", "indent": 4, "text": ["Create a primitive attribute called ", {"type": "q", "text": ["name"]}, " identifying primitives\n    belonging to each piece."], "extent": [1691, 1791]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Connect Inside Edges"], "extent": [1791, 1813], "body": [{"type": "para", "indent": 4, "text": ["Whether the inside faces of the broken geometry will be connected \n    to the outside faces.  When enabled, the geometry of each output \n    piece will be fully connected."], "extent": [1831, 2008]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [2008, 2017], "body": [{"type": "para", "indent": 8, "text": ["Disabling this option can help create the illusion that \n        the geometry is not actually broken, since the outside surface \n        of the object remains unchanged."], "extent": [2017, 2196]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "connect"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cusp Edges"], "extent": [2196, 2208], "body": [{"type": "para", "indent": 4, "text": ["Whether the edges of the output geometry will be cusped.  Ideally, \n    enabling this option will cusp the edges between the outside \n    and inside faces of the broken object.  "], "extent": [2225, 2413]}, {"type": "para", "indent": 4, "text": ["However, here the cusp will be applied to all acute angles in \n    the geometry, not just the intersections between the cutting \n    surfaces and the object."], "extent": [2413, 2576]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [2576, 2585], "body": [{"type": "para", "indent": 8, "text": ["This is another option designed to hide the appearance of \n        fracture lines in the broken object.  "], "extent": [2585, 2700]}, {"type": "para", "indent": 8, "text": ["However, ", {"type": "ui", "text": ["Cusp Edges"]}, " should \n        only be used for smooth geometry with no acute angles, or for \n        objects that are going to be cusped anyway."], "extent": [2700, 2864]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "doCusp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Packed Primitives"], "extent": [2864, 2890], "body": [{"type": "para", "indent": 4, "text": ["If the output geometry contains a primitive attribute called ", {"type": "code", "text": ["name"]}, ", a\n    packed primitive will be created for each unique value of the name\n    attribute. Additionally, a point attribute called ", {"type": "code", "text": ["name"]}, " will be\n    created to identify the piece that packed primitive contains.\n    ", {"type": "ui", "text": ["Create Packed Fragments"]}, " controls whether ", {"type": "ui", "text": ["Packed Fragment"]}, " or\n    ", {"type": "ui", "text": ["Packed Geometry"]}, " primitives are created from the pieces."], "extent": [2890, 3308]}, {"type": "para", "indent": 4, "text": ["Otherwise, the output geometry will be packed into a ", {"type": "ui", "text": ["Packed Geometry"]}, "\n    primitive, and the ", {"type": "ui", "text": ["Output Prefix"]}, " will be used to create the ", {"type": "q", "text": ["name"]}, "\n    point attribute."], "extent": [3308, 3482]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Path Attribute"], "extent": [822, 838], "body": [{"type": "para", "indent": 4, "text": ["The path attribute value assigned to the newly created packed primitive. If this field is disabled or left blank, no path attribute will be created."], "extent": [852, 1006]}], "container": true, "attrs": {"id": "path"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Packed Fragments"], "extent": [1470, 1495], "body": [{"type": "para", "indent": 4, "text": ["Specifies Packed Fragment primitives should be created instead of Packed\n    Geometry primitives.  This only works with primitive string attributes."], "extent": [1520, 1674]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [1674, 1683], "body": [{"type": "para", "indent": 8, "text": ["Packed Fragment primitives are more efficient if the final rendered\n        geometry has many unique pieces.  Packed Geometry primitives are more\n        efficient if the final rendered geometry has many copies of the same\n        piece."], "extent": [1683, 1931]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "packedfragments"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transfer Attributes"], "extent": [2045, 2066], "body": [{"type": "para", "indent": 4, "text": ["Specifies a list of attributes to transfer to the packed geometry."], "extent": [2095, 2167]}], "container": true, "attrs": {"id": "transfer_attributes"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transfer Groups"], "extent": [2167, 2184], "body": [{"type": "para", "indent": 4, "text": ["Specifies a list of groups to transfer to the packed geometry."], "extent": [2209, 2277]}], "container": true, "attrs": {"id": "transfer_groups"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pivot Location"], "extent": [3647, 3663], "body": [{"type": "para", "indent": 4, "text": ["Specifies how to initialize the offset for the point referenced by the\n    packed primitive."], "extent": [3663, 3762]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3762, 3771], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/break", "type": "link", "text": "", "fullpath": "/nodes/sop/break"}], "extent": [3771, 3791]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/edgecusp", "type": "link", "text": "", "fullpath": "/nodes/sop/edgecusp"}], "extent": [3791, 3815]}], "container": true}], "text": "Related"}], "title": ["Assemble"], "summary": ["Cleans up a series of break operations and creates the resulting pieces."], "included": ["/model/packed", "/nodes/sop/pack"]}