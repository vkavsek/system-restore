{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "attribadjustcolor", "icon": "SOP/attribadjustcolor", "since": "19.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Attribute Adjust Color"], "extent": [98, 125]}, {"type": "summary", "indent": 0, "text": ["Modifies values for a vector-type color attribute on the incoming geometry."], "extent": [125, 209]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [209, 224], "body": [{"type": "para", "indent": 0, "text": ["The Attribute Adjust Color SOP provides an interface to vary ", {"type": "code", "text": ["vector"]}, " type attribute values that represent RGB color data, reducing the need to create VOP networks or write VEX code. It allows modification by a uniform color or a varying color for each element. The varying colors can be generated fully randomly or sampled from a spatially-coherent noise pattern."], "extent": [224, 591]}, {"type": "para", "indent": 0, "text": ["This node can also post-process the color, for example by blending them with another attribute or limiting them to the specified range. Additionally, it has the functionality to look up color from a disk image."], "extent": [591, 803]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [803, 809], "body": [{"type": "para", "indent": 4, "text": ["Attribute Adjust Color SOP works with 3 float (RGB) color attribute only. To specify alpha for the geometry, use ", {"scheme": "Node", "value": "/nodes/sop/attribadjustfloat", "type": "link", "text": ["Attribute Adjust Float"], "fullpath": "/nodes/sop/attribadjustfloat"}, " with ", {"type": "ui", "text": ["Attribute Name"]}, " set to ", {"type": "code", "text": ["Alpha"]}, "."], "extent": [809, 1019]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["The following graph provides a basic schematic view of the processes behind Attribute Adjust Color."], "extent": [1019, 1120]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/sop/aa_graph.svg", "type": "link", "text": "", "fullpath": "/images/sop/aa_graph.svg"}], "extent": [1120, 1154]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1154, 1166], "body": [{"level": 2, "type": "sep", "indent": 0, "text": [" General "], "extent": [1166, 1181], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [988, 995], "body": [{"type": "para", "indent": 4, "text": ["The subset of the input geometry to apply the modifications to. Leave this blank to affect all elements."], "extent": [1010, 1120]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blend"], "extent": [1338, 1345], "body": [{"type": "para", "indent": 4, "text": ["Blends between the incoming attribute and the output attribute value. A blend of ", {"type": "code", "text": ["0"]}, " means that no adjustment takes place: the incoming attribute value is the output value. Likewise, a value of ", {"type": "code", "text": ["1"]}, " will output the adjusted value, ignoring the initial value. Blending can be done either by uniform value (", {"type": "ui", "text": ["Constant"]}, ") or by value of the ", {"type": "ui", "text": ["Blend Attribute"]}, " (when the menu on the right of this parameter is set to ", {"type": "ui", "text": ["Use Attribute"]}, ")."], "extent": [1366, 1804]}], "container": true, "attrs": {"id": "blendweight"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blend Attribute"], "extent": [1804, 1821], "body": [{"type": "para", "indent": 4, "text": ["A float attribute between the range ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, " to use as blend value. This attribute must be present on the appropriate elements (as set by ", {"type": "ui", "text": ["Attribute Class"]}, "). A blend value of ", {"type": "code", "text": ["0"]}, " means that no adjustment takes place: the incoming attribute value is the output value. Likewise, a value of ", {"type": "code", "text": ["1"]}, " will output the adjusted value, ignoring the initial value."], "extent": [1842, 2203]}], "container": true, "attrs": {"id": "blendattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attribute Name"], "extent": [1320, 1340], "body": [{"type": "para", "indent": 8, "text": ["The name of the attribute to create or modify. If the attribute does not exist with the given name, it will be added to the selected ", {"type": "ui", "text": ["Attribute Class"]}, "."], "extent": [1360, 1523]}], "container": true, "attrs": {"id": "attrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Component Scope RGB"], "extent": [1523, 1548], "body": [{"type": "para", "indent": 8, "text": ["Specifies which color components will be changed by this node in RGB space. This filter applies as the last step, when the adjustment value is combined with the incoming attribute."], "extent": [1580, 1770]}], "container": true, "attrs": {"id": "componentscope_rgb"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Component Scope HSV"], "extent": [1770, 1795], "body": [{"type": "para", "indent": 8, "text": ["Specifies which color components will be changed by this node in HSV space. This filter applies as the last step, when the adjustment value is combined with the incoming attribute."], "extent": [1827, 2025]}], "container": true, "attrs": {"id": "componentscope_hsv"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attribute Class"], "extent": [2025, 2046], "body": [{"type": "para", "indent": 8, "text": ["The element type for the destination attribute (specified by ", {"type": "ui", "text": ["Attribute Name"]}, ").      "], "extent": [2065, 2162]}], "container": true, "attrs": {"id": "class"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkgeneral"}}, {"level": 3, "type": "sep", "indent": 0, "text": [" Pre-Process "], "extent": [2162, 2182], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Enable Pre-Process"], "extent": [2182, 2207], "body": [{"type": "para", "indent": 8, "text": ["Turns on a set of controls to fine tune the incoming attribute value. All pre-process modifications will take place before the adjustment is applied to the attribute. You can also initialize the attribute if it does not exist in the input as part of the pre-process."], "extent": [2238, 2514]}], "container": true, "attrs": {"id": "enable_preprocess"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Delete All Existing Color Attributes"], "extent": [2514, 2556], "body": [{"type": "para", "indent": 8, "text": ["When this checkbox is turned on, all incoming color attributes will be deleted before pre-processing. Use this to remove any conflicting color attributes."], "extent": [2591, 2763]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [2763, 2777], "body": [{"type": "para", "indent": 12, "text": ["Point colors override primitive colors. So even if you're using this node to color primitives, if there are point colors already applied, your changes won\u2019t be applied unless you turn on this checkbox."], "extent": [2777, 3000]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "deleteallcolorattribs"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Overwrite Initial Color"], "extent": [3000, 3029], "body": [{"type": "para", "indent": 8, "text": ["Sets the color for the attribute. Use it to initialize a new attribute or to overwrite any existing attribute value."], "extent": [3054, 3188]}], "container": true, "attrs": {"id": "doinitvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Initial Color From"], "extent": [3188, 3212], "body": [{"type": "para", "indent": 8, "text": ["Controls how the initial color will be generated. ", {"type": "ui", "text": ["Constant"]}, " will be the same for all elements in the geometry,  while ", {"type": "ui", "text": ["Color Attribute"]}, " and ", {"type": "ui", "text": ["Float Attribute"]}, " will copy the given attribute\u2019s values into the destination attribute."], "extent": [3239, 3484]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Constant"], "extent": [3484, 3502], "body": [{"type": "para", "indent": 12, "text": ["Sets the same color for all elements in the geometry."], "extent": [3502, 3581]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Color Attribute"], "extent": [3581, 3606], "body": [{"type": "para", "indent": 12, "text": ["The colors of this attribute will be copied into the destination attribute (specified by ", {"type": "ui", "text": ["Attribute Name"]}, "). Use the ", {"type": "ui", "text": ["RGB Component Scope"]}, " on the right side of this parameter to filter the copied values."], "extent": [3606, 3838]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Float Attribute"], "extent": [3838, 3863], "body": [{"type": "para", "indent": 12, "text": ["The values of this attribute will be copied into the destination attribute (specified by ", {"type": "ui", "text": ["Attribute Name"]}, "). Use the ", {"type": "ui", "text": ["RGB Component Scope"]}, " on the right side of this parameter to filter the copied values."], "extent": [3863, 4097]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "initvaluefrom"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Initial Color"], "extent": [4097, 4116], "body": [{"type": "para", "indent": 8, "text": ["This color will be set for all elements in the geometry, prior to adjustment."], "extent": [4139, 4234]}], "container": true, "attrs": {"id": "initvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Color Attribute"], "extent": [4234, 4255], "body": [{"type": "para", "indent": 8, "text": ["The values of this attribute will be copied into the destination attribute (specified by ", {"type": "ui", "text": ["Attribute Name"]}, "), prior to any adjustment."], "extent": [4282, 4426]}], "container": true, "attrs": {"id": "initvecattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Component Scope"], "extent": [4426, 4447], "body": [{"type": "para", "indent": 8, "text": ["Specifies which color components will be initialized from the color attribute (specified by ", {"type": "ui", "text": ["Color Attribute"]}, ") based on RGB color model."], "extent": [4485, 4633]}], "container": true, "attrs": {"id": "componentscope_initcolor"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Float Attribute"], "extent": [4633, 4654], "body": [{"type": "para", "indent": 8, "text": ["The values of this attribute will be copied into the destination attribute (specified by ", {"type": "ui", "text": ["Attribute Name"]}, ")."], "extent": [4681, 4800]}], "container": true, "attrs": {"id": "initvecattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Component Scope"], "extent": [4800, 4821], "body": [{"type": "para", "indent": 8, "text": ["Specifies which RGB color components will be initialized from the floating point attribute (specified by ", {"type": "ui", "text": ["Float Attribute"]}, ")."], "extent": [4860, 4996]}], "container": true, "attrs": {"id": "componentscope_initfloat"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 2, "type": "sep", "indent": 0, "text": [" Adjustment Value "], "extent": [4996, 5019], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Adjust Value"], "extent": [5019, 5039], "body": [{"type": "para", "indent": 8, "text": ["Generates a value that will be combined with the incoming attribute value. When this option is turned off, only pre-processing, color-correction, and post-processing will be done."], "extent": [5064, 5253]}], "container": true, "attrs": {"id": "adjustvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Operation"], "extent": [5253, 5268], "body": [{"type": "para", "indent": 8, "text": ["Specifies how to combine the generated adjustment color with the incoming attribute value. If the target attribute does not exist on the input geometry, all operations will have the same effect."], "extent": [5291, 5495]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Set Initial"], "extent": [5495, 5516], "body": [{"type": "para", "indent": 12, "text": ["Use this operation if you want to ensure the attribute is created, but don\u2019t want to overwrite any existing value. If the target attribute is already present, its values will be left untouched. This is often used in pipelines were the existence of a color attribute is required."], "extent": [5516, 5820]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Set Always"], "extent": [5820, 5840], "body": [{"type": "para", "indent": 12, "text": ["Use this operation if you want to overwrite any existing value with the generated adjustment value."], "extent": [5840, 5953]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Add"], "extent": [5953, 5966], "body": [{"type": "para", "indent": 12, "text": ["The generated adjustment value will be added to the existing attribute value."], "extent": [5966, 6057]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Subtract"], "extent": [6057, 6075], "body": [{"type": "para", "indent": 12, "text": ["The generated adjustment value will be subtracted from the existing attribute value."], "extent": [6075, 6173]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Multiply"], "extent": [6173, 6191], "body": [{"type": "para", "indent": 12, "text": ["The existing attribute value will be multiplied by the generated adjustment value."], "extent": [6191, 6287]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Overlay"], "extent": [6287, 6304], "body": [{"type": "para", "indent": 12, "text": ["The light values of the generate adjustment will be added, while the dark values will be multiplied with the existing attribute value."], "extent": [6304, 6452]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Screen"], "extent": [6452, 6468], "body": [{"type": "para", "indent": 12, "text": ["Adds the adjustment value into the existing attribute value as if you were projecting the adjustment value through a light."], "extent": [6468, 6605]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Hard Mix"], "extent": [6605, 6623], "body": [{"type": "para", "indent": 12, "text": ["The generated adjustment value will be added to the existing attribute value. If the resulting sum of a component one or greater, it receives the value of 1, otherwise it receives the value of zero. "], "extent": [6623, 6836]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Difference"], "extent": [6836, 6856], "body": [{"type": "para", "indent": 12, "text": ["The existing attribute value will be subtracted from the generated adjustment value."], "extent": [6856, 6954]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Minimum"], "extent": [6954, 6971], "body": [{"type": "para", "indent": 12, "text": ["Output will be minimum of the existing attribute value and the adjustment value."], "extent": [6971, 7077]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Maximum"], "extent": [7077, 7094], "body": [{"type": "para", "indent": 12, "text": ["Output will be maximum of the existing attribute value and the adjustment value."], "extent": [7094, 7188]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "operation"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Pattern Type"], "extent": [7188, 7206], "body": [{"type": "para", "indent": 8, "text": ["Specifies how the adjustment value is generated. ", {"type": "ui", "text": ["Constant Value"]}, " will use the same ", {"type": "ui", "text": ["Value"]}, " for every element. ", {"type": "ui", "text": ["Random"]}, " and ", {"type": "ui", "text": ["Noise"]}, " will generate varying values across each element of the geometry, in which case varying values will be inside a well defined range or selected from a list of specific values. Additionally, you can provide another color attribute to use as the adjustment value for every element. ", {"type": "ui", "text": ["Color Map"]}, " provides a method to place a texture onto the geometry with existing uv attributes. With ", {"type": "ui", "text": ["Line"]}, " and ", {"type": "ui", "text": ["Radial"]}, " you can draw the respective shape in the viewport to vary the color accordingly, while ", {"type": "ui", "text": ["Bounding Box"]}, " will generate colors based on the relative position of each element inside the geometry\u2019s bounding box."], "extent": [7229, 7992]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Constant"], "extent": [7992, 8010], "body": [{"type": "para", "indent": 12, "text": ["The adjustment value will be the same for all elements in the geometry. Use this to do simple math operations for all elements. For example, to overlay a color onto existing attribute value."], "extent": [8010, 8226]}, {"type": "para", "indent": 12, "text": [{"scheme": "Image", "value": "/images/sop/AAcolor_constant.png", "type": "link", "text": "", "fullpath": "/images/sop/AAcolor_constant.png"}], "extent": [8226, 8280]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Random"], "extent": [8280, 8296], "body": [{"type": "para", "indent": 12, "text": ["The adjustment values will be sampled fully randomly. Every point will receive a random color value based on the ", {"type": "ui", "text": ["Range Values"]}, "."], "extent": [8296, 8452]}, {"type": "para", "indent": 12, "text": [{"scheme": "Image", "value": "/images/sop/AAcolor_random.png", "type": "link", "text": "", "fullpath": "/images/sop/AAcolor_random.png"}], "extent": [8452, 8516]}, {"type": "para", "indent": 12, "text": ["You can also choose to ", {"type": "ui", "text": ["Randomize By"]}, " a ", {"type": "ui", "text": ["Custom Attribute"]}, ", which can be useful if you want to do more complicated things like copy shapes to points and give them a random color. For example, if you're creating rocks on a beach and want them all to be slightly varying in color."], "extent": [8516, 8824]}, {"type": "para", "indent": 12, "text": [{"scheme": "Image", "value": "/images/sop/AAcolor_random2.png", "type": "link", "text": "", "fullpath": "/images/sop/AAcolor_random2.png"}], "extent": [8824, 8889]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Noise"], "extent": [8889, 8904], "body": [{"type": "para", "indent": 12, "text": ["The adjustment values will be sampled based on a coherent noise field using the ", {"scheme": "Node", "value": "/nodes/sop/attribnoise", "type": "link", "text": ["Attribute Noise SOP"], "fullpath": "/nodes/sop/attribnoise"}, ". These noise patterns and colors are most commonly controlled using the ", {"type": "ui", "text": ["Color Ramp"]}, " and ", {"type": "ui", "text": ["Noise Pattern"]}, " parameters. However, if you change ", {"type": "ui", "text": ["Range Values"]}, " to ", {"type": "ui", "text": ["Specific Values"]}, ", you can directly choose the colors to include as well as the amounts of each using the ", {"type": "ui", "text": ["Weight"]}, " parameters."], "extent": [8904, 9347]}, {"type": "para", "indent": 12, "text": [{"scheme": "Image", "value": "/images/sop/AAcolor_noise.png", "type": "link", "text": "", "fullpath": "/images/sop/AAcolor_noise.png"}], "extent": [9347, 9410]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 12, "role": "item", "extent": [9410, 9427], "body": [{"type": "para", "indent": 16, "text": ["You can use an ", {"scheme": "Node", "value": "/nodes/sop/attribnoise", "type": "link", "text": ["Attribute Noise SOP"], "fullpath": "/nodes/sop/attribnoise"}, " if you want to create more complicated noise patterns. The parameters available on this node are a simplified version of what\u2019s available on the full node."], "extent": [9427, 9658]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 8, "text": ["Color Attribute"], "extent": [9658, 9683], "body": [{"type": "para", "indent": 12, "text": ["The value of the attribute specified in ", {"type": "ui", "text": ["Adjustment Attribute"]}, " will be used as the adjustment value."], "extent": [9683, 9799]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Remap Attribute"], "extent": [9799, 9824], "body": [{"type": "para", "indent": 12, "text": ["The adjustment values will be sampled based on the attribute specified by ", {"type": "ui", "text": ["Source Attribute"]}, ". For example, you could use a ", {"scheme": "Node", "value": "/nodes/sop/distancealonggeometry", "type": "link", "text": ["Mask Along Geometry SOP"], "fullpath": "/nodes/sop/distancealonggeometry"}, " to create a mask, and then use this option to apply colors to it."], "extent": [9824, 10097]}, {"type": "para", "indent": 12, "text": [{"scheme": "Image", "value": "/images/sop/AAcolor_remapattrib.png", "type": "link", "text": "", "fullpath": "/images/sop/AAcolor_remapattrib.png"}], "extent": [10097, 10154]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Color Map"], "extent": [10154, 10173], "body": [{"type": "para", "indent": 12, "text": ["Uses an image from disk to color the points on your geometry. This is different from adding a texture map as a shader, since you will actually sample the color from the image at each point. This can be useful to drive other effects, such as particle simulations, which can pick up the color from the geometry."], "extent": [10173, 10508]}, {"type": "col_group", "body": [{"ext": null, "type": "col", "indent": 12, "role": "item", "extent": [10508, 10526], "body": [{"type": "para", "indent": 16, "text": [{"scheme": "Image", "value": "/images/sop/AAcolor_colormap.png", "type": "link", "text": "", "fullpath": "/images/sop/AAcolor_colormap.png"}], "extent": [10526, 10583]}], "container": true}, {"ext": null, "type": "col", "indent": 12, "role": "item", "extent": [10583, 10601], "body": [{"type": "para", "indent": 16, "text": [{"scheme": "Image", "value": "/images/sop/AAcolor_colormap2.png", "type": "link", "text": "", "fullpath": "/images/sop/AAcolor_colormap2.png"}], "extent": [10601, 10671]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 12, "text": ["To specify alpha for the geometry, use an ", {"scheme": "Node", "value": "/nodes/sop/attribadjustfloat", "type": "link", "text": ["Attribute Adjust Float SOP"], "fullpath": "/nodes/sop/attribadjustfloat"}, " with ", {"type": "ui", "text": ["Attribute Name"]}, " set to ", {"type": "code", "text": ["Alpha"]}, "."], "extent": [10671, 10834]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 12, "role": "item", "extent": [10834, 10851], "body": [{"type": "para", "indent": 16, "text": ["You can insert a ", {"scheme": "Node", "value": "/nodes/sop/color", "type": "link", "text": ["Color SOP"], "fullpath": "/nodes/sop/color"}, " before this node in the network and set the ", {"type": "ui", "text": ["Operation"]}, " on Attribute Adjust Color to ", {"type": "ui", "text": ["Multiply"]}, ". This won\u2019t override the colors, but simply act as a multiplier to affect the overall hue."], "extent": [10851, 11115]}, {"type": "para", "indent": 16, "text": [{"scheme": "Image", "value": "/images/sop/AAcolor_colormap3.png", "type": "link", "text": "", "fullpath": "/images/sop/AAcolor_colormap3.png"}], "extent": [11115, 11191]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 8, "text": ["Line"], "extent": [11191, 11205], "body": [{"type": "para", "indent": 12, "text": ["Lets you click and drag across your geometry to add a gradient of color along a surface. "], "extent": [11205, 11320]}, {"type": "para", "indent": 12, "text": [{"scheme": "Image", "value": "/images/sop/AAcolor_line.png", "type": "link", "text": "", "fullpath": "/images/sop/AAcolor_line.png"}], "extent": [11320, 11370]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Radial"], "extent": [11370, 11386], "body": [{"type": "para", "indent": 12, "text": ["Lets you click and drag across your geometry to add a gradient of color radially based on the drawn circle. You can also do this with ", {"type": "ui", "text": ["Specific Values"]}, " if you want clearly defined colors with no blending."], "extent": [11386, 11618]}, {"type": "col_group", "body": [{"ext": null, "type": "col", "indent": 12, "role": "item", "extent": [11618, 11636], "body": [{"type": "para", "indent": 16, "text": [{"scheme": "Image", "value": "/images/sop/AAcolor_radial.png", "type": "link", "text": "", "fullpath": "/images/sop/AAcolor_radial.png"}], "extent": [11636, 11691]}], "container": true}, {"ext": null, "type": "col", "indent": 12, "role": "item", "extent": [11691, 11709], "body": [{"type": "para", "indent": 16, "text": [{"scheme": "Image", "value": "/images/sop/AAcolor_radial2.png", "type": "link", "text": "", "fullpath": "/images/sop/AAcolor_radial2.png"}, "                "], "extent": [11709, 11790]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 8, "text": ["Bounding Box"], "extent": [11790, 11812], "body": [{"type": "para", "indent": 12, "text": ["The adjustment values will be based on the relative location of each element within the input\u2019s bounding box. This is useful if you don\u2019t know the size of your geometry, as it places a bounding box around your whole object and applies the color settings within the box. For example, you can create a gradient from the lowest point to the highest point of an irregular shaped object, and even if the object rotates or transforms, it will still keep the same gradient within the bounding box."], "extent": [11812, 12328]}, {"type": "col_group", "body": [{"ext": null, "type": "col", "indent": 12, "role": "item", "extent": [12328, 12346], "body": [{"type": "para", "indent": 16, "text": [{"scheme": "Image", "value": "/images/sop/AAcolor_boundingbox.png", "type": "link", "text": "", "fullpath": "/images/sop/AAcolor_boundingbox.png"}], "extent": [12346, 12406]}], "container": true}, {"ext": null, "type": "col", "indent": 12, "role": "item", "extent": [12406, 12424], "body": [{"type": "para", "indent": 16, "text": [{"scheme": "Image", "value": "/images/sop/AAcolor_boundingbox2.png", "type": "link", "text": "", "fullpath": "/images/sop/AAcolor_boundingbox2.png"}], "extent": [12424, 12499]}], "container": true}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "container": true, "attrs": {"id": "valuetype"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Constant Color"], "extent": [12499, 12519], "body": [{"type": "para", "indent": 8, "text": ["Sets a uniform color to the whole piece of geometry."], "extent": [12544, 12606]}], "container": true, "attrs": {"id": "singlevalue"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Range Values"], "extent": [12606, 12624], "body": [{"type": "para", "indent": 8, "text": ["The adjustment value will be generated in the selected range. This parameter governs how this range is specified. You can also provide a list of specific values or multiple ranges by selecting ", {"type": "ui", "text": ["Specific Values"]}, ", which can be useful to create attribute values representing specific color palettes."], "extent": [12649, 12957]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Min/Max"], "extent": [12957, 12974], "body": [{"type": "para", "indent": 12, "text": ["The adjustment value will be between the given minimum and maximum values either in RGB or HSV space. "], "extent": [12974, 13090]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Color Ramp"], "extent": [13090, 13110], "body": [{"type": "para", "indent": 12, "text": ["The adjustment values will be generated using a ramp parameter look up (specified by ", {"type": "ui", "text": ["Color Ramp"]}, ")."], "extent": [13110, 13225]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Specific Colors"], "extent": [13225, 13250], "body": [{"type": "para", "indent": 12, "text": ["The adjustment values will be one of the listed colors. You can select one of the options in the ", {"type": "ui", "text": ["Color Palettes"]}, " menu to populate the multiparameter with a pre-defined set of colors. This will also avoid the blending of any colors."], "extent": [13250, 13498]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "patterntype"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Color Space"], "extent": [13498, 13515], "body": [{"type": "para", "indent": 8, "text": ["The color space for specifying the range of adjustment values. You can use RGB to constrain the red, green, blue component values or HSV to restrict the adjustment values to a slice of the hue, saturation, value wheel."], "extent": [13545, 13773]}], "container": true, "attrs": {"id": "randomcolormodel"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Relative to Color"], "extent": [13773, 13796], "body": [{"type": "para", "indent": 8, "text": ["When this checkbox is turned on, the given color range will be relative to this color. This is useful if you have a specific color in mind and want small deviations from it."], "extent": [13819, 14002]}], "container": true, "attrs": {"id": "basecolor"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Red Min/Max"], "extent": [14002, 14019], "body": [{"type": "para", "indent": 8, "text": ["The minimum and maximum values of the red component."], "extent": [14038, 14100]}], "container": true, "attrs": {"id": "randr"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Green Min/Max"], "extent": [14100, 14119], "body": [{"type": "para", "indent": 8, "text": ["The minimum and maximum values of the green component."], "extent": [14138, 14202]}], "container": true, "attrs": {"id": "randg"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Blue Min/Max"], "extent": [14202, 14220], "body": [{"type": "para", "indent": 8, "text": ["The minimum and maximum values of the blue component."], "extent": [14239, 14302]}], "container": true, "attrs": {"id": "randb"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Hue Min/Max"], "extent": [14302, 14319], "body": [{"type": "para", "indent": 8, "text": ["The minimum and maximum values of the hue component, which captures the pure color."], "extent": [14340, 14433]}], "container": true, "attrs": {"id": "randhue"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Saturation Min/Max"], "extent": [14433, 14457], "body": [{"type": "para", "indent": 8, "text": ["The minimum and maximum values of the saturation component, which captures the vibrancy of the color."], "extent": [14478, 14589]}], "container": true, "attrs": {"id": "randsat"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Value Min/Max"], "extent": [14589, 14608], "body": [{"type": "para", "indent": 8, "text": ["The minimum and maximum values of the value component, which captures the brightness."], "extent": [14628, 14723]}], "container": true, "attrs": {"id": "ranval"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Color Ramp"], "extent": [14723, 14739], "body": [{"type": "para", "indent": 8, "text": ["The intermediate random value will be fed through this ramp to obtain the adjustment color."], "extent": [14762, 14863]}], "container": true, "attrs": {"id": "colorramp"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Color Palette"], "extent": [14863, 14882], "body": [{"type": "para", "indent": 8, "text": ["This menu contains a set of pre-defined color palettes. Selecting one of these options will populate the list of specific values with four preset colors."], "extent": [14908, 15071]}], "container": true, "attrs": {"id": "colorpalette"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Number of Colors"], "extent": [15071, 15093], "body": [{"type": "para", "indent": 8, "text": ["Controls the number of sets of possible adjustment values. Each set can be a single color or consist of multiple related colors (when the menu to the right of the parameter is not set to ", {"type": "ui", "text": ["Constant"]}, " or ", {"type": "ui", "text": ["Complementary"]}, ")."], "extent": [15114, 15346]}], "container": true, "attrs": {"id": "nvalues"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Color"], "extent": [15346, 15357], "body": [{"type": "para", "indent": 8, "text": ["The base color for this set."], "extent": [15377, 15423]}], "container": true, "attrs": {"id": "color#"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Color Scheme"], "extent": [15423, 15441], "body": [{"type": "para", "indent": 8, "text": ["Controls how the set of colors is derived from the specified base ", {"type": "ui", "text": ["Color"]}, ". "], "extent": [15467, 15554]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Constant"], "extent": [15554, 15572], "body": [{"type": "para", "indent": 12, "text": ["This set will only include the base ", {"type": "ui", "text": ["Color"]}, "."], "extent": [15572, 15632]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Complementary"], "extent": [15632, 15655], "body": [{"type": "para", "indent": 12, "text": ["This set will consist of the base ", {"type": "ui", "text": ["Color"]}, " and its complementary color. Complementary colors are opposite each other on the color wheel."], "extent": [15655, 15806]}], "container": true}, {"type": "dt", "indent": 8, "text": ["2 Analogous"], "extent": [15806, 15827], "body": [{"type": "para", "indent": 12, "text": ["This set will consist of 3 colors: the base ", {"type": "ui", "text": ["Color"]}, " and its two neighbors around the color wheel. ", {"type": "ui", "text": ["Angle"]}, " controls the distance to the neighbors."], "extent": [15827, 15990]}], "container": true}, {"type": "dt", "indent": 8, "text": ["4 Analogous"], "extent": [15990, 16011], "body": [{"type": "para", "indent": 12, "text": ["This set will consist of 5 colors: the base ", {"type": "ui", "text": ["Color"]}, " and its 4 neighbors around the color wheel. ", {"type": "ui", "text": ["Angle"]}, " controls the distance to the neighbor."], "extent": [16011, 16171]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Triadic"], "extent": [16171, 16188], "body": [{"type": "para", "indent": 12, "text": ["Same as ", {"type": "ui", "text": ["2 Analogous"]}, "."], "extent": [16188, 16226]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Tetradic"], "extent": [16226, 16244], "body": [{"type": "para", "indent": 12, "text": ["This set will consist of 4 colors that include the base ", {"type": "ui", "text": ["Color"]}, " and its complement, as well as a neighbor for each. ", {"type": "ui", "text": ["Angle"]}, " controls the distance to the neighbors."], "extent": [16244, 16425]}], "container": true}, {"type": "dt", "indent": 8, "text": ["5 Shades"], "extent": [16425, 16443], "body": [{"type": "para", "indent": 12, "text": ["This set will contain 5 colors with varying levels of brightness. Use the ", {"type": "ui", "text": ["Distance"]}, " parameter to change their spacing."], "extent": [16443, 16578]}], "container": true}, {"type": "dt", "indent": 8, "text": ["5 Tints"], "extent": [16578, 16595], "body": [{"type": "para", "indent": 12, "text": ["This set will contain 5 colors with varying levels of saturation. Use the ", {"type": "ui", "text": ["Distance"]}, " parameter to change the default spacing."], "extent": [16595, 16736]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "colorscheme#"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Weight"], "extent": [16736, 16748], "body": [{"type": "para", "indent": 8, "text": ["Samples the given adjustment value with the specified weight. Values with lower ", {"type": "ui", "text": ["Weight"]}, " will be selected less frequently. When all weights are the same, each adjustment value has the same probability."], "extent": [16769, 16982]}], "container": true, "attrs": {"id": "weight#"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Adjustment Attribute"], "extent": [16982, 17008], "body": [{"type": "para", "indent": 8, "text": ["Specifies the attribute storing the adjustment value to use."], "extent": [17038, 17108]}], "container": true, "attrs": {"id": "adjustmentattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Gain"], "extent": [17108, 17119], "body": [{"type": "para", "indent": 8, "text": ["This is applied as a scaling factor on top of the ", {"type": "ui", "text": ["Adjustment Attribute"]}, " value."], "extent": [17153, 17244]}], "container": true, "attrs": {"id": "adjustmentattribgain"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Brightness"], "extent": [17244, 17261], "body": [{"type": "para", "indent": 8, "text": ["This value is added to the ", {"type": "ui", "text": ["Adjustment Attribute"]}, " value (after ", {"type": "ui", "text": ["Gain"]}, " is applied) to obtain the final adjustment value."], "extent": [17301, 17434]}], "container": true, "attrs": {"id": "adjustmentattribbrightness"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Color Map"], "extent": [17434, 17449], "body": [{"type": "para", "indent": 8, "text": ["Image file used for lookup. The image file can be done either by a single image file (", {"type": "ui", "text": ["Image Path"]}, ") or by providing a string attribute storing the image file path for each element."], "extent": [17467, 17659]}], "container": true, "attrs": {"id": "cmap"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Component Scope"], "extent": [17659, 17680], "body": [{"type": "para", "indent": 8, "text": ["Specifies which color components will be used from the selected image file."], "extent": [17713, 17798]}], "container": true, "attrs": {"id": "componentscope_cmap"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Path Attribute"], "extent": [17798, 17818], "body": [{"type": "para", "indent": 8, "text": ["A string attribute storing the path to an image file. Each element in the geometry will perform a lookup in its respective image to obtain the adjustment value."], "extent": [17842, 18012]}], "container": true, "attrs": {"id": "cmapattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Channel"], "extent": [18012, 18025], "body": [{"type": "para", "indent": 8, "text": ["Specifies the color channel for textures that have multiple color planes (for example, ", {"type": "code", "text": ["diffuse_indirect"]}, " or ", {"type": "code", "text": ["N"]}, "). For ptex images, this specifies the index of the first channel (for example, ", {"type": "code", "text": ["0"]}, " or ", {"type": "code", "text": ["4"]}, ")."], "extent": [18050, 18264]}], "container": true, "attrs": {"id": "cmapchannel"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Border Color"], "extent": [18264, 18282], "body": [{"type": "para", "indent": 8, "text": ["Border color when ", {"type": "ui", "text": ["Decal"]}, " wrapping is used. This becomes the adjustment value if the image is looked up outside the ", {"type": "code", "text": ["0-1"]}, " UV range."], "extent": [18306, 18449]}], "container": true, "attrs": {"id": "cmapborder"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Source Color Space"], "extent": [18449, 18474], "body": [{"type": "para", "indent": 8, "text": ["The image\u2019s colorspace."], "extent": [18501, 18534]}], "container": true, "attrs": {"id": "srccolorspace"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Wrap"], "extent": [650, 660], "body": [{"type": "para", "indent": 8, "text": ["Determines how the image is evaluated when the texture\n        coordinates are outside the range 0 to 1. The options are:"], "extent": [678, 809]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Repeat"], "extent": [809, 825], "body": [{"type": "para", "indent": 12, "text": ["(string value ", {"type": "code", "text": ["repeat"]}, "). The image map repeats outside the\n            range 0 to 1. Basically, the integer component\n            of the texture coordinate is ignored."], "extent": [825, 1005]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Streak"], "extent": [1005, 1021], "body": [{"type": "para", "indent": 12, "text": ["(string value ", {"type": "code", "text": ["streak"]}, "). Texture coordinates are clamped to\n            the 0 to 1 range."], "extent": [1021, 1123]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Decal"], "extent": [1123, 1138], "body": [{"type": "para", "indent": 12, "text": ["(string value ", {"type": "code", "text": ["decal"]}, "). Coordinates outside the range 0 to 1\n            will evaluate to the border color rather than an image\n            color."], "extent": [1138, 1297]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "wrap"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 2, "type": "sep", "indent": 0, "text": [" Random "], "extent": [18574, 18587], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Randomization By"], "extent": [18608, 18630], "body": [{"type": "para", "indent": 8, "text": ["Specifies how the pseudo-random number generator is seeded for each element to produce the adjustment value. ", {"type": "ui", "text": ["Element Number"]}, " will use the point, primitive, or vertex number depending on ", {"type": "ui", "text": ["Attribute Class"]}, ". Topology changes on the input geometry can shift element numbers, causing different adjustment values to be used. ", {"type": "ui", "text": ["Custom Attribute"]}, " lets you provide an integer attribute to make sure the random value is not dependent on element order."], "extent": [18663, 19120]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 8, "role": "item", "extent": [19120, 19133], "body": [{"type": "para", "indent": 12, "text": ["In case of a particle simulation, use ", {"type": "code", "text": ["id"]}, " attribute to apply the same random value to the particles throughout their lifetime. You can also use ", {"type": "ui", "text": ["Custom Attribute"]}, " to apply the same random value to multiple elements."], "extent": [19133, 19370]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "randmethod"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Custom Attribute"], "extent": [19370, 19392], "body": [{"type": "para", "indent": 8, "text": ["The attribute to use for seeding random number generation."], "extent": [19416, 19492]}], "container": true, "attrs": {"id": "randattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Seed"], "extent": [19492, 19502], "body": [{"type": "para", "indent": 8, "text": ["All generated values depend randomly on this value. Choose a different value if the current seed produces undesirable samples. "], "extent": [19531, 19668]}], "container": true, "attrs": {"id": "randomseed    "}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkrandom"}}, {"level": 2, "type": "sep", "indent": 0, "text": [" Noise Pattern "], "extent": [19668, 19688], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Noise type"], "extent": [3092, 3104], "body": [{"type": "para", "indent": 4, "text": ["The type of noise to generate. Different algorithms give noise with different characteristics."], "extent": [3119, 3223]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Fast"], "extent": [3223, 3233], "body": [{"type": "para", "indent": 8, "text": ["The default. A faster and more interesting variant of Perlin noise."], "extent": [3233, 3314]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_simplex.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_simplex.jpg"}], "extent": [3314, 3368]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sparse Convolution"], "extent": [3368, 3392], "body": [{"type": "para", "indent": 8, "text": ["Sparse Convolution noise is similar to Worley noise. Does not have artifacts at grid points."], "extent": [3392, 3498]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_sparse.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_sparse.jpg"}], "extent": [3498, 3551]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Alligator"], "extent": [3551, 3566], "body": [{"type": "para", "indent": 8, "text": ["Produces a bumpy output. Named for its alleged resemblance to alligator skin."], "extent": [3566, 3657]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_alligator.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_alligator.jpg"}], "extent": [3657, 3717]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin"], "extent": [3717, 3729], "body": [{"type": "para", "indent": 8, "text": ["A noise where the visual details are the same size. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Perlin_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [3729, 3830]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_perlin.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_perlin.jpg"}, "\n        ", {"scheme": "Image", "value": "/images/nodes/vop/unoise_periodic_perlin.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_periodic_perlin.jpg"}], "extent": [3830, 3944]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin Flow"], "extent": [3944, 3961], "body": [{"type": "para", "indent": 8, "text": ["A noise that\u2019s stable over time, like a rotated Perlin noise, useful to create noise that seems to swirl and flow smoothly across time. Use the ", {"type": "ui", "text": ["Flow rotation"]}, " parameter below to control the rotation."], "extent": [3961, 4177]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4177, 4201], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_flow.mp4"}}, {"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4248, 4264], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_periodic_flow.mp4"}}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Simplex"], "extent": [4324, 4337], "body": [{"type": "para", "indent": 8, "text": ["A noise similar to Perlin but the noise lattice is on a tetrahedral mesh rather than a grid.  This can avoid the grid patterns often visible in Perlin noise."], "extent": [4337, 4504]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F1"], "extent": [4504, 4528], "body": [{"type": "para", "indent": 8, "text": ["Produces cellular features similar to plant cells, ocean waves, honeycombs, cratered landscapes, and so on. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Worley_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [4528, 4685]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f1.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_worley_f1.jpg"}], "extent": [4685, 4745]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F2-F1"], "extent": [4745, 4772], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley noise that produces blunted and cornered features."], "extent": [4772, 4856]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f2.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_worley_f2.jpg"}], "extent": [4856, 4916]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F1"], "extent": [4916, 4943], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [4943, 5071]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F2-F1"], "extent": [5071, 5101], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [5101, 5232]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F1"], "extent": [5232, 5259], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5259, 5387]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F2-F1"], "extent": [5387, 5417], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5417, 5544]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "basis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Location Attribute"], "extent": [10831, 10851], "body": [{"type": "para", "indent": 4, "text": ["The node generates values for each element by sampling a noise field at the location specified by this vector attribute on the incoming geometry. If this is ", {"type": "code", "text": ["P"]}, " (point position, the default), the points of the geometry will appear to swim through the noise. If you want the noise to ", {"type": "q", "text": ["stick"]}, " to the points, you can copy the initial point positions into a ", {"type": "code", "text": ["rest"]}, " attribute and use that attribute here instead."], "extent": [10876, 11289]}], "container": true, "attrs": {"id": "locationattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Size"], "extent": [11289, 11303], "body": [{"type": "para", "indent": 4, "text": ["Uniform scale of elements in the noise."], "extent": [11325, 11370]}, {"type": "para", "indent": 4, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms"}, " Per Component button for separate scales along each axis."], "extent": [11370, 11484]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [11484, 11496], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_frequency.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "elementsize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Element Scale"], "extent": [11545, 11560], "body": [{"type": "para", "indent": 4, "text": ["When you turn on the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms"}, " Per Component button, this lets you scale the ", {"type": "ui", "text": ["Element Size"]}, " separately across each axis."], "extent": [11587, 11746]}], "container": true, "attrs": {"id": "elementscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [11746, 11754], "body": [{"type": "para", "indent": 4, "text": ["Offset within the evaluated noise field (added to each axis). If you have the general noise effect you want, but want to get a different set of values for a different look, try changing the offset."], "extent": [11771, 11974]}, {"type": "para", "indent": 4, "text": ["You can animate the noise using an expression such as ", {"type": "code", "text": ["$T * 0.25"]}, " here. This is faster to compute than ", {"type": "ui", "text": ["Animate Noise"]}, ", but gives the visual effect of ", {"type": "q", "text": ["panning"]}, " across the noise field, which may or may not be acceptable."], "extent": [11974, 12202]}, {"type": "para", "indent": 4, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms"}, " Per Component button for separate additional offsets along each axis."], "extent": [12202, 12332]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [12332, 12344], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_offset.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "offset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [12392, 12400], "body": [{"type": "para", "indent": 4, "text": ["When you turn on the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms"}, " Per Component button, this lets you add the a separate offset along each axis."], "extent": [12422, 12568]}], "container": true, "attrs": {"id": "offsetv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use VEXpression"], "extent": [12568, 12585], "body": [{"type": "para", "indent": 4, "text": ["Turn this checkbox on to use a VEXpression to override parameters based on arbitrary attribute values."], "extent": [12614, 12722]}], "container": true, "attrs": {"id": "usenoiseexpression"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Animation "], "extent": [13464, 13482], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Animate Noise"], "extent": [13511, 13530], "body": [{"type": "para", "indent": 8, "text": ["Vary the generated noise with time. Some noise types do not support this feature."], "extent": [13553, 13648]}, {"type": "para", "indent": 8, "text": ["Applying animation this way on geometries with millions of element count is slower to compute than using expressions such as ", {"type": "code", "text": ["$T * 0.25"]}, " in the ", {"type": "ui", "text": ["Offset"]}, " parameter to ", {"type": "q", "text": ["pan"]}, " across the noise field. "], "extent": [13648, 13864]}], "container": true, "attrs": {"id": "animated"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Pulse Duration"], "extent": [13864, 13884], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Animated Noise"]}, " is on, this controls the rate of change of the noise pattern."], "extent": [13912, 14008]}], "container": true, "attrs": {"id": "pulseduration"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkanimation"}}, {"level": 3, "type": "sep", "indent": 0, "text": [" Fractal "], "extent": [14008, 14024], "body": [{"type": "para", "indent": 4, "text": ["The fractal controls let you add additional fractal noise on top of the output of the basic noise type."], "extent": [14054, 14167]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fractal Type"], "extent": [6741, 6755], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [6777, 6787], "body": [{"type": "para", "indent": 8, "text": ["Does not add any additional noise on top of the basic noise."], "extent": [6787, 6865]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_none.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_fractal_none.jpg"}], "extent": [6865, 6928]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Standard"], "extent": [6928, 6942], "body": [{"type": "para", "indent": 8, "text": ["Adds pseudo-random noise on top of the basic output."], "extent": [6942, 7012]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_standard.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_fractal_standard.jpg"}], "extent": [7012, 7079]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Terrain"], "extent": [7079, 7092], "body": [{"type": "para", "indent": 8, "text": ["Adds noise like ", {"type": "q", "text": ["Standard"]}, " but dampens the noise in the valleys, which can be useful for generating mountainous terrain."], "extent": [7092, 7230]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_terrain.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_fractal_terrain.jpg"}], "extent": [7230, 7296]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hybrid"], "extent": [7296, 7308], "body": [{"type": "para", "indent": 8, "text": ["Like terrain, but with more sharpness in the valleys."], "extent": [7308, 7371]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fractal"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "para", "indent": 4, "text": ["The following parameters are available when Fractal type is anything except ", {"type": "ui", "text": ["None"]}, ".        "], "extent": [14218, 14325]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Max octaves"], "extent": [7448, 7461], "body": [{"type": "para", "indent": 4, "text": ["The number of iterations of distortion to add to the output of the basic noise. The more iterations you add, the more ", {"type": "q", "text": ["detailed"]}, " the output. Note that the output may have fewer octaves than this parameter (that is, increasing the parameter will eventually stop adding detail), because the node eventually stops when there\u2019s no more room to add more detail in the output."], "extent": [7479, 7855]}], "container": true, "attrs": {"id": "oct"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lacunarity"], "extent": [7855, 7867], "body": [{"type": "para", "indent": 4, "text": ["The frequency increment between iterations of fractal noise added to the basic output. Note that you can use a negative value."], "extent": [7885, 8021]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8021, 8037], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lacunarity.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "lac"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Roughness"], "extent": [8086, 8097], "body": [{"type": "para", "indent": 4, "text": ["The scale increment between iterations of fractal noise added to the basic output. The higher the value the larger the ", {"type": "q", "text": ["jaggies"]}, " added to the output. You can use a negative value for roughness."], "extent": [8117, 8320]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8320, 8336], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_roughness.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "rough"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkfractal"}}, {"level": 3, "type": "sep", "indent": 0, "text": [" Warping "], "extent": [14465, 14481], "body": [{"type": "para", "indent": 4, "text": [{"type": "ui", "text": ["Lattice Warp"]}, " and ", {"type": "ui", "text": ["Gradient Warp"]}, " are two methods for adding ", {"type": "q", "text": ["fractal-ness"]}, " to the basic noises by warping the noise space."], "extent": [14503, 14641]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Lattice Warp"], "extent": [14641, 14659], "body": [{"type": "para", "indent": 8, "text": ["Adds ", {"type": "q", "text": ["stringiness"]}, " or ", {"type": "q", "text": ["wiriness"]}, " to standard noise."], "extent": [14682, 14747]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [14747, 14763], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lattice_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "disp"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Lattice Warp Size"], "extent": [14822, 14845], "body": [{"type": "para", "indent": 8, "text": ["Controls base feature size of the generated noise. The value applies to each axis."], "extent": [14873, 14973]}], "container": true, "attrs": {"id": "dispesize"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Gradient Warp"], "extent": [14973, 14992], "body": [{"type": "para", "indent": 8, "text": ["Widens the peaks or valleys of the noise output."], "extent": [15016, 15078]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [15078, 15094], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_gradient_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "gflow"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Accumulate Lattice Warp"], "extent": [15154, 15183], "body": [{"type": "para", "indent": 8, "text": ["Accumulates the warp for each iteration (octave) of added fractal noise. This can add interesting smudgy effects when used in images, and interesting landmarks when used for terrain."], "extent": [15208, 15404]}], "container": true, "attrs": {"id": "accuml"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Accumulate Gradient Warp"], "extent": [15404, 15434], "body": [{"type": "para", "indent": 8, "text": ["Accumulates the warp for each iteration (octave) of added fractal noise."], "extent": [15459, 15545]}], "container": true, "attrs": {"id": "accumg"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flow Rotation"], "extent": [9395, 9410], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Noise type"]}, " is ", {"type": "q", "text": ["Flow"]}, ", this controls the rotation of the ", {"type": "q", "text": ["swirl"]}, ", from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ". Because this parameter is fractional, you can\u2019t just use ", {"type": "code", "text": ["$F"]}, " to animate it, since all integral values will look the same, representing a complete revolution. Instead, try something like ", {"type": "code", "text": ["$FF / 100"]}, "."], "extent": [9432, 9729]}], "container": true, "attrs": {"id": "flowrot"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkwarping"}}], "container": true, "attrs": {"id": "linknoise"}}, {"level": 2, "type": "sep", "indent": 0, "text": [" Bounding Box "], "extent": [20108, 20127], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Direction"], "extent": [20127, 20143], "body": [{"type": "para", "indent": 8, "text": ["Colors will vary based on the location of each element along this axis within the bounding box."], "extent": [20165, 20270]}], "container": true, "attrs": {"id": "bounddir"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Compute Range"], "extent": [20270, 20289], "body": [{"type": "para", "indent": 8, "text": ["Click to fill in the ", {"type": "ui", "text": ["Bound Min"]}, " and ", {"type": "ui", "text": ["Bound Max"]}, " parameters with the current minimum and maximum size of the incoming geometry."], "extent": [20321, 20462]}], "container": true, "attrs": {"id": "bound_computerange"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Bound Min"], "extent": [20462, 20477], "body": [{"type": "para", "indent": 8, "text": ["The minimum value of the bound along the given axis. When this checkbox is turned off, the bounding box minimum of the input is used (along the selected ", {"type": "ui", "text": ["Direction"]}, ")."], "extent": [20499, 20677]}], "container": true, "attrs": {"id": "boundmin"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Bound Max"], "extent": [20677, 20692], "body": [{"type": "para", "indent": 8, "text": ["The maximum value of the bound along the given axis. When this checkbox is turned off, the bounding box maximum of the input is used (along the selected ", {"type": "ui", "text": ["Direction"]}, ")."], "extent": [20714, 20892]}], "container": true, "attrs": {"id": "boundmax"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 2, "type": "sep", "indent": 0, "text": [" Attribute "], "extent": [20892, 20908], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Source Attribute"], "extent": [20908, 20931], "body": [{"type": "para", "indent": 8, "text": ["A float or vector attribute to sample. "], "extent": [20956, 21005]}], "container": true, "attrs": {"id": "remapattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Source Range"], "extent": [21005, 21023], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "ui", "text": ["Source Attribute"]}, " value is first fitted from this range to the ", {"type": "code", "text": ["0-1"]}, " interval; the intermediate value is then fed through the ", {"type": "ui", "text": ["Color Ramp"]}, " to obtain the adjustment value."], "extent": [21054, 21243]}], "container": true, "attrs": {"id": "remapattrib_range"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Compute Range"], "extent": [21243, 21262], "body": [{"type": "para", "indent": 8, "text": ["Click to fill in the ", {"type": "ui", "text": ["Source Range"]}, " parameter with the current minimum and maximum values of the attribute."], "extent": [21300, 21419]}], "container": true, "attrs": {"id": "remapattrib_computerange"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 2, "type": "sep", "indent": 0, "text": [" Map Placement "], "extent": [21419, 21439], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["UV Attribute"], "extent": [21439, 21458], "body": [{"type": "para", "indent": 8, "text": ["The name of the texture coordinate attribute that will be used for lookup in the color map."], "extent": [21480, 21581]}], "container": true, "attrs": {"id": "uvattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Translate"], "extent": [21581, 21596], "body": [{"type": "para", "indent": 8, "text": ["Translation applied to the UV coordinates."], "extent": [21611, 21663]}], "container": true, "attrs": {"id": "t"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Rotate"], "extent": [21663, 21675], "body": [{"type": "para", "indent": 8, "text": ["Amount to rotate the UV coordinate plane."], "extent": [21690, 21741]}], "container": true, "attrs": {"id": "r"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Scale"], "extent": [21741, 21752], "body": [{"type": "para", "indent": 8, "text": ["Uniform scaling of the UV coordinates."], "extent": [21771, 21819]}, {"type": "para", "indent": 8, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/decompose_transforms", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/decompose_transforms"}, " button to access per axis control."], "extent": [21819, 21914]}], "container": true, "attrs": {"id": "scale"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Scale"], "extent": [21914, 21925], "body": [{"type": "para", "indent": 8, "text": ["Scale along each UV axis is equal to the product of uniform ", {"type": "ui", "text": ["Scale"]}, " with the applicable component of this parameter."], "extent": [21940, 22068]}], "container": true, "attrs": {"id": "s"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Pivot"], "extent": [22068, 22079], "body": [{"type": "para", "indent": 8, "text": ["Local pivot point for transformations."], "extent": [22094, 22142]}], "container": true, "attrs": {"id": "p"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 2, "type": "sep", "indent": 0, "text": [" Color Correction "], "extent": [22142, 22165], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Enable Color Correction"], "extent": [22165, 22195], "body": [{"type": "para", "indent": 8, "text": ["Turns on a set of controls to further fine tune the output attribute value. All color correction modifications will take place after adjustment is applied to the attribute."], "extent": [22218, 22400]}], "container": true, "attrs": {"id": "enable_cc"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Hue Shift"], "extent": [22400, 22415], "body": [{"type": "para", "indent": 8, "text": ["This value is the angle along the color wheel to shift the input color. To vary the value per element, change the menu on the right side of this parameter from ", {"type": "ui", "text": ["Set Uniform"]}, " to ", {"type": "ui", "text": ["Use Attribute"]}, "."], "extent": [22437, 22644]}, {"type": "para", "indent": 8, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/randomize", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/randomize"}, " randomization button on the right side of this parameter to randomize the value per incoming element. This will create/select a corresponding attribute adjust node to give you greater control over the parameter\u2019s value."], "extent": [22644, 22913]}], "container": true, "attrs": {"id": "hueshift"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Hue Attribute"], "extent": [22913, 22932], "body": [{"type": "para", "indent": 8, "text": ["The name of the attribute storing the varying ", {"type": "ui", "text": ["Hue Shift"]}, " amount (in degrees)."], "extent": [22960, 23050]}], "container": true, "attrs": {"id": "hueshiftattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Saturation"], "extent": [23050, 23066], "body": [{"type": "para", "indent": 8, "text": ["This value scales the saturation of each element. Higher saturation gives rise to more vibrant colors. To vary the value per element, change the menu on the right side of this parameter from ", {"type": "ui", "text": ["Set Uniform"]}, " to ", {"type": "ui", "text": ["Use Attribute"]}, "."], "extent": [23083, 23321]}, {"type": "para", "indent": 8, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/randomize", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/randomize"}, " randomization button on the right side of this parameter to randomize the value per incoming element. This will create/select a corresponding attribute adjust node to give you greater control over the parameter\u2019s value."], "extent": [23321, 23590]}], "container": true, "attrs": {"id": "sat"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Saturation Attribute"], "extent": [23590, 23616], "body": [{"type": "para", "indent": 8, "text": ["The name of the attribute storing the varying ", {"type": "ui", "text": ["Saturation"]}, " multipliers."], "extent": [23639, 23722]}], "container": true, "attrs": {"id": "satattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Value"], "extent": [23722, 23733], "body": [{"type": "para", "indent": 8, "text": ["This value scales the value channel (brightness) of each element. To vary the value per element, change the menu on the right side of this parameter from ", {"type": "ui", "text": ["Set Uniform"]}, " to ", {"type": "ui", "text": ["Use Attribute"]}, "."], "extent": [23752, 23953]}, {"type": "para", "indent": 8, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/randomize", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/randomize"}, " randomization button on the right side of this parameter to randomize the value per incoming element. This will create/select a corresponding attribute adjust node to give you greater control over the parameter\u2019s value."], "extent": [23953, 24222]}], "container": true, "attrs": {"id": "value"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Value Attribute"], "extent": [24222, 24243], "body": [{"type": "para", "indent": 8, "text": ["The name of the attribute storing the varying ", {"type": "ui", "text": ["Value"]}, " multipliers."], "extent": [24266, 24344]}], "container": true, "attrs": {"id": "valattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Brightness"], "extent": [24344, 24360], "body": [{"type": "para", "indent": 8, "text": ["This value is added to the value channel (brightness) of each element. To vary the value per element, change the menu on the right side of this parameter from ", {"type": "ui", "text": ["Set Uniform"]}, " to ", {"type": "ui", "text": ["Use Attribute"]}, "."], "extent": [24384, 24590]}, {"type": "para", "indent": 8, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/randomize", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/randomize"}, " randomization button on the right side of this parameter to randomize the value per incoming element. This will create/select a corresponding attribute adjust node to give you greater control over the parameter\u2019s value."], "extent": [24590, 24859]}], "container": true, "attrs": {"id": "brightness"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Brightness Attribute"], "extent": [24859, 24885], "body": [{"type": "para", "indent": 8, "text": ["Name of the attribute storing the varying ", {"type": "ui", "text": ["Brightness"]}, " offset values."], "extent": [24915, 24996]}], "container": true, "attrs": {"id": "brightnessattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Contrast"], "extent": [24996, 25010], "body": [{"type": "para", "indent": 8, "text": ["This value expands or shrinks the overall range of tonal values. Particularly, each color value is pushed towards (if ", {"type": "ui", "text": ["Contrast"]}, " is less than 1) or away from (if ", {"type": "ui", "text": ["Contrast"]}, " is greater than 1) medium gray (RGB values at ", {"type": "code", "text": ["0.5"]}, "). To vary the value per element, change the menu on the right side of this parameter from ", {"type": "ui", "text": ["Set Uniform"]}, " to ", {"type": "ui", "text": ["Use Attribute"]}, "."], "extent": [25032, 25398]}, {"type": "para", "indent": 8, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/randomize", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/randomize"}, " randomization button on the right side of this parameter to randomize the value per incoming element. This will create/select a corresponding attribute adjust node to give you greater control over the parameter\u2019s value."], "extent": [25398, 25667]}], "container": true, "attrs": {"id": "contrast"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Contrast Attribute"], "extent": [25667, 25691], "body": [{"type": "para", "indent": 8, "text": ["Name of the attribute storing the varying ", {"type": "ui", "text": ["Contrast"]}, " values."], "extent": [25719, 25791]}], "container": true, "attrs": {"id": "contrastattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Gain"], "extent": [25791, 25801], "body": [{"type": "para", "indent": 8, "text": ["This value is applied as a scale on the RGB values. To vary the value per element, change the menu on the right side of this parameter from ", {"type": "ui", "text": ["Set Uniform"]}, " to ", {"type": "ui", "text": ["Use Attribute"]}, "."], "extent": [25819, 26006]}, {"type": "para", "indent": 8, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/randomize", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/randomize"}, " randomization button on the right side of this parameter to randomize the value per incoming element. This will create/select a corresponding attribute adjust node to give you greater control over the parameter\u2019s value."], "extent": [26006, 26275]}], "container": true, "attrs": {"id": "gain"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Gain Attribute"], "extent": [26275, 26295], "body": [{"type": "para", "indent": 8, "text": ["Name of the attribute storing the varying ", {"type": "ui", "text": ["Gain"]}, " multipliers."], "extent": [26319, 26392]}], "container": true, "attrs": {"id": "gainattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Gamma"], "extent": [26392, 26403], "body": [{"type": "para", "indent": 8, "text": ["Controls the overall gamma of the input color. Values less than ", {"type": "code", "text": ["1"]}, " will darken the colors, increasing the range of values in originally bright areas. Conversely, values greater than ", {"type": "code", "text": ["1"]}, " will stretch out the range of values for originally dark areas; this will increase the overall brightness of the colors. To vary the value per element, change the menu on the right side of this parameter from ", {"type": "ui", "text": ["Set Uniform"]}, " to ", {"type": "ui", "text": ["Use Attribute"]}, "."], "extent": [26422, 26865]}, {"type": "para", "indent": 8, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/randomize", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/randomize"}, " randomization button on the right side of this parameter to randomize the value per incoming element. This will create/select a corresponding attribute adjust node to give you greater control over the parameter\u2019s value."], "extent": [26865, 27134]}], "container": true, "attrs": {"id": "gamma"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Gamma Attribute"], "extent": [27134, 27155], "body": [{"type": "para", "indent": 8, "text": ["The name of the attribute storing the varying ", {"type": "ui", "text": ["Gamma"]}, " values."], "extent": [27180, 27253]}], "container": true, "attrs": {"id": "gammaattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Delete All Randomization Attribute"], "extent": [27253, 27293], "body": [{"type": "para", "indent": 8, "text": ["Deletes any randomization attribute used for color correction."], "extent": [27324, 27396]}], "container": true, "attrs": {"id": "deleteallccattrib"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 2, "type": "sep", "indent": 0, "text": [" Post-Process "], "extent": [27396, 27415], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Enable Post-Process"], "extent": [27415, 27441], "body": [{"type": "para", "indent": 8, "text": ["Displays a set of controls to further fine tune the output attribute value. All post-process modifications will take place after adjustment and color correction are applied."], "extent": [27473, 27665]}], "container": true, "attrs": {"id": "enable_postprocess"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Minimum"], "extent": [27665, 27678], "body": [{"type": "para", "indent": 8, "text": ["If this checkbox is turned on, output attribute values are clamped against the specified ", {"type": "ui", "text": ["Minimum"]}, ". The clamping is performed component-wise on the RGB values."], "extent": [27705, 27884]}], "container": true, "attrs": {"id": "clampminvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Maximum"], "extent": [27884, 27897], "body": [{"type": "para", "indent": 8, "text": ["If this checkbox is turned on, output attribute values are clamped against the specified ", {"type": "ui", "text": ["Maximum"]}, ". The clamping is performed component-wise on the RGB values."], "extent": [27924, 28095]}], "container": true, "attrs": {"id": "clampmaxvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Complement Color"], "extent": [28095, 28117], "body": [{"type": "para", "indent": 8, "text": ["Complements or inverts the colors (subtracts each RGB component from ", {"type": "code", "text": ["1"]}, "). Complementary colors are opposite each other on the color wheel."], "extent": [28143, 28295]}], "container": true, "attrs": {"id": "docomplement"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 2, "type": "sep", "indent": 0, "text": [" Attribute Properties "], "extent": [28295, 28322], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Default Value"], "extent": [28354, 28373], "body": [{"type": "para", "indent": 8, "text": ["If this checkbox is turned on, it overwrites the default value property for the target attribute. Merging the output of this node with another geometry that is missing the attribute guarantees that new values will be initialized to this ", {"type": "ui", "text": ["Default Value"]}, "."], "extent": [28394, 28659]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [28659, 28673], "body": [{"type": "para", "indent": 12, "text": ["When the attribute to adjust (specified by ", {"type": "ui", "text": ["Attribute Name"]}, ") does not exists, the color will default to white, even when ", {"type": "ui", "text": ["Default Value"]}, " is turned on. "], "extent": [28673, 28842]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "default"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Type Qualifier"], "extent": [28842, 28862], "body": [{"type": "para", "indent": 8, "text": ["If this checkbox is turned on, the qualifier property for the target attribute is set to the selected type. The qualifier controls how the values are modified when its geometry is transformed."], "extent": [28884, 29093]}], "container": true, "attrs": {"id": "typeinfo"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "linkattribproperties"}}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [29093, 29102], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribadjustfloat", "type": "link", "text": ["Attribute Adjust Float"], "fullpath": "/nodes/sop/attribadjustfloat"}], "extent": [29102, 29157]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribadjustinteger", "type": "link", "text": ["Attribute Adjust Integer"], "fullpath": "/nodes/sop/attribadjustinteger"}], "extent": [29157, 29215]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribadjustvector", "type": "link", "text": ["Attribute Adjust Vector"], "fullpath": "/nodes/sop/attribadjustvector"}], "extent": [29215, 29271]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribnoise", "type": "link", "text": ["Attribute Noise"], "fullpath": "/nodes/sop/attribnoise"}], "extent": [29271, 29312]}], "container": true}], "text": "Related"}], "title": ["Attribute Adjust Color"], "summary": ["Modifies values for a vector-type color attribute on the incoming geometry."], "included": ["/nodes/sop/attribadjustfloat", "/nodes/sop/attribnoise", "/nodes/vop/colormap", "/nodes/vop/unifiednoise"]}