{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "blendshapes", "icon": "SOP/blendshapes", "tags": "reshape, blend, morph", "version": "2.0", "since": "17.0", "verb_since": "17.0", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Blend Shapes"], "extent": [0, 17]}, {"type": "summary", "indent": 0, "text": ["Computes a 3D metamorphosis between shapes with the same topology."], "extent": [165, 239]}, {"type": "para", "indent": 0, "text": ["Blend Shapes can blend between its inputs using average weights of each\ninput\u2019s respective channel. It interpolates point colors and/or texture\nco-ordinates between shapes."], "extent": [239, 414]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [414, 426], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [426, 433], "body": [{"type": "para", "indent": 4, "text": ["Subset of the input geometry to be blended."], "extent": [449, 498]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group Type"], "extent": [498, 510], "body": [{"type": "para", "indent": 4, "text": ["The type of the specified group.  If this is not ", {"type": "ui", "text": ["Guess from group"]}, ",\n    the group must be the indicated type."], "extent": [530, 648]}], "container": true, "attrs": {"id": "grouptype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Selection Index"], "extent": [648, 665], "body": [{"type": "para", "indent": 4, "text": ["Specifies which input to use when generating the cooked\n    selection."], "extent": [695, 771]}], "container": true, "attrs": {"channels": "/selectionidx"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Differencing"], "extent": [771, 785], "body": [{"type": "para", "indent": 4, "text": ["Exaggerates blends between objects where values above 1 or less\n    than 0 will result in over-scaled shapes."], "extent": [800, 915]}], "container": true, "attrs": {"id": "diff"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cache Input Deltas"], "extent": [915, 935], "body": [{"type": "para", "indent": 4, "text": ["Compute and cache differences between attributes to speed up subsequent cooks if input geometry does not change, for example when only blend weights are changing. This is only an option when ", {"type": "ui", "text": ["Differencing"]}, " is on."], "extent": [957, 1177]}], "container": true, "attrs": {"id": "cachedeltas"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Treat Packed Primitives As Shapes"], "extent": [1177, 1212], "body": [{"type": "para", "indent": 4, "text": ["When enabled, packed primitives from the inputs are\n    treated as if they are the input shapes. The weights used for each packed\n    primitive is taken from a float attribute named ", {"type": "code", "text": ["weight"]}, " in the input and\n    multiplied with its corresponding ", {"type": "ui", "text": ["Blend"]}, " parameter value. The ", {"type": "code", "text": ["weight"]}, "\n    attribute is typically a primitive attribute but it can also be a vertex or\n    point attribute for the corresponding packed primitive. If it is a global\n    attribute on the input, then that single value is used for all of its\n    packed primitives."], "extent": [1227, 1773]}], "container": true, "attrs": {"id": "pack"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Treat Packed Primitives From First Input As Shapes"], "extent": [1773, 1825], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Treat Packed Primitives As Shapes"]}, " is enabled, this option\n    determines whether the packed primitives from the first input will also be\n    treated as shapes. When disabled, all the geometry from the first input\n    will be considered as the first shape. When enabled, this option only has\n    an effect if all the primitives in the first input are packed. Otherwise,\n    it is ignored."], "extent": [1845, 2247]}], "container": true, "attrs": {"id": "packfirst"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["One Blend Weight Parameter per Packed Primitive"], "extent": [2247, 2296], "body": [{"type": "para", "indent": 4, "text": ["When enabled, each blend weight parameter corresponds with an input\n    packed primitive, if packed primitives are being treated as inputs.\n    When disabled, each blend weight parameter corresponds with a real input,\n    and all of the packed primitives in that real input.\n    In either case, if a ", {"type": "code", "text": ["weight"]}, " attribute is present, each value will be\n    multiplied with the corresponding blend parameter value to determine the\n    true weight for each packed primitive."], "extent": [2320, 2795]}], "container": true, "attrs": {"id": "weightperpack"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attributes"], "extent": [2795, 2807], "body": [{"type": "para", "indent": 4, "text": ["A space-separated list of names/patterns for attributes to interpolate. Attributes that don\u2019t match here are switched instantly when the whole part of the input number changes, rather than smoothly interpolated. The default is ", {"type": "code", "text": ["*"]}, ", meaning interpolate all attributes."], "extent": [2825, 3098]}], "container": true, "attrs": {"id": "attribs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point ID Attribute"], "extent": [3098, 3118], "body": [{"type": "para", "indent": 4, "text": ["If you enter the name of a (string or integer) point attribute here, the node will use the value of this attribute to match up points between the different inputs. For example, using ", {"type": "code", "text": ["id"]}, " will match particle points even if some particles are deleted. If this field is blank (or the attribute doesn\u2019t exist), the node uses point numbers to match up points."], "extent": [3137, 3498]}], "container": true, "attrs": {"id": "ptidattr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primitive ID Attribute"], "extent": [3498, 3522], "body": [{"type": "para", "indent": 4, "text": ["If you enter the name of a (string or integer) primitive attribute here, the node will use the value of this attribute to match up primitives (for example, volumes) between the different inputs. For example, using ", {"type": "code", "text": ["name"]}, " will match volumes in a fluid system even if volumes are reordered. If this field is blank (or the attribute doesn\u2019t exist), the node uses primitive numbers to match up points."], "extent": [3543, 3946]}], "container": true, "attrs": {"id": "primidattr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Voxel Blend"], "extent": [3946, 3959], "body": [{"type": "para", "indent": 4, "text": ["Optionally blend voxel data between volumes or VDBs."], "extent": [3980, 4038]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [4038, 4048], "body": [{"type": "para", "indent": 8, "text": ["Do not blend volume data."], "extent": [4048, 4083]}], "container": true}, {"type": "dt", "indent": 4, "text": ["By Grid Index"], "extent": [4083, 4102], "body": [{"type": "para", "indent": 8, "text": ["The voxels are matched by absolute voxel number (not spatial position) so matching volumes should have the exact same dimensions."], "extent": [4102, 4241]}], "container": true}, {"type": "dt", "indent": 4, "text": ["By Voxel Position"], "extent": [4241, 4264], "body": [{"type": "para", "indent": 8, "text": ["The voxels are matched by their spatial position. The grid of one volume will be extended to include the other volume, which might change the resolution of the grid."], "extent": [4264, 4439]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "voxelblend"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Interpolate Rotation of Normals, Quaternions, and Transforms"], "extent": [4439, 4501], "body": [{"type": "para", "indent": 4, "text": ["Use spherical linear interpolation for smoother transitions of attributes marked as normals, quaternions, and transforms, and for primitive transforms. When this is off, all blends are component-wise, meaning the transition can be abrupt when the input changes."], "extent": [4519, 4786]}], "container": true, "attrs": {"id": "doslerp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Update Channel Names From Inputs"], "extent": [4786, 4820], "body": [{"type": "para", "indent": 4, "text": ["Updates ", {"type": "ui", "text": ["Blends"]}, " based on the input nodes and their names."], "extent": [4845, 4911]}], "container": true, "attrs": {"id": "updatechannels"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blends"], "extent": [4911, 4919], "body": [{"type": "para", "indent": 4, "text": ["Controls contribution of geometry inputs."], "extent": [4964, 5011]}], "container": true, "attrs": {"channels": "/shape0 /shape1 /shape2 /..."}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [5011, 5020], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/sblend", "type": "link", "text": "", "fullpath": "/nodes/sop/sblend"}], "extent": [5020, 5044]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/timeblend", "type": "link", "text": "", "fullpath": "/nodes/sop/timeblend"}], "extent": [5044, 5072]}], "container": true}], "text": "Related"}], "title": ["Blend Shapes"], "summary": ["Computes a 3D metamorphosis between shapes with the same topology."]}