{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "debrissource::2.0", "icon": "SOP/debrissource", "tags": "breaking, rbd, dynamics, source, pyro", "since": "19.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Debris Source"], "extent": [0, 18]}, {"type": "summary", "indent": 0, "text": ["Generates point emission sources for debris, pyro, or particle sources from separating fractured rigid body objects."], "extent": [157, 281]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [281, 296], "body": [{"type": "para", "indent": 0, "text": ["This SOP scatters points along the surfaces of fractured geometry to represent debris emission sources. This allows you to detect points near regions where the fractured pieces have recently separated. The points that are separated can be used to emit small debris, particles, or you can rasterize them into a pyro volume source."], "extent": [296, 628]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 0, "role": "item", "extent": [628, 636], "body": [], "container": true, "attrs": {"src": "/videos/pyro/pyro_ground_explosion.mp4"}}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [686, 698], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["General"], "extent": [698, 713], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Reset Simulation"], "extent": [713, 732], "body": [{"type": "para", "indent": 4, "text": ["Resets the simulation."], "extent": [752, 780]}], "container": true, "attrs": {"id": "resimulate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Interior Group"], "extent": [780, 796], "body": [{"type": "para", "indent": 4, "text": ["Specifies the primitives to scatter points on. Typically, this group should contain only the interior polygons created by the fracturing process so that the original surface is not affected."], "extent": [819, 1015]}], "container": true, "attrs": {"id": "interiorgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Frame"], "extent": [1015, 1027], "body": [{"type": "para", "indent": 4, "text": ["Frame used when initializing the state of each debris emission point."], "extent": [1046, 1125]}], "container": true, "attrs": {"id": "restframe"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cache Memory (MB)"], "extent": [9473, 9492], "body": [{"type": "para", "indent": 4, "text": ["Specifies how much memory in megabytes can be consumed by the cache for\n    this simulation. Once this limit is exceeded, old cache entries are\n    either deleted or saved to disk to make more room, depending on the\n    value of the Allow Caching To Disk parameter value above."], "extent": [9514, 9797]}], "container": true, "attrs": {"id": "cachemaxsize"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Scatter"], "extent": [1168, 1182], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Density Scale"], "extent": [5347, 5362], "body": [{"type": "para", "indent": 4, "text": ["Value or multiplier indicating the density of points to generate."], "extent": [5385, 5456]}, {"type": "para", "indent": 4, "text": ["When scattering ", {"type": "ui", "text": ["By Density"]}, " without a ", {"type": "ui", "text": ["Density Attribute"]}, ", this is the expected number of points per length unit for curves, per area unit for\n    surfaces, and per volume unit for volumes and tetrahedra.  When scattering ", {"type": "ui", "text": ["In Texture Space"]}, " without a ", {"type": "ui", "text": ["Density Texture"]}, ", this is the expected number\n    of points in the full unit square.  When using a ", {"type": "ui", "text": ["Density Attribute"]}, " or ", {"type": "ui", "text": ["Density Texture"]}, ", this is multiplied by those to determine the actual\n    density in physical or texture space, respectively."], "extent": [5456, 5975]}, {"type": "para", "indent": 4, "text": ["This is disabled if ", {"type": "ui", "text": ["Force Total Count"]}, " is enabled or if ", {"type": "ui", "text": ["Generate"]}, " is ", {"type": "ui", "text": ["Count per Primitive"]}, "."], "extent": [5975, 6080]}], "container": true, "attrs": {"id": "densityscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Density Attribute"], "extent": [6080, 6099], "body": [{"type": "para", "indent": 4, "text": ["An attribute specifying the density of points to generate, when ", {"type": "ui", "text": ["Generate"]}, " is ", {"type": "ui", "text": ["By Density"]}, ".  The attribute can be a point, vertex, primitive, or detail\n    attribute, and in the case of point and vertex attributes, the density will be linearly interpolated over the area of the primitive.  This is ideal for\n    use with the ", {"scheme": "Node", "value": "/nodes/sop/paint", "type": "link", "text": ["Paint node"], "fullpath": "/nodes/sop/paint"}, ".  When ", {"type": "ui", "text": ["Force Total Count"]}, " is enabled, this specifies relative distribution of point density, not actual density."], "extent": [6123, 6601]}], "container": true, "attrs": {"id": "densityattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Points"], "extent": [9818, 9830], "body": [{"type": "para", "indent": 4, "text": ["This is an optional strict limit on the number of points to generate, to avoid fatal accidents.  If the number of points that would have been generated\n    exceeds this, a warning will be generated indicating the number of points that would have been generated, and a number of points less than or equal to\n    this limit will be generated, in a roughly similar distribution."], "extent": [9855, 10236]}, {"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Generate"]}, " is ", {"type": "ui", "text": ["In Texture Space"]}, ", this is a limit on the number of points scattered in the texture space unit square.  Barring any repeats\n    in the texture mapping, the number of generated points should be less than or equal to this limit."], "extent": [10236, 10492]}], "container": true, "attrs": {"id": "emergencylimit"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Seed"], "extent": [1282, 1288], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Generate"]}, " is ", {"type": "ui", "text": ["By Density"]}, ", this random seed is used for determining the number of points to be generated on each primitive and for generating\n    the points on each primitive, as well as randomizing the order.  When ", {"type": "ui", "text": ["Generate"]}, " is ", {"type": "ui", "text": ["In Texture Space"]}, ", this is used for determining the number of\n    points scattered in the texture space unit square, generating the points in texture space, and randomizing the order."], "extent": [10520, 10954]}], "container": true, "attrs": {"id": "seed"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Release"], "extent": [1334, 1348], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Distance Threshold"], "extent": [1348, 1369], "body": [{"type": "para", "indent": 4, "text": ["The distance points have to separate to be considered released. "], "extent": [1396, 1466]}, {"type": "para", "indent": 4, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/randomize", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/randomize"}, " randomization button on the right side of this parameter to randomize the value per incoming element. This will create/select a corresponding attribute adjust node to give you greater control over the parameter\u2019s value."], "extent": [1466, 1731]}], "container": true, "attrs": {"id": "distancethreshold"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Attributes"], "extent": [1731, 1748], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Point Number Attribute"], "extent": [1748, 1773], "body": [{"type": "para", "indent": 4, "text": ["For each generated point, the node will store the original point number in this attribute."], "extent": [1958, 2054]}], "container": true, "attrs": {"id": "pointnumattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Released Attribute"], "extent": [1840, 1860], "body": [{"type": "para", "indent": 4, "text": ["The attribute to store whenever a point id separated beyond the ", {"type": "ui", "text": ["Distance Threshold"]}, "."], "extent": [1878, 1971]}], "container": true, "attrs": {"id": "released"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Distance Attribute"], "extent": [1971, 1991], "body": [{"type": "para", "indent": 4, "text": ["The attribute to store the separation distance for each point."], "extent": [2011, 2079]}], "container": true, "attrs": {"id": "distattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Volume Attribute"], "extent": [2079, 2097], "body": [{"type": "para", "indent": 4, "text": ["The attribute to store the volume of the fractured pieces the point was scattered on. Use this attribute to make the source points disperse on smaller fractured pieces, or emit less smoke from them."], "extent": [2116, 2320]}], "container": true, "attrs": {"id": "volattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Depth Attribute"], "extent": [2320, 2337], "body": [{"type": "para", "indent": 4, "text": ["Stores how far away each point is from the closest primitive that is not in the ", {"type": "ui", "text": ["Interior Group"]}, ", when an ", {"type": "ui", "text": ["Interior Group"]}, " is provided.  Using this attribute, you can separate points scattered just around the edge of the ", {"type": "ui", "text": ["Interior Group"]}, ". "], "extent": [2358, 2609]}], "container": true, "attrs": {"id": "depthattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Position"], "extent": [2609, 2624], "body": [{"type": "para", "indent": 4, "text": ["The attribute to store the position of each point given by ", {"type": "ui", "text": ["Rest Frame"]}, "."], "extent": [2644, 2724]}], "container": true, "attrs": {"id": "restattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Age Attribute"], "extent": [2724, 2739], "body": [{"type": "para", "indent": 4, "text": ["The point attribute storing a value which starts to increase from zero when the point is released. Use this in combination with ", {"type": "ui", "text": ["Life Span"]}, ", ", {"type": "ui", "text": ["Remove Unreleased"]}, ", and ", {"type": "ui", "text": ["Remove at Life End"]}, " to output only a few selected points to use as the debris source for further rigid body simulation. "], "extent": [2759, 3058]}], "container": true, "attrs": {"id": "agenattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Life Span"], "extent": [3058, 3069], "body": [{"type": "para", "indent": 4, "text": ["The length of time each point will remain active after release. Enable ", {"type": "ui", "text": ["Remove at Life End"]}, " to delete points that are released, but not active anymore."], "extent": [3087, 3246]}, {"type": "para", "indent": 4, "text": ["Click the ", {"scheme": "Smallicon", "value": "BUTTONS/randomize", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTONS/randomize"}, " randomization button on the right side of this parameter to randomize the value per incoming element. This will create/select a corresponding attribute adjust node to give you greater control over the parameter\u2019s value."], "extent": [3246, 3511]}], "container": true, "attrs": {"id": "lifespan"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Density Attribute"], "extent": [3511, 3530], "body": [{"type": "para", "indent": 4, "text": ["The point attribute storing a value which starts to decrease from 1 to zero when the point is released using ", {"type": "ui", "text": ["Life Span"]}, ". Use this in combination with ", {"type": "ui", "text": ["Life Span"]}, ", ", {"type": "ui", "text": ["Remove Unreleased"]}, ", and ", {"type": "ui", "text": ["Remove at Life End"]}, " to output only a few selected points to use as a rasterized pyro volume source for debris dust simulation."], "extent": [3553, 3883]}], "container": true, "attrs": {"id": "densityattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remap Density Over Normalized Age"], "extent": [3883, 3918], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Density Attribute"]}, " is enabled, use this to control the density values over the life of the points."], "extent": [3940, 4052]}], "container": true, "attrs": {"id": "remapdensity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Density Ramp"], "extent": [4052, 4066], "body": [{"type": "para", "indent": 4, "text": ["Controls how the density values change over the life of each point."], "extent": [4087, 4160]}], "container": true, "attrs": {"id": "densityramp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Color Over Normalized Age"], "extent": [4160, 4187], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Age Attribute"]}, " and ", {"type": "ui", "text": ["Life Span"]}, " both enabled, use this to color points based on their life. Use this for visualization purposes."], "extent": [4211, 4354]}], "container": true, "attrs": {"id": "docoloroverage"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Color Ramp"], "extent": [4354, 4366], "body": [{"type": "para", "indent": 4, "text": ["Controls the color over the life of each point. "], "extent": [4388, 4442]}], "container": true, "attrs": {"id": "colorageramp"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Post-Process"], "extent": [4442, 4461], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Speed Threshold"], "extent": [4461, 4479], "body": [{"type": "para", "indent": 4, "text": ["If your incoming geometry or template points have a velocity attribute, use this to keep only a few selected points based on speed. This is useful if you only want to emit from fast moving debris."], "extent": [4503, 4705]}], "container": true, "attrs": {"id": "speedthreshold"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Volume Threshold"], "extent": [4705, 4723], "body": [{"type": "para", "indent": 4, "text": ["This will remove any point that is scattered on debris, which has less volume than the given threshold. Use this to avoid emitting from very tiny fragments."], "extent": [4745, 4907]}], "container": true, "attrs": {"id": "volthreshold"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Depth Threshold"], "extent": [4907, 4924], "body": [{"type": "para", "indent": 4, "text": ["Removes any point that is more than this threshold away from the primitives given by the ", {"type": "ui", "text": ["Interior Group"]}, ". Use this to avoid emitting right from the edge of the debris."], "extent": [4948, 5124]}], "container": true, "attrs": {"id": "depththreshold"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remove Unreleased"], "extent": [5124, 5143], "body": [{"type": "para", "indent": 4, "text": ["Deletes points that are not yet separated beyond the ", {"type": "ui", "text": ["Distance Threshold"]}, "."], "extent": [5169, 5251]}], "container": true, "attrs": {"id": "removeunreleased"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remove at Life End"], "extent": [5251, 5271], "body": [{"type": "para", "indent": 4, "text": ["Deletes points that are separated and points where their ", {"type": "code", "text": ["age"]}, " attribute value is higher than their ", {"type": "code", "text": ["life"]}, " attribute."], "extent": [5293, 5415]}], "container": true, "attrs": {"id": "removeatlife"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "title": ["Debris Source"], "summary": ["Generates point emission sources for debris, pyro, or particle sources from separating fractured rigid body objects."], "included": ["/nodes/obj/common", "/nodes/obj/dopnet", "/nodes/sop/pointgenerate", "/nodes/sop/scatter", "/props/_minmax_styles", "/props/mantra", "/shelf/scatter"]}