{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "extracttransform", "icon": "OBJ/extractgeo", "tags": "transform", "since": "17.0", "verb_since": "17.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Extract Transform"], "extent": [0, 22]}, {"type": "summary", "indent": 0, "text": ["Computes the best-fit transform between two pieces of geometry."], "extent": [148, 219]}, {"type": "para", "indent": 0, "text": ["This SOP computes the transform (translation, rotation, and optionally scale) that best aligns the reference geometry\u2019s points with the target geometry.\nIf ", {"type": "ui", "text": ["Use Piece Attribute"]}, " is enabled, a transform will be computed for each piece in the geometry, instead of for the geometry as a whole.\nAdditionally, if a piece contains a single packed primitive, the SOP will compare the primitive transforms between the inputs to allow transforms to be extracted from animated packed primitives without unpacking."], "extent": [219, 726]}, {"type": "para", "indent": 0, "text": ["The output geometry of this SOP contains one point for each piece in the reference geometry, with ", {"scheme": null, "value": "/copy/instanceattrs", "type": "link", "text": ["point attributes"], "fullpath": "/copy/instanceattrs"}, " describing the transform.\nThese points can be used with the ", {"scheme": "Node", "value": "/nodes/sop/xformpieces", "type": "link", "text": ["Transform Pieces SOP"], "fullpath": "/nodes/sop/xformpieces"}, " to apply the transform to geometry."], "extent": [726, 1004]}, {"type": "para", "indent": 0, "text": ["This extraction can be useful for setting up rigid body colliders (for which an animated rigid transform is ideal) from baked geometry files that represent rigid motion."], "extent": [1004, 1175]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1175, 1187], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Use Piece Attribute"], "extent": [1187, 1208], "body": [{"type": "para", "indent": 4, "text": ["Compute a transform for the points associated with each unique value of the ", {"type": "ui", "text": ["Piece Attribute"]}, "."], "extent": [1208, 1309]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Piece Attribute"], "extent": [1309, 1326], "body": [{"type": "para", "indent": 4, "text": ["The name of a string or integer attribute."], "extent": [1326, 1373]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Class"], "extent": [1373, 1390], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether the ", {"type": "ui", "text": ["Piece Attribute"]}, " is a primitive or point attribute."], "extent": [1390, 1471]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Extraction Method"], "extent": [1471, 1490], "body": [{"type": "para", "indent": 4, "text": ["Specifies how to compute the best-fit transform between the reference and target geometry."], "extent": [1510, 1606]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Translation and Rotation"], "extent": [1606, 1636], "body": [{"type": "para", "indent": 8, "text": ["Finds the rigid transform that best aligns the points with the target geometry."], "extent": [1636, 1724]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Translation, Rotation, and Uniform Scale"], "extent": [1724, 1770], "body": [{"type": "para", "indent": 8, "text": ["Allows the points to be uniformly scaled, in addition to being translated and rotated."], "extent": [1770, 1865]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Translation, Rotation, and Non-Uniform Scale"], "extent": [1865, 1915], "body": [{"type": "para", "indent": 8, "text": ["Allows the points to be non-uniformly scaled, in addition to being translated and rotated."], "extent": [1915, 2014]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Full Transform"], "extent": [2014, 2034], "body": [{"type": "para", "indent": 8, "text": ["Finds the transform that best aligns the points with the target geometry. This may include shears or non-uniform scales."], "extent": [2034, 2164]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "extraction"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Attributes"], "extent": [2164, 2183], "body": [{"type": "para", "indent": 4, "text": ["Specifies the point attributes used to record the transform."], "extent": [2199, 2265]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Standard Instance Attributes"], "extent": [2265, 2299], "body": [{"type": "para", "indent": 8, "text": ["Decomposes the transform into the ", {"scheme": null, "value": "/copy/instanceattrs", "type": "link", "text": ["standard instance attributes"], "fullpath": "/copy/instanceattrs"}, " ", {"type": "code", "text": ["P"]}, ", ", {"type": "code", "text": ["pivot"]}, ", and ", {"type": "code", "text": ["orient"]}, ".\n        If the ", {"type": "ui", "text": ["Extraction Method"]}, " allows scaling, ", {"type": "code", "text": ["pscale"]}, " and ", {"type": "code", "text": ["scale"]}, " are used to record the uniform and non-uniform scale, respectively.\n        These attributes can be used with many other nodes, such as ", {"scheme": "Node", "value": "/nodes/sop/xformpieces", "type": "link", "text": "", "fullpath": "/nodes/sop/xformpieces"}, ".\n        If the ", {"type": "ui", "text": ["Extraction Method"]}, " is ", {"type": "ui", "text": ["Full Transform"]}, ", ", {"type": "code", "text": ["shear"]}, " is used to record the shear component."], "extent": [2299, 2762]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Transform Matrix (3\u00d73) and Translation"], "extent": [2762, 2806], "body": [{"type": "para", "indent": 8, "text": ["Splits the transform into a 3\u00d73 matrix (stored in the ", {"type": "code", "text": ["transform"]}, " point attribute) and a translation (stored in ", {"type": "code", "text": ["P"]}, ")."], "extent": [2806, 2933]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Transform Matrix (4\u00d74)"], "extent": [2933, 2961], "body": [{"type": "para", "indent": 8, "text": ["Outputs the full 4\u00d74 matrix to the ", {"type": "code", "text": ["transform"]}, " point attribute."], "extent": [2961, 3034]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "output"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Compute Distortion"], "extent": [3034, 3054], "body": [{"type": "para", "indent": 4, "text": ["For each piece, records an attribute containing a measurement of the difference between the transformed points in the reference geometry and the target geometry\u2019s points.\n    A value of 0 indicates that the extracted transform is a perfect fit."], "extent": [3054, 3303]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Distortion Attribute"], "extent": [3303, 3325], "body": [{"type": "para", "indent": 4, "text": ["Specifies the name of the point attribute created when ", {"type": "ui", "text": ["Compute Distortion"]}, " is enabled."], "extent": [3325, 3420]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [3420, 3428], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Reference Geometry"], "extent": [3428, 3452], "body": [{"type": "para", "indent": 8, "text": ["The rest geometry to transform."], "extent": [3452, 3493]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Target Geometry"], "extent": [3493, 3514], "body": [{"type": "para", "indent": 8, "text": ["The geometry for which to compute a transform from the Reference Geometry."], "extent": [3514, 3598]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3598, 3607], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/xformpieces", "type": "link", "text": "", "fullpath": "/nodes/sop/xformpieces"}], "extent": [3607, 3636]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/obj/extractgeo", "type": "link", "text": "", "fullpath": "/nodes/obj/extractgeo"}], "extent": [3636, 3664]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/rbdpackedobject", "type": "link", "text": "", "fullpath": "/nodes/dop/rbdpackedobject"}], "extent": [3664, 3697]}], "container": true}], "text": "Related"}], "title": ["Extract Transform"], "summary": ["Computes the best-fit transform between two pieces of geometry."]}