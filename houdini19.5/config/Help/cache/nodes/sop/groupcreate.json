{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "groupcreate", "icon": "SOP/groupcreate", "tags": "groups", "since": "16.0", "verb_since": "16.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Group"], "extent": [0, 10]}, {"type": "summary", "indent": 0, "text": ["Generates groups of points, primitives, edges, or vertices according to various criteria."], "extent": [129, 226]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [226, 241], "body": [{"type": "para", "indent": 0, "text": ["Elements can occur in more than one group. Groups are used in many parts of the Parameter Editor to specify which portions of input geometry you wish an operator to act upon."], "extent": [241, 418]}, {"type": "para", "indent": 0, "text": ["You can also create ordered groups. To do so, enable the ", {"type": "ui", "text": ["Ordered"]}, " checkbox."], "extent": [418, 498]}, {"type": "para", "indent": 0, "text": ["This operator is very powerful and is ideal for combining geometry that is\nsimilar. For example, all the primitive geometry of a group of door\nstructures for a three-dimensional architectural model could be\ngrouped together and consequently scaled and re-sized together using\na ", {"scheme": "Node", "value": "/nodes/sop/xform", "type": "link", "text": ["Transform node"], "fullpath": "/nodes/sop/xform"}, ". Works in conjunction with most\nfilter nodes."], "extent": [498, 855]}, {"type": "para", "indent": 0, "text": ["Group name specifiers become very powerful when you use \n", {"scheme": null, "value": "/model/groups#manual", "type": "link", "text": ["pattern matching"], "fullpath": "/model/groups#manual", "fragment": "#manual"}, " in your group specifiers."], "extent": [855, 979]}, {"level": 3, "id": "includeme", "container": true, "type": "h", "indent": 0, "text": ["Using Group Geometry"], "extent": [290, 329], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": [{"scheme": null, "value": "/basics/select", "type": "link", "text": ["Select"], "fullpath": "/basics/select"}, " the points, primitives, edges, or vertices you want to group."], "extent": [329, 427]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Click the ", {"scheme": "Icon", "value": "SOP/group", "type": "link", "text": "", "fullpath": "/shelf/SOP/group"}, " ", {"scheme": "Node", "value": "/nodes/sop/groupcreate", "type": "link", "text": ["Group Geometry"], "fullpath": "/nodes/sop/groupcreate"}, " tool on the ", {"type": "ui", "text": ["Model"]}, " tab of the shelf."], "extent": [427, 543]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Enter a ", {"type": "ui", "text": ["Group Name"]}, " in the operation controls toolbar or the parameter editor."], "extent": [543, 636]}], "container": true}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/shelf/groupgeometry.jpg", "type": "img", "text": ""}], "extent": [636, 689]}]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [1021, 1026], "body": [{"type": "para", "indent": 4, "text": ["When using the ", {"scheme": null, "value": "/basics/select", "type": "link", "text": ["hotkeys to select edges"], "fullpath": "/basics/select"}, " to group, \n    press ", {"keys": ["Tab"], "type": "keys", "text": null}, " once the selection is complete (instead of ", {"keys": ["Enter"], "type": "keys", "text": null}, "), \n    and select the ", {"type": "ui", "text": ["Group Geometry"]}, " operation in the ", {"scheme": null, "value": "/basics/tabmenu", "type": "link", "text": ["tab menu"], "fullpath": "/basics/tabmenu"}, "."], "extent": [1026, 1255]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Creating groups based on point attributes"], "extent": [1255, 1303], "body": [{"type": "para", "indent": 0, "text": ["You can create groups based on point/primitive attributes using the ", {"type": "ui", "text": ["Base Group"]}, " tab and ", {"scheme": null, "value": "/model/groups#manual", "type": "link", "text": ["group specification"], "fullpath": "/model/groups#manual", "fragment": "#manual"}, " syntax."], "extent": [1303, 1447]}, {"type": "para", "indent": 0, "text": ["For example, to create a group containing all points with Y position greater than ", {"type": "code", "text": ["0"]}, ":"], "extent": [1447, 1535]}, {"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["In the parameter editor for the Group node, click the ", {"type": "ui", "text": ["Base Group"]}, " tab."], "extent": [1535, 1612]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["In the ", {"type": "ui", "text": ["Base Group"]}, " field (below ", {"type": "ui", "text": ["Base Group"]}, "), set value to ", {"type": "code", "text": ["@P.y>0"]}], "extent": [1612, 1689]}], "container": true}, {"type": "para", "indent": 0, "text": ["In this example, ", {"type": "code", "text": ["P"]}, " is the name of the position vector attribute, ", {"type": "code", "text": [".y"]}, " takes the Y component of the vector, and ", {"type": "code", "text": [">0"]}, " selects points where the component is greater than 0. See the ", {"type": "code", "text": ["@"]}, " ", {"scheme": null, "value": "/model/groups#manual", "type": "link", "text": ["group specification syntax"], "fullpath": "/model/groups#manual", "fragment": "#manual"}, " for more information. Note that the ", {"type": "code", "text": ["@"]}, " syntax does not allow spaces."], "extent": [1689, 1994]}]}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [1994, 2002], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Source geometry"], "extent": [2002, 2020], "body": [{"type": "para", "indent": 4, "text": ["The geometry on which to create the groups."], "extent": [2020, 2069]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Bounding object"], "extent": [2069, 2086], "body": [{"type": "para", "indent": 4, "text": ["Bounding geometry. (Only works for point or vertex\n    groups when selecting by bounding geometry.)"], "extent": [2086, 2191]}, {"type": "para", "indent": 4, "text": ["Accepts all geometry."], "extent": [2191, 2218]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2218, 2230], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group Name"], "extent": [2230, 2243], "body": [{"type": "para", "indent": 4, "text": ["The name of the group to create."], "extent": [2263, 2301]}], "container": true, "attrs": {"id": "groupname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group Type"], "extent": [2301, 2313], "body": [{"type": "para", "indent": 4, "text": ["Whether to create a primitive, point, edge, or vertex group."], "extent": [2333, 2399]}], "container": true, "attrs": {"id": "grouptype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Initial Merge"], "extent": [2399, 2414], "body": [{"type": "para", "indent": 4, "text": ["How to resolve collisions between the newly created group with an already\n    existing group."], "extent": [2432, 2531]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Replace Existing"], "extent": [2531, 2553], "body": [{"type": "para", "indent": 8, "text": ["The newly created group will replace the existing group."], "extent": [2553, 2627]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Union With Existing"], "extent": [2627, 2652], "body": [{"type": "para", "indent": 8, "text": ["The group will consist of the union between the newly created group\n        and the already existing group."], "extent": [2652, 2777]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Intersect With Existing"], "extent": [2777, 2806], "body": [{"type": "para", "indent": 8, "text": ["The group will consist of the intersection between the newly created\n        group and the already existing group."], "extent": [2806, 2938]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Subtract From Existing"], "extent": [2938, 2966], "body": [{"type": "para", "indent": 8, "text": ["The group will consist of the contents of the already existing group\n        that are not also in the newly created group."], "extent": [2966, 3098]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "mergeop"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Base Group"], "extent": [3098, 3117], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable"], "extent": [3117, 3126], "body": [{"type": "para", "indent": 4, "text": ["Enables grouping by pattern."], "extent": [3150, 3188]}], "container": true, "attrs": {"id": "groupbase"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Base Group"], "extent": [3188, 3200], "body": [{"type": "para", "indent": 4, "text": ["Enter the pattern to be grouped. This handles normal adhoc group syntax."], "extent": [3222, 3304]}], "container": true, "attrs": {"id": "pattern"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Ordered"], "extent": [3304, 3320], "body": [{"type": "para", "indent": 4, "text": ["Orders the points/primitives in the group in the order they\n    are entered. Useful when skinning."], "extent": [3338, 3446]}], "container": true, "attrs": {"id": "ordered"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Geometry Type"], "extent": [3446, 3461], "body": [{"type": "para", "indent": 4, "text": ["What sort of primitives to allow in the group."], "extent": [3479, 3531]}], "container": true, "attrs": {"id": "geotype"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Keep in Bounding Regions"], "extent": [3531, 3564], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable"], "extent": [3564, 3573], "body": [{"type": "para", "indent": 4, "text": ["Enable grouping by bounding volume."], "extent": [3601, 3646]}], "container": true, "attrs": {"id": "groupbounding"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bounding Type"], "extent": [3646, 3661], "body": [{"type": "para", "indent": 4, "text": ["Shape of bounding volume."], "extent": [3685, 3716]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Bounding Box"], "extent": [3716, 3734], "body": [{"type": "para", "indent": 8, "text": ["Group by an axis aligned bounding box, specified either\n        directly or by the second input."], "extent": [3734, 3840]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Bounding Sphere"], "extent": [3840, 3861], "body": [{"type": "para", "indent": 8, "text": ["Group by a sphere, either speciied directly or by the second\n        input."], "extent": [3861, 3946]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Bounding Object"], "extent": [3946, 3967], "body": [{"type": "para", "indent": 8, "text": ["Group points depending if they are inside the second input.\n        Inside is determined with the alternating rule.  Rays are sent\n        and the number of intersections computed - if the result is\n        odd, the point is considered inside.  Because the rays are\n        sent in a specific set of directions, if the geometry has\n        holes you may get leaks that vary with the orientation."], "extent": [3967, 4372]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Bounding Volume"], "extent": [4372, 4393], "body": [{"type": "para", "indent": 8, "text": ["Group points depending if they are inside the second input\u2019s\n        volumes or VDBs.   This is determined by evaluating each\n        volume or VDB at the point position and comparing with the\n        isovalue.  If the point is inside an odd number of volume or\n        vdbs, it is considered to be inside."], "extent": [4393, 4709]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Bounding Convex Hull"], "extent": [4709, 4735], "body": [{"type": "para", "indent": 8, "text": ["Group points depending if they are in the convex hull of the\n        points of the second input.  This can be offset outwards or\n        inwards using the iso offset.  The ", {"type": "code", "text": ["pscale"]}, " attribute is also\n        used to determine the effective size of points.  If their\n        sphere is fully inside, they are considered to be inside.  The\n        Include Partially Contained Entities can be used to instead\n        consider them inside if they at all touch the convex hull."], "extent": [4735, 5215]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "boundtype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Size"], "extent": [5215, 5221], "body": [{"type": "para", "indent": 4, "text": ["Size of bounding volume."], "extent": [5258, 5288]}], "container": true, "attrs": {"channels": "/sizex /sizey /sizez"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Center"], "extent": [5288, 5296], "body": [{"type": "para", "indent": 4, "text": ["Center of bounding volume."], "extent": [5324, 5356]}], "container": true, "attrs": {"channels": "/tx /ty /tz"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Initialize to Input Bounds"], "extent": [5356, 5384], "body": [{"type": "para", "indent": 4, "text": ["Set the ", {"type": "ui", "text": ["Size"]}, " and ", {"type": "ui", "text": ["Center"]}, " of the bounding box to the bounding box of\n    the elements specified in ", {"type": "ui", "text": ["Base Group"]}, " or the full geometry if disabled."], "extent": [5405, 5564]}], "container": true, "attrs": {"id": "initbounds"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Iso"], "extent": [5564, 5569], "body": [{"type": "para", "indent": 4, "text": ["The iso surface of volume to do the grouping with.  Points\n    whose volume value are less than this will be grouped.  A value of 0\n    is good for SDF volumes.  For fog volumes, use a\n    value of 0.5 and turn on ", {"type": "ui", "text": ["Invert Volumes"]}, " for best results."], "extent": [5583, 5839]}], "container": true, "attrs": {"id": "iso"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Invert Volume"], "extent": [5839, 5854], "body": [{"type": "para", "indent": 4, "text": ["Inverts sense of being inside the volume."], "extent": [5877, 5924]}], "container": true, "attrs": {"id": "invertvolume"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Include Partially Contained Entities"], "extent": [5924, 5962], "body": [{"type": "para", "indent": 4, "text": ["When grouping primitives, include primitives that have at least one point\n    in the bounding object.\n    When grouping edges, include edges that have either point in the bounding object,\n    or are intersecting the bounding object."], "extent": [5998, 6236]}], "container": true, "attrs": {"id": "includenotwhollycontained"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Keep by Normal"], "extent": [6236, 6259], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable"], "extent": [6259, 6268], "body": [{"type": "para", "indent": 4, "text": ["Enable grouping by normal.  This is not yet supported for vertex groups."], "extent": [6294, 6376]}], "container": true, "attrs": {"id": "groupnormal"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Backface from"], "extent": [6376, 6391], "body": [{"type": "para", "indent": 4, "text": ["Groups primitives facing away from this object."], "extent": [6412, 6465]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [6465, 6475], "body": [{"type": "para", "indent": 8, "text": ["Unlike grouping by normal this operation will remove items that satisfy the backface condition from any group created via another tab. If no other group is created, this operation will add satisfying items."], "extent": [6475, 6695]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "camerapath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Non-Planar Polys"], "extent": [6695, 6713], "body": [{"type": "para", "indent": 4, "text": ["Groups polygons that are non-planar given the tolerance."], "extent": [6736, 6798]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [6798, 6808], "body": [{"type": "para", "indent": 8, "text": ["Polygons that are non-planar will be added to the group regardless of the other tabs."], "extent": [6808, 6903]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "nonplanartol"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direction"], "extent": [6903, 6914], "body": [{"type": "para", "indent": 4, "text": ["Normal direction to group by."], "extent": [6928, 6967]}], "container": true, "attrs": {"id": "dir"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Spread Angle"], "extent": [6967, 6981], "body": [{"type": "para", "indent": 4, "text": ["Deviation from the direction to allow in the group."], "extent": [6997, 7058]}], "container": true, "attrs": {"id": "angle"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Include by Edges"], "extent": [7058, 7083], "body": [{"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [7083, 7090], "body": [{"type": "para", "indent": 4, "text": ["Points, primitives, and edges that match the edge grouping rules will be in the final group regardless of the other tabs."], "extent": [7090, 7217]}], "container": true}], "container": true, "role": "item_group"}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable"], "extent": [7217, 7225], "body": [{"type": "para", "indent": 4, "text": ["Enables edge grouping.  This is not yet supported for vertex groups."], "extent": [7250, 7324]}], "container": true, "attrs": {"id": "groupedges"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Edge Angle"], "extent": [7324, 7340], "body": [{"type": "para", "indent": 4, "text": ["Groups primitives with at least this angle between their normals. For edge\n    groups, an edge is included in the group if the two primitives that share \n    it satisfy this angle requirement."], "extent": [7363, 7561]}], "container": true, "attrs": {"id": "minedgeangle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Edge Angle"], "extent": [7561, 7577], "body": [{"type": "para", "indent": 4, "text": ["Groups primitives with at most this angle between their normals. For edge\n    groups, an edge is included in the group if the two primitives that share \n    it satisfy this angle requirement."], "extent": [7600, 7797]}], "container": true, "attrs": {"id": "maxedgeangle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Edge Angle Uses Angle Between Edges"], "extent": [7797, 7834], "body": [{"type": "para", "indent": 4, "text": ["For edge groups only, when this option is checked edges are included\n    in the group based on the angle between themselves, instead of the angle\n    between the primitives that share them."], "extent": [7866, 8061]}, {"type": "para", "indent": 4, "text": ["Each edge is compared against all other edges that share a point\n    with it."], "extent": [8061, 8144]}], "container": true, "attrs": {"id": "edgeanglebetweenedges"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Edge Length"], "extent": [8144, 8161], "body": [{"type": "para", "indent": 4, "text": ["Groups edges that have at least this length."], "extent": [8182, 8232]}], "container": true, "attrs": {"id": "minedgelen"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Edge Length"], "extent": [8232, 8249], "body": [{"type": "para", "indent": 4, "text": ["Groups edges that have at most this length."], "extent": [8270, 8319]}], "container": true, "attrs": {"id": "maxedgelen"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Edge Depth"], "extent": [8319, 8331], "body": [{"type": "para", "indent": 4, "text": ["Number of edges away from the points in Point Group."], "extent": [8350, 8408]}], "container": true, "attrs": {"id": "edgestep"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Group"], "extent": [8408, 8421], "body": [{"type": "para", "indent": 4, "text": ["Points around which group is centered."], "extent": [8441, 8485]}], "container": true, "attrs": {"id": "edgeptgrp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Unshared Edges"], "extent": [8485, 8501], "body": [{"type": "para", "indent": 4, "text": ["Groups all points/primitives/edges with unshared edges. For edge groups,\n    an edge is added to the group if it only has one primitive adjacent to it."], "extent": [8524, 8681]}], "container": true, "attrs": {"id": "unshared"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Boundary Groups"], "extent": [8681, 8705], "body": [{"type": "para", "indent": 4, "text": ["Create groups containing surface boundary points."], "extent": [8730, 8785]}], "container": true, "attrs": {"id": "boundarygroups"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Keep by Random Chance"], "extent": [8785, 8813], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable"], "extent": [8813, 8822], "body": [{"type": "para", "indent": 4, "text": ["Enables grouping by random chance."], "extent": [8844, 8884]}], "container": true, "attrs": {"id": "grouprandom"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Global Seed"], "extent": [8884, 8897], "body": [{"type": "para", "indent": 4, "text": ["The initial seed used to determine which elements are included in the group."], "extent": [8918, 9000]}], "container": true, "attrs": {"id": "globalseed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Seed Attribute"], "extent": [9000, 9020], "body": [{"type": "para", "indent": 4, "text": ["Whether to use an integer attribute on the specified elements that is used in place\n    of the element number when determining whether an element is included in the group."], "extent": [9044, 9221]}], "container": true, "attrs": {"id": "useseedattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Seed Attribute"], "extent": [9221, 9237], "body": [{"type": "para", "indent": 4, "text": ["An integer attribute on the specified elements that is used in place of the element\n    number when determining whether an element is included in the group.\n    For edges, the point numbers or the attribute value on both points is combined and used\n    to determine the seed for each edge.\n    For vertices, the point number or attribute value on the point that the vertex belongs to\n    is used to determine the seed for each vertex."], "extent": [9258, 9698]}], "container": true, "attrs": {"id": "seedattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Percent"], "extent": [9698, 9707], "body": [{"type": "para", "indent": 4, "text": ["The approximate fraction of elements to include in the resulting group.\n    The ", {"type": "ui", "text": ["Global Seed"]}, " is combined with the ", {"type": "ui", "text": ["Seed Attribute"]}, " or element number if\n    ", {"type": "ui", "text": ["Use Seed Attribute"]}, " is disabled, to determine a seed value for each element. This\n    seed value is then used to find a value between 0 and 100 for each element, and any\n    element with a value less than or equal to the ", {"type": "ui", "text": ["Percent"]}, " is included in the\n    group."], "extent": [9725, 10157]}], "container": true, "attrs": {"id": "percent"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [10157, 10166], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/delete", "type": "link", "text": "", "fullpath": "/nodes/sop/delete"}], "extent": [10166, 10187]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/partition", "type": "link", "text": "", "fullpath": "/nodes/sop/partition"}], "extent": [10187, 10210]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/groupcombine", "type": "link", "text": "", "fullpath": "/nodes/sop/groupcombine"}], "extent": [10210, 10236]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/groupdelete", "type": "link", "text": "", "fullpath": "/nodes/sop/groupdelete"}], "extent": [10236, 10261]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/groupexpression", "type": "link", "text": "", "fullpath": "/nodes/sop/groupexpression"}], "extent": [10261, 10290]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/grouppromote", "type": "link", "text": "", "fullpath": "/nodes/sop/grouppromote"}], "extent": [10290, 10316]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/grouprename", "type": "link", "text": "", "fullpath": "/nodes/sop/grouprename"}], "extent": [10316, 10341]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/grouptransfer", "type": "link", "text": "", "fullpath": "/nodes/sop/grouptransfer"}], "extent": [10341, 10368]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/groupcopy", "type": "link", "text": "", "fullpath": "/nodes/sop/groupcopy"}], "extent": [10368, 10391]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/grouptransfer", "type": "link", "text": "", "fullpath": "/nodes/sop/grouptransfer"}], "extent": [10391, 10419]}], "container": true}], "text": "Related"}], "title": ["Group"], "summary": ["Generates groups of points, primitives, edges, or vertices according to various criteria."], "included": ["/shelf/groupgeometry"]}