{"type": "root", "attrs": {"type": "node", "context": "sop", "namespace": "kinefx", "internal": "fbxanimimport", "icon": "SOP/kinefx-fbxanimimport", "tags": "", "since": "18.5", "version": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["FBX Animation Import"], "extent": [129, 154]}, {"type": "summary", "indent": 0, "text": ["Import animation from an FBX file as a geometry-based skeleton."], "extent": [154, 226]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [226, 238], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Import"], "extent": [238, 252], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["FBX File"], "extent": [252, 263], "body": [{"type": "para", "indent": 4, "text": ["Path to FBX file to import."], "extent": [280, 313]}], "container": true, "attrs": {"id": "fbxfile"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["FBX Clip Name"], "extent": [313, 328], "body": [{"type": "para", "indent": 4, "text": ["Specify the name of the non-default animation clip to import."], "extent": [346, 413]}, {"type": "para", "indent": 4, "text": ["An FBX file may contain multiple clips and this parameter can be used to choose which particular clip to import."], "extent": [413, 531]}], "container": true, "attrs": {"id": "clipname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Set New Clip Name"], "extent": [531, 550], "body": [{"type": "para", "indent": 4, "text": ["Sets a new name for the clip instead of using the original clip name from the FBX file (", {"type": "ui", "text": ["FBX Clip Name"]}, ")."], "extent": [574, 687]}], "container": true, "attrs": {"id": "setnewclipname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["New Clip Name"], "extent": [687, 702], "body": [{"type": "para", "indent": 4, "text": ["Specifies a name for the animation clip.\n    This is saved to the ", {"type": "code", "text": ["clipinfo"]}, " detail attribute."], "extent": [1078, 1178]}], "container": true, "attrs": {"id": "newclipname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Root Node"], "extent": [773, 784], "body": [{"type": "para", "indent": 4, "text": ["By default, the entire scene\u2019s animation is imported. Use this to import a limited subset of the scene hierarchy starting from this root node."], "extent": [802, 950]}], "container": true, "attrs": {"id": "rootnode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Color"], "extent": [950, 957], "body": [{"type": "para", "indent": 4, "text": ["The point color used for the output skeleton\u2019s ", {"type": "code", "text": ["Cd"]}, " point attribute."], "extent": [1200, 1274]}], "container": true, "attrs": {"id": "color"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Convert Units"], "extent": [1019, 1034], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the imported scene is scaled to convert from the FBX file\u2019s measurement unit (default centimeters) to Houdini scene\u2019s measurement unit as specified in Main Preferences > Hip File Options (default meters)."], "extent": [1056, 1280]}], "container": true, "attrs": {"id": "convertunits"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output"], "extent": [1280, 1288], "body": [{"type": "para", "indent": 4, "text": ["Specifies which type of pose to output for the skeleton."], "extent": [1304, 1366]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Animation"], "extent": [1366, 1381], "body": [{"type": "para", "indent": 8, "text": ["Outputs the animated poses using the parameter values on the ", {"type": "ui", "text": ["Timing"]}, " tab."], "extent": [1381, 1467]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Rest Pose"], "extent": [1467, 1482], "body": [{"type": "para", "indent": 8, "text": ["Outputs the default pose without animation."], "extent": [1482, 1535]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "output"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reload"], "extent": [1535, 1543], "body": [{"type": "para", "indent": 4, "text": ["Reload from the FBX file."], "extent": [1559, 1590]}], "container": true, "attrs": {"id": "reload"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Timing"], "extent": [1590, 1603], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Method"], "extent": [16, 24], "body": [{"type": "para", "indent": 4, "text": ["The time units for specifying animation parameters."], "extent": [49, 110]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["By Time"], "extent": [110, 123], "body": [{"type": "para", "indent": 8, "text": ["The timing parameters below will be specified in seconds."], "extent": [123, 190]}], "container": true}, {"type": "dt", "indent": 4, "text": ["By Frame"], "extent": [190, 204], "body": [{"type": "para", "indent": 8, "text": ["The timing parameters below will be specified in frames."], "extent": [204, 270]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "timeshiftmethod"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time"], "extent": [270, 276], "body": [{"type": "para", "indent": 4, "text": ["The time (in seconds) to import the animated pose from."], "extent": [291, 352]}], "container": true, "attrs": {"id": "time"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Animation Start"], "extent": [352, 369], "body": [{"type": "para", "indent": 4, "text": ["The time at which the ", {"type": "em", "text": ["source"]}, " animation starts, earlier poses will be\n    clamped to this value. When disabled, this value is taken from the source\n    animation where available. If it has no range information, Houdini\u2019s scene\n    start (", {"type": "code", "text": ["$TSTART"]}, ") value will be used."], "extent": [398, 673]}, {"type": "para", "indent": 4, "text": ["Note that no clamping is done when this is disabled."], "extent": [673, 731]}], "container": true, "attrs": {"id": "animationstarttime"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Animation End"], "extent": [731, 746], "body": [{"type": "para", "indent": 4, "text": ["The time at which the ", {"type": "em", "text": ["source"]}, " animation ends, later poses will be clamped\n    to this value. When disabled, this value is taken from the source animation\n    where available. If it has no range information, Houdini\u2019s scene end\n    (", {"type": "code", "text": ["$TEND"]}, ") value will be used."], "extent": [773, 1040]}, {"type": "para", "indent": 4, "text": ["Note that no clamping is done when this is disabled."], "extent": [1040, 1098]}], "container": true, "attrs": {"id": "animationendtime"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Playback Start"], "extent": [1098, 1114], "body": [{"type": "para", "indent": 4, "text": ["The destination time at which the specified animation will begin to\n    playback. When disabled, Houdini\u2019s scene start (", {"type": "code", "text": ["$TSTART"]}, ") value is used."], "extent": [1142, 1293]}], "container": true, "attrs": {"id": "playbackstarttime"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frame"], "extent": [1293, 1300], "body": [{"type": "para", "indent": 4, "text": ["The number to import the animated pose from."], "extent": [1316, 1366]}], "container": true, "attrs": {"id": "frame"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Animation Start"], "extent": [1366, 1383], "body": [{"type": "para", "indent": 4, "text": ["The frame at which the ", {"type": "em", "text": ["source"]}, " animation starts, earlier poses will be\n    clamped to this value.  When disabled, this value is taken from the source\n    animation where available. If it has no range information, Houdini\u2019s scene\n    start (", {"type": "code", "text": ["$FSTART"]}, ") value will be used."], "extent": [1413, 1690]}, {"type": "para", "indent": 4, "text": ["Note that no clamping is done when this is disabled."], "extent": [1690, 1748]}], "container": true, "attrs": {"id": "animationstartframe"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Animation End"], "extent": [1748, 1763], "body": [{"type": "para", "indent": 4, "text": ["The frame at which the ", {"type": "em", "text": ["source"]}, " animation ends, later poses will be clamped\n    to this value. When disabled, this value is taken from the source animation\n    where available. If it has no range information, Houdini\u2019s scene end\n    (", {"type": "code", "text": ["$FEND"]}, ") value will be used."], "extent": [1791, 2059]}, {"type": "para", "indent": 4, "text": ["Note that no clamping is done when this is disabled."], "extent": [2059, 2117]}], "container": true, "attrs": {"id": "animationendframe"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Playback Start"], "extent": [2117, 2133], "body": [{"type": "para", "indent": 4, "text": ["The destination frame at which the specified animation will begin to\n    playback. When disabled, Houdini\u2019s scene start (", {"type": "code", "text": ["$FSTART"]}, ") value is used."], "extent": [2162, 2314]}], "container": true, "attrs": {"id": "playbackstartframe"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Speed"], "extent": [56, 63], "body": [{"type": "para", "indent": 4, "text": ["Sets the speed factor for the playback of the animation. This is\n    applied after any clamping is performed from the Animation Start/End\n    parameters."], "extent": [79, 237]}], "container": true, "attrs": {"id": "speed"}, "role": "item"}], "container": true}]}], "text": "Parameters"}, {"level": 1, "id": "attributes", "container": true, "type": "attributes_section", "indent": 0, "role": "section", "extent": [1655, 1667], "body": [{"type": "attributes_item_group", "body": [{"type": "attributes_item", "indent": 0, "text": ["clipinfo"], "extent": [16, 26], "body": [{"type": "para", "indent": 4, "text": ["This detail attribute records the current animation range and sample rate\n    as well as the original animation range and sample rate of the imported\n    animation."], "extent": [45, 215]}], "container": true, "attrs": {"id": "clipinfo"}, "role": "item", "id": "clipinfo"}, {"type": "attributes_item", "indent": 0, "text": ["name"], "extent": [1703, 1709], "body": [{"type": "para", "indent": 4, "text": ["Point attribute containing the unique name across all points used for identification. This is derived from the corresponding FBX node name. However, since FBX node names may not be unique and for these cases,\n    subsequent names will be suffixed with 1, 2, 3, etc."], "extent": [1709, 1980]}], "container": true, "role": "item", "id": "name"}, {"type": "attributes_item", "indent": 0, "text": ["path"], "extent": [1980, 1986], "body": [{"type": "para", "indent": 4, "text": ["Point attribute containing the hierarchical path of FBX node that corresponds to the point. It is used by the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--rop_fbxanimoutput", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--rop_fbxanimoutput"}, " SOP for identifying where transforms should be exported back to."], "extent": [1986, 2203]}], "container": true, "role": "item", "id": "path"}, {"type": "attributes_item", "indent": 0, "text": ["scaleinheritance"], "extent": [215, 233], "body": [{"type": "para", "indent": 4, "text": ["This point attribute specifies the scaling behavior when performing local\n    transformations. For more details on what these values indicate see\n    ", {"scheme": "Vex", "value": "/vex/functions/combinelocaltransform", "type": "link", "text": "", "fallback_text": "combinelocaltransform()", "fullpath": "/vex/functions/combinelocaltransform"}, " and ", {"scheme": "Vex", "value": "/vex/functions/extractlocaltransform", "type": "link", "text": "", "fallback_text": "extractlocaltransform()", "fullpath": "/vex/functions/extractlocaltransform"}], "extent": [267, 482]}], "container": true, "attrs": {"id": "scaleinheritance_attrib"}, "role": "item", "id": "scaleinheritance"}, {"type": "attributes_item", "indent": 0, "text": ["transform"], "extent": [482, 493], "body": [{"type": "para", "indent": 4, "text": ["This 3\u00d73 matrix point attribute specifies the world transform for the\n    point. While the world position of the point is still ", {"type": "code", "text": ["P"]}, ", this transform\n    encodes the world transform\u2019s rotation, scale, and shear components."], "extent": [520, 746]}], "container": true, "attrs": {"id": "transform_attrib"}, "role": "item", "id": "transform"}], "container": true, "role": "item_group"}], "text": "Attributes"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2296, 2305], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--rop_fbxanimoutput", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--rop_fbxanimoutput"}], "extent": [2305, 2344]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fbxcharacterimport", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fbxcharacterimport"}], "extent": [2344, 2384]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fbxskinimport", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fbxskinimport"}], "extent": [2384, 2419]}], "container": true}], "text": "Related"}], "title": ["FBX Animation Import"], "summary": ["Import animation from an FBX file as a geometry-based skeleton."], "included": ["/nodes/sop/_kinefx_common", "/nodes/sop/agent", "/nodes/sop/kinefx--usdanimimport", "/nodes/sop/kinefx--usdskinimport", "/nodes/sop/standard_kinefx_timing_parms", "/nodes/sop/standard_kinefx_timing_parms_with_speed"]}