{"type": "root", "attrs": {"type": "node", "context": "sop", "namespace": "kinefx", "internal": "usdskinimport", "icon": "SOP/kinefx-usdskinimport", "tags": "usd, lop, animation, skin, retargeting", "since": "18.5", "verb_since": "18.5", "version": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["USD Skin Import"], "extent": [185, 205]}, {"type": "summary", "indent": 0, "text": ["Imports skinned geometry from a UsdSkel character."], "extent": [205, 264]}, {"type": "para", "indent": 0, "text": ["This SOP imports geometry from any ", {"scheme": null, "value": "https://graphics.pixar.com/usd/docs/api/_usd_skel__schemas.html#UsdSkel_BindingAPI", "type": "link", "text": ["skinned primitives"], "exists": true}, " under a USD ", {"type": "code", "text": ["SkelRoot"]}, " primitive.\nNo deformation is performed, so the output contains rest geometry that is suitable as an input for the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--jointdeform", "type": "link", "text": ["Joint Deform SOP"], "fullpath": "/nodes/sop/kinefx--jointdeform"}, " or an ", {"scheme": "Node", "value": "/nodes/sop/agentlayer", "type": "link", "text": ["agent primitive"], "fullpath": "/nodes/sop/agentlayer"}, "."], "extent": [264, 634]}, {"type": "para", "indent": 0, "text": ["The ", {"type": "code", "text": ["boneCapture"]}, " capture attribute is constructed from the ", {"type": "code", "text": ["primvars:skel:jointIndices"]}, " and ", {"type": "code", "text": ["primvars:skel:jointWeights"]}, " primvars on the USD primitive, along with attributes from the USD ", {"type": "code", "text": ["Skeleton"]}, " primitive that the skinned primitive is bound to."], "extent": [634, 884]}, {"type": "para", "indent": 0, "text": ["The ", {"type": "code", "text": ["usdprimpath"]}, " primitive attribute contains the path of the source USD primitive."], "extent": [884, 970]}, {"type": "para", "indent": 0, "text": ["The skeleton\u2019s bind pose and animation can be imported using ", {"scheme": "Node", "value": "/nodes/sop/kinefx--usdanimimport", "type": "link", "text": ["USD Animation Import"], "fullpath": "/nodes/sop/kinefx--usdanimimport"}, " or the higher-level ", {"scheme": "Node", "value": "/nodes/sop/kinefx--usdcharacterimport", "type": "link", "text": ["USD Character Import"], "fullpath": "/nodes/sop/kinefx--usdcharacterimport"}, "."], "extent": [970, 1166]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1166, 1178], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Source"], "extent": [1178, 1187], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether the source USD stage is from a LOP node or USD file on disk."], "extent": [15718, 15802]}], "container": true, "attrs": {"id": "source"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["LOP Path"], "extent": [1247, 1257], "body": [{"type": "para", "indent": 4, "text": ["Specifies the path to a LOP node. The geometry will be imported from the USD stage output by this node."], "extent": [1274, 1384]}], "container": true, "attrs": {"id": "loppath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["USD File"], "extent": [1384, 1394], "body": [{"type": "para", "indent": 4, "text": ["The path to a USD file on disk."], "extent": [16003, 16040]}], "container": true, "attrs": {"id": "usdfile"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["SkelRoot Primitive Path"], "extent": [1453, 1478], "body": [{"type": "para", "indent": 4, "text": ["The path of a ", {"type": "code", "text": ["SkelRoot"]}, " primitive in the USD stage.\n    If the path is empty, the first ", {"type": "code", "text": ["SkelRoot"]}, " prim in the stage will be used."], "extent": [16087, 16224]}], "container": true, "attrs": {"id": "skelrootprimpath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shape Name Attribute"], "extent": [1551, 1573], "body": [{"type": "para", "indent": 4, "text": ["Creates a primitive string attribute that partitions the primitives into different named shapes.\n    The names are generated using the relative path from the ", {"type": "ui", "text": ["SkelRoot Primitive Path"]}, " to the source skinned USD primitive."], "extent": [1597, 1826]}], "container": true, "attrs": {"id": "shapenameattr"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [1826, 1835], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Rest Mesh"], "extent": [1835, 1847], "body": [{"type": "para", "indent": 4, "text": ["The character\u2019s rest geometry."], "extent": [1847, 1883]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [1883, 1892], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--usdcharacterimport", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--usdcharacterimport"}], "extent": [1892, 1932]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--usdanimimport", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--usdanimimport"}], "extent": [1932, 1967]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fbxcharacterimport", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fbxcharacterimport"}], "extent": [1967, 2007]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--jointdeform", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--jointdeform"}], "extent": [2007, 2040]}], "container": true}], "text": "Related"}], "title": ["USD Skin Import"], "summary": ["Imports skinned geometry from a UsdSkel character."], "included": ["/nodes/sop/agent"]}