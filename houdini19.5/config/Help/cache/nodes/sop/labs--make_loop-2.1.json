{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "labs::make_loop::2.1", "icon": "make_loop_white", "tags": "sidefxlabs,  model, gamedev", "version": "2.1", "namespace": "labs"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Labs Make Loop"], "extent": [0, 19]}, {"type": "summary", "indent": 0, "text": [" Takes a mesh or volume that is animated and loops them. "], "extent": [137, 202]}, {"type": "para", "indent": 0, "text": ["This node will make either a mesh, volume or particle effect loop. "], "extent": [202, 271]}, {"type": "para", "indent": 0, "text": ["The general idea is that it will offset the animation by half of the timeline and then do a sinewave to blend between the two animations. "], "extent": [271, 411]}, {"type": "para", "indent": 0, "text": ["This will work with meshes with constant topology or volumes, or with particles coming out of a popnet with the right attributes."], "extent": [411, 542]}, {"type": "col_group", "body": [{"ext": null, "type": "col", "indent": 0, "role": "item", "extent": [542, 548], "body": [{"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/make_loop_before.gif", "type": "img", "text": ""}], "extent": [548, 594]}, {"type": "para", "indent": 4, "text": ["Mesh sequence before looping applied "], "extent": [594, 637]}], "container": true}, {"ext": null, "type": "col", "indent": 0, "role": "item", "extent": [637, 643], "body": [{"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/make_loop_after.gif", "type": "img", "text": ""}], "extent": [643, 684]}, {"type": "para", "indent": 4, "text": ["Mesh sequence after looping applied "], "extent": [684, 726]}], "container": true}], "container": true, "role": "item_group"}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [726, 732], "body": [{"type": "para", "indent": 4, "text": ["If you set the time range too short for particles, all particles will be removed before looping; You will therefore have to modify their lifespan settings accordingly. You need the following point attributes from an input particle system to get it to work: ", {"type": "q", "text": ["id"]}, ", ", {"type": "q", "text": ["age"]}, ", ", {"type": "q", "text": ["life"]}, ", and ", {"type": "q", "text": ["pscale"]}, " (it will be created for you if it is missing)."], "extent": [732, 1076]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1076, 1088], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Start Frame"], "extent": [1088, 1105], "body": [{"type": "para", "indent": 8, "text": ["First frame of the input animation."], "extent": [1105, 1149]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["End Frame"], "extent": [1149, 1164], "body": [{"type": "para", "indent": 8, "text": ["Last frame of the input animation."], "extent": [1164, 1207]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Num of Double-Loops"], "extent": [1207, 1232], "body": [{"type": "para", "indent": 8, "text": ["The loops are always created in pairs of two, e.g.: if this paramater is set to 1/2/3, you will see 2/4/6 visually repeating cycles. This is due to how the looping effect is achieved. For instance, let\u2019s say this parameter is set to N (and N is 2) and the animation duration is 200 frames:\n        ", {"tag": "p", "attrs": {}, "type": "xml", "text": ["first, the base animation is divided into N sections (2 sections); only the first section is retained and it is repeated for N times (2 times);"]}, "\n        ", {"tag": "p", "attrs": {}, "type": "xml", "text": ["then, the repeated first sections (100 frames per section) are copied and shifted by half the section length (50 frames);"]}, "\n        ", {"tag": "p", "attrs": {}, "type": "xml", "text": ["finally, the base sections (repeating 100-frame sections) and the shifted sections (repeating 100-frame sections with a 50-frame offset) are blended or added together, creating seamless transitions. As a result, in the length of a single base section (100 frames), the visuals actually repeat twice (once every 50 frames). Hence the loops are more appropriately called ", {"type": "q", "text": ["double-loops"]}, "."]}], "extent": [1232, 2226]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Born Before Loop Start"], "extent": [2226, 2254], "body": [{"type": "para", "indent": 8, "text": ["Sets how to handle particles born too early. For the looping to work, the birth and death of a particle must be within the range of the first double-loop, e.g.: if ", {"type": "strong", "text": ["Num of Double-Loops"]}, " is set to 2, the end of the first double-loop is half-way between Start Frame and End Frame."], "extent": [2254, 2541]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Dead After Loop End"], "extent": [2541, 2566], "body": [{"type": "para", "indent": 8, "text": ["Sets how to handle particles dying too late. For the looping to work, the birth and death of a particle must be within the range of the first double-loop, e.g.: if ", {"type": "strong", "text": ["Num of Double-Loops"]}, " is set to 2, the end of the first double-loop is half-way between Start Frame and End Frame.\n        ", {"tag": "p", "attrs": {}, "type": "xml", "text": ["It is recommended to reduce the life expectancy of your particles to fit within the range of a double-loop. But if you have to clamp particle lives at the end of the double-loop, it may result in a sudden drop in particle count as a lot of particles die at once. You can counter this with ", {"type": "strong", "text": ["Fade Out Pscale"]}, "."]}], "extent": [2566, 3176]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Prevent Loops from Repeating Particle IDs"], "extent": [3176, 3223], "body": [{"type": "para", "indent": 8, "text": ["Offsets the point IDs from different loops to avoid repeated ID values. It is recommended to leave this on. Please note that this will not fix already repeated IDs on the input geometry."], "extent": [3223, 3418]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Particle Wrap Mode"], "extent": [3418, 3442], "body": [{"type": "para", "indent": 8, "text": ["Particles still alive at the end of the whole animation (from Start Frame to End Frame) will have the rest of their lifespans wrapped to the start of the animation.\n        ", {"tag": "p", "attrs": {}, "type": "xml", "text": [{"type": "strong", "text": ["Stay Alive from End to Start"]}, ": is best suited for Houdini; it keeps the IDs consistent and ages the particles naturally."]}, "\n        ", {"tag": "p", "attrs": {}, "type": "xml", "text": [{"type": "strong", "text": ["Die at End and Respawn as New Particles at Start"]}, ": is suited for Niagara; it offsets the ID, age, and life attributes to create two distinct groups of particles for the end and the start of the animation; it will often result in a few mismatched particles during emitter loop transitions, which can be countered with ", {"type": "strong", "text": ["Fade In Pscale"]}, "."]}, "\n        ", {"tag": "p", "attrs": {}, "type": "xml", "text": [{"type": "strong", "text": ["Spawn at Start, Hide, and Reappear near End"]}, ": is suited for Niagara; instead of wrapping particles, it spawns them at the start, keeps them alive throughout the animation, sets their pscales to zero when they should be invisible, and then lets them reappear near the end of the animation; it does not create mismatched particles during emitter loop transitions, but it will waste some resources moving invisible particles."]}, "\n        ", {"tag": "p", "attrs": {}, "type": "xml", "text": [{"type": "strong", "text": ["Never Spawn to Avoid Wrapping"]}, ": premptively removes the particles that need wrapping; it sidesteps the problem, but it will result in noticeable drops in particle count during emitter loop transitions."]}], "extent": [3442, 4760]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Fade In Pscale"], "extent": [4760, 4780], "body": [{"type": "para", "indent": 8, "text": ["Linearly scales the ", {"type": "q", "text": ["pscale"]}, " attribute from 0% to 100% at the start of each particle\u2019s original lifespan (unaffected by any modifications to the age and life attributes from particle wrapping). This is particularly helpful when ", {"type": "strong", "text": ["Particle Wrap Mode"]}, " is set to ", {"type": "q", "text": ["Die at End and Respawn \u2026"]}, ", as this obfuscates the minor glitches that may happen during emitter loop transition."], "extent": [4780, 5163]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Fade-In Duration"], "extent": [5163, 5185], "body": [{"type": "para", "indent": 8, "text": ["In seconds, the absolute duration of each particle\u2019s pscale fade-in effect."], "extent": [5185, 5269]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Fade Out Pscale"], "extent": [5269, 5290], "body": [{"type": "para", "indent": 8, "text": ["Linearly scales the ", {"type": "q", "text": ["pscale"]}, " attribute from 100% to 0% towards end of each particle\u2019s original lifespan (unaffected by any modifications to the age and life attributes from particle wrapping)."], "extent": [5290, 5491]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Fade-Out Duration"], "extent": [5491, 5514], "body": [{"type": "para", "indent": 8, "text": ["In seconds, the absolute duration of each particle\u2019s pscale fade-out effect."], "extent": [5514, 5599]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Visualization"], "extent": [5599, 5623], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Output Preview Geometry"], "extent": [5623, 5652], "body": [{"type": "para", "indent": 8, "text": ["Outputs preview geometry with primitive spheres. The pscale attribute affects the scales of the spheres. Turning this on overrides the output of this node, so turn it off to output the actual particles."], "extent": [5652, 5863]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Color by Normalized Age"], "extent": [5863, 5892], "body": [{"type": "para", "indent": 8, "text": ["Colors the preview spheres using the age attribute divided by the life attribute. The 0-to-1 value is mapped to the violet-to-red color gradient."], "extent": [5892, 6045]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "title": ["Labs Make Loop"], "summary": [" Takes a mesh or volume that is animated and loops them. "]}