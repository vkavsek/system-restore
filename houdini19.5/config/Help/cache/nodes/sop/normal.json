{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "normal", "icon": "SOP/normal", "since": "13.5", "verb_since": "16.5", "tags": "vertex", "bestbet": "normals", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Normal"], "extent": [0, 11]}, {"type": "summary", "indent": 0, "text": ["Computes surface normal attribute."], "extent": [139, 181]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [181, 196], "body": [{"type": "para", "indent": 0, "text": ["This node computes point, vertex, primitive, or detail normals using a more accurate approach than the ", {"scheme": "Node", "value": "/nodes/sop/facet", "type": "link", "text": ["Facet node"], "fullpath": "/nodes/sop/facet"}, "\nor the ", {"scheme": "Node", "value": "/nodes/sop/vertex", "type": "link", "text": ["Vertex node"], "fullpath": "/nodes/sop/vertex"}, "."], "extent": [196, 367]}, {"type": "para", "indent": 0, "text": ["Unlike the ", {"scheme": "Node", "value": "/nodes/sop/vertex", "type": "link", "text": ["Vertex node"], "fullpath": "/nodes/sop/vertex"}, ", it supports computing vertex normals for polygon soup primitives\nthat were created with a ", {"scheme": "Node", "value": "/nodes/sop/polysoup", "type": "link", "text": ["PolySoup node"], "fullpath": "/nodes/sop/polysoup"}, " having the ", {"type": "ui", "text": ["Merge Identical Vertices"]}, " option disabled.  Existing polygon soup\nprimitives can be passed through a ", {"scheme": "Node", "value": "/nodes/sop/polysoup", "type": "link", "text": ["PolySoup node"], "fullpath": "/nodes/sop/polysoup"}, " with ", {"type": "ui", "text": ["Merge Identical Vertices"]}, " disabled to ensure that vertices are unmerged."], "extent": [367, 764]}, {"type": "vimeo_group", "body": [{"ext": null, "type": "vimeo", "indent": 0, "text": ["Edge smoothness"], "role": "item", "extent": [764, 787], "body": [], "container": true, "attrs": {"id": "116797433"}}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [807, 819], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [819, 827], "body": [{"type": "para", "indent": 4, "text": ["The subset of geometry whose normal attribute, ", {"type": "code", "text": ["N"]}, ", should be modified."], "extent": [843, 920]}, {"type": "para", "indent": 4, "text": ["This can be a point, vertex, primitive, or edge group.  If necessary, it will be expanded to a point, vertex, or primitive group, depending on the value of ", {"type": "ui", "text": ["Add Normals to"]}, ".\n    If the input geometry doesn\u2019t have a normal attribute and ", {"type": "ui", "text": ["Add Normals to"]}, " is set to ", {"type": "ui", "text": ["Vertices"]}, ", completely smooth vertex normals, as if Cusp Angle were 180,\n    will be computed over all vertices first, and then normals will be computed for the group as specified.  If the input geometry doesn\u2019t have a normal attribute and\n    ", {"type": "ui", "text": ["Add Normals to"]}, " is set to anything else, this group will be ignored and normals will be computed for all relevant geometry elements."], "extent": [920, 1574]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group Type"], "extent": [1574, 1586], "body": [{"type": "para", "indent": 4, "text": ["The type of group that ", {"type": "ui", "text": ["Group"]}, " specifies."], "extent": [1606, 1655]}, {"type": "para", "indent": 4, "text": ["If ", {"type": "ui", "text": ["Guess from Group"]}, " is specified and the group type is ambiguous, the guess is made that ", {"type": "ui", "text": ["Group"]}, " specifies a primitive group."], "extent": [1655, 1792]}], "container": true, "attrs": {"id": "grouptype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Override Normal"], "extent": [1792, 1809], "body": [{"type": "para", "indent": 4, "text": ["The name of the normal attribute to create or modify."], "extent": [1832, 1891]}], "container": true, "attrs": {"id": "normalattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Compute Normals"], "extent": [1891, 1908], "body": [{"type": "para", "indent": 4, "text": ["When enabled, a normal attribute will be created or modified based on ", {"type": "ui", "text": ["Add Normals to"]}, ", ", {"type": "ui", "text": ["Cusp Angle"]}, ", and ", {"type": "ui", "text": ["Weighting Method"]}, " for the specified ", {"type": "ui", "text": ["Group"]}, "."], "extent": [1928, 2097]}], "container": true, "attrs": {"id": "docompute"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Add Normals to"], "extent": [2097, 2113], "body": [{"type": "para", "indent": 4, "text": ["The type of elements to which to add or modify the normal attribute, ", {"type": "code", "text": ["N"]}, "."], "extent": [2128, 2207]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Points"], "extent": [2207, 2219], "body": [{"type": "para", "indent": 8, "text": ["Normals will be computed for each point.  This will be the average of the vertex normals around the point, weighted by the vertex angle for\n        each polygon incident to the points, so that, for example, triangulating the surface won\u2019t change the result."], "extent": [2219, 2486]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Vertices"], "extent": [2486, 2500], "body": [{"type": "para", "indent": 8, "text": ["Normals will be computed for each vertex.  If normals of vertices around a single point are less than ", {"type": "ui", "text": ["Cusp Angle"]}, " apart from each other, they will\n        be averaged together, weighted by the vertex angle in each polygon."], "extent": [2500, 2735]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Primitives"], "extent": [2735, 2751], "body": [{"type": "para", "indent": 8, "text": ["Normals will be computed for each primitive."], "extent": [2751, 2805]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Detail"], "extent": [2805, 2817], "body": [{"type": "para", "indent": 8, "text": ["A single normal will be computed for the detail, being the average of the primitive normals, weighted by the primitive area."], "extent": [2817, 2951]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "type"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cusp Angle"], "extent": [2951, 2963], "body": [{"type": "para", "indent": 4, "text": ["When computing vertex normals, if normals of vertices around a single point are less than or equal to this angle (in degrees) apart from each other, they will\n    be averaged together, weighted by the vertex angle in each polygon."], "extent": [2983, 3219]}], "container": true, "attrs": {"id": "cuspangle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Weighting Method"], "extent": [3219, 3237], "body": [{"type": "para", "indent": 4, "text": ["When set to ", {"type": "ui", "text": ["By Vertex Angle"]}, ", care is taken when computing normals to try to avoid issues introduced by sliver polygons and to weight contributions to normals by angle, so that triangulation won\u2019t change normals significantly.\n    When set to ", {"type": "ui", "text": ["Each Vertex Equally"]}, ", a faster, but less accurate, approach similar to the approach used by the ", {"scheme": "Node", "value": "/nodes/sop/facet", "type": "link", "text": ["Facet SOP"], "fullpath": "/nodes/sop/facet"}, ", is used to compute normals, where each vertex is given equal weight around a point, and less checks are done for ensuring stability.\n    When set to ", {"type": "ui", "text": ["By Face Area"]}, ", the behavior is similar to __Each Vertex Equally_, except that vertices on faces with more area will be given more weight when computing point normals.  This is often used to fake the appearance of a smooth bevel for geometry with only a simple chamfer."], "extent": [3254, 4053]}], "container": true, "attrs": {"id": "method"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Original Normal Where Computed Normal Is Zero"], "extent": [4053, 4105], "body": [{"type": "para", "indent": 4, "text": ["Some points, especially disconnected points, can only generate a zero normal as a normal does not technically make sense for them.  However, often the normal attribute is used for other purposes on these points.  With this option, if the normal computes to zero it will be left unchanged from the input rather than wiping it out."], "extent": [4126, 4461]}], "container": true, "attrs": {"id": "origifzero"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Make Normals Unit Length"], "extent": [4461, 4487], "body": [{"type": "para", "indent": 4, "text": ["When enabled, existing normals in the specified ", {"type": "ui", "text": ["Group"]}, " will be normalized, i.e. each scaled to have length ", {"type": "code", "text": ["1"]}, ".  This is disabled when ", {"type": "ui", "text": ["Compute Normals"]}, " is on, because computed normals are already normalized."], "extent": [4507, 4726]}], "container": true, "attrs": {"id": "normalize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reverse Normals"], "extent": [4726, 4743], "body": [{"type": "para", "indent": 4, "text": ["When enabled, normals in the specified ", {"type": "ui", "text": ["Group"]}, " will have their directions reversed, i.e. the normals will be multiplied by ", {"type": "code", "text": ["-1"]}, "."], "extent": [4761, 4897]}], "container": true, "attrs": {"id": "reverse"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [4897, 4906], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/facet", "type": "link", "text": "", "fullpath": "/nodes/sop/facet"}], "extent": [4906, 4926]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/vertex", "type": "link", "text": "", "fullpath": "/nodes/sop/vertex"}], "extent": [4926, 4947]}], "container": true}], "text": "Related"}], "title": ["Normal"], "summary": ["Computes surface normal attribute."]}