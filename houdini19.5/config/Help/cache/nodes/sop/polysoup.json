{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "polysoup", "icon": "SOP/polysoup", "since": "12.5", "verb_since": "16.5", "tags": "polygons, convert, optimize", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["PolySoup"], "extent": [134, 147]}, {"type": "summary", "indent": 0, "text": ["Combines polygons into a single primitive that can be more efficient for many polygons"], "extent": [147, 242]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [242, 257], "body": [{"type": "para", "indent": 0, "text": ["This node combines polygons into a single, polygon soup primitive to save memory and time for large geometry.  It also supports combining multiple polygon soups into one."], "extent": [257, 430]}, {"type": "para", "indent": 0, "text": ["Vertices with identical attribute values will become a single vertex.  Polygons with different primitive attribute values or different groups will be put into different polygon soups to ensure that primitive attributes and groups are preserved. "], "extent": [430, 677]}, {"type": "para", "indent": 0, "text": ["Large polygon soups require less memory than the equivalent polygons, or less disk space when stored in a file.  Saving and loading large polygon soups from files is also faster than saving and loading the equivalent polygons.  The larger the polygon soup, the greater the savings in storage and computation."], "extent": [677, 987]}, {"type": "para", "indent": 0, "text": ["Unlike a large set of polygon primitives, much of the memory used by a large polygon soup can be shared among different nodes, so long as the topology of the soup does not change.  For example, if a particular polygon soup uses 200MB of memory, and is input into an ", {"scheme": "Node", "value": "/nodes/sop/attribcreate", "type": "link", "text": ["AttribCreate SOP"], "fullpath": "/nodes/sop/attribcreate"}, ", the same 200MB is used for the polygon soup instead of using an additional 200MB, since it has not been modified."], "extent": [987, 1410]}, {"type": "para", "indent": 0, "text": ["You can convert polygon soups back to polygons with the ", {"scheme": "Node", "value": "/nodes/sop/convert", "type": "link", "text": ["Convert SOP"], "fullpath": "/nodes/sop/convert"}, ".  The polygons output from the ", {"scheme": "Node", "value": "/nodes/sop/convert", "type": "link", "text": ["Convert node"], "fullpath": "/nodes/sop/convert"}, " may be in a different order than the polygons put into the polygon soup, but should remain topologically equivalent if the ", {"type": "ui", "text": ["Convex Polygons"]}, " option is not selected."], "extent": [1410, 1728]}, {"type": "para", "indent": 0, "text": ["The polysoup geometry type is an optimized form for polygons that uses less space and is faster for certain operations. Currently it is useful in lighting and rendering workflows to output smaller geometry files, where you would convert regular polygon geometry to polysoup at the end of the geometry network before exporting."], "extent": [1728, 2056]}, {"type": "para", "indent": 0, "text": ["Not all SOP nodes work with polysoup geometry. The typical nodes needed to ready geometry for export (Convexing with the ", {"scheme": "Node", "value": "/nodes/sop/divide", "type": "link", "text": ["Divide node"], "fullpath": "/nodes/sop/divide"}, ", the ", {"scheme": "Node", "value": "/nodes/sop/material", "type": "link", "text": ["Material node"], "fullpath": "/nodes/sop/material"}, ", ", {"scheme": "Node", "value": "/nodes/sop/point", "type": "link", "text": ["Point node"], "fullpath": "/nodes/sop/point"}, ", other attribute modifying nodes) support polysoup. Some nodes are faster with polysoup geometry (such as ", {"scheme": "Node", "value": "/nodes/sop/copy", "type": "link", "text": ["Copy"], "fullpath": "/nodes/sop/copy"}, ", ", {"scheme": "Node", "value": "/nodes/sop/xform", "type": "link", "text": ["Transform"], "fullpath": "/nodes/sop/xform"}, ", ", {"scheme": "Node", "value": "/nodes/sop/delete", "type": "link", "text": ["Delete"], "fullpath": "/nodes/sop/delete"}, ", ", {"scheme": "Node", "value": "/nodes/sop/divide", "type": "link", "text": ["Divide"], "fullpath": "/nodes/sop/divide"}, "), but polysoup is not currently meant for general modeling/editing."], "extent": [2056, 2551]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Limitations"], "extent": [2551, 2569], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Most editing functions in Houdini cannot work with polygon soups."], "extent": [2569, 2639]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The advantage of polygon soups is lost when many polygons all have different primitive attribute values, since the polygons will all be in separate polygon soups."], "extent": [2639, 2805]}], "container": true}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2805, 2817], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Source Group"], "extent": [2817, 2832], "body": [{"type": "para", "indent": 4, "text": ["The group of polygons to combine in a polygon soup.  If this is blank, all polygons will be considered for combining in a polygon soup.  You can ", {"scheme": null, "value": "/model/groups", "type": "link", "text": ["create a group"], "fullpath": "/model/groups"}, " and use this parameter to mask the combining so it only applies to the polygons in the group."], "extent": [2832, 3106]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ignore Primitive Attributes"], "extent": [3106, 3135], "body": [{"type": "para", "indent": 4, "text": ["Ignore the values of primitive attributes when determining which polygons of the source group can be combined into a polygon soup. This may increase performance."], "extent": [3135, 3301]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ignore Primitive Groups"], "extent": [3301, 3326], "body": [{"type": "para", "indent": 4, "text": ["Ignore the membership in primitive groups when determining which polygons of the source group can be combined into a polygon soup. This may increase performance."], "extent": [3326, 3492]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Minimum Polygons"], "extent": [3492, 3510], "body": [{"type": "para", "indent": 4, "text": ["If fewer polygons than this number can be combined into a polygon soup, they will be kept as separate polygon primitives.  This is useful to avoid producing many polygon soups, each containing very few polygons."], "extent": [3510, 3726]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Convex Polygons"], "extent": [3726, 3743], "body": [{"type": "para", "indent": 4, "text": ["Makes the polygons in the polygon soup convex."], "extent": [3743, 3794]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Maximum Edges"], "extent": [3794, 3809], "body": [{"type": "para", "indent": 4, "text": ["If the ", {"type": "ui", "text": ["Convex Polygons"]}, " option is selected, this specifies whether polygons above a maximum number of edges should be split into polygons with fewer edges.  For example, specifying 3 as the maximum produces polygon soups that are triangulated."], "extent": [3809, 4060]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Merge Identical Vertices"], "extent": [4060, 4086], "body": [{"type": "para", "indent": 4, "text": ["Since many polygons can be represented in a single polygon soup primitive, a single vertex can be shared by more than one of these polygons. This option allows a single vertex in the polygon soup to represent what is multiple vertices in the input, saving memory, if those vertices refer to the same point and have identical attribute values.  However, adding vertex attributes to the polysoup may require unique vertices for each polygon."], "extent": [4086, 4531]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [4531, 4540], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/convert", "type": "link", "text": "", "fullpath": "/nodes/sop/convert"}], "extent": [4540, 4562]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/divide", "type": "link", "text": "", "fullpath": "/nodes/sop/divide"}], "extent": [4562, 4583]}], "container": true}], "text": "Related"}], "title": ["PolySoup"], "summary": ["Combines polygons into a single primitive that can be more efficient for many polygons"]}