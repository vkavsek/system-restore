{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "polywire", "icon": "SOP/polywire", "tags": "polygons, curves, convert", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["PolyWire"], "extent": [0, 13]}, {"type": "summary", "indent": 0, "text": ["Constructs polygonal tubes around polylines, creating\nrenderable geometry with smooth bends and intersections."], "extent": [114, 232]}, {"type": "para", "indent": 0, "text": ["This node works like the ", {"scheme": "Node", "value": "/nodes/sop/wire", "type": "link", "text": ["Wireframe node"], "fullpath": "/nodes/sop/wire"}, ",\nbut this node creates more complex tube geometry from curves,\nwith smoother bends and intersections than Wireframe, especially for\n", {"scheme": "Node", "value": "/nodes/sop/lsystem", "type": "link", "text": ["L-systems"], "fullpath": "/nodes/sop/lsystem"}, ".\n(The ", {"scheme": "Node", "value": "/nodes/sop/wire", "type": "link", "text": ["Wireframe node"], "fullpath": "/nodes/sop/wire"}, " creates transition surfaces where the original curve branches.)"], "extent": [232, 551]}, {"type": "para", "indent": 0, "text": ["The four numerical parameters support all the local variables of the\nPoint operation, plus the LSYSTEM specific variables of $WIDTH, $SEGS,\n$DIV, $LAGE, $GEN, and $ARC."], "extent": [551, 721]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [721, 726], "body": [{"type": "para", "indent": 4, "text": ["You can disable end caps using a workaround. First, add an attribute wrangle between the input curve and the Polywire node with the following snippet:"], "extent": [726, 886]}, {"lang": "vex", "type": "pre", "indent": 4, "text": ["\n    // Create an attribute which is 1 if the point is interior and 0\n    // if it's at the end\n    i@isinterior = neighbourcount(0, @ptnum) > 1;\n    "], "extent": [886, 1057]}, {"type": "para", "indent": 4, "text": ["Then, in the Polywire node, set ", {"type": "ui", "text": ["Smooth points"]}, " to ", {"type": "code", "text": ["@isinterior"]}, ". "], "extent": [1057, 1136]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1136, 1148], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [1148, 1156], "body": [{"type": "para", "indent": 4, "text": ["The group of polygons to convert to wires."], "extent": [1156, 1208]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Wire Radius"], "extent": [1208, 1221], "body": [{"type": "para", "indent": 4, "text": ["This is the radius of the wire to sweep over the polygon."], "extent": [1238, 1305]}], "container": true, "attrs": {"id": "radius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Maximum Joint Scale"], "extent": [1305, 1326], "body": [{"type": "para", "indent": 4, "text": ["Prevent Joint Buckling scales up the intersection points so\n    that they lie on the intersection of two tubes, rather than a\n    width sized sphere. This can cause the points to be scaled past\n    the first segment of the tube, however, causing buckling. This\n    parameter allows you to change on a point level what the maximum\n    scale applied to the points is."], "extent": [1345, 1720]}], "container": true, "attrs": {"id": "maxscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Smooth Point"], "extent": [1720, 1734], "body": [{"type": "para", "indent": 4, "text": ["If the expression evaluates to a non-zero value for a point,\n    the generated tube is smooth and connected through that point.\n    If the expression is zero, the corresponding segment is disconnected.\n    A value of zero will leave ends uncapped."], "extent": [1755, 2008]}], "container": true, "attrs": {"id": "smooth"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Divisions"], "extent": [2008, 2019], "body": [{"type": "para", "indent": 4, "text": ["This is the number of divisions in the circle which is to be\n    swept over the polygon. It can vary on a point basis."], "extent": [2033, 2157]}], "container": true, "attrs": {"id": "div"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Segments"], "extent": [2157, 2167], "body": [{"type": "para", "indent": 4, "text": ["The number of segments to divide each edge of the polygon into.\n    It can vary on a point basis."], "extent": [2182, 2285]}], "container": true, "attrs": {"id": "segs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Segment Scales"], "extent": [2285, 2301], "body": [{"type": "para", "indent": 4, "text": ["These are how far into the segment to make the first circle and\n    how far towards the end to keep going. Both values are in the\n    range 0-1, where 0 is the start and 1 the end. These are segment\n    specific values. The local variable $NSEG is available here for\n    the number of segments in the previous parameter."], "extent": [2320, 2646]}], "container": true, "attrs": {"id": "segscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prevent Joint Buckling"], "extent": [2646, 2670], "body": [{"type": "para", "indent": 4, "text": ["This toggle when set will scale the intersection point of edges\n    to avoid a collapse when sharp turns are made."], "extent": [2670, 2790]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Do Vertex Textures"], "extent": [2790, 2810], "body": [{"type": "para", "indent": 4, "text": ["Toggles whether vertex textures are generated for the geometry.\n    For best texturing of branch points, the points of the wire\n    should be ordered so the ", {"type": "q", "text": ["important"]}, " side has least point\n    number. For example, in a Y branch, the bottom of the Y should\n    have the smallest point numbers."], "extent": [2810, 3109]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["U Seam Offset"], "extent": [3109, 3124], "body": [{"type": "para", "indent": 4, "text": ["A per segment parameter which cycles how far around the tube the\n    seam is placed. The seam is always snapped to the nearest\n    polygon edge."], "extent": [3139, 3289]}], "container": true, "attrs": {"id": "uoff"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["U Textures"], "extent": [3289, 3301], "body": [{"type": "para", "indent": 4, "text": ["Per segment values for the starting/ending values of the u\n    texture."], "extent": [3317, 3394]}], "container": true, "attrs": {"id": "textu"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["V Textures"], "extent": [3394, 3406], "body": [{"type": "para", "indent": 4, "text": ["The same, but for v textures."], "extent": [3422, 3457]}], "container": true, "attrs": {"id": "textv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Joint Up Vector"], "extent": [3457, 3474], "body": [{"type": "para", "indent": 4, "text": ["If enabled, the up vector at each joint is set to the specified\n    value. This will result in twisting of the branches."], "extent": [3493, 3623]}], "container": true, "attrs": {"id": "upvector"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [3623, 3631], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["PTDIST"], "extent": [3631, 3640], "body": [{"type": "para", "indent": 4, "text": ["When resolving a segment, this is the distance between the end\n    points of the segment."], "extent": [3640, 3739]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NSEG"], "extent": [3739, 3745], "body": [{"type": "para", "indent": 4, "text": ["This is the number of segments which the segments parameter\n    evaluated to for this segment."], "extent": [3745, 3845]}], "container": true}], "container": true}], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3845, 3854], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/wire", "type": "link", "text": "", "fullpath": "/nodes/sop/wire"}], "extent": [3854, 3873]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/lsystem", "type": "link", "text": "", "fullpath": "/nodes/sop/lsystem"}], "extent": [3873, 3895]}], "container": true}], "text": "Related"}], "title": ["PolyWire"], "summary": ["Constructs polygonal tubes around polylines, creating\nrenderable geometry with smooth bends and intersections."]}