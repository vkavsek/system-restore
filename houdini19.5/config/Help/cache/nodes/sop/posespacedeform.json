{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "posespacedeform", "icon": "SOP/posespacedeform", "tags": "capture, character", "since": "17.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Pose-Space Deform"], "extent": [120, 142]}, {"type": "summary", "indent": 0, "text": ["Interpolates between a set of pose-shapes based on the value of a set of drivers."], "extent": [142, 232]}, {"type": "para", "indent": 0, "text": ["Pose-space deformation (PSD) blends together a set of geometry examples, called pose-shapes, in a manner similar to BlendShapes. The blend weight applied to each pose-shape are automatically adjusted by PSD to interpolate between the pose-shapes as a set of driver values change. For example, with PSD a character\u2019s bicep can be made to flex as the angle of the forearm relative to the upper arm changes. The angle increases as the forearm is brought towards the upper arm. The forearm angle is used to drive the interpolation between its rest (straight) pose-shape and a flexed pose-shape where the arm is bent. When the current pose matches that of a given pose-shape the resulting geometry will match that pose-shape\u2019s geometry. If the current pose lies between two or more pose-shapes the resulting geometry will be a blend of their geometries."], "extent": [232, 1082]}, {"type": "para", "indent": 0, "text": ["The Pose-Space Deform SOP takes the packed primitives produced by a chain of ", {"scheme": "Node", "value": "/nodes/sop/posespaceedit", "type": "link", "text": ["Pose-Space Edit SOPs"], "fullpath": "/nodes/sop/posespaceedit"}, " as its second input . Each ", {"scheme": "Node", "value": "/nodes/sop/posespaceedit", "type": "link", "text": ["Pose-Space Edit SOP"], "fullpath": "/nodes/sop/posespaceedit"}, " is associated with a ", {"scheme": "Node", "value": "/nodes/chop/stashpose", "type": "link", "text": ["Stash Pose CHOP"], "fullpath": "/nodes/chop/stashpose"}, " that holds drivers produced by ", {"scheme": "Node", "value": "/nodes/chop/extractposedrivers", "type": "link", "text": ["Extract Pose Drivers SOP"], "fullpath": "/nodes/chop/extractposedrivers"}, " and transforms produced by ", {"scheme": "Node", "value": "/nodes/chop/extractbonetransforms", "type": "link", "text": ["Extract Bone Transforms SOP"], "fullpath": "/nodes/chop/extractbonetransforms"}, ". The different geometry of each ", {"scheme": "Node", "value": "/nodes/sop/posespaceedit", "type": "link", "text": ["Pose-Space Edit SOP"], "fullpath": "/nodes/sop/posespaceedit"}, " and its associated drives and transforms make up a pose-shape."], "extent": [1082, 1653]}, {"type": "para", "indent": 0, "text": ["If the first input of the Pose-Space Deform SOP is a ", {"scheme": "Node", "value": "/nodes/sop/null", "type": "link", "text": "", "fullpath": "/nodes/sop/null"}, ", the SOP produces a difference geometry that should be combined by addition with the input geometry using a ", {"scheme": "Node", "value": "/nodes/sop/posespacedeformcombine", "type": "link", "text": ["Pose-Space Deform Combine SOP"], "fullpath": "/nodes/sop/posespacedeformcombine"}, ". Otherwise the result will be a pose-specific geometry. The Pose-Space Deform SOP can be placed before a ", {"scheme": "Node", "value": "/nodes/sop/bonedeform", "type": "link", "text": ["Bone Deform SOP"], "fullpath": "/nodes/sop/bonedeform"}, " or after. Pre-deform PSD, called ", {"type": "ui", "text": ["Rigging PSD"]}, ", is used while creating the character rig and post-deform PSD, called ", {"type": "ui", "text": ["Shot Finaling PSD"]}, ", is used during animation. ", {"type": "ui", "text": ["Rigging PSD"]}, " should use drivers associated with the character\u2019s pose while ", {"type": "ui", "text": ["Shot Finaling PSD"]}, " should use the current frame ", {"type": "code", "text": ["$F"]}, " or the current time ", {"type": "code", "text": ["$T"]}, " as the driver."], "extent": [1653, 2380]}, {"type": "para", "indent": 0, "text": ["Create one PSD for each region of the geometry that needs pose-specific modifications. This an effective way reduce the overall total number of examples that need to be created."], "extent": [2380, 2559]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2559, 2571], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Weighted Pose-Space Deformation"], "extent": [2571, 2605], "body": [{"type": "para", "indent": 4, "text": ["With this option bones will only drive the points they are responsible for skinning; that is the points with positive bone capture attribute weights. Weighted PSD significantly reduces the number of variations of the same example that need to be created by driving each point with its parent bones rather than with the skeleton as a whole. For example, when applying weighted PSD to a hand it is not necessary to create multiple variations for the flexion and extension of different combinations of fingers. The knuckle wrinkles are mostly independent of each other and thus only two variations for the flexion and extension of all of the fingers together need to be created. Weighted PSD is, however, computationally intensive. It will increase the time required to solve the PSD coefficients and render each frame."], "extent": [2605, 3427]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Deform Normals"], "extent": [3427, 3443], "body": [{"type": "para", "indent": 4, "text": ["Deforms the normals to match the deformation of the points."], "extent": [3443, 3508]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Deform Vector Attributes"], "extent": [3508, 3534], "body": [{"type": "para", "indent": 4, "text": ["Deforms the vector attributes to match the deformation of the points."], "extent": [3534, 3609]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Vector Attributes"], "extent": [3609, 3628], "body": [{"type": "para", "indent": 4, "text": ["Vector attributes to deform."], "extent": [3628, 3662]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Deform Quaternion Attributes"], "extent": [3662, 3692], "body": [{"type": "para", "indent": 4, "text": ["Deforms the quaternion attributes to match the deformation of the points."], "extent": [3692, 3771]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Quaternion Attributes"], "extent": [3771, 3794], "body": [{"type": "para", "indent": 4, "text": ["Quaternion attributes to deform."], "extent": [3794, 3832]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Allow Negative Blend-Shape Weights"], "extent": [3832, 3868], "body": [{"type": "para", "indent": 4, "text": ["Enable to allow PSD to combine negative amounts of each blend-shape example."], "extent": [3868, 3950]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Extrapolate Beyond Examples"], "extent": [3950, 3979], "body": [{"type": "para", "indent": 4, "text": ["If enabled, a best fit method will be used for the extrapolation of data outside of the source inputs."], "extent": [3979, 4087]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Best Possible Extrapolation"], "extent": [4087, 4116], "body": [{"type": "para", "indent": 4, "text": ["This option is only used when Extrapolate Beyond Examples is enabled. Turning this on will first maximize the interpolation using the plane of best fit, and then interpolate the remaining differences using the radial basis functions. This gives closer fits to the hyperplane method especially for kernel functions that specify a falloff. For those kernel functions, turning this option will also result in faster cooking. This option can give better results when there is high spatial correlation in the examples."], "extent": [4116, 4635]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Kernel"], "extent": [4635, 4643], "body": [{"type": "para", "indent": 4, "text": ["This specifies the kernel function used for the Radial Basis Functions interpolant. Different kernel functions will result in varying fits."], "extent": [4643, 4788]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Exponent"], "extent": [4788, 4798], "body": [{"type": "para", "indent": 4, "text": ["Specifies the exponent used for the Thin Plate kernel function. Larger values will give smoother results."], "extent": [4798, 4909]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fall Off"], "extent": [4909, 4919], "body": [{"type": "para", "indent": 4, "text": ["Specifies the fall off factor for the Gaussian, Multiquadric, Inverse Multiquadric, and Exponential Bump kernel functions."], "extent": [4919, 5047]}, {"type": "para", "indent": 4, "text": ["Larger values will give smoother results."], "extent": [5047, 5094]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Solver"], "extent": [5094, 5102], "body": [{"type": "para", "indent": 4, "text": ["Specifies the solver method used for the interpolation."], "extent": [5102, 5163]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Fast"], "extent": [5163, 5173], "body": [{"type": "para", "indent": 8, "text": ["The Cholesky solver is faster but not as stable."], "extent": [5173, 5231]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Robust"], "extent": [5231, 5243], "body": [{"type": "para", "indent": 8, "text": ["The SVD solver is slower but will produce the higher quality interpolations."], "extent": [5243, 5329]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Damping"], "extent": [5329, 5338], "body": [{"type": "para", "indent": 4, "text": ["Specifies the damping used for the Cholesky solver. This is normally not needed unless the solver is failing. In that case, start with a very small damping value like 0.00001 for     example. Then use successively larger values like 0.0001, 0.001, 0.01, etc. until the solver succeeds."], "extent": [5338, 5629]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Maximum Iterations"], "extent": [5629, 5649], "body": [{"type": "para", "indent": 4, "text": ["Specifies the maximum number of iterations that the SVD solver performs. If the SVD solver fails, then increase this value until the solver succeeds."], "extent": [5649, 5808]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"type": "include_group", "body": [{"ext": "common#common", "type": "include", "indent": 0, "role": "item", "extent": [5808, 5833]}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [5833, 5842], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/posespacedeformcombine", "type": "link", "text": "", "fullpath": "/nodes/sop/posespacedeformcombine"}], "extent": [5842, 5879]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/posespaceedit", "type": "link", "text": "", "fullpath": "/nodes/sop/posespaceedit"}], "extent": [5879, 5906]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/chop/stashpose", "type": "link", "text": "", "fullpath": "/nodes/chop/stashpose"}], "extent": [5906, 5930]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/chop/extractposedrivers", "type": "link", "text": "", "fullpath": "/nodes/chop/extractposedrivers"}], "extent": [5930, 5963]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/chop/extractbonetransforms", "type": "link", "text": "", "fullpath": "/nodes/chop/extractbonetransforms"}], "extent": [5963, 5999]}], "container": true}], "text": "Related"}], "title": ["Pose-Space Deform"], "summary": ["Interpolates between a set of pose-shapes based on the value of a set of drivers."]}