{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "pyropostprocess::2.0", "version": "2.0", "icon": "SOP/pyropostprocess", "since": "19.0", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Pyro Post-Process"], "extent": [126, 148]}, {"type": "summary", "indent": 0, "text": ["Applies common post-processing effects to the results of Pyro solves."], "extent": [148, 226]}, {"type": "para", "indent": 0, "text": ["The Pyro Post-Process node provides common post-processing operations for Pyro\nsolvers. It can also bake flame values into the density map to ensure Mantra\npicks up purely emissive regions."], "extent": [226, 417]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [417, 429], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Post Process"], "extent": [429, 450], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Compute Min/Max Values"], "extent": [450, 475], "body": [{"type": "para", "indent": 4, "text": ["Computes the minimum and maximum values of each volume and stores\n    it as a primitive attribute of the same name.  If the volume is\n    vector type and is converted to VDB, the maximum length is stored."], "extent": [499, 709]}], "container": true, "attrs": {"id": "computeminmax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Convert to VDB"], "extent": [709, 725], "body": [{"type": "para", "indent": 4, "text": ["Convert these volumes into VDBs.  Zero areas will be discarded\n    as inactive.  Volume sets, such as ", {"type": "code", "text": ["vel.x"]}, ", ", {"type": "code", "text": ["vel.y"]}, ", and ", {"type": "code", "text": ["vel.z"]}, ",\n    will be merged into a single vector VDB."], "extent": [744, 927]}], "container": true, "attrs": {"id": "conv_vdb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combine Volumes"], "extent": [927, 944], "body": [{"type": "para", "indent": 4, "text": ["When enabled, VDBs with the same name are combined into a single primitive.\n    This feature is only available if volumes are converted to VDBs."], "extent": [967, 1121]}, {"type": "para", "indent": 4, "text": ["In areas where different volumes of the same name intersect, the maximum\n    value is used for the combined result."], "extent": [1121, 1242]}], "container": true, "attrs": {"id": "conv_combine"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use 16bit Float"], "extent": [1242, 1259], "body": [{"type": "para", "indent": 4, "text": ["Marks the volume to use 16-bit float values.  This requires half\n    the memory of full 32-bit values, but can be slower to process.\n    Houdini volumes will be 16-bit in memory and on disk.  VDBs are\n    only 16-bit when saved to disk."], "extent": [1282, 1524]}, {"type": "para", "indent": 4, "text": ["NOTE: For Houdini volumes this will only convert volumes to 16-bit, not\n    convert back to 32-bit.  Use the ", {"scheme": "Node", "value": "/nodes/sop/volumecompress", "type": "link", "text": ["Volume Compress"], "fullpath": "/nodes/sop/volumecompress"}, "\n    to switch volumes back to 32-bit."], "extent": [1524, 1718]}], "container": true, "attrs": {"id": "conv_usefp16"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cull Volume"], "extent": [1718, 1731], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the active region of the specified VDB will be restricted to\n    the active region of the ", {"type": "ui", "text": ["Cull Mask Volume"]}, ". This can help reduce the\n    memory footprint of the primitives while retaining the volume values in\n    needed areas."], "extent": [1762, 2012]}], "container": true, "attrs": {"id": "conv_cullvolumenames"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Resample Volumes"], "extent": [2012, 2030], "body": [{"type": "para", "indent": 4, "text": ["The names of volumes to resample.  This is a space separated list\n    of volume names and can contain wildcards.   Note that volumes\n    with suffixes (such as ", {"type": "code", "text": [".x"]}, " or ", {"type": "code", "text": [".y"]}, ") will match with and without\n    the suffix.  This way ", {"type": "code", "text": ["vel"]}, " in this parameter will match with \n    the volume named ", {"type": "code", "text": ["vel.x"]}, ".   Volumes whose names match this pattern\n    will then be resampled by the voxel size scale."], "extent": [2062, 2459]}], "container": true, "attrs": {"id": "conv_scalevolumenames"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Voxel Size Scale"], "extent": [2459, 2477], "body": [{"type": "para", "indent": 4, "text": ["A scale factor to change the size of the voxels in the resampled\n    volume.  ", {"type": "code", "text": ["2"]}, " will double the voxel size, so result in half the resolution,\n    and one eighth the total voxels."], "extent": [2498, 2684]}], "container": true, "attrs": {"id": "conv_scale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flame Density"], "extent": [2684, 2699], "body": [{"type": "para", "indent": 4, "text": ["Scales the flame volume by this and does a maximum of this with density.\n    This is required for smokeless regions that otherwise may be skipped\n    by the renderer.  To get a truly zero alpha channel, the smoke density\n    can be set to 0."], "extent": [2722, 2969]}], "container": true, "attrs": {"id": "flamedensity"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Bindings"], "extent": [2969, 2984], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Vector VDBs"], "extent": [2984, 2998], "body": [{"type": "para", "indent": 4, "text": ["Names of VDBs to transform as vector volumes.  All volumes that match the\n    ", {"type": "code", "text": ["foo.x"]}, ", ", {"type": "code", "text": ["foo.y"]}, " and ", {"type": "code", "text": ["foo.z"]}, " will be merged into single 3-tuple VDBs.\n    If the name matches this list, they will also be flagged as vector-type\n    so they will transform.  This ensures velocity vectors transform\n    but avoid having color transforming.  This is a space-separated\n    list and can include wildcards."], "extent": [3023, 3425]}], "container": true, "attrs": {"id": "conv_vectorvdb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cull Mask Volume"], "extent": [3425, 3443], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Cull Volume"]}, " is enabled, this volume specifies the active region to\n    retain. That is, voxels that are outside the active region of\n    ", {"type": "ui", "text": ["Cull Mask Volume"]}, " will be deactivated."], "extent": [3477, 3674]}], "container": true, "attrs": {"id": "conv_cullmaskvolumename"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Density Volume"], "extent": [3674, 3690], "body": [{"type": "para", "indent": 4, "text": ["The name of the density volume used for rendering. This volume is modified\n    when ", {"type": "ui", "text": ["Flame Density"]}, " is enabled."], "extent": [3717, 3840]}], "container": true, "attrs": {"id": "bind_density"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flame Volume"], "extent": [3840, 3854], "body": [{"type": "para", "indent": 4, "text": ["Name of the flame volume used for rendering emission. When ", {"type": "ui", "text": ["Flame Density"]}, "\n    is enabled, the ", {"type": "ui", "text": ["Density Volume"]}, " will be updated to capture the presence\n    of flames."], "extent": [3879, 4055]}], "container": true, "attrs": {"id": "bind_flame"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "title": ["Pyro Post-Process"], "summary": ["Applies common post-processing effects to the results of Pyro solves."]}