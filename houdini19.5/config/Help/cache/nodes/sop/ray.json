{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "ray", "icon": "SOP/ray", "tags": "project, model", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Ray"], "extent": [80, 88]}, {"type": "summary", "indent": 0, "text": ["Projects one surface onto another."], "extent": [88, 131]}, {"type": "para", "indent": 0, "text": ["The Ray operator projects rays from each point of the first input\ngeometry in the direction of its normal, and then moves the point to any\ngeometry the ray hits from the second input."], "extent": [131, 316]}, {"type": "para", "indent": 0, "text": ["You can use this node to drape clothes over surfaces, shrink-wrap one\nobject with another, and other similar effects."], "extent": [316, 435]}, {"level": 2, "id": "includeme", "container": true, "type": "h", "indent": 0, "text": ["Using Ray"], "extent": [238, 266], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["Click the ", {"scheme": "Icon", "value": "SOP/ray", "type": "link", "text": "", "fullpath": "/shelf/SOP/ray"}, {"scheme": "Node", "value": "/nodes/sop/ray", "type": "link", "text": ["Ray"], "fullpath": "/nodes/sop/ray"}, " tool on the ", {"type": "ui", "text": ["Model"]}, " tab."], "extent": [266, 352]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Select the points or primitives to project and press ", {"keys": ["Enter"], "type": "keys", "text": null}, " to confirm your selection."], "extent": [352, 453]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Select the primitives to project on and press ", {"keys": ["Enter"], "type": "keys", "text": null}, " to confirm your selection."], "extent": [453, 547]}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [547, 557], "body": [{"type": "para", "indent": 8, "text": ["This tool works best when smaller surfaces are projected onto larger surfaces."], "extent": [557, 649]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/shelf/ray.jpg", "type": "img", "text": ""}], "extent": [649, 684]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Example"], "extent": [467, 481], "body": [{"tag": "steps", "attrs": {}, "type": "pxml", "indent": 0, "extent": [481, 490], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["Place a Grid node, set its ", {"type": "ui", "text": ["Orientation"]}, " to ", {"type": "q", "text": ["XY Plane"]}, ", and\n      translate it in Z by 2.5. Turn its template flag on."], "extent": [490, 618]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Append a Point node to the Grid and change ", {"type": "ui", "text": ["Keep Normal"]}, " to ", {"type": "ui", "text": ["Add Normal"]}, " on the standard tab of the parameter editor."], "extent": [618, 747]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Place a Sphere node, set its geometry type to NURBS, set its\n      radius to 2,2,2, and translate it in Z by -2.5 ."], "extent": [747, 870]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Turn on the display of ", {"scheme": "Icon", "value": "VIEW/display_point_normals", "type": "link", "text": "", "fullpath": "/nodes/sop/VIEW/display_point_normals"}, " point normals in the viewer\u2019s right side toolbar."], "extent": [870, 984]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Append a Ray node to the Point node and connect the Sphere to\n      the right input. Turn on its display flag."], "extent": [984, 1102]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Turn the ", {"type": "ui", "text": ["Intersect farthest surface"]}, " checkbox on to move\n      the projected plane onto the ", {"type": "q", "text": ["back"]}, " of the sphere."], "extent": [1102, 1226]}], "container": true}], "container": true}, {"type": "para", "indent": 0, "text": ["The Ray op will move the points of the Grid in the direction of the\npoint normals. The first surface of the Collision Source (right\ninput) will be where those points of the grid will rest. You can\nmake those points rest on the other side of the sphere by enabling\nthe Intersect Farthest Surface option. This means that the points\nshould continue to project to the farthest surface of the collision\nsource."], "extent": [1226, 1633]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1633, 1645], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Group"], "extent": [1645, 1656], "body": [{"type": "para", "indent": 8, "text": ["Group of primitives or points to project."], "extent": [1656, 1706]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Entity"], "extent": [1706, 1718], "body": [{"type": "para", "indent": 8, "text": ["Project points or primitives."], "extent": [1718, 1756]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Collision Group"], "extent": [1756, 1777], "body": [{"type": "para", "indent": 8, "text": ["Group of primitives to project on."], "extent": [1777, 1820]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Method"], "extent": [1820, 1833], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Project Rays"], "extent": [1833, 1855], "body": [{"type": "para", "indent": 12, "text": ["Points are projected along their normals until intersecting\n            with collision geometry."], "extent": [1855, 1964]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Minimum Distance"], "extent": [1964, 1990], "body": [{"type": "para", "indent": 12, "text": ["Points are placed on the closest point on the collision\n            geometry. This method does not use point normals. Use it to\n            shrinkwrap or project one primitive onto another."], "extent": [1990, 2193]}, {"type": "para", "indent": 12, "text": ["Note: Distances to packed primitives and sphere/tube/circle\n            primitiives with non-uniform scales may not represent the actual\n            closest point as the closest point is found in the untransformed\n            space."], "extent": [2193, 2438]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Direction from"], "extent": [2438, 2458], "body": [{"type": "para", "indent": 8, "text": ["How to determine the direction to send rays."], "extent": [2458, 2512]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Vector"], "extent": [2512, 2528], "body": [{"type": "para", "indent": 12, "text": ["A ray direction vector is explicitly provided."], "extent": [2528, 2587]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Normal"], "extent": [2587, 2603], "body": [{"type": "para", "indent": 12, "text": ["Normals are computed, if necessary, on the input and used\n            as the ray direction."], "extent": [2603, 2707]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Attribute"], "extent": [2707, 2726], "body": [{"type": "para", "indent": 12, "text": ["A given attribute is used. It should be a 3-float vector\n            attribute giving the direction to send the rays in."], "extent": [2726, 2859]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Ray Direction"], "extent": [2859, 2878], "body": [{"type": "para", "indent": 8, "text": ["Direction to project rays from each point."], "extent": [2878, 2929]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Direction Attribute"], "extent": [2929, 2954], "body": [{"type": "para", "indent": 8, "text": ["The point attribute to use to determine ray direction."], "extent": [2954, 3017]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Show Guide Geometry"], "extent": [3017, 3042], "body": [{"type": "para", "indent": 8, "text": ["Controls if the geometry being instanced onto is drawn.  Does\n        not affect the behavior, only the viewport."], "extent": [3042, 3164]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Transform Points"], "extent": [3164, 3186], "body": [{"type": "para", "indent": 8, "text": ["Move the intersected geometry."], "extent": [3186, 3225]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Intersect Farthest Surface"], "extent": [3225, 3257], "body": [{"type": "para", "indent": 8, "text": ["Ray source is projected to farthest collision surface instead of\n        the closest."], "extent": [3257, 3351]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Point Intersection Normal"], "extent": [3351, 3382], "body": [{"type": "para", "indent": 8, "text": ["Ray point normals gets value of collision normals at points of\n        intersection. These are the surface normals and not interpolated\n        point normals. If you want the interpolated point normals, you\n        will need to turn on ", {"type": "ui", "text": ["Import Attributes from Hits"]}, " and specify the N\n        attribute. In that case, this option will have no effect."], "extent": [3382, 3742]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Point Intersection Distance"], "extent": [3742, 3775], "body": [{"type": "para", "indent": 8, "text": ["Ray point dist attribute gets value of distance to collision\n        source."], "extent": [3775, 3860]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Reverse Rays"], "extent": [3860, 3878], "body": [{"type": "para", "indent": 8, "text": ["Set this to make rays fire in the direction opposite to the\n        normals."], "extent": [3878, 3968]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Ray Tolerance"], "extent": [3968, 3987], "body": [{"type": "para", "indent": 8, "text": ["Controls the tolerance of the ray intersection. Due to numerical round off, otherwise watertight geometry might let rays pass through it.  The ray tolerance decreases the chance of ray leakage by allowing near misses to count as hits. For very small geometry, you may want to decrease the default to avoid false positives.  Likewise, very large geometry may need a higher value."], "extent": [3987, 4379]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Scale"], "extent": [4379, 4390], "body": [{"type": "para", "indent": 8, "text": ["When transforming points scale the intersection path."], "extent": [4417, 4479]}], "container": true, "attrs": {"channels": "/scale"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Lift"], "extent": [4479, 4489], "body": [{"type": "para", "indent": 8, "text": ["Offset surface in normal direction after the points have been\n        transformed to their new locations."], "extent": [4515, 4629]}], "container": true, "attrs": {"channels": "/lift"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Bias"], "extent": [4629, 4639], "body": [{"type": "para", "indent": 8, "text": ["The minimum distance along the normal from the original position\n        of the point where the rays will look for intersections. This\n        allows you to offset the starting position of the rays."], "extent": [4665, 4872]}], "container": true, "attrs": {"channels": "/bias"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Max Distance"], "extent": [4872, 4890], "body": [{"type": "para", "indent": 8, "text": ["The maximum distance from the original position of the point the\n        rays will look at. No ray intersections outside this range will\n        be detected.  If ", {"type": "ui", "text": ["Method"]}, " is ", {"type": "ui", "text": ["Minimum Distance"]}, ", any points\n        farther from the surface than this will not be moved."], "extent": [4922, 5201]}], "container": true, "attrs": {"channels": "/maxraydist"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Sample"], "extent": [5201, 5213], "body": [{"type": "para", "indent": 8, "text": ["Number of rays sent per point. If greater than 1, rays are\n        randomly perturbed and combined using the method specified in\n        ", {"type": "ui", "text": ["Ray Combiner"]}, "."], "extent": [5241, 5404]}], "container": true, "attrs": {"channels": "/sample"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Jitter Scale"], "extent": [5404, 5422], "body": [{"type": "para", "indent": 8, "text": ["Controls perturbation of extra rays."], "extent": [5450, 5495]}], "container": true, "attrs": {"channels": "/jitter"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Ray Combiner"], "extent": [5495, 5513], "body": [{"type": "para", "indent": 8, "text": ["This option lets you specify how information from extra rays is\n        used."], "extent": [5513, 5600]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Average ray"], "extent": [5600, 5621], "body": [{"type": "para", "indent": 12, "text": ["The fired rays that hit the second input\u2019s geometry are\n            averaged. The point is then moved along its normal direction\n            by the average distance. If you turned on ", {"type": "ui", "text": ["Point\n            Intersection Normal"]}, ", the resulting normal is also the\n            average from all the fired rays."], "extent": [5621, 5937]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Median ray"], "extent": [5937, 5957], "body": [{"type": "para", "indent": 12, "text": ["The median length ray that hits the second input\u2019s geometry\n            is found. The point is then moved along its normal direction\n            by the median ray\u2019s length. If you turned on ", {"type": "ui", "text": ["Point\n            Intersection Normal"]}, ", the resulting normal is taken from\n            the median ray."], "extent": [5957, 6265]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Shortest ray"], "extent": [6265, 6287], "body": [{"type": "para", "indent": 12, "text": ["The shortest ray that hits the second input\u2019s geometry is\n            found. The point is then moved along its normal direction by\n            this ray\u2019s length. If you turned on ", {"type": "ui", "text": ["Point Intersection\n            Normal"]}, ", the resulting normal is taken from the shortest\n            ray."], "extent": [6287, 6586]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Longest ray"], "extent": [6586, 6607], "body": [{"type": "para", "indent": 12, "text": ["The Longest ray that hits the second input\u2019s geometry is\n            found. The point is then moved along its normal direction by\n            this ray\u2019s length. If you turned on ", {"type": "ui", "text": ["Point Intersection\n            Normal"]}, ", the resulting normal is taken from the longest\n            ray."], "extent": [6607, 6904]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Seed"], "extent": [6904, 6914], "body": [{"type": "para", "indent": 8, "text": ["Seeds the random number generator.   Each jittered ray will be\n        seeded by this and its point number."], "extent": [6940, 7057]}], "container": true, "attrs": {"channels": "/seed"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Create Point Group"], "extent": [7057, 7081], "body": [{"type": "para", "indent": 8, "text": ["Point group of all successful intersections."], "extent": [7081, 7134]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Ray Hit Group"], "extent": [7134, 7153], "body": [{"type": "para", "indent": 8, "text": ["Name of the point group."], "extent": [7153, 7186]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Prim Num Attribute"], "extent": [7186, 7210], "body": [{"type": "para", "indent": 8, "text": ["When enabled, an attribute will be output indicating the number of the primitive hit by each point.  Enable this and ", {"type": "ui", "text": ["Prim UVW Attribute"]}, " for use with\n        ", {"scheme": "Node", "value": "/nodes/sop/attribinterpolate", "type": "link", "text": ["Attribute Interpolate"], "fullpath": "/nodes/sop/attribinterpolate"}, ", to have the points stick on deforming geometry."], "extent": [7238, 7507]}], "container": true, "attrs": {"id": "primnumattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Prim UVW Attribute"], "extent": [7507, 7531], "body": [{"type": "para", "indent": 8, "text": ["When enabled, an attribute will be output indicating the coordinates where each point hit, in the parameter space of the primitive each point hit.\n        Enable this and ", {"type": "ui", "text": ["Prim Num Attribute"]}, " for use with ", {"scheme": "Node", "value": "/nodes/sop/attribinterpolate", "type": "link", "text": ["Attribute Interpolate"], "fullpath": "/nodes/sop/attribinterpolate"}, ", to have the points stick on deforming geometry."], "extent": [7559, 7874]}], "container": true, "attrs": {"id": "primuvwattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Import Attributes from Hits"], "extent": [7874, 7907], "body": [{"type": "para", "indent": 8, "text": ["This allows you to extract point attributes from the hit\n        surface. The extracted attribute will take on an interpolated\n        value according to where the surface is hit. This option works\n        with the ", {"type": "ui", "text": ["Ray Combiner"]}, " option: the attribute value will\n        either come from the average attribute value from all the hits\n        or the value associated with the median length, shortest or\n        longest ray. The interpolated attribute values are not\n        normalized."], "extent": [7907, 8402]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Point Attributes"], "extent": [8402, 8424], "body": [{"type": "para", "indent": 8, "text": ["Specify the point attributes from the second input that you want\n        to extract. If the attributes you specify do not exist in the\n        first input, they will be created. If the attributes you specify\n        have the same name but a different size or type in the first\n        input, they will be overwritten. If you specify the normal\n        attribute here (N), the ", {"type": "ui", "text": ["Point Intersection Normal"]}, " option\n        will have no effect and the final normal set to each point will\n        be computed by interpolating the point normal from the target\n        surface."], "extent": [8424, 9004]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [9004, 9012], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Ray points or primitives"], "extent": [9012, 9042], "body": [{"type": "para", "indent": 8, "text": ["The geometry to project onto the geometry in the second input.\n        This geometry must have point normal attributes (use the ", {"scheme": "Node", "value": "/nodes/sop/point", "type": "link", "text": ["Point\n        operator"], "fullpath": "/nodes/sop/point"}, " to add them)."], "extent": [9042, 9232]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Collision primitives"], "extent": [9232, 9258], "body": [{"type": "para", "indent": 8, "text": ["The geometry on which to project."], "extent": [9258, 9301]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [9301, 9310], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Vex", "value": "/vex/functions/intersect", "type": "link", "text": "", "fallback_text": "intersect()", "fullpath": "/vex/functions/intersect"}], "extent": [9310, 9332]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Vex", "value": "/vex/functions/intersect_all", "type": "link", "text": "", "fallback_text": "intersect_all()", "fullpath": "/vex/functions/intersect_all"}], "extent": [9332, 9358]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Vex", "value": "/vex/functions/xyzdist", "type": "link", "text": "", "fallback_text": "xyzdist()", "fullpath": "/vex/functions/xyzdist"}], "extent": [9358, 9378]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/attribinterpolate", "type": "link", "text": "", "fullpath": "/nodes/sop/attribinterpolate"}], "extent": [9378, 9413]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/creep", "type": "link", "text": "", "fullpath": "/nodes/sop/creep"}], "extent": [9413, 9436]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/project", "type": "link", "text": "", "fullpath": "/nodes/sop/project"}], "extent": [9436, 9461]}], "container": true}], "text": "Related"}], "title": ["Ray"], "summary": ["Projects one surface onto another."], "included": ["/shelf/ray"]}