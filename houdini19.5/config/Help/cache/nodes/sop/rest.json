{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "rest", "icon": "SOP/rest", "tags": "shading, muscles", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Rest Position"], "extent": [84, 102]}, {"type": "summary", "indent": 0, "text": ["Creates rest attributes on the geometry so procedural\ntextures stay put on the surface as it deforms."], "extent": [102, 212]}, {"type": "para", "indent": 0, "text": ["This node creates an attribute to track the initial, or rest, position\nof the geometry.  This allows procedural operations to work on the deformed\ngeometry in the initial undeformed space."], "extent": [212, 402]}, {"type": "para", "indent": 0, "text": ["The Rest SOP is often applied before deforming.  In this case, no additional\ninputs are needed as the current positions can be stored as the rest values.\nIf the geometry has already been deformed, the second input can be used\nto specify the rest.  A Time Shift SOP on the second input can get the\nrest value from a specific reference frame."], "extent": [402, 744]}, {"type": "para", "indent": 0, "text": ["While this SOP does allow reading a file for the rest position, this\nis primarily for backward compatibility - it is likely cleaner to make\nthis an explicit File SOP into the second input."], "extent": [744, 934]}, {"type": "para", "indent": 0, "text": ["The topologies of the two geometries must match.  Missing rest positions\nwill repeat the last point of the reference geometry."], "extent": [934, 1062]}, {"type": "para", "indent": 0, "text": ["Some primitives have internal transformations, such as circle, tube, sphere,\nmetaball, volume, vdb, and packed primitives."], "extent": [1062, 1186]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "text": [" "], "role": "item", "extent": [1186, 1193], "body": [{"type": "para", "indent": 4, "text": ["For information about the Muscle & Tissue system\u2019s ", {"scheme": "Icon", "value": "/icons/SOP/muscletpose.svg", "type": "link", "text": "", "fullpath": "/icons/SOP/muscletpose.svg"}, " ", {"scheme": "Node", "value": "/nodes/sop/settpose", "type": "link", "text": ["Set T-Pose"], "fullpath": "/nodes/sop/settpose"}, " and ", {"scheme": "Icon", "value": "/icons/SOP/muscletpose.svg", "type": "link", "text": "", "fullpath": "/icons/SOP/muscletpose.svg"}, " ", {"scheme": "Node", "value": "/nodes/sop/extracttpose", "type": "link", "text": ["Extract T-Pose"], "fullpath": "/nodes/sop/extracttpose"}, " SOP nodes, please see their respective node docs."], "extent": [1193, 1441]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1441, 1453], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Mode"], "extent": [1453, 1460], "body": [{"type": "para", "indent": 4, "text": ["The Rest SOP can both store to a rest attribute and also retrieve\n    from the rest attribute.  If the rest attribute does not exist\n    the operation will always be Store.  Thus you can ", {"type": "q", "text": ["Swap"]}, " even if\n    there are no rest attributes yet - it will just create a matching\n    set of rest attributes."], "extent": [1475, 1780]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Store Rest"], "extent": [1780, 1796], "body": [{"type": "para", "indent": 8, "text": ["Create the rest attributes and copy the current positions\n        and transforms into them."], "extent": [1796, 1897]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Extract Rest"], "extent": [1897, 1915], "body": [{"type": "para", "indent": 8, "text": ["Retrieve the current rest values from the attributes and update\n        the positions and transforms from them.  This will cause the\n        geometry to restore to the original rest setup and not \n        affect the rest state."], "extent": [1915, 2152]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Swap Rest"], "extent": [2152, 2167], "body": [{"type": "para", "indent": 8, "text": ["Swap the rest positions and transforms with the current positions\n        and transforms.  The geometry will be replaced with the rest position,\n        but the current deformation will be stashed into the rest.  This is\n        useful for switching in and out of rest space."], "extent": [2167, 2452]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "mode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Attribute Name"], "extent": [2452, 2473], "body": [{"type": "para", "indent": 4, "text": ["Name of the rest position point attribute to create.  If blank,\n    no rest position updates are done."], "extent": [2497, 2605]}], "container": true, "attrs": {"id": "restattribname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Assign From File"], "extent": [2605, 2623], "body": [{"type": "para", "indent": 4, "text": ["Geometry file path to use positions from. When this is blank, the positions\n    are taken from the node inputs instead (with the second input having\n    precedence)."], "extent": [2637, 2808]}], "container": true, "attrs": {"id": "file"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Normals"], "extent": [2808, 2822], "body": [{"type": "para", "indent": 4, "text": ["Create a rest normals point attribute.   This copies the point normal\n    attribute.  Note that normals are often vertex-based, and are not handled\n    by this."], "extent": [2835, 3001]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["No Normals"], "extent": [3001, 3017], "body": [{"type": "para", "indent": 8, "text": ["Do not generate the attribute."], "extent": [3017, 3057]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Add If Polygon/Mesh/Soup Exist"], "extent": [3057, 3093], "body": [{"type": "para", "indent": 8, "text": ["Only generate when polygon, mesh, or polygon soup primitives are present."], "extent": [3093, 3175]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Add Normals"], "extent": [3175, 3192], "body": [{"type": "para", "indent": 8, "text": ["Always generate the attribute. When point normals do not exist, then a\n        default method is used to generate them."], "extent": [3192, 3321]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "nml"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Normal Attrib"], "extent": [3321, 3341], "body": [{"type": "para", "indent": 4, "text": ["Name of the rest normals point attribute to create."], "extent": [3367, 3424]}], "container": true, "attrs": {"id": "normalattribname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primitive Transforms"], "extent": [3424, 3446], "body": [{"type": "para", "indent": 4, "text": ["Create a rest transform primitive attribute. This 3\u00d73 matrix\n    attribute is only meaningful for primitives that have transforms\n    such as primitive spheres, metaballs, etc. For all other primitive types,\n    the attribute will be left unchanged."], "extent": [3461, 3716]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["No Transform Matrices"], "extent": [3716, 3743], "body": [{"type": "para", "indent": 8, "text": ["Do not generate the attribute."], "extent": [3743, 3782]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Add If Transforming Primitives Exist"], "extent": [3782, 3824], "body": [{"type": "para", "indent": 8, "text": ["Only generate if primitives that have transforms are present."], "extent": [3824, 3894]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Add Transform Matrices"], "extent": [3894, 3922], "body": [{"type": "para", "indent": 8, "text": ["Always generate the attribute."], "extent": [3922, 3962]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "xform"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transform Attrib"], "extent": [3962, 3980], "body": [{"type": "para", "indent": 4, "text": ["Name of the transforms primitive attribute to create."], "extent": [4005, 4064]}], "container": true, "attrs": {"id": "xformattribname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Full Primitive Transforms"], "extent": [4064, 4091], "body": [{"type": "para", "indent": 4, "text": ["Create a rest full transform primitive attribute. This 4\u00d74 matrix\n    attribute is only meaningful for primitives that have transforms\n    such as primitive spheres, metaballs, etc. For all other primitive types,\n    the attribute will be left unchanged."], "extent": [4108, 4368]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4368, 4378], "body": [{"type": "para", "indent": 8, "text": ["This transform includes the position.  So operations like Swap\n        will double-swap position if rest position attributes are also\n        present!"], "extent": [4378, 4538]}], "container": true}], "container": true, "role": "item_group"}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["No Full Transform Matrices"], "extent": [4538, 4570], "body": [{"type": "para", "indent": 8, "text": ["Do not generate the attribute."], "extent": [4570, 4609]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Add If Transforming Primitives Exist"], "extent": [4609, 4651], "body": [{"type": "para", "indent": 8, "text": ["Only generate if primitives that have transforms are present."], "extent": [4651, 4721]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Add Full Transform Matrices"], "extent": [4721, 4754], "body": [{"type": "para", "indent": 8, "text": ["Always generate the attribute."], "extent": [4754, 4794]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "quadric"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Full Transform Attrib"], "extent": [4794, 4817], "body": [{"type": "para", "indent": 4, "text": ["Name of the full transforms primitive attribute to create."], "extent": [4844, 4908]}], "container": true, "attrs": {"id": "quadricattribname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Precision"], "extent": [4908, 4919], "body": [{"type": "para", "indent": 4, "text": ["Precision to create rest attributes with.  64-bit provides\n    higher accuracy, especially for transforms."], "extent": [4939, 5055]}, {"type": "para", "indent": 4, "text": ["The auto mode will switch between 32-bit and 64-bit depending on the\n    preferred precision of the incoming geometry. When run in 64-bit precision,\n    any created attributes will be 64-bit. When run in 32-bit any created\n    attributes will be 32-bit. Use ", {"scheme": "Node", "value": "/nodes/sop/attribcast", "type": "link", "text": "", "fullpath": "/nodes/sop/attribcast"}, " to change the\n    preferred precision.  If the incoming point attribute is 64-bit, the Auto\n    mode will generate 64-bit attributes regardless of the preferred precision."], "extent": [5055, 5512]}], "container": true, "attrs": {"id": "precision"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}], "title": ["Rest Position"], "summary": ["Creates rest attributes on the geometry so procedural\ntextures stay put on the surface as it deforms."]}