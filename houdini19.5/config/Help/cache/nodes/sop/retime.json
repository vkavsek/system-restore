{"type": "root", "attrs": {"type": "node", "context": "sop", "icon": "SOP/retime", "internal": "retime", "since": "17.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Retime"], "extent": [76, 87]}, {"type": "summary", "indent": 0, "text": ["Retimes the time-dependent input geometry."], "extent": [87, 138]}, {"type": "para", "indent": 0, "text": ["The Retime SOP provides a friendly interface for retiming its input geometry\naccording to the given playback speed or time function. For requested times\nthat correspond to non-integer frames of the input geometry, this operator can\nperform the necessary interpolation to approximate intermediate results. This\nis useful to control the playback speed of a cached pyro simulation."], "extent": [138, 518]}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [518, 526], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Input"], "extent": [526, 534], "body": [{"type": "para", "indent": 4, "text": ["Time-dependent geometry to retime."], "extent": [534, 574]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [574, 583], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Output"], "extent": [583, 592], "body": [{"type": "para", "indent": 4, "text": ["Input geometry, evaluated/interpolated at the appropriate time."], "extent": [592, 661]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [661, 673], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Time"], "extent": [673, 685], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Evaluation Mode"], "extent": [685, 703], "body": [{"type": "para", "indent": 4, "text": ["Controls how the evaluation times are computed for generating the output."], "extent": [721, 800]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["By Frame"], "extent": [800, 814], "body": [{"type": "para", "indent": 8, "text": ["Output corresponds to evaluation of the input geometry at the given\n        ", {"type": "ui", "text": ["Frame"]}, "."], "extent": [814, 909]}], "container": true}, {"type": "dt", "indent": 4, "text": ["By Time"], "extent": [909, 922], "body": [{"type": "para", "indent": 8, "text": ["Output corresponds to evaluation of the input geometry at the given\n        ", {"type": "ui", "text": ["Time"]}, "."], "extent": [922, 1016]}], "container": true}, {"type": "dt", "indent": 4, "text": ["By Speed"], "extent": [1016, 1030], "body": [{"type": "para", "indent": 8, "text": ["Evaluation time is calculated from the specified ", {"type": "ui", "text": ["Start Frame"]}, " and\n        playback ", {"type": "ui", "text": ["Speed"]}, "."], "extent": [1030, 1135]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Shift Range"], "extent": [1135, 1152], "body": [{"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Input Frame Range"]}, " is shifted to start at the specified frame."], "extent": [1152, 1226]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Fit Range"], "extent": [1226, 1241], "body": [{"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Input Frame Range"]}, " is uniformly expanded/contracted to the ", {"type": "ui", "text": ["Output\n        Frame Range"]}, "."], "extent": [1241, 1344]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "evalmode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frame"], "extent": [1344, 1351], "body": [{"type": "para", "indent": 4, "text": ["Frame to evaluate the input at; only available when ", {"type": "ui", "text": ["Evaluation Mode"]}, " is\n    set to ", {"type": "ui", "text": ["By Frame"]}, "."], "extent": [1366, 1471]}], "container": true, "attrs": {"id": "frame"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time"], "extent": [1471, 1477], "body": [{"type": "para", "indent": 4, "text": ["Time to evaluate the input at; only available when ", {"type": "ui", "text": ["Evaluation Mode"]}, " is\n    set to ", {"type": "ui", "text": ["By Time"]}, "."], "extent": [1491, 1594]}], "container": true, "attrs": {"id": "time"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start Frame"], "extent": [1594, 1607], "body": [{"type": "para", "indent": 4, "text": ["First output frame (per ", {"type": "ui", "text": ["Output Frame Range"]}, ") corresponds to evaluation\n    of the input at this frame. Only available when ", {"type": "ui", "text": ["Evaluation Mode"]}, " is set\n    to ", {"type": "ui", "text": ["By Speed"]}, "."], "extent": [1627, 1806]}], "container": true, "attrs": {"id": "startframe"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Speed"], "extent": [1806, 1813], "body": [{"type": "para", "indent": 4, "text": ["Controls the playback speed when evaluating ", {"type": "ui", "text": ["By Speed"]}, ". Pace of playback\n    can be varied by animating this parameter."], "extent": [1828, 1955]}], "container": true, "attrs": {"id": "speed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shift to Frame"], "extent": [1955, 1971], "body": [{"type": "para", "indent": 4, "text": [{"type": "ui", "text": ["Input Frame Range"]}, " is shifted to start at this frame when ", {"type": "ui", "text": ["Evaluation\n    Mode"]}, " is set to ", {"type": "ui", "text": ["Shift Range"]}, "."], "extent": [1991, 2108]}], "container": true, "attrs": {"id": "shiftframe"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Frame Range"], "extent": [2108, 2128], "body": [{"type": "para", "indent": 4, "text": ["When evaluating ", {"type": "ui", "text": ["By Speed"]}, ", playback ", {"type": "ui", "text": ["Speed"]}, " is considered inside this\n    frame range; boundary conditions control behavior outside of the range.\n    When ", {"type": "ui", "text": ["Evaluation Mode"]}, " is set to ", {"type": "ui", "text": ["Fit Range"]}, ", ", {"type": "ui", "text": ["Input Frame Range"]}, " is\n    uniformly expanded or contracted to span this range."], "extent": [2149, 2441]}], "container": true, "attrs": {"id": "outputrange"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Input Frame Range"], "extent": [2441, 2460], "body": [{"type": "para", "indent": 4, "text": ["Range of input frames. Boundary conditions are called upon if the input\n    must be queried outside of this range."], "extent": [2480, 2600]}], "container": true, "attrs": {"id": "inputrange"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["Boundary conditions are used to control the behavior when evaluation frame\nfalls outside of the relevant range. The conditions always apply to the ", {"type": "ui", "text": ["Input\nFrame Range"]}, ", but are only available for the output range when evaluating ", {"type": "ui", "text": ["By\nSpeed"]}, "."], "extent": [2600, 2844]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "ui", "text": ["Hold"]}, ": clamp evaluation to the respective range limit."], "extent": [2844, 2904]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "ui", "text": ["Extend"]}, ": allow free evaluation beyond the limit."], "extent": [2904, 2958], "body": [{"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [2958, 2968], "body": [{"type": "para", "indent": 8, "text": ["When evaluating ", {"type": "ui", "text": ["By Speed"]}, ", an ", {"type": "ui", "text": ["Extend"]}, " condition on the ", {"type": "ui", "text": ["Output\n        Frame Range"]}, " will use the ", {"type": "ui", "text": ["Speed"]}, " value at that limiting frame to\n        extrapolate outside of the range. For example, if ", {"type": "ui", "text": ["Output Frame\n        Range"]}, " is set to ", {"type": "code", "text": ["10-20"]}, " with ", {"type": "ui", "text": ["Pre-Extend"]}, ", and ", {"type": "ui", "text": ["Speed"]}, " at frame\n        10 is set to 5, the node will assume playback speed is 5 for all frames\n        before 10."], "extent": [2968, 3373]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "ui", "text": ["Cycle"]}, ": wrap to the other end of the range."], "extent": [3373, 3422]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "ui", "text": ["Zig-Zag"]}, ": upon hitting the limit, turn around and continue."], "extent": [3422, 3488]}], "container": true}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Substeps"], "extent": [3488, 3498], "body": [{"type": "para", "indent": 4, "text": ["Number of available substeps in the input. This node interpolates between\n    closest input samples to the desired output, taking these ", {"type": "ui", "text": ["Substeps"]}, " into\n    account. For example, if frame ", {"type": "code", "text": ["17.68"]}, " needs to be evaluated and\n    ", {"type": "ui", "text": ["Substeps"]}, " is set to 2, input frames ", {"type": "code", "text": ["17.5"]}, " and ", {"type": "code", "text": ["18"]}, " will be blended to\n    produce the result."], "extent": [3515, 3845]}], "container": true, "attrs": {"id": "substep"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Interpolation"], "extent": [3845, 3865], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Interpolate Between Input Frames"], "extent": [3865, 3900], "body": [{"type": "para", "indent": 4, "text": ["Allows interpolation of input geometry from the nearest integer frames. If\n    this option is disabled, the input is directly cooked at fractional frames."], "extent": [3921, 4081]}], "container": true, "attrs": {"id": "interpolate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Interpolate Rotations of Normals, Quaternion, and Transforms"], "extent": [4081, 4143], "body": [{"type": "para", "indent": 4, "text": ["Use spherical linear interpolation for smoother transitions of attributes\n    marked as normals, quaternions, and transforms."], "extent": [4160, 4291]}], "container": true, "attrs": {"id": "doslerp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Interpolation"], "extent": [4291, 4306], "body": [{"type": "para", "indent": 4, "text": ["Interpolation method for blending multiple inputs."], "extent": [4322, 4378]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Linear"], "extent": [4378, 4390], "body": [{"type": "para", "indent": 8, "text": ["Data will be linearly interpolated between 2 nearest frames."], "extent": [4390, 4459]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cubic"], "extent": [4459, 4470], "body": [{"type": "para", "indent": 8, "text": ["Data will be cubically interpolated between 4 input frames where\n        possible."], "extent": [4470, 4561]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Subdivision"], "extent": [4561, 4578], "body": [{"type": "para", "indent": 8, "text": ["Data will follow a cubic spline curve (based on subdivision curves)\n        between 4 input frames where possible."], "extent": [4578, 4702]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "interp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Input Timestep"], "extent": [4702, 4718], "body": [{"type": "para", "indent": 4, "text": ["Difference in time between adjacent input frames. This value is needed to\n    correctly interpret velocities."], "extent": [4736, 4851]}], "container": true, "attrs": {"id": "timestep"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Velocity When Interpolating Position"], "extent": [4851, 4893], "body": [{"type": "para", "indent": 4, "text": ["If points have a velocity attribute (", {"type": "code", "text": ["v"]}, "), enabling this option cubically\n    interpolates the point position using the velocity and quadratically\n    interpolates the velocity. The velocity attribute is also properly scaled\n    to account for the playback speed."], "extent": [4916, 5185]}], "container": true, "attrs": {"id": "usevforinterp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale Velocities"], "extent": [5185, 5203], "body": [{"type": "para", "indent": 4, "text": ["If enabled, velocities in the output are scaled to account for difference\n    in playback speeds. This applies to the ", {"type": "code", "text": ["v"]}, " point attribute as well as the\n    ", {"type": "ui", "text": ["Velocity Field"]}, " if volume ", {"type": "ui", "text": ["Blend Mode"]}, " is set to ", {"type": "ui", "text": ["Advected"]}, "."], "extent": [5221, 5451]}], "container": true, "attrs": {"id": "scalevel"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Attributes"], "extent": [5451, 5470], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Attributes"], "extent": [5470, 5483], "body": [{"type": "para", "indent": 4, "text": ["A space-separator list of names/patterns for attributes to linearly\n    interpolate. Attributes that don\u2019t match here are switched instantly when\n    the source interpolation frames change."], "extent": [5500, 5695]}], "container": true, "attrs": {"id": "attribs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point ID Attribute"], "extent": [5695, 5715], "body": [{"type": "para", "indent": 4, "text": ["Value of this (string or integer) point attribute is used to match points,\n    instead of the point number."], "extent": [5733, 5846]}], "container": true, "attrs": {"id": "ptidattr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primitive ID Attribute"], "extent": [5846, 5870], "body": [{"type": "para", "indent": 4, "text": ["Value of this (string or integer) primitive attribute is used to match\n    primitives, instead of the primitive number."], "extent": [5890, 6015]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [6015, 6025], "body": [{"type": "para", "indent": 8, "text": ["Primitive matching convention also applies to volumes and VDBs."], "extent": [6025, 6098]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "primidattr"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Volumes"], "extent": [6098, 6114], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Blend Mode"], "extent": [6114, 6127], "body": [{"type": "para", "indent": 4, "text": ["Specifies the method used to blend voxels of the volume or VDB primitives."], "extent": [6147, 6227]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Transform Only"], "extent": [6227, 6247], "body": [{"type": "para", "indent": 8, "text": ["Volume transforms are interpolated; no blending of voxel data is\n        performed."], "extent": [6247, 6339]}], "container": true}, {"type": "dt", "indent": 4, "text": ["By Grid Index"], "extent": [6339, 6358], "body": [{"type": "para", "indent": 8, "text": ["Voxel values are linearly interpolated; the voxels are paired by their\n        number, so matching volumes should have the exact same dimensions and\n        resolution."], "extent": [6358, 6535]}], "container": true}, {"type": "dt", "indent": 4, "text": ["By Voxel Position"], "extent": [6535, 6558], "body": [{"type": "para", "indent": 8, "text": ["Voxel values are linearly interpolated; the voxels are matched by their\n        spatial position."], "extent": [6558, 6664]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Advected"], "extent": [6664, 6678], "body": [{"type": "para", "indent": 8, "text": ["Voxel values are linearly interpolated along motion paths, as governed\n        by the ", {"type": "ui", "text": ["Velocity Field"]}, "."], "extent": [6678, 6793]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "voxelblend"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Velocity Field"], "extent": [6793, 6809], "body": [{"type": "para", "indent": 4, "text": ["Name of velocity field used to deduce travel paths in ", {"type": "ui", "text": ["Advected"]}, " blending\n    mode. The referenced primitive must be a vector VDB or a triplet of scalar\n    volumes or VDBs (whose components are suffixed with ", {"type": "code", "text": [".x"]}, ", ", {"type": "code", "text": [".y"]}, ", ", {"type": "code", "text": [".z"]}, ")."], "extent": [6822, 7057]}], "container": true, "attrs": {"id": "vel"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Advection Stepsize"], "extent": [7057, 7077], "body": [{"type": "para", "indent": 4, "text": ["Maximum timestep used for computing travel curves. Lower values of this\n    parameter may yield better advected interpolation, at the cost of longer\n    running times."], "extent": [7092, 7265]}], "container": true, "attrs": {"id": "advdt"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Interpolate Velocity Field"], "extent": [7265, 7293], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Voxel Blend"]}, " is set to ", {"type": "ui", "text": ["Advected"]}, ", the ", {"type": "ui", "text": ["Velocity Field"]}, " is\n    normally left untouched. Enabling this parameter also linearly interpolates\n    the ", {"type": "ui", "text": ["Velocity Field"]}, "."], "extent": [7312, 7496]}], "container": true, "attrs": {"id": "interpvel"}, "role": "item"}], "container": true, "role": "item_group"}]}]}], "text": "Parameters"}], "title": ["Retime"], "summary": ["Retimes the time-dependent input geometry."]}