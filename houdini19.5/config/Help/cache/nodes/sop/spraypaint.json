{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "spraypaint", "icon": "SOP/spraypaint", "since": "14.0", "tags": "paint, points, random", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Spray Paint"], "extent": [0, 16]}, {"type": "summary", "indent": 0, "text": ["Spray paints random points onto a surface."], "extent": [131, 181]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [181, 196], "body": [{"type": "para", "indent": 0, "text": ["This node allows users to spray paint random points onto a surface, with options for random scales and orientations.\nIt is useful for creating points on a surface and then ", {"scheme": "Node", "value": "/nodes/sop/copy", "type": "link", "text": ["copying geometry onto them"], "fullpath": "/nodes/sop/copy"}, ".  For example, people in a crowd, trees on a hill, or boats on water."], "extent": [196, 483]}, {"type": "para", "indent": 0, "text": ["Turn on the ", {"type": "ui", "text": ["Visualize as Spheres"]}, " toggle to preview the random point scales as spheres.\nTurn that option off and put geometry into the second input to copy that geometry onto the points,\nscaled and oriented as specified in the ", {"type": "ui", "text": ["Radii"]}, " and ", {"type": "ui", "text": ["Orientation"]}, " tabs."], "extent": [483, 750]}, {"type": "para", "indent": 0, "text": ["To procedurally generate random points on a surface, instead of spray painting, use the ", {"scheme": "Node", "value": "/nodes/sop/scatter", "type": "link", "text": ["Scatter node"], "fullpath": "/nodes/sop/scatter"}, ", instead."], "extent": [750, 881]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [881, 887], "body": [{"type": "para", "indent": 4, "text": ["There must be geometry in the first input to spray onto.  If there isn\u2019t, you can add geometry after painting,\n    and points will be generated as if it had been there before, but until then, no points will be generated."], "extent": [887, 1113]}], "container": true}], "container": true, "role": "item_group"}, {"level": 3, "id": "includeme", "container": true, "type": "h", "indent": 0, "text": ["Using Spray Paint"], "extent": [1045, 1081], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["Select the object you want the spray points onto."], "extent": [1081, 1143]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Click the ", {"scheme": "Icon", "value": "SOP/spraypaint", "type": "link", "text": "", "fullpath": "/shelf/SOP/spraypaint"}, {"scheme": "Node", "value": "/nodes/sop/spraypaint", "type": "link", "text": ["Spray Paint"], "fullpath": "/nodes/sop/spraypaint"}, " tool on the ", {"type": "ui", "text": ["Create"]}, " tab."], "extent": [1143, 1247]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Press and drag the left mouse button to spray paint points on the surface."], "extent": [1247, 1333]}], "container": true}, {"type": "para", "indent": 4, "text": ["You can change the spray rate, and adjust many other settings after painting in the ", {"scheme": null, "value": "/ref/panes/parms", "type": "link", "text": ["parameter editor"], "fullpath": "/ref/panes/parms"}, ".\n    You can also keep painting or remove existing painted strokes as desired."], "extent": [1333, 1537]}]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1152, 1164], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Target Primitives"], "extent": [1164, 1184], "body": [{"type": "para", "indent": 4, "text": ["The subset of surface primitives to spray paint onto."], "extent": [1200, 1259]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Spray Rate"], "extent": [1259, 1271], "body": [{"type": "para", "indent": 4, "text": ["The average number of points per unit area to spray in each click or movement of the brush."], "extent": [1286, 1383]}], "container": true, "attrs": {"id": "rate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Relax Iterations"], "extent": [1383, 1401], "body": [{"type": "para", "indent": 4, "text": ["The number of iterations of pushing the points away from each other, like in the ", {"scheme": "Node", "value": "/nodes/sop/relax", "type": "link", "text": ["Point Relax node"], "fullpath": "/nodes/sop/relax"}, ".\n    The radii used for the relaxation of the points are generated based on the parameters in the ", {"type": "ui", "text": ["Radii"]}, " tab,\n    not based on the size of any geometry to copy from the second input, so geometry to copy should be similar in scale to a sphere with radius 1."], "extent": [1427, 1807]}], "container": true, "attrs": {"id": "relaxiterations"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Random Seed"], "extent": [1807, 1820], "body": [{"type": "para", "indent": 4, "text": ["All generated point positions depend (psuedo)randomly on this value.  This should always be different from ", {"type": "ui", "text": ["Radius Random Seed"]}, ", ", {"type": "ui", "text": ["Quaternion Random Seed"]}, ", ", {"type": "ui", "text": ["Y Axis Random Seed"]}, ", and ", {"type": "ui", "text": ["Z Axis Random Seed"]}, "."], "extent": [1835, 2051]}], "container": true, "attrs": {"id": "seed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Points"], "extent": [2051, 2063], "body": [{"type": "para", "indent": 4, "text": ["This is an optional strict limit on the number of points to generate, to avoid fatal accidents.  If the number of points that would have been generated\n    exceeds this, a number of points less than or equal to this limit will be generated, in a roughly similar distribution."], "extent": [2088, 2369]}], "container": true, "attrs": {"id": "emergencylimit"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Visualize as Spheres"], "extent": [2369, 2391], "body": [{"type": "para", "indent": 4, "text": ["When enabled, spheres will be copied to the points to help visualize the point scales, or to temporarily avoid viewing heavy geometry to be copied from the second input while painting."], "extent": [2412, 2602]}], "container": true, "attrs": {"id": "visspheres"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Radius Scale"], "extent": [2602, 2622], "body": [{"type": "para", "indent": 4, "text": ["Scales the radii randomly generated based on the parameters below.  This avoids the need to change all of the settings for the random distribution just to uniformly scale all radii."], "extent": [2639, 2826]}], "container": true, "attrs": {"id": "radius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Distribution of Radii"], "extent": [2826, 2849], "body": [{"type": "para", "indent": 4, "text": ["Overall type of probability distribution from which radii are generated.  Set this to ", {"type": "ui", "text": ["Constant Value"]}, " to have no randomness."], "extent": [2872, 3005]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Constant Value"], "extent": [3005, 3025], "body": [{"type": "para", "indent": 8, "text": ["The radii will all be ", {"type": "ui", "text": ["Middle Radius"]}, ", instead of being random."], "extent": [3025, 3099]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Two Values"], "extent": [3099, 3115], "body": [{"type": "para", "indent": 8, "text": ["The radii will either be ", {"type": "ui", "text": ["Min Radius Limit"]}, " or ", {"type": "ui", "text": ["Max Radius Limit"]}, ", depending on ", {"type": "ui", "text": ["Probability of Max"]}, "."], "extent": [3115, 3231]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Uniform"], "extent": [3231, 3244], "body": [{"type": "para", "indent": 8, "text": ["The radii will be between ", {"type": "ui", "text": ["Min Radius Limit"]}, " and ", {"type": "ui", "text": ["Max Radius Limit"]}, ", with equal probability for all values in that range."], "extent": [3244, 3379]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Normal (Gaussian)"], "extent": [3379, 3402], "body": [{"type": "para", "indent": 8, "text": ["The radii will be drawn from the normal distribution whose mean/median is given by ", {"type": "ui", "text": ["Middle Radius"]}, ",\n        and whose standard deviation is given by ", {"type": "ui", "text": ["Spread of Radii"]}, ", limited by ", {"type": "ui", "text": ["Min Radius Limit"]}, " and ", {"type": "ui", "text": ["Max Radius Limit"]}, "."], "extent": [3402, 3641]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/sop/attribrandomize/normal_distrib.jpg", "type": "img", "text": ""}], "extent": [3641, 3711]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Exponential"], "extent": [3711, 3728], "body": [{"type": "para", "indent": 8, "text": ["The radii will be drawn from the exponential distribution whose median is given by ", {"type": "ui", "text": ["Middle Radius"]}, ",\n        limited by ", {"type": "ui", "text": ["Min Radius Limit"]}, " and ", {"type": "ui", "text": ["Max Radius Limit"]}, "."], "extent": [3728, 3905]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/sop/attribrandomize/exponential_distrib.jpg", "type": "img", "text": ""}], "extent": [3905, 3980]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Log-Normal"], "extent": [3980, 3996], "body": [{"type": "para", "indent": 8, "text": ["The radii will be drawn from the log-normal distribution whose median is given by ", {"type": "ui", "text": ["Middle Radius"]}, ",\n        and whose standard deviation is given by ", {"type": "ui", "text": ["Spread of Radii"]}, ", limited by ", {"type": "ui", "text": ["Min Radius Limit"]}, " and ", {"type": "ui", "text": ["Max Radius Limit"]}, ".\n        This distribution is useful for generating random scales, because it tapers\n        off toward zero, helping avoid scales that are too small."], "extent": [3996, 4384]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/sop/attribrandomize/lognormal_distrib.jpg", "type": "img", "text": ""}], "extent": [4384, 4457]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cauchy-Lorentz"], "extent": [4457, 4477], "body": [{"type": "para", "indent": 8, "text": ["The radii will be drawn from the Cauchy distribution whose median is given by ", {"type": "ui", "text": ["Middle Radius"]}, ", and whose scale parameter, \u03b3, is given by ", {"type": "ui", "text": ["Spread of Radii"]}, ".\n        This distribution has larger tails than the normal distribution, so it has more outliers, meaning that ", {"type": "ui", "text": ["Min Radius Limit"]}, " and ", {"type": "ui", "text": ["Max Radius Limit"]}, " will probably\n        be useful for preventing problematic outliers."], "extent": [4477, 4872]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/sop/attribrandomize/cauchy_distrib.jpg", "type": "img", "text": ""}], "extent": [4872, 4942]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Ramp"], "extent": [4942, 4959], "body": [{"type": "para", "indent": 8, "text": ["The custom ramp will be sampled as the inverse cumulative distribution function (inverse CDF) of a probability distribution."], "extent": [4959, 5093]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "distribution"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Radius Random Seed"], "extent": [5093, 5113], "body": [{"type": "para", "indent": 4, "text": ["All generated radii depend (psuedo)randomly on this value, unless ", {"type": "ui", "text": ["Distribution of Radii"]}, " is ", {"type": "ui", "text": ["Constant Value"]}, ".\n    This should always be different from ", {"type": "ui", "text": ["Random Seed"]}, ", ", {"type": "ui", "text": ["Quaternion Random Seed"]}, ", ", {"type": "ui", "text": ["Y Axis Random Seed"]}, ", and ", {"type": "ui", "text": ["Z Axis Random Seed"]}, "."], "extent": [5134, 5392]}], "container": true, "attrs": {"id": "radiusseed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Middle Radius"], "extent": [5392, 5407], "body": [{"type": "para", "indent": 4, "text": ["The median radius, before being limited by ", {"type": "ui", "text": ["Min Radius Limit"]}, " and ", {"type": "ui", "text": ["Max Radius Limit"]}, ", which is also before being scaled by ", {"type": "ui", "text": ["Point Radius Scale"]}, ".\n    See the help for ", {"scheme": "Node", "value": "/nodes/sop/spraypaint#distribution", "type": "link", "text": ["Distribution of Radii"], "fullpath": "/nodes/sop/spraypaint#distribution", "fragment": "#distribution"}, "."], "extent": [5430, 5665]}], "container": true, "attrs": {"id": "medianradius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Spread of Radii"], "extent": [5665, 5682], "body": [{"type": "para", "indent": 4, "text": ["Roughly the amount that radii vary from ", {"type": "ui", "text": ["Middle Radius"]}, " on average, before being limited by ", {"type": "ui", "text": ["Min Radius Limit"]}, " and ", {"type": "ui", "text": ["Max Radius Limit"]}, ",\n    which is also before being scaled by ", {"type": "ui", "text": ["Point Radius Scale"]}, ".\n    See the help for ", {"scheme": "Node", "value": "/nodes/sop/spraypaint#distribution", "type": "link", "text": ["Distribution of Radii"], "fullpath": "/nodes/sop/spraypaint#distribution", "fragment": "#distribution"}, "."], "extent": [5705, 5995]}], "container": true, "attrs": {"id": "stddevradius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Radius Limit"], "extent": [5995, 6013], "body": [{"type": "para", "indent": 4, "text": ["A lower limit on the radii that can be randomly generated."], "extent": [6033, 6097]}], "container": true, "attrs": {"id": "minradius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Radius Limit"], "extent": [6097, 6115], "body": [{"type": "para", "indent": 4, "text": ["An upper limit on the radii that can be randomly generated."], "extent": [6135, 6200]}], "container": true, "attrs": {"id": "maxradius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Probability of Max"], "extent": [6200, 6220], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Distribution of Radii"]}, " is ", {"type": "ui", "text": ["Two Values"]}, ", this is the probability that any given point\u2019s radius will be ", {"type": "ui", "text": ["Max Radius Limit"]}, ".\n    Every other point will have radius ", {"type": "ui", "text": ["Min Radius Limit"]}, ", so its probability is 1 - ", {"type": "ui", "text": ["Probability of Max"]}, "."], "extent": [6244, 6494]}], "container": true, "attrs": {"id": "probmaxradius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Quaternion Attribute"], "extent": [6494, 6516], "body": [{"type": "para", "indent": 4, "text": ["When enabled, a quaternion attribute with the specified name will be created to represent orientations generated for the points."], "extent": [6537, 6671]}], "container": true, "attrs": {"id": "quatattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Based on Y and Z Axes (below)"], "extent": [6671, 6702], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the orientations represented by the quaternion attribute will be computed based on the parameters for generating Y and Z\n    axis directions, which can be easier to control than basing the orientations on the parameters for directly controlling the quaternions.\n    For example, with this enabled, the default behavior is for Y be normal to the surface and Z be a random direction perpendicular to Y."], "extent": [6719, 7139]}], "container": true, "attrs": {"id": "quatyz"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Angle from Center"], "extent": [7139, 7162], "body": [{"type": "para", "indent": 4, "text": ["When enabled, all orientations will be within this angle (in degrees) of ", {"type": "ui", "text": ["Central Orientation"]}, " or the values taken from\n    ", {"type": "ui", "text": ["Central Orientation Attribute"]}, ", if specified.  If ", {"type": "ui", "text": ["Bias Toward Center"]}, " is disabled, the cone of orientations within\n    this angle will be sampled uniformly.  When both are disabled, all possible orientations are equally likely."], "extent": [7186, 7551]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/attribrandomize/orientation_cone.jpg", "type": "img", "text": ""}], "extent": [7551, 7619]}], "container": true, "attrs": {"id": "quatconeangle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bias Toward Center"], "extent": [7619, 7639], "body": [{"type": "para", "indent": 4, "text": ["When enabled and greater than zero, orientations will be smoothly biased toward ", {"type": "ui", "text": ["Central Orientation"]}, " or the values taken from\n    ", {"type": "ui", "text": ["Central Orientation Attribute"]}, ", if specified."], "extent": [7663, 7850]}], "container": true, "attrs": {"id": "quatpowerbias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Central Orientation"], "extent": [7850, 7871], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Max Angle from Center"]}, " or ", {"type": "ui", "text": ["Bias Toward Center"]}, " are enabled, and ", {"type": "ui", "text": ["Central Orientation Attribute"]}, " is not given,\n    this specifies the orientation at the center of the cone or toward which orientations are biased."], "extent": [7892, 8121]}], "container": true, "attrs": {"id": "quatcenter"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Central Orientation Attribute"], "extent": [8121, 8152], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Max Angle from Center"]}, " or ", {"type": "ui", "text": ["Bias Toward Center"]}, " are enabled, this optionally specifies a quaternion attribute on the\n    surface geometry that will be interpolated for each generated point, to be used in place of ", {"type": "ui", "text": ["Central Orientation"]}, ".\n    This can be a point, vertex, primitive, or detail attribute."], "extent": [8179, 8496]}], "container": true, "attrs": {"id": "quatcenterattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Quaternion Random Seed"], "extent": [8496, 8520], "body": [{"type": "para", "indent": 4, "text": ["All generated orientations depend (psuedo)randomly on this value, unless ", {"type": "ui", "text": ["Max Angle from Center"]}, " is 0.\n    This should always be different from ", {"type": "ui", "text": ["Random Seed"]}, " and ", {"type": "ui", "text": ["Radius Random Seed"]}, "."], "extent": [8539, 8734]}], "container": true, "attrs": {"id": "quatseed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Y Axis Attribute"], "extent": [8734, 8752], "body": [{"type": "para", "indent": 4, "text": ["When enabled, a vector attribute with the specified name will be created to represent the generated direction for each point\n    that the Y axis of geometry copied to it should face."], "extent": [8770, 8958]}], "container": true, "attrs": {"id": "yattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Angle from Center"], "extent": [8958, 8981], "body": [{"type": "para", "indent": 4, "text": ["When enabled, all Y axis directions will be within this angle (in degrees) of ", {"type": "ui", "text": ["Central Direction"]}, " or the values taken from\n    ", {"type": "ui", "text": ["Central Direction Attribute"]}, ", if specified.  If ", {"type": "ui", "text": ["Bias Toward Center"]}, " is disabled, the cone of directions within\n    this angle will be sampled uniformly.  When both are disabled, all possible directions are equally likely."], "extent": [9002, 9364]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/attribrandomize/direction_cone.jpg", "type": "img", "text": ""}], "extent": [9364, 9430]}], "container": true, "attrs": {"id": "yconeangle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bias Toward Center"], "extent": [9430, 9450], "body": [{"type": "para", "indent": 4, "text": ["When enabled and greater than zero, Y axis directions will be smoothly biased toward ", {"type": "ui", "text": ["Central Direction"]}, " or the values taken from\n    ", {"type": "ui", "text": ["Central Direction Attribute"]}, ", if specified."], "extent": [9471, 9659]}], "container": true, "attrs": {"id": "ypowerbias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Central Direction"], "extent": [9659, 9678], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Max Angle from Center"]}, " or ", {"type": "ui", "text": ["Bias Toward Center"]}, " are enabled, and ", {"type": "ui", "text": ["Central Direction Attribute"]}, " is not given,\n    this specifies the direction at the center of the cone or toward which Y axis directions are biased."], "extent": [9696, 9926]}], "container": true, "attrs": {"id": "ycenter"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Central Direction Attribute"], "extent": [9926, 9955], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Max Angle from Center"]}, " or ", {"type": "ui", "text": ["Bias Toward Center"]}, " are enabled, this optionally specifies a vector attribute on the\n    surface geometry that will be interpolated for each generated point, to be used in place of ", {"type": "ui", "text": ["Central Direction"]}, ".\n    This can be a point, vertex, primitive, or detail attribute."], "extent": [9979, 10290]}], "container": true, "attrs": {"id": "ycenterattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Y Axis Random Seed"], "extent": [10290, 10310], "body": [{"type": "para", "indent": 4, "text": ["All generated Y axis directions depend (psuedo)randomly on this value, unless ", {"type": "ui", "text": ["Max Angle from Center"]}, " is 0.\n    This should always be different from ", {"type": "ui", "text": ["Random Seed"]}, ", ", {"type": "ui", "text": ["Radius Random Seed"]}, ", and ", {"type": "ui", "text": ["Z Axis Random Seed"]}, "."], "extent": [10326, 10551]}], "container": true, "attrs": {"id": "yseed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Z Axis Attribute"], "extent": [10551, 10569], "body": [{"type": "para", "indent": 4, "text": ["When enabled, a vector attribute with the specified name will be created to represent the generated direction for each point\n    that the Z axis of geometry copied to it should face."], "extent": [10587, 10775]}], "container": true, "attrs": {"id": "zattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Angle from Center"], "extent": [10775, 10798], "body": [{"type": "para", "indent": 4, "text": ["When enabled, all Z axis directions will be within this angle (in degrees) of ", {"type": "ui", "text": ["Central Direction"]}, " or the values taken from\n    ", {"type": "ui", "text": ["Central Direction Attribute"]}, ", if specified.  If ", {"type": "ui", "text": ["Bias Toward Center"]}, " is disabled, the cone of directions within\n    this angle will be sampled uniformly.  When both are disabled, all possible directions are equally likely."], "extent": [10819, 11181]}, {"type": "para", "indent": 4, "text": ["See cone angle image for Y axis above."], "extent": [11181, 11225]}], "container": true, "attrs": {"id": "zconeangle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bias Toward Center"], "extent": [11225, 11245], "body": [{"type": "para", "indent": 4, "text": ["When enabled and greater than zero, Z axis directions will be smoothly biased toward ", {"type": "ui", "text": ["Central Direction"]}, " or the values taken from\n    ", {"type": "ui", "text": ["Central Direction Attribute"]}, ", if specified."], "extent": [11266, 11454]}], "container": true, "attrs": {"id": "zpowerbias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Central Direction"], "extent": [11454, 11473], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Max Angle from Center"]}, " or ", {"type": "ui", "text": ["Bias Toward Center"]}, " are enabled, and ", {"type": "ui", "text": ["Central Direction Attribute"]}, " is not given,\n    this specifies the direction at the center of the cone or toward which Z axis directions are biased."], "extent": [11491, 11721]}], "container": true, "attrs": {"id": "zcenter"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Central Direction Attribute"], "extent": [11721, 11750], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Max Angle from Center"]}, " or ", {"type": "ui", "text": ["Bias Toward Center"]}, " are enabled, this optionally specifies a vector attribute on the\n    surface geometry that will be interpolated for each generated point, to be used in place of ", {"type": "ui", "text": ["Central Direction"]}, ".\n    This can be a point, vertex, primitive, or detail attribute."], "extent": [11774, 12085]}], "container": true, "attrs": {"id": "zcenterattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Z Axis Random Seed"], "extent": [12085, 12105], "body": [{"type": "para", "indent": 4, "text": ["All generated Z axis directions depend (psuedo)randomly on this value, unless ", {"type": "ui", "text": ["Max Angle from Center"]}, " is 0.\n    This should always be different from ", {"type": "ui", "text": ["Random Seed"]}, ", ", {"type": "ui", "text": ["Radius Random Seed"]}, ", and ", {"type": "ui", "text": ["Y Axis Random Seed"]}, "."], "extent": [12121, 12346]}], "container": true, "attrs": {"id": "zseed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prim Num Attribute"], "extent": [12346, 12366], "body": [{"type": "para", "indent": 4, "text": ["An integer point attribute with this name will be created, containing the number of the surface primitive hit by each sprayed point.\n    It can be used with ", {"type": "ui", "text": ["Prim UVW Attribute"]}, " and the ", {"scheme": "Node", "value": "/nodes/sop/attribinterpolate", "type": "link", "text": ["Attribute Interpolate node"], "fullpath": "/nodes/sop/attribinterpolate"}, " to have the points stick\n    on deforming geometry."], "extent": [12390, 12691]}], "container": true, "attrs": {"id": "primnumattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prim UVW Attribute"], "extent": [12691, 12711], "body": [{"type": "para", "indent": 4, "text": ["A vector point attribute with this name will be created, containing the location within the surface primitive hit by each sprayed point,\n    in primitive parametric coordinates.  It can be used with ", {"type": "ui", "text": ["Prim Num Attribute"]}, " and the ", {"scheme": "Node", "value": "/nodes/sop/attribinterpolate", "type": "link", "text": ["Attribute Interpolate node"], "fullpath": "/nodes/sop/attribinterpolate"}, "\n    to have the points stick on deforming geometry."], "extent": [12735, 13078]}], "container": true, "attrs": {"id": "primuvwattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Import Attributes from Surface"], "extent": [13078, 13110], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the attributes (including groups) specified below will be transferred from the surface geometry to the sprayed points as point attributes."], "extent": [13134, 13292]}], "container": true, "attrs": {"id": "importattribs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Attributes"], "extent": [13292, 13310], "body": [{"type": "para", "indent": 4, "text": ["These point attributes (including groups) from the surface geometry will be interpolated and transferred to the sprayed points."], "extent": [13333, 13466]}], "container": true, "attrs": {"id": "pointattribs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Vertex Attributes"], "extent": [13466, 13485], "body": [{"type": "para", "indent": 4, "text": ["These vertex attributes (including groups) from the surface geometry will be interpolated and transferred to the sprayed points as point attributes."], "extent": [13507, 13661]}], "container": true, "attrs": {"id": "vertattribs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primitive Attributes"], "extent": [13661, 13683], "body": [{"type": "para", "indent": 4, "text": ["These primitive attributes (including groups) from the surface geometry will be transferred to the sprayed points as point attributes."], "extent": [13705, 13845]}], "container": true, "attrs": {"id": "primattribs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detail Attributes"], "extent": [13845, 13864], "body": [{"type": "para", "indent": 4, "text": ["These detail attributes from the surface geometry will be transferred to the sprayed points as point attributes."], "extent": [13888, 14006]}], "container": true, "attrs": {"id": "detailattribs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Radius"], "extent": [14006, 14014], "body": [{"type": "para", "indent": 4, "text": ["The brush radius for the next stroke to be drawn."], "extent": [14038, 14093]}], "container": true, "attrs": {"id": "stroke_radius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tool"], "extent": [14093, 14099], "body": [{"type": "para", "indent": 4, "text": ["Reserved for future use."], "extent": [14121, 14151]}], "container": true, "attrs": {"id": "stroke_tool"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Color"], "extent": [14151, 14158], "body": [{"type": "para", "indent": 4, "text": ["When enabled, stroke colors (Cd attribute) will be added to the points, and this parameter is the color for the next stroke to be drawn.\n    The colors for strokes already drawn can be modified under the ", {"type": "ui", "text": ["Stroke"]}, " tab."], "extent": [14181, 14406]}], "container": true, "attrs": {"id": "stroke_color"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Opacity"], "extent": [14406, 14415], "body": [{"type": "para", "indent": 4, "text": ["When enabled, stroke opacity (Alpha attribute) will be added to the points, and this parameter is the opacity for the next stroke to be drawn.\n    The opacities for strokes already drawn can be modified under the ", {"type": "ui", "text": ["Stroke"]}, " tab."], "extent": [14440, 14674]}], "container": true, "attrs": {"id": "stroke_opacity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stroke"], "extent": [14674, 14682], "body": [{"type": "para", "indent": 4, "text": ["This tab allows changing general properties of strokes that have already been drawn."], "extent": [14682, 14772]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [14772, 14781], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/scatter", "type": "link", "text": "", "fullpath": "/nodes/sop/scatter"}], "extent": [14781, 14803]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/attribrandomize", "type": "link", "text": "", "fullpath": "/nodes/sop/attribrandomize"}], "extent": [14803, 14833]}], "container": true}], "text": "Related"}], "title": ["Spray Paint"], "summary": ["Spray paints random points onto a surface."], "included": ["/shelf/spraypaint"]}