{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "sweep", "icon": "SOP/sweep", "tags": "model, grid, tube, curveup, splines, curves, core", "version": "2.0", "since": "18.0", "verb_since": "18.0", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Sweep"], "extent": [0, 10]}, {"type": "summary", "indent": 0, "text": ["Creates a surface by sweeping a cross section curve along a spine curve."], "extent": [174, 255]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [255, 270], "body": [{"type": "para", "indent": 0, "text": ["This node takes a cross-section curve from the second input, distributes copies of it along a spine curve from the first input, and creates a surface between the distributed cross-section curves. It is an extremely versatile workhorse for generating procedural geometry."], "extent": [270, 543]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/examples.jpg", "type": "img", "text": ""}], "extent": [543, 590]}, {"type": "para", "indent": 0, "text": ["This node will accept polylines, NURBS curves, or B\u00e9zier curves. By default the type of input curves determine the type of surface (for example, polylines produce polygons, NURBS curves produce NURBS surfaces), however you can override the surface type using the ", {"type": "ui", "text": ["Primitive type"]}, " parameter on the ", {"type": "ui", "text": ["Construction"]}, " tab."], "extent": [590, 912]}, {"type": "para", "indent": 0, "text": ["Instead of using modeled cross-sections connected to the second input, you can use automatic circle, square, or line cross-sections using the ", {"type": "ui", "text": ["Surface Shape"]}, " parameter."], "extent": [912, 1084]}, {"type": "para", "indent": 0, "text": ["This node can handle multiple spines, and/or multiple cross-sections."], "extent": [1084, 1155]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["If there are multiple curves in the first (spine) input, the cross-section(s) is/are swept along each spine curve separately."], "extent": [1155, 1284]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["If there are multiple curves in the second (cross-section) input, the cross-sections are distributed along the curve length according to the ", {"type": "ui", "text": ["Cross section order"]}, " parameter on the ", {"type": "ui", "text": ["Construction"]}, " tab."], "extent": [1284, 1491]}], "container": true}, {"type": "para", "indent": 0, "text": ["This node can handle closed spines and/or closed cross-sections. (Closed means that the curve is a loop \u2014 the first and last point of the curve are the same.)"], "extent": [1491, 1653]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["If both the spine and cross-section are open, the node creates an open surface."], "extent": [1653, 1736]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["If either the spine or cross-section are closed, the node creates a tube."], "extent": [1736, 1813], "body": [{"type": "para", "indent": 4, "text": ["When one curve is open and the other closed, creating a tube, you can automatically add end-cap geometry using the ", {"type": "ui", "text": ["End cap type"]}, " parameter on the ", {"type": "ui", "text": ["Surface"]}, " tab."], "extent": [1813, 1984]}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["If both the spine and cross-section are closed, the node creates a torus."], "extent": [1984, 2062]}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Positioning the curves"], "extent": [2062, 2091], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Spine curves can be anywhere in space."], "extent": [2091, 2134]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["This node assumes ", {"type": "strong", "text": ["all cross section curves"]}, " are modeled at the origin in the XY plane, with +Y up direction."], "extent": [2134, 2247], "body": [{"type": "para", "indent": 4, "text": ["Do not model the cross-section curve on (or at the beginning of) the spine curve."], "extent": [2247, 2334]}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["When the curve is flat (planar), the node assumes it should orient the up direction of the cross-sections perpendicular to the curve plane."], "extent": [2334, 2477], "body": [{"type": "para", "indent": 4, "text": ["After construction, you can adjust the orientation of the cross-section curve(s) relative to the spine using the ", {"type": "ui", "text": ["Roll"]}, " and ", {"type": "ui", "text": ["Yaw"]}, " parameters."], "extent": [2477, 2628]}], "container": true}], "container": true}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [2628, 2633], "body": [{"type": "para", "indent": 4, "text": ["This is a technical node. It is ", {"type": "em", "text": ["very"]}, " useful for procedurally building surfaces from cross-sections. It is not as suitable for ", {"type": "q", "text": ["artistic"]}, " curve-up modeling, since this node bases cross-section orientation and positioning on parameters and/or attributes, rather than where/how you modeled the curves."], "extent": [2633, 2940]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips"], "extent": [2940, 2951], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["The orientations applied to the cross sections are equivalent to those in the ", {"scheme": "Node", "value": "/nodes/sop/orientalongcurve", "type": "link", "text": ["Orientation Along Curve node"], "fullpath": "/nodes/sop/orientalongcurve"}, "."], "extent": [2951, 3091]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can use ", {"type": "q", "text": ["standard"]}, " scale and orientation point attributes on the spine curve to control the cross-sections. See the ", {"scheme": null, "value": "#transformbyattribs", "type": "link", "text": ["Transform Using Curve Point Attributes"], "fullpath": "/nodes/sop/sweep#transformbyattribs", "fragment": "#transformbyattribs"}, " parameter."], "extent": [3091, 3287]}], "container": true}]}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [3287, 3295], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First (Backbone curves)"], "extent": [3295, 3321], "body": [{"type": "para", "indent": 4, "text": ["Should contain one or more spine curves. If the input has multiple curves, the cross-section(s) is/are surfaced along each spine separately."], "extent": [3321, 3467]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Second (Cross section(s))"], "extent": [3467, 3494], "body": [{"type": "para", "indent": 4, "text": ["Should contain one or more cross-section curves. If the input has multiple curves, "], "extent": [3494, 3583]}, {"type": "para", "indent": 4, "text": ["Connecting modeled cross-section curves to the second input is optional. Instead, you can use automatic circle, square, or line cross-sections using the ", {"type": "ui", "text": ["Surface Shape"]}, " parameter."], "extent": [3583, 3771]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [3771, 3783], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Backbone Curve Group"], "extent": [3783, 3806], "body": [{"type": "para", "indent": 4, "text": ["If this is blank, the node uses all curves from the first input, or you can specify a group or set of curves using ", {"scheme": null, "value": "/model/groups", "type": "link", "text": ["group syntax"], "fullpath": "/model/groups"}, ". You can also click the ", {"scheme": "Icon", "value": "BUTTON/reselect", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTON/reselect"}, " Reselect button next to this field to select the curves in the viewport."], "extent": [3827, 4096]}], "container": true, "attrs": {"id": "curvegroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cross Section Group"], "extent": [4096, 4117], "body": [{"type": "para", "indent": 4, "text": ["If this is blank, the node uses all curves from the second input, or you can specify a group or set of curves using ", {"scheme": null, "value": "/model/groups", "type": "link", "text": ["group syntax"], "fullpath": "/model/groups"}, ". You can also click the ", {"scheme": "Icon", "value": "BUTTON/reselect", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTON/reselect"}, " Reselect button next to this field to select the curves in the viewport."], "extent": [4145, 4416]}], "container": true, "attrs": {"id": "crosssectiongroup"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Surface"], "extent": [4416, 4430], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Surface Shape"], "extent": [4430, 4446], "body": [{"type": "para", "indent": 4, "text": ["What to use as the cross-section shape. The default is to use curves connected to this node\u2019s second input."], "extent": [4469, 4582]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Second Input Cross Sections"], "extent": [4582, 4615], "body": [{"type": "para", "indent": 8, "text": ["Use the curve or curves from the second input (taking into account the ", {"type": "ui", "text": ["Cross section group"]}, " field) as the cross-section(s)."], "extent": [4615, 4751]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Round Tube"], "extent": [4751, 4767], "body": [{"type": "para", "indent": 8, "text": ["Use a circle as the cross-section, producing a round tube. Scale the tube with the ", {"type": "ui", "text": ["Radius"]}, " parameter and set the number of sides the circle has with the ", {"type": "ui", "text": ["Columns"]}, " parameter."], "extent": [4767, 4955]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Square Tube"], "extent": [4955, 4972], "body": [{"type": "para", "indent": 8, "text": ["Use a square as the cross-section, producing a boxy tube. Scale the tube with the ", {"type": "ui", "text": ["Width"]}, " parameter and set the number of subdivisions along each side with the ", {"type": "ui", "text": ["Columns"]}, " parameter."], "extent": [4972, 5166]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Ribbon"], "extent": [5166, 5178], "body": [{"type": "para", "indent": 8, "text": ["Use a line as the cross-section, producing a ribbon shape. Scale the ribbon with the ", {"type": "ui", "text": ["Width"]}, " parameter and set the number of subdivisions across the line with the ", {"type": "ui", "text": ["Columns"]}, " parameter."], "extent": [5178, 5375]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "surfaceshape"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Surface Type"], "extent": [5375, 5389], "body": [{"type": "para", "indent": 4, "text": ["The surface topology of the generated surface."], "extent": [5411, 5463]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/surface_type.jpg", "type": "img", "text": ""}], "extent": [5463, 5518]}, {"type": "para", "indent": 4, "text": ["The ", {"type": "ui", "text": ["Columns"]}, " option is useful for creating many curves from each input curve."], "extent": [5518, 5604]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Points"], "extent": [5604, 5616], "body": [{"type": "para", "indent": 8, "text": ["Don\u2019t create any primitives, only points."], "extent": [5616, 5671]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Rows"], "extent": [5671, 5681], "body": [{"type": "para", "indent": 8, "text": ["Create a curve for each cross section in the grid."], "extent": [5681, 5745]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Columns"], "extent": [5745, 5758], "body": [{"type": "para", "indent": 8, "text": ["Create a curve for each vertex around the grid, spanning the full curve."], "extent": [5758, 5844]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Rows and Columns"], "extent": [5844, 5866], "body": [{"type": "para", "indent": 8, "text": ["Create curves corresponding with both the ", {"type": "ui", "text": ["Rows"]}, " option and the ", {"type": "ui", "text": ["Columns"]}, " option."], "extent": [5866, 5965]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Triangles"], "extent": [5965, 5980], "body": [{"type": "para", "indent": 8, "text": ["Create triangles splitting the grid quads in a single direction."], "extent": [5980, 6058]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Quadrilaterals"], "extent": [6058, 6078], "body": [{"type": "para", "indent": 8, "text": ["Create the grid quads as is."], "extent": [6078, 6120]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Alternating Triangles"], "extent": [6120, 6147], "body": [{"type": "para", "indent": 8, "text": ["Create triangles splitting the grid quads in alternating directions."], "extent": [6147, 6229]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Reverse Triangles"], "extent": [6229, 6252], "body": [{"type": "para", "indent": 8, "text": ["Create triangles splitting the grid quads in a single direction opposite that of the ", {"type": "ui", "text": ["Triangles"]}, " option."], "extent": [6252, 6368]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "surfacetype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale Cross Sections"], "extent": [6368, 6390], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Surface shape"]}, " is ", {"type": "q", "text": ["Second Input"]}, ", this uniformly scales the size of all cross-sections. For finer control, you can also use the scale ramp below to scale along the length of the curve, or a ", {"type": "code", "text": ["pscale"]}, " or ", {"type": "code", "text": ["scale"]}, " point attribute on the spine curve to scale the cross sections (when ", {"type": "ui", "text": ["Transform Using Curve Point Attributes"]}, " is on)."], "extent": [6406, 6749]}], "container": true, "attrs": {"id": "scale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Columns"], "extent": [6749, 6758], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Surface shape"]}, " is ", {"type": "q", "text": ["Round tube"]}, ", ", {"type": "q", "text": ["Square tube"]}, ", or ", {"type": "q", "text": ["Ribbon"]}, ", this controls the density of the cross-section shape. For round, this is the number of sides the circle has. For square, this is the number of subdivisions along each side. For ribbon, this is the number of subdivisions across."], "extent": [6773, 7074]}], "container": true, "attrs": {"id": "cols"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Radius"], "extent": [7074, 7082], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Surface shape"]}, " is ", {"type": "q", "text": ["Round tube"]}, ", the radius of the tube."], "extent": [7099, 7168]}], "container": true, "attrs": {"id": "radius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Width"], "extent": [7168, 7175], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Surface shape"]}, " is ", {"type": "q", "text": ["Square tube"]}, " or ", {"type": "q", "text": ["Ribbon"]}, ", the width of the tube/ribbon."], "extent": [7191, 7279]}], "container": true, "attrs": {"id": "width"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reverse Cross Sections"], "extent": [7279, 7303], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to reverse the normals of the generated surface."], "extent": [7334, 7401]}, {"type": "para", "indent": 4, "text": ["When this is on, the node treats cross section primitives as if they were reversed, which reverses normals on the generated surface."], "extent": [7401, 7539]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/reverse_cross_sections.jpg", "type": "img", "text": ""}], "extent": [7539, 7604]}], "container": true, "attrs": {"id": "reversecrosssections"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stretch Around Turns"], "extent": [7604, 7626], "body": [{"type": "para", "indent": 4, "text": ["Stretch cross-sections in the direction of curvature around turns in the spine. (Default on.) This avoids the cross-section appearing squished in turns. This is usually what you want, unless you have set ", {"type": "ui", "text": ["Surface type"]}, " to ", {"type": "q", "text": ["rows"]}, " or ", {"type": "q", "text": ["columns"]}, "."], "extent": [7655, 7905]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/stretch_around_turns.jpg", "type": "img", "text": ""}], "extent": [7905, 7972]}], "container": true, "attrs": {"id": "stretcharoundturns"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Stretch"], "extent": [7972, 7985], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Stretch Around Turns"]}, " is on, the maximum amount that cross sections will be stretched. The default is 10 (maximum 10\u00d7 stretch). This prevents the cross-section from scaling wildly if, for example, the spine curve doubles back on itself."], "extent": [8017, 8268]}], "container": true, "attrs": {"id": "maxstretcharoundturns"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" End Caps "], "extent": [8268, 8287]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["End Cap Type"], "extent": [8287, 8302], "body": [{"type": "para", "indent": 4, "text": ["When the spine curve is open and the cross-section curves are closed, the generated surface is a tube. The node can automatically create end-caps on the open ends of the tube."], "extent": [8323, 8508]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [8508, 8518], "body": [{"type": "para", "indent": 8, "text": ["Do not generate end-caps."], "extent": [8518, 8553]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Single Polygon"], "extent": [8553, 8573], "body": [{"type": "para", "indent": 8, "text": ["Cap the ends with a single N-gon."], "extent": [8573, 8616]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Grid"], "extent": [8616, 8626], "body": [{"type": "para", "indent": 8, "text": ["Cap the ends with a surface, controlled by the parameters below."], "extent": [8626, 8700]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Side Single Polygon"], "extent": [8700, 8725], "body": [{"type": "para", "indent": 8, "text": ["When the spine is closed but the cross-sections are open, the ", {"type": "em", "text": ["sides"]}, " of the generated surface are open rather then the ends. This closes the sides with an N-gon."], "extent": [8725, 8897]}], "container": true}], "container": true}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/end_caps.jpg", "type": "img", "text": ""}], "extent": [8897, 8948]}], "container": true, "attrs": {"id": "endcaptype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cap Divisions"], "extent": [8948, 8963], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["End Cap Type"]}, " is ", {"type": "ui", "text": ["Grid"]}, ", the number of rows in the end-cap surfaces."], "extent": [8981, 9065]}], "container": true, "attrs": {"id": "capdivs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Triangular Poles"], "extent": [9065, 9083], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["End Cap Type"]}, " is ", {"type": "ui", "text": ["Grid"]}, " and this is on, the poles of end caps are made with triangles. When this is off (the default), the poles are made with quads with duplicate vertices."], "extent": [9109, 9298]}], "container": true, "attrs": {"id": "triangularpoles"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["End Cap Scale"], "extent": [9298, 9313], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["End Cap Type"]}, " is ", {"type": "ui", "text": ["Grid"]}, ", this is the amount each end-cap ", {"type": "q", "text": ["bulges out"]}, " from each end of the tube. Set this to ", {"type": "code", "text": ["0"]}, " for no bulge, or to a negative number for an inward bulge."], "extent": [9332, 9519]}], "container": true, "attrs": {"id": "capscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["End Cap Roundness"], "extent": [9519, 9538], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["End Cap Type"]}, " is ", {"type": "ui", "text": ["Grid"]}, ", and ", {"type": "ui", "text": ["End cap scale"]}, " is not ", {"type": "code", "text": ["0"]}, ", this controls the curvature of the bulge. ", {"type": "code", "text": ["1"]}, " is convex circular, ", {"type": "code", "text": ["0"]}, " is linear, and ", {"type": "code", "text": ["-1"]}, " is concave circular."], "extent": [9561, 9746]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/end_caps_cross.jpg", "type": "img", "text": ""}], "extent": [9746, 9803]}], "container": true, "attrs": {"id": "caproundness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["End Caps Group"], "extent": [9803, 9819], "body": [{"type": "para", "indent": 4, "text": ["When this is on, the output geometry includes a group by this name, containing all end-cap geometry. This lets you treat the end-caps separately if necessary in down-stream nodes."], "extent": [9842, 10028]}], "container": true, "attrs": {"id": "endcapsgroup"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" Scale "], "extent": [10028, 10044]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [10044, 10050], "body": [{"type": "para", "indent": 4, "text": ["You can also use a ", {"type": "code", "text": ["pscale"]}, " or ", {"type": "code", "text": ["scale"]}, " point attribute on the spine curve to scale the cross sections (when ", {"type": "ui", "text": ["Transform Using Curve Point Attributes"]}, " is on)."], "extent": [10050, 10214]}], "container": true}], "container": true, "role": "item_group"}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Apply Scale Along Curve"], "extent": [10214, 10239], "body": [{"type": "para", "indent": 4, "text": ["Scales the generated surface across the length of the spine curve according to the ", {"type": "ui", "text": ["Scale ramp"]}, " parameter."], "extent": [10260, 10374]}], "container": true, "attrs": {"id": "applyscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale Ramp"], "extent": [10374, 10386], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Apply scale along curve"]}, " is on, this ramp lets you interactively scale the surface inward and outward along the length of the spine curve."], "extent": [10406, 10558]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/sweep_scaleramp.jpg", "type": "img", "text": ""}, "\n    ", {"scheme": "Image", "value": "/images/nodes/sop/sweep2/sweep_scaleramp_surface.jpg", "type": "img", "text": ""}], "extent": [10558, 10682]}], "container": true, "attrs": {"id": "scaleramp"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Rotation"], "extent": [10682, 10697], "body": [{"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/rows.jpg", "type": "img", "text": ""}], "extent": [10697, 10741]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Rotate Order"], "extent": [10741, 10755], "body": [{"type": "para", "indent": 4, "text": ["The order in which to apply the Pitch (around X/out), Yaw (around Y/up), and Roll or Twist (around Z/tangent) options below, when more than one can apply."], "extent": [10770, 10930]}, {"type": "para", "indent": 4, "text": ["Pitch and Yaw may be useful to effectively apply a pre-transform to the cross sections before using them if they are not in the XY plane in the cross section input, which is why they default to being applied before the Roll or Twist."], "extent": [10930, 11169]}, {"type": "para", "indent": 4, "text": ["These rotations are effectively applied to the cross sections before the transforms from the backbone curves, having the net effect of them being rotations in the space of the backbone curve frames."], "extent": [11169, 11373]}], "container": true, "attrs": {"id": "rOrd"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Apply Roll or Twist"], "extent": [11373, 11394], "body": [{"type": "para", "indent": 4, "text": ["Apply the ", {"type": "ui", "text": ["Roll"]}, " and ", {"type": "ui", "text": ["Twist"]}, " parameters below to the cross-section curves."], "extent": [11414, 11498]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/rows_with_twist.jpg", "type": "img", "text": ""}], "extent": [11498, 11556]}], "container": true, "attrs": {"id": "applyroll"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Roll"], "extent": [11556, 11562], "body": [{"type": "para", "indent": 4, "text": ["A rotation, in degrees, around the spine curve direction, applied equally to every cross-section. You can use this to correct the orientation of the cross-section in relation to the curve."], "extent": [11577, 11771]}], "container": true, "attrs": {"id": "roll"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Full Twists"], "extent": [11771, 11784], "body": [{"type": "para", "indent": 4, "text": ["A convenience to add full twists (for each interval set in the ", {"type": "ui", "text": ["Twist per"]}, " parameter). This node multiplies this by 360 and adds it to the number in ", {"type": "ui", "text": ["Partial twist"]}, "."], "extent": [11805, 11980]}], "container": true, "attrs": {"id": "fulltwists"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Partial Twist"], "extent": [11980, 11995], "body": [{"type": "para", "indent": 4, "text": ["The number of degrees of twist to add (for each interval set in the ", {"type": "ui", "text": ["Twist per"]}, " parameter)."], "extent": [12013, 12112]}], "container": true, "attrs": {"id": "incroll"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Twist Per"], "extent": [12112, 12123], "body": [{"type": "para", "indent": 4, "text": ["The interval along each of which the total twist specified by the ", {"type": "ui", "text": ["Full twists"]}, " and ", {"type": "ui", "text": ["Partial twist"]}, " parameters is applied to the surface."], "extent": [12141, 12288]}, {"type": "para", "indent": 4, "text": ["See the descriptions and image below."], "extent": [12288, 12335]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Per Edge"], "extent": [12335, 12349], "body": [{"type": "para", "indent": 8, "text": ["The twist applies along each edge (the distance from each point in the curve to the next point)."], "extent": [12349, 12455]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Per Unit Distance"], "extent": [12455, 12478], "body": [{"type": "para", "indent": 8, "text": ["The twist applies each ", {"type": "q", "text": ["world unit"]}, " of distance along the curve."], "extent": [12478, 12552]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [12552, 12576], "body": [{"type": "para", "indent": 8, "text": ["The twist value is ", {"type": "strong", "text": ["multiplied"]}, " at each vertex by the value in the attribute named in the ", {"type": "ui", "text": ["Twist ramp attribute"]}, " parameter (this can be a vertex, point, primitive, or detail attribute). This product is applied as a roll at each vertex, not as an accumulating twist."], "extent": [12576, 12853]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Per Full Curve by Edges"], "extent": [12853, 12882], "body": [{"type": "para", "indent": 8, "text": ["Applies the twist value once across the entire curve, divided equally among each edge."], "extent": [12882, 12978]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Per Full Curve by Distance"], "extent": [12978, 13010], "body": [{"type": "para", "indent": 8, "text": ["Applies the twist value once across the entire curve, with the amount proportional to the distance along the curve."], "extent": [13010, 13135]}], "container": true}], "container": true}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/orientalongcurve/twist_per.jpg", "type": "img", "text": ""}], "extent": [13135, 13197]}], "container": true, "attrs": {"id": "rollper"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Twist Ramp Attribute"], "extent": [13197, 13219], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Twist Per"]}, " is ", {"type": "q", "text": ["Scale By Attribute"]}, ", this is the name of the vertex, point, primitive, or detail attribute to multiply by the total twist amount (full twists combined with partial twist). This product is applied as a roll at each vertex, not as an accumulating twist."], "extent": [13240, 13520]}], "container": true, "attrs": {"id": "rollattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Apply Yaw"], "extent": [13520, 13531], "body": [{"type": "para", "indent": 4, "text": ["Apply the ", {"type": "ui", "text": ["Yaw"]}, " parameters below to the cross-section curves. Yaw is a rotation around the cross-section\u2019s ", {"type": "q", "text": ["up"]}, " vector, usually thought of as ", {"type": "q", "text": ["turning left or right"]}, "."], "extent": [13550, 13724]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/rows_with_yaw.jpg", "type": "img", "text": ""}], "extent": [13724, 13780]}], "container": true, "attrs": {"id": "applyyaw"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Yaw"], "extent": [13780, 13785], "body": [{"type": "para", "indent": 4, "text": ["A rotation, in degrees, around the cross-section\u2019s ", {"type": "q", "text": ["up"]}, " vector, applied equally to every cross-section. (This is usually thought of as ", {"type": "q", "text": ["turning left or right"]}, ".) You can use this to correct the orientation of the cross-section relative to the curve."], "extent": [13799, 14053]}], "container": true, "attrs": {"id": "yaw"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Incremental Yaw"], "extent": [14053, 14070], "body": [{"type": "para", "indent": 4, "text": ["A rotation, in degrees, around the cross-section\u2019s ", {"type": "q", "text": ["up"]}, " vector (usually thought as ", {"type": "q", "text": ["turning left or right"]}, "), to apply along each interval set in the ", {"type": "ui", "text": ["Yaw per"]}, " parameter."], "extent": [14087, 14264]}], "container": true, "attrs": {"id": "incyaw"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Yaw Per"], "extent": [14264, 14273], "body": [{"type": "para", "indent": 4, "text": ["The interval along each of which the total rotation specified by the ", {"type": "ui", "text": ["Incremental Yaw"]}, " parameter is applied to the surface."], "extent": [14290, 14421]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Per Edge"], "extent": [14421, 14435], "body": [{"type": "para", "indent": 8, "text": ["The yaw applies along each edge (the distance from each point in the curve to the next point)."], "extent": [14435, 14539]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Per Unit Distance"], "extent": [14539, 14562], "body": [{"type": "para", "indent": 8, "text": ["The yaw applies each ", {"type": "q", "text": ["world unit"]}, " of distance along the curve."], "extent": [14562, 14634]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [14634, 14658], "body": [{"type": "para", "indent": 8, "text": ["The yaw value is ", {"type": "strong", "text": ["multiplied"]}, " at each vertex by the value in the attribute named in the ", {"type": "ui", "text": ["Yaw ramp attribute"]}, " parameter (this can be a vertex, point, primitive, or detail attribute). This product is applied as a yaw at each vertex, not as an accumulating yaw."], "extent": [14658, 14928]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Per Full Curve by Edges"], "extent": [14928, 14957], "body": [{"type": "para", "indent": 8, "text": ["Applies the yaw value once across the entire curve, divided equally among each edge."], "extent": [14957, 15051]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Per Full Curve by Distance"], "extent": [15051, 15083], "body": [{"type": "para", "indent": 8, "text": ["Applies the yaw value once across the entire curve, with the amount proportional to the distance along the curve."], "extent": [15083, 15206]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "yawper"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Yaw Ramp Attribute"], "extent": [15206, 15226], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Yaw Per"]}, " is ", {"type": "q", "text": ["Scale By Attribute"]}, ", this is the name of the vertex, point, primitive, or detail attribute to multiply by ", {"type": "ui", "text": ["Incremental Yaw"]}, ".  This product is applied as a yaw at each vertex, not as an accumulating yaw."], "extent": [15246, 15477]}], "container": true, "attrs": {"id": "yawattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Apply Pitch"], "extent": [15477, 15490], "body": [{"type": "para", "indent": 4, "text": ["Apply the ", {"type": "ui", "text": ["Pitch"]}, " parameters below to the cross-section curves. Pitch is a rotation around the cross-section\u2019s ", {"type": "q", "text": ["out"]}, " vector, usually thought of as ", {"type": "q", "text": ["tilting up or down"]}, "."], "extent": [15511, 15687]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/rows_with_pitch.jpg", "type": "img", "text": ""}], "extent": [15687, 15745]}], "container": true, "attrs": {"id": "applypitch"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pitch"], "extent": [15745, 15752], "body": [{"type": "para", "indent": 4, "text": ["A rotation, in degrees, around the cross-section\u2019s ", {"type": "q", "text": ["out"]}, " vector, applied equally to every cross-section. (This is usually thought of as ", {"type": "q", "text": ["tilting up or down"]}, ".) You can use this to correct the orientation of the cross-section relative to the curve."], "extent": [15768, 16020]}], "container": true, "attrs": {"id": "pitch"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Incremental Pitch"], "extent": [16020, 16039], "body": [{"type": "para", "indent": 4, "text": ["A rotation, in degrees, around the cross-section\u2019s ", {"type": "q", "text": ["out"]}, " vector (usually thought as ", {"type": "q", "text": ["tilting up or down"]}, "), to apply along each interval set in the ", {"type": "ui", "text": ["Yaw per"]}, " parameter."], "extent": [16058, 16233]}], "container": true, "attrs": {"id": "incpitch"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pitch Per"], "extent": [16233, 16244], "body": [{"type": "para", "indent": 4, "text": ["The interval along each of which the total rotation specified by the ", {"type": "ui", "text": ["Incremental Pitch"]}, " parameter is applied to the surface."], "extent": [16263, 16396]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Per Edge"], "extent": [16396, 16410], "body": [{"type": "para", "indent": 8, "text": ["The pitch applies along each edge (the distance from each point in the curve to the next point)."], "extent": [16410, 16516]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Per Unit Distance"], "extent": [16516, 16539], "body": [{"type": "para", "indent": 8, "text": ["The pitch applies each ", {"type": "q", "text": ["world unit"]}, " of distance along the curve."], "extent": [16539, 16613]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [16613, 16637], "body": [{"type": "para", "indent": 8, "text": ["The pitch value is ", {"type": "strong", "text": ["multiplied"]}, " at each vertex by the value in the attribute named in the ", {"type": "ui", "text": ["Yaw ramp attribute"]}, " parameter (this can be a vertex, point, primitive, or detail attribute). This product is applied as a pitch at each vertex, not as an accumulating pitch."], "extent": [16637, 16913]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Per Full Curve by Edges"], "extent": [16913, 16942], "body": [{"type": "para", "indent": 8, "text": ["Applies the pitch value once across the entire curve, divided equally among each edge."], "extent": [16942, 17038]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Per Full Curve by Distance"], "extent": [17038, 17070], "body": [{"type": "para", "indent": 8, "text": ["Applies the pitch value once across the entire curve, with the amount proportional to the distance along the curve."], "extent": [17070, 17195]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pitchper"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pitch Ramp Attribute"], "extent": [17195, 17217], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Pitch Per"]}, " is ", {"type": "ui", "text": ["Scale By Attribute"]}, ", this is the name of the vertex, point, primitive, or detail attribute to multiply by ", {"type": "ui", "text": ["Incremental Pitch"]}, ". This product is applied as a pitch at each vertex, not as an accumulating pitch."], "extent": [17239, 17480]}], "container": true, "attrs": {"id": "pitchattrib"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Construction"], "extent": [17480, 17499], "body": [{"level": 4, "type": "sep", "indent": 0, "text": [" Cross Sections "], "extent": [17499, 17525]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Cross Section Order"], "extent": [17525, 17547], "body": [{"type": "para", "indent": 4, "text": ["How the node decides what cross section(s) to use a each point along the spine curve."], "extent": [17567, 17662]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["All Cross Sections at Each Curve Vertex"], "extent": [17662, 17707], "body": [{"type": "para", "indent": 8, "text": ["Within a single curve\u2019s output grid, at every single vertex, all cross sections will be used."], "extent": [17707, 17810]}, {"type": "para", "indent": 8, "text": ["This is useful for if the cross sections collectively form a unit that should appear at each vertex within each grid, for example, to create a bulge at each vertex."], "extent": [17810, 17992]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/cross_section_order_all.jpg", "type": "img", "text": ""}], "extent": [17992, 18070]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Each Cross Section At All Curve Vertices"], "extent": [18070, 18116], "body": [{"type": "para", "indent": 8, "text": ["Every curve will be separately surfaced once for each cross section."], "extent": [18116, 18194]}, {"type": "para", "indent": 8, "text": ["This is useful if the cross sections should effectively act like a single, disconnected cross section, for example, to create multiple tubes for each curve."], "extent": [18194, 18368]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/cross_section_order_each.jpg", "type": "img", "text": ""}], "extent": [18368, 18447]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cycle Through Cross Section Primitives per Vertex"], "extent": [18447, 18502], "body": [{"type": "para", "indent": 8, "text": ["Within each single curve\u2019s output grid, the cross section selected for each vertex will cycle through the cross sections, starting from the first cross section."], "extent": [18502, 18672]}, {"type": "para", "indent": 8, "text": ["This is useful if the cross sections form all cross sections to be used along the curves in order, for example, if the cross section input contains all cross sections for a corridor in order."], "extent": [18672, 18881]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/cross_section_order_cyclevtx.jpg", "type": "img", "text": ""}], "extent": [18881, 18964]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cycle Through Cross Section Primitives per Primitive"], "extent": [18964, 19022], "body": [{"type": "para", "indent": 8, "text": ["For each curve\u2019s output grid, a single cross section will be selected, selecting the next cross section for each next curve."], "extent": [19022, 19156]}, {"type": "para", "indent": 8, "text": ["This is useful if each curve has a different cross section to be used for it."], "extent": [19156, 19251]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/cross_section_order_cyclepr.jpg", "type": "img", "text": ""}], "extent": [19251, 19333]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Choose Cross Section Primitives by Attribute"], "extent": [19333, 19383], "body": [{"type": "para", "indent": 8, "text": ["For each vertex, select a cross section to use based on the attribute specified in the ", {"type": "ui", "text": ["Cross Section Attribute"]}, " parameter."], "extent": [19383, 19518]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/cross_section_order_attrib.jpg", "type": "img", "text": ""}], "extent": [19518, 19599]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "copyorder"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cross Section Attribute"], "extent": [19599, 19624], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Cross Section Order"]}, " is ", {"type": "q", "text": ["Choose Cross Section Primitives by Attribute"]}, ", this is the name of the attribute to use for selecting cross sections."], "extent": [19653, 19809]}, {"type": "para", "indent": 4, "text": ["This can be a point, vertex, primitive, or detail attribute on the spine curve, or a primitive attribute on the cross-sections."], "extent": [19809, 19942]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["If this is an integer attribute on the spine, it will select cross sections by primitive number."], "extent": [19942, 20046]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["If this is an integer or string attribute present on both inputs, it will select a cross section with a matching value."], "extent": [20046, 20173]}], "container": true}], "container": true, "attrs": {"id": "crosssectionattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primitive Type"], "extent": [20173, 20189], "body": [{"type": "para", "indent": 4, "text": ["The type of primitive to output (when ", {"type": "ui", "text": ["Surface Type"]}, " is not ", {"type": "q", "text": ["Points"]}, ").  ", {"type": "q", "text": ["Automatic"]}, " generates the same type of surface as the input curves (for example, polylines create a polygon surface, NURBS curves produce a NURBS surface)."], "extent": [20208, 20443]}], "container": true, "attrs": {"id": "primtype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ensure Unique Seam Vertices"], "extent": [20443, 20472], "body": [{"type": "para", "indent": 4, "text": ["If ", {"type": "ui", "text": ["Surface Type"]}, " is ", {"type": "q", "text": ["Rows"]}, ", ", {"type": "q", "text": ["Columns"]}, ", or ", {"type": "q", "text": ["Rows and Columns"]}, ", and the spine curve or cross-section is closed, this adds an extra vertex (if needed) to each curve to ensure that there are separate vertices for parametric curve u or v coordinate values 0 and 1."], "extent": [20501, 20769]}, {"type": "para", "indent": 4, "text": ["If any output primitives are polygon soups, NURBS surfaces, Bezier surfaces, or bilinear mesh primitives, this option similarly also adds any extra vertices that would be needed to ensure that all uv seams are paramerized correctly."], "extent": [20769, 21007]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/unique_seam_vertices.jpg", "type": "img", "text": ""}], "extent": [21007, 21070]}], "container": true, "attrs": {"id": "unrollclosedrowcol"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Swap Rows and Columns"], "extent": [21070, 21093], "body": [{"type": "para", "indent": 4, "text": ["Adjusts the order of the points and primitives in the generated surface(s) to be column-major, having all points/primitives of one column before those of the next column, instead of the default (row-major, having all point/primitives of one row before those of the next row).  Changing this also reverses normals, so you may also want to turn on ", {"type": "ui", "text": ["Reverse Cross Sections"]}, " to keep the current normals."], "extent": [21114, 21521]}], "container": true, "attrs": {"id": "swaprowcol"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Close Implicit Backbone Curve if No Curve Input"], "extent": [21521, 21570], "body": [{"type": "para", "indent": 4, "text": ["If the node finds no spine curve in the first input, the node sweeps the cross sections in the second input as if there is a single curve with one vertex per cross section and all positions at the origin. When this is on, the node makes that implicit curve closed, treating the cross sections as forming a loop, instead of a line."], "extent": [21600, 21936]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/close_implicit_curve.jpg", "type": "img", "text": ""}], "extent": [21936, 22000]}], "container": true, "attrs": {"id": "closeifnocurveinput"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" Up Vectors "], "extent": [22000, 22021]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Target Up Vector"], "extent": [22021, 22040], "body": [{"type": "para", "indent": 4, "text": ["The initial orientation of the cross-section around the direction of the curve. You can use the roll, yaw, and pitch parameters on the ", {"type": "ui", "text": ["Surface"]}, " tab to further adjust the orientation of the cross-sections on top of this."], "extent": [22063, 22291]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Curve Normal"], "extent": [22291, 22309], "body": [{"type": "para", "indent": 8, "text": ["Match the cross-section up-vector to the curve normal. This is useful when the curve is planar, it orients the cross-sections perpendicular to the plane."], "extent": [22309, 22472]}], "container": true}, {"type": "dt", "indent": 4, "text": ["X/Y/Z Axis"], "extent": [22472, 22488], "body": [{"type": "para", "indent": 8, "text": ["Match the cross-section up-vector to the X, Y, or Z axis."], "extent": [22488, 22555]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Attribute"], "extent": [22555, 22570], "body": [{"type": "para", "indent": 8, "text": ["Get the up-vector from a per-curve value in a primitive attribute, or a shared value in a detail attribute. Set the attribute name in the ", {"type": "ui", "text": ["Start up attribute"]}, " parameter."], "extent": [22570, 22751]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [22751, 22763], "body": [{"type": "para", "indent": 8, "text": ["Match the cross-section up-vector to a custom vector. Set the custom vector in the ", {"type": "ui", "text": ["Start up-vector"]}, " parameter."], "extent": [22763, 22886]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "upvectortype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Target Up Vector at Start (else Average)"], "extent": [22886, 22928], "body": [{"type": "para", "indent": 4, "text": ["When this is on, at each point the node tries to get closest to the initial up-vector, while staying perpendicular to the spine curve tangent. When this is off, it tries to get closest to the ", {"type": "em", "text": ["average of all vertex up-vectors"]}, ", instead of the initial up-vector."], "extent": [22954, 23221]}], "container": true, "attrs": {"id": "upvectoratstart"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Target End Up Vector"], "extent": [23221, 23247], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Target up-vector at Start"]}, " is on, and this is on, the node adjusts any twist along the spine to ensure the final up-vector is as close as possible to the target up-vector, without affecting the initial up-vector."], "extent": [23272, 23498]}, {"type": "para", "indent": 4, "text": ["If ", {"type": "ui", "text": ["Target up-vector"]}, " is ", {"type": "q", "text": ["Attribute"]}, " or ", {"type": "q", "text": ["Custom"]}, ", there are separate ", {"type": "ui", "text": ["End Up Attribute"]}, " and ", {"type": "ui", "text": ["End Up Vector"]}, " parameters, in order to specify different end up-vectors from the start up-vectors."], "extent": [23498, 23701]}], "container": true, "attrs": {"id": "useendupvector"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start Up Attribute"], "extent": [23701, 23721], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Target Up Vector"]}, " is ", {"type": "ui", "text": ["Attribute"]}, ", this is the name of the primitive or detail attribute to use for each curve\u2019s target up-vector."], "extent": [23746, 23891]}], "container": true, "attrs": {"id": "upvectorattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["End Up Attribute"], "extent": [23891, 23909], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Target Up Vector"]}, " is ", {"type": "ui", "text": ["Attribute"]}, " and ", {"type": "ui", "text": ["Use Target End Up Vector"]}, " is on, this is the name of the primitive or detail attribute that provides the target up-vectors at the end of the curve."], "extent": [23937, 24140]}], "container": true, "attrs": {"id": "endupvectorattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start Up Vector"], "extent": [24140, 24157], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Target up-vector"]}, " is ", {"type": "q", "text": ["Custom"]}, ", this is the target up-vector at the end of the curve."], "extent": [24176, 24274]}], "container": true, "attrs": {"id": "upvector"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["End up-vector"], "extent": [24274, 24289], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Target up-vector"]}, " is ", {"type": "q", "text": ["Custom"]}, " and ", {"type": "ui", "text": ["Use Target End Up Vector"]}, " is on, this is the target up-vector at the end of the curve."], "extent": [24311, 24449]}], "container": true, "attrs": {"id": "endupvector"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" Tangents "], "extent": [24449, 24468]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Tangent Type"], "extent": [24468, 24483], "body": [{"type": "para", "indent": 4, "text": ["How to compute the spine curve\u2019s tangent direction at each point. If ", {"type": "ui", "text": ["Transform using curve point attributes"]}, " is on and the spine curve has the required attributes, this is ignored."], "extent": [24505, 24694]}, {"type": "para", "indent": 4, "text": ["(The ", {"type": "ui", "text": ["Stretch Around Turns"]}, " option always computes the stretch and stretch direction based on the ", {"type": "q", "text": ["Average of Edge Directions"]}, " tangent, regardless of this setting.)"], "extent": [24694, 24870]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Average of Edge Directions"], "extent": [24870, 24902], "body": [{"type": "para", "indent": 8, "text": ["Average of the normalized directions of the previous and next edge."], "extent": [24902, 24983]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Central Difference"], "extent": [24983, 25007], "body": [{"type": "para", "indent": 8, "text": ["Average of the non-normalized previous and next edge vectors."], "extent": [25007, 25078]}, {"type": "para", "indent": 8, "text": ["This is similar to the ", {"type": "q", "text": ["Central Difference"]}, " option for ", {"type": "ui", "text": ["Velocity Approximation"]}, " on the ", {"scheme": "Node", "value": "/nodes/sop/trail", "type": "link", "text": ["Trail node"], "fullpath": "/nodes/sop/trail"}, "."], "extent": [25078, 25209]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Previous Edge"], "extent": [25209, 25228], "body": [{"type": "para", "indent": 8, "text": ["Previous edge direction."], "extent": [25228, 25266]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Next Edge"], "extent": [25266, 25281], "body": [{"type": "para", "indent": 8, "text": ["Next edge direction."], "extent": [25281, 25315]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Z Axis (Ignore Curve)"], "extent": [25315, 25342], "body": [{"type": "para", "indent": 8, "text": ["The tangent will be chosen as the Z axis, regardless of the curve."], "extent": [25342, 25418]}, {"type": "para", "indent": 8, "text": ["This can be useful if the cross sections have already been rotated to the desired orientation."], "extent": [25418, 25522]}], "container": true}], "container": true}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/orientalongcurve/tangent_type.jpg", "type": "img", "text": ""}], "extent": [25522, 25587]}], "container": true, "attrs": {"id": "tangenttype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Make Closed Curve Orientations Continuous"], "extent": [25587, 25630], "body": [{"type": "para", "indent": 4, "text": ["Any extra rotation required to make the start and end orientations match (either because the curve is non-planar, or you applied a total amount of twist that wasn\u2019t an even multiple of 360) is spread out along the entire curve, instead of possibly coming suddenly along the last edge."], "extent": [25657, 25947]}], "container": true, "attrs": {"id": "continuousclosed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Extrapolate End Tangents"], "extent": [25947, 25973], "body": [{"type": "para", "indent": 4, "text": ["Extrapolate the tangent for the last edge from the previous two edges. When this is off, the tangent for the final edge is just the edge direction."], "extent": [26006, 26159]}, {"type": "para", "indent": 4, "text": ["This is most useful when a backbone curve is intended to represent a circular arc, so the end cross sections will be rotated as expected."], "extent": [26159, 26302]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/extrapolate_end_tangents.jpg", "type": "img", "text": ""}], "extent": [26302, 26369]}], "container": true, "attrs": {"id": "extrapolateendtangents"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transform Using Curve Point Attributes"], "extent": [26369, 26409], "body": [{"type": "para", "indent": 4, "text": ["You can also scale the cross-section using ", {"type": "code", "text": ["pscale"]}, " or ", {"type": "code", "text": ["scale"]}, " point attributes on the spine curve, and orient the cross-sections using the point attributes ", {"type": "code", "text": ["P"]}, ", ", {"type": "code", "text": ["N"]}, ", ", {"type": "code", "text": ["up"]}, ", ", {"type": "code", "text": ["orient"]}, ", ", {"type": "code", "text": ["rot"]}, ", ", {"type": "code", "text": ["trans"]}, ", ", {"type": "code", "text": ["pivot"]}, ", and/or ", {"type": "code", "text": ["transform"]}, " on the spine curve."], "extent": [26438, 26690]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["If ", {"type": "code", "text": ["N"]}, " is present and none of ", {"type": "code", "text": ["up"]}, ", ", {"type": "code", "text": ["orient"]}, ", ", {"type": "code", "text": ["rot"]}, ", or ", {"type": "code", "text": ["transform"]}, " are present, the node uses ", {"type": "code", "text": ["N"]}, " as the curve tangent and computes the rest of the rotation as usual."], "extent": [26690, 26865]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["If ", {"type": "code", "text": ["up"]}, " is present and none of ", {"type": "code", "text": ["N"]}, ", ", {"type": "code", "text": ["orient"]}, ", ", {"type": "code", "text": ["rot"]}, ", or ", {"type": "code", "text": ["transform"]}, " are present, the node computes the tangent as usual, and uses ", {"type": "code", "text": ["up"]}, " as the up-vector at each vertex (before any roll or twist is applied)."], "extent": [26865, 27079]}], "container": true}], "container": true, "attrs": {"id": "transformbyattribs"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["UVs and Attributes"], "extent": [27079, 27104], "body": [{"level": 3, "type": "sep", "indent": 0, "text": [" UV Coordinates "], "extent": [27104, 27128]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Compute UVs"], "extent": [27128, 27142], "body": [{"type": "para", "indent": 4, "text": ["Generate a ", {"type": "code", "text": ["uv"]}, " vertex attribute on the generated surface. If the input curves already have ", {"type": "code", "text": ["uv"]}, " attributes, the node uses the values from those attributes (U corresponds to the cross sections, and V corresponds to the spine curve)."], "extent": [27163, 27401]}, {"type": "para", "indent": 4, "text": ["(If ", {"type": "ui", "text": ["Surface Type"]}, " is ", {"type": "q", "text": ["Points"]}, ", this will generate a point attribute.)"], "extent": [27401, 27479]}], "container": true, "attrs": {"id": "computeuvs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Override Any Existing UVs"], "extent": [27479, 27506], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Compute UVs"]}, " is on, compute new UVs for the surface, even if the input curves already had ", {"type": "code", "text": ["uv"]}, " attributes."], "extent": [27536, 27656]}], "container": true, "attrs": {"id": "overrideexistinguvs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Length-Weighted UVs"], "extent": [27656, 27677], "body": [{"type": "para", "indent": 4, "text": ["Scale the U and V coordinates based on proportional edge lengths so they're even across the whole surface, rather than bunching up where edges bunch up."], "extent": [27705, 27863]}, {"type": "para", "indent": 4, "text": ["(If ", {"type": "ui", "text": ["Normalize Computed Us"]}, " and/or ", {"type": "ui", "text": ["Normalize Computed Vs"]}, " are on, the coordinates are still normalized to be within the 0 to 1 range.)"], "extent": [27863, 28008]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/length_weighted_uvs.jpg", "type": "img", "text": ""}], "extent": [28008, 28070]}], "container": true, "attrs": {"id": "lengthweighteduvs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Normalize Computed Us"], "extent": [28070, 28093], "body": [{"type": "para", "indent": 4, "text": ["Normalize computed U coordinates to be in the range 0 to 1 (before applying ", {"type": "ui", "text": ["UV scale"]}, "). When this is off, U corresponds to the average distance around the cross sections on the mesh (ignoring any stretch applied by ", {"type": "ui", "text": ["Stretch Around Turns"]}, ")."], "extent": [28114, 28364]}, {"type": "para", "indent": 4, "text": ["When this is on and ", {"type": "ui", "text": ["Normalize Computed Vs"]}, " is off, the node scales V such that U and V appear scaled similarly in space (depending on the ", {"type": "ui", "text": ["Use Max Cross Section Length per Curve for Proportional Scale"]}, " setting)."], "extent": [28364, 28586]}, {"type": "para", "indent": 4, "text": ["This is especially useful for things like applying repeating rope textures, where the texture should be applied isotropically."], "extent": [28586, 28718]}], "container": true, "attrs": {"id": "normalizeu"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Normalize Computed Vs"], "extent": [28718, 28741], "body": [{"type": "para", "indent": 4, "text": ["Normalize computed V coordinates to be in the range 0 to 1 (before applying ", {"type": "ui", "text": ["UV scale"]}, "). When this is off, V corresponds to the average distance along the surface in V, or the distance along the spine curve, depending on the ", {"type": "ui", "text": ["Use Mesh Edge Lengths instead of Curve Edge Lengths"]}, " parameter."], "extent": [28762, 29061]}, {"type": "para", "indent": 4, "text": ["When this is on and ", {"type": "ui", "text": ["Normalize Computed Us"]}, " is off, the node scales U such that U and V appear scaled similarly in space."], "extent": [29061, 29190]}], "container": true, "attrs": {"id": "normalizev"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flip Computed Us"], "extent": [29190, 29208], "body": [{"type": "para", "indent": 4, "text": ["Reverse the direction of the computed U values (same as replacing each U value with ", {"type": "code", "text": ["max(U values) - U"]}, "). Use this if a texture appears backward when applied to the surface."], "extent": [29224, 29403]}, {"type": "para", "indent": 4, "text": ["This should be on for textures to appear correct on surfaces viewed from the front, (normals pointing toward the camera), and should be off for textures to appear correct on surfaces viewed from the back, (normals pointing away from the camera)."], "extent": [29403, 29654]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/flip_u.jpg", "type": "img", "text": ""}], "extent": [29654, 29704]}], "container": true, "attrs": {"id": "flipu"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" UV Scale "], "extent": [29704, 29723]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["UV Scale"], "extent": [29723, 29734], "body": [{"type": "para", "indent": 4, "text": ["A scale on the generated UV coordinates. This is applied ", {"type": "em", "text": ["after"]}, " any normalization."], "extent": [29752, 29841]}, {"type": "para", "indent": 4, "text": ["This is applied ", {"type": "em", "text": ["before"]}, " the adjustments made by ", {"type": "ui", "text": ["Make Computed Us Wrap Seamlessly"]}, " and/or ", {"type": "ui", "text": ["Make Computed Vs Wrap Seamlessly"]}, ", so the texture will still wrap correctly."], "extent": [29841, 30019]}], "container": true, "attrs": {"id": "uvscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Mesh Edge Lengths Instead of Curve Edge Lengths"], "extent": [30019, 30072], "body": [{"type": "para", "indent": 4, "text": ["When this is on and ", {"type": "ui", "text": ["Length-Weighted UVs"]}, " is on, the averages of the output mesh edge lengths in the curve direction are used as the lengths in the V direction, instead of the original curve edge lengths."], "extent": [30101, 30313]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["This is useful when, for example, a curve has coincident points with different cross sections, such as a door jamb in a hallway, so that the surface between the two cross sections gets a non-zero area of texture space."], "extent": [30313, 30539]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["It is also useful for generating UVs for grid end caps.  However, it can be less stable, when changing rotations, than using the original curve lengths."], "extent": [30539, 30699]}], "container": true}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/mesh_edge_length_uvs.jpg", "type": "img", "text": ""}], "extent": [30699, 30762]}], "container": true, "attrs": {"id": "usemeshedgelengths"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Max Cross Section Length per Curve for Proportional Scale"], "extent": [30762, 30825], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Normalize Computed Us"]}, " is on and ", {"type": "ui", "text": ["Normalize Computed Vs"]}, " is on, this controls whether the node uses the maximum cross section length for computing the V scale, instead of the average of the previous and next cross section lengths for each V edge."], "extent": [30853, 31115]}, {"type": "para", "indent": 4, "text": ["If the cross section length varies significantly, this can make the texture appear stretched in some places, but can also avoid instability and inconsistency in the V scale along the curve."], "extent": [31115, 31310]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/max_cross_section_uvs.jpg", "type": "img", "text": ""}], "extent": [31310, 31375]}], "container": true, "attrs": {"id": "propscalepercurve"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" UV Seams "], "extent": [31375, 31394]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Snap U to Nearest Boundary"], "extent": [31394, 31423], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Normalize Computed Us"]}, " is off and this is on, the node rounds the range of U to the nearest positive integer, so textures wrap correctly in the U direction. This node applies this rounding after the ", {"type": "ui", "text": ["UV Scale"]}, "."], "extent": [31439, 31665]}], "container": true, "attrs": {"id": "wrapu"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Snap V to Nearest Boundary"], "extent": [31665, 31693], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Normalize Computed Vs"]}, " is off and this is on, the node rounds the range of V to the nearest positive integer, so textures wrap correctly in the V direction. This node applies this rounding after the ", {"type": "ui", "text": ["UV Scale"]}, "."], "extent": [31709, 31935]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/uv_normalization.jpg", "type": "img", "text": ""}], "extent": [31935, 31995]}], "container": true, "attrs": {"id": "wrapv"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" Attributes "], "extent": [31995, 32016]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["From Backbone Curves"], "extent": [32016, 32039], "body": [{"type": "para", "indent": 4, "text": ["Space-separated list of attributes to copy from the backbone curve onto the generated surface. You can use patterns here."], "extent": [32069, 32196]}, {"type": "para", "indent": 4, "text": ["By default, ", {"type": "code", "text": ["P"]}, ", ", {"type": "code", "text": ["N"]}, ", ", {"type": "code", "text": ["up"]}, ", ", {"type": "code", "text": ["pscale"]}, ", ", {"type": "code", "text": ["scale"]}, ", ", {"type": "code", "text": ["orient"]}, ", ", {"type": "code", "text": ["rot"]}, ", ", {"type": "code", "text": ["pivot"]}, ", ", {"type": "code", "text": ["trans"]}, ", and ", {"type": "code", "text": ["transform"]}, " are ", {"type": "strong", "text": ["not copied"]}, ", to avoid copying attributes used for computing transforms."], "extent": [32196, 32376]}], "container": true, "attrs": {"id": "attribsfrombackbone"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["From Cross Sections"], "extent": [32376, 32397], "body": [{"type": "para", "indent": 4, "text": ["Space-separated list of attributes to copy from the cross-section curves onto the generated surface. You can use patterns here."], "extent": [32431, 32564]}, {"type": "para", "indent": 4, "text": ["The transforms attributes that have a transform type (position, vector, normal, quaternion, or transform matrix) appropriately."], "extent": [32564, 32698]}], "container": true, "attrs": {"id": "attribsfromcrosssection"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" Output attributes "], "extent": [32698, 32726]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/nodes/sop/sweep2/metadata.jpg", "type": "img", "text": ""}], "extent": [32726, 32774]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Point Row Attribute"], "extent": [32774, 32795], "body": [{"type": "para", "indent": 4, "text": ["Create an integer point attribute with this name on the generated surface, containing the row number."], "extent": [32817, 32924]}], "container": true, "attrs": {"id": "ptrowattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Col Attribute"], "extent": [32924, 32945], "body": [{"type": "para", "indent": 4, "text": ["Create an integer point attribute with this name on the generated surface, containing the column number."], "extent": [32967, 33077]}], "container": true, "attrs": {"id": "ptcolattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prim Row Attribute"], "extent": [33077, 33097], "body": [{"type": "para", "indent": 4, "text": ["Create an integer point attribute with this name on the generated surface, containing the quad row number."], "extent": [33119, 33231]}], "container": true, "attrs": {"id": "ptrowattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prim Col Attribute"], "extent": [33231, 33251], "body": [{"type": "para", "indent": 4, "text": ["Create an integer point attribute with this name on the generated surface, containing the quad column number."], "extent": [33273, 33388]}], "container": true, "attrs": {"id": "ptcolattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cross Section Num Attribute"], "extent": [33388, 33417], "body": [{"type": "para", "indent": 4, "text": ["Create an integer point attribute with this name on the generated surface, containing the primitive number of the cross section curve used to create the point."], "extent": [33449, 33614]}], "container": true, "attrs": {"id": "crosssectionnumattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Curve Num Attribute"], "extent": [33614, 33635], "body": [{"type": "para", "indent": 4, "text": ["Create an integer point attribute with this name on the generated surface, containing the primitive number of the spine curve used to create the point."], "extent": [33660, 33818]}], "container": true, "attrs": {"id": "curvenumattrib"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [33818, 33827], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/orientalongcurve", "type": "link", "text": "", "fullpath": "/nodes/sop/orientalongcurve"}], "extent": [33827, 33858]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/copytopoints", "type": "link", "text": "", "fullpath": "/nodes/sop/copytopoints"}], "extent": [33858, 33884]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/uvtexture", "type": "link", "text": "", "fullpath": "/nodes/sop/uvtexture"}], "extent": [33884, 33907]}], "container": true}], "text": "Related"}], "title": ["Sweep"], "summary": ["Creates a surface by sweeping a cross section curve along a spine curve."]}