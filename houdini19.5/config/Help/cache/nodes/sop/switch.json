{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "switch", "icon": "COMMON/switch", "tags": "util, network", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Switch"], "extent": [88, 99]}, {"type": "summary", "indent": 0, "text": ["Switches between network branches based on an expression or keyframe animation."], "extent": [99, 187]}, {"type": "para", "indent": 0, "text": ["This node passes the input specified in the ", {"type": "ui", "text": ["Select input"]}, " parameter to the output. The input numbering starts at 0. You can control the parameter with an\n", {"scheme": null, "value": "/expressions/", "type": "link", "text": ["expression"], "fullpath": "/expressions/index"}, "  or animate it."], "extent": [187, 388]}, {"type": "para", "indent": 0, "text": ["For example, you could use the expression ", {"type": "code", "text": ["$F - 1"]}, " to switch to the\nfirst input at frame 1, the second input at frame 2, and so on. Use the\nexpression ", {"type": "code", "text": ["($F >= 5)"]}, " to use the first input for the first four frames,\nand the second input afterward (boolean operators such as ", {"type": "code", "text": [">="]}, " return\n", {"type": "code", "text": ["0"]}, " for false and ", {"type": "code", "text": ["1"]}, " for true, so the switch will select input 0 when\nthe expression is false and input 1 when the expression is true)."], "extent": [388, 810]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [810, 815], "body": [{"type": "para", "indent": 4, "text": ["Often, you can use a Switch in a network that could potentially have\n    errors to bypass the failing nodes. One way to do this is to use the\n    following expression in the ", {"type": "ui", "text": ["Select Input"]}, " parameter:"], "extent": [815, 1022]}, {"lang": "exp", "type": "pre", "indent": 4, "text": ["\n    if (strmatch(\"*Error:*\", run(\"opinfo \" + opfullpath(\"../\" + opinput(\".\", 1)))), 0, 1)\n    "], "extent": [1022, 1138]}, {"type": "para", "indent": 4, "text": ["With this expression, the switch will use the ", {"type": "em", "text": ["second"]}, " input, unless\n    it has an error, in which case it will switch to the ", {"type": "em", "text": ["first"]}, " input."], "extent": [1138, 1284]}, {"type": "para", "indent": 4, "text": ["The expression gets the operator info string (using ", {"scheme": "Exp", "value": "/expressions/run", "type": "link", "text": ["run"], "fallback_text": "run()", "fullpath": "/expressions/run"}, "\n    expression function to call the ", {"scheme": "Cmd", "value": "/commands/opinfo", "type": "link", "text": ["opinfo"], "fallback_text": "opinfo", "fullpath": "/commands/opinfo"}, " HScript command)\n    of the second input (", {"type": "code", "text": ["opinput(\".\", 1)"]}, ". The inputs are zero-based,\n    so ", {"type": "code", "text": ["1"]}, " refers to the second input). If ", {"scheme": "Exp", "value": "/expressions/strmatch", "type": "link", "text": ["strmatch"], "fallback_text": "strmatch()", "fullpath": "/expressions/strmatch"}, " finds\n    an error string, the ", {"scheme": "Exp", "value": "/expressions/if", "type": "link", "text": ["if"], "fallback_text": "if()", "fullpath": "/expressions/if"}, " function returns 0 (use first\n    input), otherwise it returns 1 (use second input)."], "extent": [1284, 1694]}, {"type": "para", "indent": 4, "text": ["You can also use the following expression when working with SOPs that generate warnings instead of errors. For example, when an Object Merge is the second input to a switch which is not loading any geometry and generates a warning:"], "extent": [1694, 1931]}, {"lang": "exp", "type": "pre", "indent": 4, "text": ["\n    if (strmatch(\"*Warning:*\", run(\"opinfo \" + opfullpath(\"../\" + opinput(\".\", 1)))), 0, 1)\n    "], "extent": [1931, 2049]}], "container": true}], "container": true, "role": "item_group"}, {"type": "vimeo_group", "body": [{"ext": null, "type": "vimeo", "indent": 0, "text": [" Switch SOP"], "role": "item", "extent": [2049, 2069], "body": [], "container": true, "attrs": {"id": "406959467"}}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2089, 2101], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Select Input"], "extent": [2101, 2119], "body": [{"type": "para", "indent": 8, "text": ["The input number (starting at 0) to pass to the output. You can\n        use an expression to control this or animate the parameter\n        value."], "extent": [2146, 2301]}], "container": true, "attrs": {"channels": "/input"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}], "title": ["Switch"], "summary": ["Switches between network branches based on an expression or keyframe animation."]}