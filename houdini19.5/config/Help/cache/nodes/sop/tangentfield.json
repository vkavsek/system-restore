{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "tangentfield", "icon": "SOP/tangentfield", "tags": "attrs", "since": "19.5 ", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Tangent Field"], "extent": [0, 18]}, {"type": "summary", "indent": 0, "text": ["Creates smooth tangent (multi-) vector fields on polygonal surfaces."], "extent": [121, 197]}, {"type": "para", "indent": 0, "text": ["This node can be used to make smoothly varying tangent vector fields on polygonal surface that closely\nfollow and smoothly interpolate between sparsely given guide values. It has \nbuilt-in support for guiding of the generated fields by curvature directions \nor boundary curves. In addition to generating ordinary vector fields, this node \ncan also generate instances of the more general concept of ", {"type": "em", "text": ["rotationally symmetric (RoSy) multi-vector\nfields"]}, ", such as ", {"type": "em", "text": ["line-fields"]}, " (RoSy 2-vector fields) or ", {"type": "em", "text": ["cross-fields"]}, " (RoSy 4-vector fields). \nYou can think of such fields as assigning to each point multiple tangent vectors (e.g. 4 in the case of corss-fields) that are rotationally spaced evenly in the tangent plane of the point. We call each of these vectors \nan instance of the multi-vector. As a multi-vector field, these vectors represent \nthe same object. In the same way that rotating a tangent vector by 360 degrees in its tangent plane does not \nchange the vector, rotating a 2-vector field by a multiple of 360/2 = 180 degrees, or a 4-vector field\nby a multiple of 360/4 = 90 degrees would give the same multi-vector. \nIn other words, a 2-vector field is like a vector field in which we do not distinguish \nbetwen a vector and its negation. Similarly a 4-vector field is like a vector field where \nwe think of a vector as being the same as the 90, 180, and 270 degree rotations of that vector. This node\nrepresents a multi-vector field by reporting all or some of the instance vectors at each element."], "extent": [197, 1707]}, {"type": "para", "indent": 0, "text": ["For example, a smoothly varying pair of local UV coordinate axes over a patch of surface can be\nthought of as the first 2 instance vectors of a 4-vector field (the other two being the negative\nU and V axes). This means that this node can be used to produce smoothly varying frame-fields over geometries."], "extent": [1707, 2012]}, {"type": "disclosure_group", "body": [{"ext": null, "type": "disclosure", "indent": 0, "text": [" Technical note: In general it impossible to have an everywhere nonzero smoothly varying frame-field across an entire surface, with few exceptions. For example, it is provably impossible to have such a frame field over a deformed sphere regardless of the connectivity or the deformation (", {"scheme": null, "value": "https://en.wikipedia.org/wiki/Hairy_ball_theorem", "type": "link", "text": ["The Hairy Ball Theorem"], "exists": true}, "). However, the output of this node\nis, conceptually, a discrete sample (one sample per point or polygon) of a smooth field that ranges over the whole surface and this larger field does become zero in some (non-sample) ", {"type": "em", "text": ["singular"]}, " locations. If the field is computed over points, these singularities will land inside some of the faces which we then call singular faces. If the field is computed over primitives, then singularities will be vertices. Also note that the indexing of the instances\nof a multi-vector field at a point or a face are arbitrary. This node tries to choose the first instance vectors\nin such a way that individual instances with the same index over all elements appear like a smoothly varying vector field with as little discontinuity as possible. It is however not always possible to have no discontinuities as this would in other ways violate similar provable restrictions."], "role": "item", "extent": [2012, 3285]}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips"], "extent": [3285, 3298], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["This node doesn\u2019t alter the geometry of its input. However, the computations in \nthis node are always performed on a triangulated surface. \nIf the input geometry has nonmanifold edges or points, they are treated as being\ncut away with narrow slits or holes left in their place. Polygon faces with four\nor more vertices are triangulated internally. The results reported on an input \nface that is internally triangulated is picked up from one of its member triangles arbitrarily. \nIn other words, this node does not combine the results from individual member triangles by some form of \naverging because in complicated polygons there\ncan be a substantial amount of variation over the member triangles and an average may be inferior to \nall individual member values. Therefore, \nfor better accuracy when generating tangent fields over faces, it is a good idea to use this \nnode on surfaces that are already triangulated. "], "extent": [3298, 4220]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["In the case of fields computed over points, instance vectors are reported as being tangent\nto one of the faes incident to a point. In this case the instances of a multi-vector at a point\nare equally spaced around the point in terms of the total face angle sum between consecutive \nparis of them."], "extent": [4220, 4519]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can use this node as an alternative to ", {"scheme": "Nodes", "value": "sop/polyframe", "type": "link", "text": ["PolyFrame"], "fullpath": "/nodes/sop/sop/polyframe"}, " for \ngenerating very smoothly varying frames across the faces of a surface mesh. \nTo do this generate a 4-vector field over the faces and report\nonly the first two instances. Optionally you can make the frame line up with curvature directions \nor boundary curves. "], "extent": [4519, 4862]}], "container": true}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [4862, 4874], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [4874, 4881], "body": [{"type": "para", "indent": 4, "text": ["A subset of primitives in the input geometry over which (or its points) the \n    field attribute values will be set.  Leave this blank to affect the attribute \n    value for all closed polygons in the input."], "extent": [4881, 5094]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Carried On"], "extent": [5094, 5106], "body": [{"type": "para", "indent": 4, "text": ["Determines whether the generated field will be carried over points or \n    primitives. "], "extent": [5106, 5199]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Directions"], "extent": [5199, 5211], "body": [{"type": "para", "indent": 4, "text": ["The number of directions in the output field. Use 1 for ordinary vector fields.\n    This node allows up to 8 directions. In practice, there is little use for\n    values other than 1, 2, 4, and rarely 6."], "extent": [5211, 5424]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Global Rotation"], "extent": [5424, 5441], "body": [{"type": "para", "indent": 4, "text": ["This parameter can be used to rotate all the generated directions consistently \n    in their respective tangent spaces. "], "extent": [5441, 5567]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Guides"], "extent": [5567, 5580], "body": [{"type": "para", "indent": 4, "text": ["In absence of any guiding, i.e. when all guide strength parameters are \n    set to zero, this node finds a ", {"type": "q", "text": ["smoothest"]}, " field over the surface. By \n    construction, this smoothest field will be equally smooth if rotated \n    globally by any mount using the Global Rotation parameter. "], "extent": [5580, 5870]}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Curvature"], "extent": [5870, 5881], "body": [{"type": "para", "indent": 4, "text": ["Set the force of curvature directions in influencing the generated field. \n    Note that this option is only avaiable for 2-vector fields and up. You can\n    specify whether the field should follow the Maximum or Minimum principal \n    curvature directions. Note that this choice becomes irrelevant for 4-vector\n    field since the two principal directions are orthognoal to each other and \n    lining up the field with either has the same effect. "], "extent": [5881, 6335]}, {"type": "note_group", "body": [{"ext": null, "type": "note", "indent": 4, "text": [" This node cannot force an ordinary vector field (a 1-vector field) to be guided by principal curvature directions of the surface. This has to do with the fact that each of the principal directions is a 2-vector field, meaning that at each point the indicated direction of curvature is unoriented. The algorithms used in this node can only use a multi-vector fields to guide the construction of a fields whose number of directions is a multiple the number of directions of the guide."], "role": "item", "extent": [6335, 6830]}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Boundary"], "extent": [6830, 6840], "body": [{"type": "para", "indent": 4, "text": ["Set the force of boundary tangents in influencing the generated field. \n    Tangents can be oriented in clockwise or counterclockwise directions around\n    each boundary loop, where in a counterclockwise orienteation the surface will be \n    to the right of the direction of traversal of the loop. Similarly the field\n    can be forced to be orthogonal to the boundary by choosing the boundary directions\n    to point inward or outward with respect ot the surface. "], "extent": [6840, 7311]}, {"type": "note_group", "body": [{"ext": null, "type": "note", "indent": 4, "text": [" If the surface has multiple boundaries, then chances are that none \n    of these options are ideal for guiding a 1-vector field, since in such\n    cases the natural arrangement would be to have some of the boundaries \n    oriented clockwise or inwards and others counterclockwise or outwards. \n    For example, one common model is to have one boundary act like source\n    (oriented inward) and others like sinks (oriented outward). For such \n    fine control use an attribute guide."], "role": "item", "extent": [7311, 7807]}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute"], "extent": [7807, 7818], "body": [{"type": "para", "indent": 4, "text": ["Set the influence of the guide attribute. A guide attribute must be a \n    vector-3 attribute that assigns a nonzero vector to points or primitives\n    on which the field is guided. Zero values are ignored by this node and \n    filled in. Note that the output directions assigned to points or primitives\n    with nonzero guide values may not exactly match the input values and their\n    magnitudes may be very different. "], "extent": [7818, 8245]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Name"], "extent": [8245, 8261], "body": [{"type": "para", "indent": 4, "text": ["Name of the guide attribute. "], "extent": [8261, 8297]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Output Attributes and Groups"], "extent": [8297, 8332], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Field Attribute"], "extent": [8332, 8350], "body": [{"type": "para", "indent": 4, "text": ["Name of the field attribute(s) to be created. Depending on the number of  \n    directions generated, individual direction attribute names are appended by\n    their index number. "], "extent": [8350, 8534]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Normalize"], "extent": [8534, 8545], "body": [{"type": "para", "indent": 4, "text": ["If toggled on, all generated field vectors will have unit length. \n    Otherwise, they are reported as computed with smoothly varying magnitudes \n    which typically drop near singular locations. "], "extent": [8545, 8747]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Generate"], "extent": [8747, 8757], "body": [{"type": "para", "indent": 4, "text": ["Determines the number of field instance vectors that \n    will be produced in the output as attributes. The directions are \n    numbered 0, 1, \u2026 in counterclockwise order. "], "extent": [8757, 8937]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["All Directions"], "extent": [8937, 8957], "body": [{"type": "para", "indent": 8, "text": ["All directions will be generated. So, e.g. a 4-vector field will \n        produce four direction attributes. "], "extent": [8957, 9076]}], "container": true}, {"type": "dt", "indent": 4, "text": ["One Direction Per Symmetric Pair"], "extent": [9076, 9114], "body": [{"type": "para", "indent": 8, "text": ["If the number of directions is even, this option would only generate \n        the first out of any two directions that are opposites. For example, \n        choosing this option on a 4-vector field would produce a coordiante \n        frame (a pair of axis vectors) over each element. "], "extent": [9114, 9407]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Only One Direction"], "extent": [9407, 9431], "body": [{"type": "para", "indent": 8, "text": ["Only the first of the directions is reported. "], "extent": [9431, 9487]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Singular Group"], "extent": [9487, 9503], "body": [{"type": "para", "indent": 4, "text": ["If enabled, the list of singular elements (points if the field is generated \n    over primitives, or primitives if the field is generated over points) \n    will be reported as a group. "], "extent": [9503, 9694]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Discontinuity"], "extent": [9694, 9709], "body": [{"type": "para", "indent": 4, "text": ["If enabled, and when the number of directions is greater than 1, an\n    edge group is reported that indicates discontinuities in field direction\n    indexing. In most places each individual field direction vectors behaves\n    like a smoothly varying vector-field. However, this often cannot be \n    achieved globally and there will have to be places that individual directions\n    appear to jump, e.g. by 90 degrees. For fields generated over points, \n    these edges indicate a jump from one end of the edge to the other. In the\n    case of fields on faces, these edges indicate jumps between the faces \n    on the two sides of the edge. "], "extent": [9709, 10354]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Visualization"], "extent": [10354, 10375], "body": [{"type": "para", "indent": 0, "text": ["These parameters are used by the viewport state of Tangent Field and do not\ncause a recooking of the operator when modified. "], "extent": [10375, 10502]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Visualize Field"], "extent": [10502, 10519], "body": [{"type": "para", "indent": 4, "text": ["If enabled, the field is displayed over the geometry when the viewport \n    state of the node is active. When displaying multi-vector fields the vector\n    field of the first instance is drawn in red, and all the other ones in \n    blue. When displaying a field computed over primitives, a set of instances\n    is displayed for every member triangle in the internal triangulation of \n    faces with 4 vertices or more."], "extent": [10519, 10943]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Display Normalized"], "extent": [10943, 10963], "body": [{"type": "para", "indent": 4, "text": ["If enabled, all field vectors are displayed as unit length even if the\n    computed values are not. "], "extent": [10963, 11069]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Prescale for Viewing"], "extent": [11069, 11091], "body": [{"type": "para", "indent": 4, "text": ["If enabled, the vectors are displayed at a precalculated scale to prevent\n    clutter. "], "extent": [11091, 11184]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Vector Scale"], "extent": [11184, 11198], "body": [{"type": "para", "indent": 4, "text": ["Allows rescaling of the current viewing scale of the vectors by any factor."], "extent": [11198, 11280]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Show Singularities"], "extent": [11280, 11300], "body": [{"type": "para", "indent": 4, "text": ["If enabled, a dot is displayed in the approximate location of each \n    singularity. A red dot indicates a singularity with positive index and \n    a blue dot indicates a singularity with negative index. "], "extent": [11300, 11511]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [11511, 11520], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/polyframe", "type": "link", "text": "", "fullpath": "/nodes/sop/polyframe"}], "extent": [11520, 11547]}], "container": true}], "text": "Related"}], "title": ["Tangent Field"], "summary": ["Creates smooth tangent (multi-) vector fields on polygonal surfaces."]}