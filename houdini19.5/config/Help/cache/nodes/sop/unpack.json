{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "unpack", "icon": "SOP/unpack", "since": "13.0", "verb_since": "16.5", "tags": "unpack, model", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Unpack"], "extent": [116, 127]}, {"type": "summary", "indent": 0, "text": ["Unpacks packed primitives."], "extent": [127, 162]}, {"type": "para", "indent": 0, "text": ["This SOP takes packed primitives in the input and unpacks them so they can be modified by Houdini."], "extent": [162, 262]}, {"type": "para", "indent": 0, "text": ["Packed primitives have an opaque representation and cannot be modified by SOPs , with the exception of simple transforms.  Some packed primitives (Alembic) can represent deforming geometry. However, to allow SOPs to apply deformations, the packed primitives need to be unpacked."], "extent": [262, 542]}, {"type": "para", "indent": 0, "text": ["This SOP will not pass through non-packed primitives, unless they are excluded from the group parameter."], "extent": [542, 648]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [648, 660], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [660, 667], "body": [{"type": "para", "indent": 4, "text": ["Subset of input geometry to unpack."], "extent": [667, 708]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Limit Iterations"], "extent": [708, 726], "body": [{"type": "para", "indent": 4, "text": ["A packed primitive may unpack to further packed primitives.  This\n    parameter enables a maximum number of iterations for unpacking."], "extent": [752, 891]}], "container": true, "attrs": {"id": "limit_iterations"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Iterations"], "extent": [891, 903], "body": [{"type": "para", "indent": 4, "text": ["The number of iterations specifies how many levels of packed primitives\n    you want to unpack."], "extent": [923, 1024]}], "container": true, "attrs": {"id": "iterations"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detail Attributes"], "extent": [1024, 1043], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["No Promotion"], "extent": [1043, 1061], "body": [{"type": "para", "indent": 8, "text": ["Unpacked detail attributes will not be promoted to another attribute\n        class."], "extent": [1061, 1154]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Promote to Primitive Attributes"], "extent": [1154, 1191], "body": [{"type": "para", "indent": 8, "text": ["Unpacked detail attributes will be promoted to primitive attributes."], "extent": [1191, 1269]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Promote to Point Attributes"], "extent": [1269, 1302], "body": [{"type": "para", "indent": 8, "text": ["Unpacked detail attributes will be promoted to point attributes."], "extent": [1302, 1376]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Promote to Vertex Attributes"], "extent": [1376, 1410], "body": [{"type": "para", "indent": 8, "text": ["Unpacked detail attributes will be promoted to vertex attributes."], "extent": [1410, 1485]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transfer Attributes"], "extent": [1485, 1506], "body": [{"type": "para", "indent": 8, "text": ["Specifies a list of attributes to transfer to the unpacked geometry.\n        Computed point velocities will be transferred if both ", {"type": "q", "text": ["v"]}, " and ", {"type": "q", "text": ["w"]}, " point\n        attributes exist and are specified."], "extent": [1506, 1708]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transfer Groups"], "extent": [1708, 1725], "body": [{"type": "para", "indent": 8, "text": ["Specifies a list of groups to transfer to the unpacked geometry."], "extent": [1725, 1799]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Apply Style Sheets"], "extent": [1799, 1819], "body": [{"type": "para", "indent": 8, "text": ["Causes material style sheet evaluation during the unpack, with the\n        resulting style information being attached to the unpacked primitives\n        as the ", {"type": "code", "text": ["material_stylesheet"]}, " attribute. The output from a render\n        should not be affected by the unpacking of style sheet information,\n        and unpacked style sheet information is much less efficient for\n        rendering than specifying styles at the scene or object levels.\n        However unpacked styles are much easier to read and understand, and\n        are a useful tool for testing and validating that complex style sheets\n        will generate the results you expect. See\n        ", {"scheme": null, "value": "/shade/stylesheets", "type": "link", "text": ["Style Sheets"], "fullpath": "/shade/stylesheets"}, " for more information on creating\n        and using material style sheets."], "extent": [1819, 2587]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scene Style Sheet"], "extent": [2587, 2606], "body": [{"type": "para", "indent": 8, "text": ["Equivalent to the style sheet passed to mantra with the ", {"type": "code", "text": ["-S"]}, " argument.\n        Targets in this style sheet must target the object that contains this\n        SOP, and specify primitives as sub-targets. To reference a style sheet\n        file on disk, you can set this parameter to contain an ", {"type": "code", "text": ["importFiles"]}, "\n        specification in the style sheet such as\n        ", {"type": "code", "text": ["{ \"importFiles\" : [ \"mss/main_style.json\" ] }"]}, "."], "extent": [2606, 3026]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Object Style Sheet"], "extent": [3026, 3046], "body": [{"type": "para", "indent": 8, "text": ["Equivalent to the Style Sheet parameter on the Object. Targets in this\n        style sheet will refer directly to the primitives input to the SOP."], "extent": [3046, 3202]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Apply Transform"], "extent": [3202, 3219], "body": [{"type": "para", "indent": 4, "text": ["The packed geometry is normally transformed by the primitive transform\n    and point position when unpacked.  This can bypass that, extracting\n    the raw geometry independent of the transform or point position."], "extent": [3240, 3458]}], "container": true, "attrs": {"id": "dotransform"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3458, 3467], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/file", "type": "link", "text": "", "fullpath": "/nodes/sop/file"}], "extent": [3467, 3489]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/alembic", "type": "link", "text": "", "fullpath": "/nodes/sop/alembic"}], "extent": [3489, 3514]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/pack", "type": "link", "text": "", "fullpath": "/nodes/sop/pack"}], "extent": [3514, 3536]}], "container": true}], "text": "Related"}], "title": ["Unpack"], "summary": ["Unpacks packed primitives."]}