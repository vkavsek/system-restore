{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "vdbsmoothsdf", "icon": "COMMON/openvdb", "since": "12.5", "verb_since": "16.5", "tags": "vdb, merge", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["VDB Smooth SDF"], "extent": [123, 142]}, {"type": "summary", "indent": 0, "text": ["Smooths out SDF values in a VDB volume primitive."], "extent": [142, 200]}, {"type": "para", "indent": 0, "text": ["See ", {"scheme": null, "value": "/model/volumes", "type": "link", "text": ["volumes"], "fullpath": "/model/volumes"}, " for an explanation of standard volumes and OpenVDB volumes."], "extent": [16, 105]}, {"type": "para", "indent": 0, "text": ["This node applies a simulated flow operation, moving the surface of the signed distance field according to some local property."], "extent": [224, 353]}, {"type": "para", "indent": 0, "text": ["For example, if you move along the normal by an amount dependent on the\ncurvature, you will flatten out dimples and hills and leave flat areas\nunchanged."], "extent": [353, 508]}, {"type": "para", "indent": 0, "text": ["Unlike the ", {"scheme": "Node", "value": "/nodes/sop/vdbsmooth", "type": "link", "text": ["VDB Smooth SOP"], "fullpath": "/nodes/sop/vdbsmooth"}, ", this node ensure the SDF remains valid."], "extent": [508, 597]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [597, 609], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [609, 617], "body": [{"type": "para", "indent": 4, "text": ["The VDB primitives to be smoothed.\n    See ", {"scheme": null, "value": "/model/volumes#group", "type": "link", "text": ["specifying volumes"], "fullpath": "/model/volumes#group", "fragment": "#group"}, " for more information."], "extent": [617, 734]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Alpha Mask"], "extent": [647, 659], "body": [{"type": "para", "indent": 4, "text": ["If enabled, it will use the second input\u2019s VDB for alpha masking. Assumes\n    voxel values are between 0 to 1 inclusive.\n    See ", {"scheme": null, "value": "/model/volumes#group", "type": "link", "text": ["specifying volumes"], "fullpath": "/model/volumes#group", "fragment": "#group"}, " for more information."], "extent": [677, 875]}], "container": true, "attrs": {"id": "maskname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Operation"], "extent": [764, 775], "body": [{"type": "para", "indent": 4, "text": ["What sort of smoothing process to apply to the VDB."], "extent": [775, 832]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Mean Value"], "extent": [832, 848], "body": [{"type": "para", "indent": 8, "text": ["Find the mean (", {"type": "code", "text": ["total/count"]}, ") of the surrounding values.\n        This is equivalent to a box blur of the same radius."], "extent": [848, 979]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Median Value"], "extent": [979, 997], "body": [{"type": "para", "indent": 8, "text": ["Find the median (middle value) of the surrounding values.\n        This is useful for de-spiking noisy data as extreme values will not contribute to the final result."], "extent": [997, 1172]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Mean Curvature Flow"], "extent": [1172, 1197], "body": [{"type": "para", "indent": 8, "text": ["Finds the average curvature at each location.\n        Moves the surface along the local surface normal to flatten out bumps."], "extent": [1197, 1339]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Laplacian Flow"], "extent": [1339, 1359], "body": [{"type": "para", "indent": 8, "text": ["Finds the local ", {"type": "q", "text": ["Laplacian"]}, " to control how much to move along\n        the normal."], "extent": [1359, 1450]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Filter Voxel Radius"], "extent": [1263, 1284], "body": [{"type": "para", "indent": 4, "text": ["The number of voxels to run the smooth operation over.\n    This is measured in voxels, not distance.\n    This distance defines a ", {"type": "em", "text": ["cube"]}, ", so increasing the ", {"type": "q", "text": ["radius"]}, " will exponentially increase the work."], "extent": [1305, 1512]}], "container": true, "attrs": {"id": "radius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Iterations"], "extent": [1486, 1498], "body": [{"type": "para", "indent": 4, "text": ["Number of times to repeat the smoothing operation."], "extent": [1498, 1554]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Invert Alpha Mask"], "extent": [1765, 1784], "body": [{"type": "para", "indent": 4, "text": ["Inverts the alpha mask so that values from 0-1 maps to 1-0."], "extent": [1800, 1869]}], "container": true, "attrs": {"id": "invert"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Mask Cutoff"], "extent": [1869, 1886], "body": [{"type": "para", "indent": 4, "text": ["Alpha mask values below this are mapped to 0."], "extent": [1903, 1954]}], "container": true, "attrs": {"id": "minmask"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Mask Cutoff"], "extent": [1954, 1971], "body": [{"type": "para", "indent": 4, "text": ["Alpha mask values above this are mapped to 1."], "extent": [1988, 2039]}], "container": true, "attrs": {"id": "maxmask"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Trim"], "extent": [1806, 1812], "body": [{"type": "para", "indent": 4, "text": ["Set voxels that lie outside the narrow band to the background value."], "extent": [1826, 1900]}, {"type": "para", "indent": 4, "text": ["Optionally set interior, exterior, or all voxels that lie outside\n    the narrow band to the background value."], "extent": [1900, 2016]}, {"type": "para", "indent": 4, "text": ["Trimming reduces memory usage, but it also reduces dense SDFs\n    to narrow-band level sets."], "extent": [2016, 2114]}], "container": true, "attrs": {"id": "trim"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [1670, 1679], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/vdbsmooth", "type": "link", "text": "", "fullpath": "/nodes/sop/vdbsmooth"}], "extent": [1679, 1703]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/vdbreshapesdf", "type": "link", "text": "", "fullpath": "/nodes/sop/vdbreshapesdf"}], "extent": [1703, 1730]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/vdbrenormalizesdf", "type": "link", "text": "", "fullpath": "/nodes/sop/vdbrenormalizesdf"}], "extent": [1730, 1762]}], "container": true}], "text": "Related"}], "title": ["VDB Smooth SDF"], "summary": ["Smooths out SDF values in a VDB volume primitive."], "included": ["/nodes/sop/vdbrenormalizesdf", "/nodes/sop/vdbreshapesdf", "/nodes/sop/vdbsmooth", "/nodes/sop/volume_types"]}