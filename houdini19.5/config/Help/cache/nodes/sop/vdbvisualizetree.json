{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "vdbvisualizetree", "icon": "COMMON/openvdb", "since": "12.5", "verb_since": "16.5", "tags": "vdbs", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["VDB Visualize Tree"], "extent": [121, 144]}, {"type": "summary", "indent": 0, "text": ["Replaces a VDB volume with geometry that visualizes its structure."], "extent": [144, 219]}, {"type": "para", "indent": 0, "text": ["See ", {"scheme": null, "value": "/model/volumes", "type": "link", "text": ["volumes"], "fullpath": "/model/volumes"}, " for an explanation of standard volumes and OpenVDB volumes."], "extent": [16, 105]}, {"type": "para", "indent": 0, "text": ["This node may be useful to experts for checking if the VDB volume is wasting memory."], "extent": [243, 329]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [329, 341], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [341, 349], "body": [{"type": "para", "indent": 4, "text": ["The name(s) of VDB primitives in the input to visualize.\n    See ", {"scheme": null, "value": "/model/volumes#group", "type": "link", "text": ["specifying volumes"], "fullpath": "/model/volumes#group", "fragment": "#group"}, "."], "extent": [349, 462]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Color"], "extent": [462, 469], "body": [{"type": "para", "indent": 4, "text": ["Specify whether to draw in color (which adds the ", {"type": "code", "text": ["Cd"]}, " attribute)."], "extent": [469, 540]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frustrum"], "extent": [540, 550], "body": [{"type": "para", "indent": 4, "text": ["For VDB primitives created based on a frustum, draw the corresponding frustum bounding box.\n    See the ", {"type": "ui", "text": ["Frustum"]}, " and ", {"type": "ui", "text": ["From camera"]}, " modes of the ", {"scheme": "Node", "value": "/nodes/sop/vdb", "type": "link", "text": ["VDB node"], "fullpath": "/nodes/sop/vdb"}, "."], "extent": [550, 729]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Leaf Nodes"], "extent": [729, 741], "body": [{"type": "para", "indent": 4, "text": ["When enabled, it will draw leaf nodes with the specified method.\n    If ", {"type": "ui", "text": ["Color"]}, " is enabled, they are drawn in blue."], "extent": [741, 864]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Wireframe Boxes"], "extent": [864, 885], "body": [{"type": "para", "indent": 12, "text": ["Draw as wireframe boxes."], "extent": [885, 922]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Solid Boxes"], "extent": [922, 939], "body": [{"type": "para", "indent": 8, "text": ["Draw as solid boxes."], "extent": [939, 969]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Internal Nodes"], "extent": [969, 985], "body": [{"type": "para", "indent": 4, "text": ["When enabled, it will draw non-leaf nodes with the specified method.\n    If ", {"type": "code", "text": ["Color"]}, " is enabled, the first internal node level is shown in green,\n    otherwise shown in orange."], "extent": [985, 1166]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Wireframe Boxes"], "extent": [1166, 1187], "body": [{"type": "para", "indent": 8, "text": ["Draw as wireframe boxes."], "extent": [1187, 1220]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Solid Boxes"], "extent": [1220, 1237], "body": [{"type": "para", "indent": 8, "text": ["Draw as solid boxes."], "extent": [1237, 1267]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Active Tiles"], "extent": [1267, 1281], "body": [{"type": "para", "indent": 4, "text": ["When enabled, draw nodes that are active but hold the default (empty) value in the specified method.\n    Positive values are red, negative values are white."], "extent": [1281, 1443]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Points"], "extent": [1443, 1455], "body": [{"type": "para", "indent": 8, "text": ["Draw a single point in the middle of each node."], "extent": [1455, 1511]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Wireframe Boxes"], "extent": [1511, 1532], "body": [{"type": "para", "indent": 12, "text": ["Draw as wireframe boxes."], "extent": [1532, 1569]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Solid Boxes"], "extent": [1569, 1586], "body": [{"type": "para", "indent": 8, "text": ["Draw as solid boxes."], "extent": [1586, 1616]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Active Voxels"], "extent": [1616, 1631], "body": [{"type": "para", "indent": 4, "text": ["When enabled, draw active voxels in the specified method.\n    They are colored red if positive valued, white if negative valued."], "extent": [1631, 1777]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Points"], "extent": [1777, 1789], "body": [{"type": "para", "indent": 8, "text": ["Draw a single point in the middle of each voxel."], "extent": [1789, 1846]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Wireframe Boxes"], "extent": [1846, 1867], "body": [{"type": "para", "indent": 12, "text": ["Draw as wireframe boxes."], "extent": [1867, 1904]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Solid Boxes"], "extent": [1904, 1921], "body": [{"type": "para", "indent": 8, "text": ["Draw as solid boxes."], "extent": [1921, 1951]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ignore Staggered Vectors"], "extent": [1951, 1977], "body": [{"type": "para", "indent": 4, "text": ["Draw staggered vectors as if they were collocated."], "extent": [1977, 2033]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Points with Index Coordinates"], "extent": [2033, 2064], "body": [{"type": "para", "indent": 4, "text": ["Add a voxel/tile index coordinate attribute to points."], "extent": [2064, 2124]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Points with Values"], "extent": [2124, 2144], "body": [{"type": "para", "indent": 4, "text": ["Add a voxel/tile value attribute to points."], "extent": [2144, 2193]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Name Point Attributes After Grids"], "extent": [2193, 2228], "body": [{"type": "para", "indent": 4, "text": ["When enabled, name the attribute added by ", {"type": "ui", "text": ["Points with Values"]}, " the same as\n    its VDB grid name.  If disabled or if a VDB grid has no name, the point\n    attributes will named according to their type such as ", {"type": "code", "text": ["vdb_int"]}, ",\n    ", {"type": "code", "text": ["vdb_float"]}, ", or ", {"type": "code", "text": ["vdb_vec3f"]}, "."], "extent": [2228, 2488]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2488, 2497], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/convertvdb", "type": "link", "text": "", "fullpath": "/nodes/sop/convertvdb"}], "extent": [2497, 2523]}], "container": true}], "text": "Related"}], "title": ["VDB Visualize Tree"], "summary": ["Replaces a VDB volume with geometry that visualizes its structure."], "included": ["/nodes/sop/volume_types"]}