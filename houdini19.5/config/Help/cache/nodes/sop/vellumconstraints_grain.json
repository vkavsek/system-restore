{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "vellumconstraints_grain", "icon": "SHELF/vellum_grains", "since": "17.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Vellum Configure Grain"], "extent": [111, 138]}, {"type": "summary", "indent": 0, "text": ["Configures geometry for Vellum Grain constraints."], "extent": [138, 196]}, {"type": "para", "indent": 0, "text": ["The Vellum Configure Grain SOP configures the incoming geometry to be solved as grains or fluid in the Vellum Solver system.  The two main options are either to convert the incoming geometry into points by treating it as a volume and filling it with grains or fluid particles; or tag existing points on the input to have grain-like behavior."], "extent": [196, 539]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [539, 545], "body": [{"type": "para", "indent": 4, "text": ["Grains and fluid often require more substeps than other Vellum constraint types.  It is recommended any attached Vellum solver be raised to at least 5 substeps for stability."], "extent": [545, 725]}], "container": true}, {"type": "note", "indent": 0, "role": "item", "extent": [725, 731], "body": [{"type": "para", "indent": 4, "text": ["For more control over filling a volume with grains, look at the ", {"scheme": "Node", "value": "/nodes/sop/grainsource", "type": "link", "text": ["Grain Source"], "fullpath": "/nodes/sop/grainsource"}, " node."], "extent": [731, 842]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [842, 854], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Create Points from Volume"], "extent": [854, 882], "body": [{"type": "para", "indent": 4, "text": ["Treat the incoming geometry as a closed volume and fill it with points.\n    These points are then configured as grains or fluid, according to the ", {"type": "ui", "text": ["Type"]}, " parameter."], "extent": [905, 1076]}], "container": true, "attrs": {"id": "createpoints"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [1076, 1083], "body": [{"type": "para", "indent": 4, "text": ["The subset of incoming points to configure for grain-like interaction."], "extent": [1099, 1175]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group Type"], "extent": [1175, 1187], "body": [{"type": "para", "indent": 4, "text": ["In case the group is named or numeric, this can disambiguate what\n    type of group it is."], "extent": [1207, 1303]}], "container": true, "attrs": {"id": "grouptype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [1303, 1309], "body": [{"type": "para", "indent": 4, "text": ["The type of particle to create: ", {"type": "ui", "text": ["Grain"]}, " or ", {"type": "ui", "text": ["Fluid"]}, "."], "extent": [1324, 1385]}], "container": true, "attrs": {"id": "type"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Particle Size"], "extent": [1385, 1400], "body": [{"type": "para", "indent": 4, "text": ["Diameter of the particles. The ", {"type": "code", "text": ["pscale"]}, " attribute will be set to\n    one half this."], "extent": [1420, 1509]}], "container": true, "attrs": {"id": "grainsize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Packing Density"], "extent": [1509, 1526], "body": [{"type": "para", "indent": 4, "text": ["Allows for over packing of the input geometry. Increasing this value\n    helps fill the volume completely with ", {"type": "ui", "text": ["Fluid"]}, " particles. However, ", {"type": "ui", "text": ["Grain"]}, "\n    particles might be packed too close together for values over 1, causing an initial\n    expansion during the simulation."], "extent": [1555, 1835]}], "container": true, "attrs": {"id": "packingdensity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Jitter Scale"], "extent": [1835, 1849], "body": [{"type": "para", "indent": 4, "text": ["Controls jittering of point positions.  "], "extent": [1871, 1917]}, {"type": "para", "indent": 4, "text": ["Because relaxation can never accurately separate all particles, note\n    that the final ", {"type": "code", "text": ["pscale"]}, " will be reduced to minimize overlap."], "extent": [1917, 2056]}], "container": true, "attrs": {"id": "jitterscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Dither Surface"], "extent": [4549, 4565], "body": [{"type": "para", "indent": 4, "text": ["If a uniform lattice of points is being built, then the surface layer will exhibit terracing as points cross the boundary.  This dithers the points, comparing the distance to the cut-off threshold with a random number to see if the point should be kept.  This causes points to be kept outside of the threshold, as it expands half a grid scale in both directions. Turning this on will result in a more randomized surface layer."], "extent": [4588, 5020]}], "container": true, "attrs": {"id": "dithersurface"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Dither Normal"], "extent": [5020, 5035], "body": [{"type": "para", "indent": 4, "text": ["Often an object has one face that is free, and the other faces are constrained by collisions.  If you don\u2019t want to dither the colliding faces (as particles may be generated outside of the collision range, or holes made that will collapse) you can use this normal and the angle to specify which regions of the source are available for dithering.  The geometric normal of the SDF built from the surface is used, not any normal attribute on the incoming geometry."], "extent": [5057, 5524]}], "container": true, "attrs": {"id": "dithernormal"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Dither Angle"], "extent": [5524, 5538], "body": [{"type": "para", "indent": 4, "text": ["How many degrees away from the dither normal is eligible for dithering.  Setting this value to 180 will cause all faces to be dithered."], "extent": [5559, 5700]}], "container": true, "attrs": {"id": "ditherangle"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Physical Attributes"], "extent": [2162, 2188], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Mass"], "extent": [2188, 2195], "body": [{"type": "para", "indent": 4, "text": ["The method used for computing particle mass. ", {"type": "ui", "text": ["Set Uniform"]}, " will set all particles to the specified mass. ", {"type": "ui", "text": ["Calculate Uniform"]}, " will compute the particle mass based on the ", {"type": "ui", "text": ["Density"]}, " parameter."], "extent": [2212, 2413]}], "container": true, "attrs": {"id": "domass"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Density"], "extent": [2413, 2422], "body": [{"type": "para", "indent": 4, "text": ["The density of the material used for computing particle mass when ", {"type": "ui", "text": ["Mass"]}, " is set to ", {"type": "ui", "text": ["Calculate Uniform"]}, "."], "extent": [2440, 2553]}], "container": true, "attrs": {"id": "density"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Phase"], "extent": [2553, 2560], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Type"]}, " is set to ", {"type": "ui", "text": ["Fluid"]}, ", identifies the phase of the fluid.  Fluids set to different phases will solve for viscosity and surface tension separately, giving the appearance of separate fluids."], "extent": [2576, 2782]}], "container": true, "attrs": {"id": "phase"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Viscosity"], "extent": [2782, 2793], "body": [{"type": "para", "indent": 4, "text": ["Sets the ", {"type": "code", "text": ["viscosity"]}, " point attribute, which acts as a multiplier on the ", {"type": "ui", "text": ["Viscosity"]}, " parameter on the Vellum Solver."], "extent": [2813, 2937]}], "container": true, "attrs": {"id": "viscosity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Surface Tension"], "extent": [2937, 2954], "body": [{"type": "para", "indent": 4, "text": ["Sets the ", {"type": "code", "text": ["surfacetension"]}, " point attribute, which acts as a multiplier on the ", {"type": "ui", "text": ["Surface Tension"]}, " parameter on the Vellum Solver."], "extent": [2979, 3113]}], "container": true, "attrs": {"id": "surfacetension"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Friction"], "extent": [3113, 3123], "body": [{"type": "para", "indent": 4, "text": ["Sets the ", {"type": "code", "text": ["friction"]}, " point attribute, which acts as a multiplier on the ", {"type": "ui", "text": ["Friction"]}, " parameter on the Vellum Solver."], "extent": [3142, 3263]}], "container": true, "attrs": {"id": "friction"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["DynamicFriction"], "extent": [3263, 3280], "body": [{"type": "para", "indent": 4, "text": ["Sets the ", {"type": "code", "text": ["dynamicfriction"]}, " point attribute, which acts as a multiplier on the ", {"type": "ui", "text": ["Dynamic Friction"]}, " parameter on the Vellum Solver."], "extent": [3306, 3442]}], "container": true, "attrs": {"id": "dynamicfriction"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attraction Weight"], "extent": [3442, 3461], "body": [{"type": "para", "indent": 4, "text": ["Sets the ", {"type": "code", "text": ["attractionweight"]}, " point attribute, which acts as a multiplier on the ", {"type": "ui", "text": ["Attraction Weight"]}, " parameter on the Vellum Solver."], "extent": [3488, 3626]}], "container": true, "attrs": {"id": "attractionweight"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Replusion Weight"], "extent": [3626, 3644], "body": [{"type": "para", "indent": 4, "text": ["Sets the ", {"type": "code", "text": ["replusionweight"]}, " point attribute, which acts as a multiplier on the ", {"type": "ui", "text": ["Replusion Weight"]}, " parameter on the Vellum Solver."], "extent": [3670, 3806]}], "container": true, "attrs": {"id": "replusionweight"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Display as Spheres"], "extent": [3806, 3826], "body": [{"type": "para", "indent": 4, "text": ["Adds a detail attribute so the grains will display as lit spheres in the viewport."], "extent": [3849, 3937]}], "container": true, "attrs": {"id": "spherepoints"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Add Sprite Material"], "extent": [3937, 3958], "body": [{"type": "para", "indent": 4, "text": ["Adds a sprite material so the grains will display as spheres in the viewport."], "extent": [3979, 4062]}], "container": true, "attrs": {"id": "showsprite"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Show All Points"], "extent": [4062, 4079], "body": [{"type": "para", "indent": 4, "text": ["Points that are attached to primitives do not draw their sprites by\n    default. This will cause them to still draw the sprite, useful\n    if combining two constraint types within the same point."], "extent": [4103, 4304]}], "container": true, "attrs": {"id": "showallpoints"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [4304, 4313], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/grainsource", "type": "link", "text": "", "fullpath": "/nodes/sop/grainsource"}], "extent": [4313, 4342]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/vellumdrape", "type": "link", "text": "", "fullpath": "/nodes/sop/vellumdrape"}], "extent": [4342, 4371]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/vellumconstraints", "type": "link", "text": "", "fullpath": "/nodes/sop/vellumconstraints"}], "extent": [4371, 4406]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/vellumsolver", "type": "link", "text": "", "fullpath": "/nodes/sop/vellumsolver"}], "extent": [4406, 4436]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/vellumio", "type": "link", "text": "", "fullpath": "/nodes/sop/vellumio"}], "extent": [4436, 4463]}], "container": true}], "text": "Related"}], "title": ["Vellum Configure Grain"], "summary": ["Configures geometry for Vellum Grain constraints."], "included": ["/nodes/sop/grainsource"]}