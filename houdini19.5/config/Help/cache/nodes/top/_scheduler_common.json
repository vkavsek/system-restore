{"type": "root", "attrs": {"type": "include"}, "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Working Directory"], "extent": [16, 35], "body": [{"type": "para", "indent": 4, "text": ["Specifies the relative directory where the work generates intermediate files and output. The intermediate files are placed in a subdirectory. For the Local Scheduler or HQueue, typically ", {"type": "code", "text": ["$HIP"]}, " is used. For other schedulers, this should be a relative directory to ", {"type": "code", "text": ["Local Shared Root Path"]}, " and ", {"type": "code", "text": ["Remote Shared Root Path"]}, "; this path is then appended to these root paths."], "extent": [60, 433]}], "container": true, "attrs": {"id": "pdg_workingdir"}}, {"type": "dt", "indent": 0, "text": ["Path Mapping"], "extent": [433, 447], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Global"], "extent": [469, 481], "body": [{"type": "para", "indent": 8, "text": ["If the ", {"scheme": null, "value": "/ref/panes/pdgpathmap", "type": "link", "text": ["PDG Path Map"], "fullpath": "/ref/panes/pdgpathmap"}, " exists, then it is applied to file paths."], "extent": [481, 576]}], "container": true}, {"type": "dt", "indent": 4, "text": ["None"], "extent": [576, 586], "body": [{"type": "para", "indent": 8, "text": ["Delocalizes paths using the ", {"type": "code", "text": ["PDG_DIR"]}, " token."], "extent": [586, 640]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_mapmode"}}, {"type": "dt", "indent": 0, "text": ["Path Map Zone"], "extent": [640, 655], "body": [{"type": "para", "indent": 4, "text": ["When on, specifies a custom mapping zone to apply to all jobs executed by this scheduler. Otherwise, the local platforms are ", {"type": "code", "text": ["LINUX"]}, ", ", {"type": "code", "text": ["MAC"]}, " or ", {"type": "code", "text": ["WIN"]}, "."], "extent": [677, 832]}], "container": true, "attrs": {"id": "pdg_mapzone"}}, {"type": "dt", "indent": 0, "text": ["Validate Outputs When Recooking"], "extent": [832, 865], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG validates the output files of the scheduler\u2019s cooked work items when the graph is recooked to see if the files still exist on disk. Work items that are missing output files are then automatically dirtied and cooked again. If any work items are dirtied by parameter changes, then their cache files are also automatically invalidated. ", {"type": "ui", "text": ["Validate Outputs When Recooking"]}, " is ", {"type": "em", "text": ["on"]}, " by default."], "extent": [895, 1302]}], "container": true, "attrs": {"id": "pdg_validateoutputs"}}, {"type": "dt", "indent": 0, "text": ["Check Expected Outputs on Disk"], "extent": [1302, 1334], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG looks for any unexpected outputs (for example, like outputs that can result from custom output handling internal logic) that were not explicitly reported when the scheduler\u2019s work items finished cooking. This check occurs immediately after the scheduler marks work items as cooked, and expected outputs that were reported normally are not checked. If PDG finds any files that are different from the expected outputs, then they are automatically added as real output files."], "extent": [1369, 1860]}], "container": true, "attrs": {"id": "pdg_checkexpectedoutputs"}}, {"type": "dt", "indent": 0, "text": ["Tick Period"], "extent": [1860, 1873], "body": [{"type": "para", "indent": 4, "text": ["Sets the minimum time (in seconds) between calls to the ", {"type": "code", "text": ["onTick"]}, " callback."], "extent": [1898, 1978]}], "container": true, "attrs": {"id": "pdg_tickperiod"}}, {"type": "dt", "indent": 0, "text": ["Max Items Per Tick"], "extent": [1978, 1998], "body": [{"type": "para", "indent": 4, "text": ["Sets the maximum number of ready item ", {"type": "code", "text": ["onSchedule"]}, " callbacks between ticks."], "extent": [2021, 2102]}], "container": true, "attrs": {"id": "pdg_maxitems"}}, {"type": "dt", "indent": 0, "text": ["Local Shared Root Path"], "extent": [2102, 2126], "body": [{"type": "para", "indent": 4, "text": ["Specifies the absolute path to the mounted directory on the local machine at which the working directory is rooted."], "extent": [2152, 2273]}], "container": true, "attrs": {"id": "localsharedroot"}}, {"type": "dt", "indent": 0, "text": ["Remote Shared Root Path"], "extent": [2273, 2298], "body": [{"type": "para", "indent": 4, "text": ["When on, specifies the path to the mounted directory on client machines at which the working directory is rooted. This can include variables that the farm is set to resolve to platform-specific paths."], "extent": [2325, 2531]}], "container": true, "attrs": {"id": "remotesharedroot"}}, {"type": "dt", "indent": 0, "text": ["Override Port Range"], "extent": [2531, 2552], "body": [{"type": "para", "indent": 4, "text": ["When on, overrides the callback server\u2019s default port range."], "extent": [2580, 2646]}], "container": true, "attrs": {"id": "overrideportrange"}}, {"type": "dt", "indent": 0, "text": ["Callback Port Range"], "extent": [2646, 2667], "body": [{"type": "para", "indent": 4, "text": ["Specifies the callback server\u2019s port range values to use when overriding the default values."], "extent": [2695, 2793]}], "container": true, "attrs": {"id": "callbackportrange"}}], "container": true}, {"level": 2, "id": "network", "container": true, "type": "h", "indent": 0, "text": ["Network Requirements"], "extent": [2793, 2830], "body": [{"type": "para", "indent": 0, "text": ["As part of the cook, a message queue (MQ) job is submitted. This job is used to communicate information from executing jobs back to the submitting machine. For this reason, your farm machines must be able to resolve the hostnames of other farm machines."], "extent": [2830, 3086]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [3086, 3091], "body": [{"type": "para", "indent": 4, "text": ["This is as simple as editing the ", {"type": "code", "text": ["/etc/hosts"]}, " (Linux / macOS) or ", {"type": "code", "text": ["C:\\Windows\\System32\\Drivers\\etc\\hosts"]}, " (Windows)."], "extent": [3091, 3212]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["In addition, farm machines must ", {"type": "em", "text": ["not"]}, " have firewalls between them, or you need to use the ", {"type": "ui", "text": ["Task Callback Port"]}, " parameter to specify the open port to use."], "extent": [3212, 3369]}, {"type": "para", "indent": 0, "text": ["When the cook starts, the submitting machine connects to the farm machine that is running the MQ job. So farm machines also must ", {"type": "em", "text": ["not"]}, " have firewalls between them and the submitting machine, or you need to use the ", {"type": "ui", "text": ["Relay Port"]}, " parameter to specify the open port to use."], "extent": [3369, 3642]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Enable Server"], "extent": [3642, 3657], "body": [{"type": "para", "indent": 4, "text": ["When on, turns on the data layer server for the TOP job that will cook on the farm. This allows PilotPDG or other WebSocket clients to connect to the cooking job remotely to view the state of PDG."], "extent": [3689, 3891]}], "container": true, "attrs": {"id": "enabledatalayerserver"}}, {"type": "dt", "indent": 0, "text": ["Server Port"], "extent": [3891, 3904], "body": [{"type": "para", "indent": 4, "text": ["Determines which server port to use for the data layer server."], "extent": [3931, 3999]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Enable Server"]}, " is ", {"type": "em", "text": ["on"]}, "."], "extent": [3999, 4069]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [4069, 4084], "body": [{"type": "para", "indent": 8, "text": ["A free TCP port to use for the data layer server chosen by the node."], "extent": [4084, 4162]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [4162, 4174], "body": [{"type": "para", "indent": 8, "text": ["A custom TCP port to use for the data layer server specified by the user."], "extent": [4174, 4257]}, {"type": "para", "indent": 8, "text": ["This is useful when there is a firewall between the farm machine and the monitoring machine."], "extent": [4257, 4359]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "usedatalayerport"}}, {"type": "dt", "indent": 0, "text": ["Auto Connect"], "extent": [4359, 4373], "body": [{"type": "para", "indent": 4, "text": ["When on, the scheduler will try to send a command to create a remote visualizer when the job starts. If successful, then a remote graph is created and is automatically connected to the server executing the job. The client submitting the job ", {"type": "em", "text": ["must"]}, " be visible to the server running the job or the connection will fail."], "extent": [4401, 4724]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Enable Server"]}, " is ", {"type": "em", "text": ["on"]}, "."], "extent": [4724, 4794]}], "container": true, "attrs": {"id": "createremotegraph"}}, {"type": "dt", "indent": 0, "text": ["When Finished"], "extent": [4794, 4809], "body": [{"type": "para", "indent": 4, "text": ["Determines what to do when the TOP Cook finishes. This allows the TOP Cook job to continue running after the graph cook completes so that it can be inspected by a wrangler using a ", {"scheme": null, "value": "/tops/datalayer", "type": "link", "text": ["Data Layer"], "fullpath": "/tops/datalayer"}, " viewer. For example, with ", {"type": "ui", "text": ["When Finished"]}, " you can retry a failed work item without restarting its whole job."], "extent": [4841, 5170]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Terminate"], "extent": [5170, 5185], "body": [{"type": "para", "indent": 8, "text": ["Exit the job as normal."], "extent": [5185, 5222]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Keep Open If Error"], "extent": [5222, 5246], "body": [{"type": "para", "indent": 8, "text": ["Keep the job running only if there is an error detected. You will need to kill the job manually."], "extent": [5246, 5352]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Keep Open"], "extent": [5352, 5367], "body": [{"type": "para", "indent": 8, "text": ["Keep the job running. You will need to kill the job manually."], "extent": [5367, 5438]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "submitjobwhenfinished"}}, {"type": "dt", "indent": 0, "text": ["Block on Failed Work Items"], "extent": [5438, 5466], "body": [{"type": "para", "indent": 4, "text": ["When on, if there are any failed work items on the scheduler, then the cook is blocked from completing and the PDG graph cook is prevented from ending. This allows you to manually retry your failed work items. You can ", {"type": "em", "text": ["cancel"]}, " the scheduler\u2019s cook when it is blocked by failed work items by pressing the ", {"keys": ["ESC"], "type": "keys", "text": null}, " key, clicking the ", {"type": "ui", "text": ["Cancels the current cook"]}, " button in the ", {"scheme": null, "value": "/tops/ui#tasks_bar", "type": "link", "text": ["TOP tasks bar"], "fullpath": "/tops/ui#tasks_bar", "fragment": "#tasks_bar"}, ", or by using the cancel API method."], "extent": [5496, 5945]}], "container": true, "attrs": {"id": "pdg_waitforfailures"}}, {"type": "dt", "indent": 0, "text": ["Auto retry downstream tasks"], "extent": [5945, 5974], "body": [{"type": "para", "indent": 4, "text": ["When on, if a parent tasks is retried manually, then its child tasks will also be retried. This parameter is only available when ", {"type": "ui", "text": ["Block on Failed Work Items"]}, " is turned ", {"type": "em", "text": ["on"]}, "."], "extent": [6004, 6185]}], "container": true, "attrs": {"id": "autoretryfailedtask"}}, {"type": "dt", "indent": 0, "text": ["Load Item Data From"], "extent": [6185, 6206], "body": [{"type": "para", "indent": 4, "text": ["Determines how jobs processed by this scheduler should load work item attributes and data. "], "extent": [6239, 6336]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Temporary JSON File"], "extent": [6336, 6361], "body": [{"type": "para", "indent": 8, "text": ["The scheduler writes out a ", {"type": "code", "text": [".json"]}, " file for each work item to the PDG temporary file directory. This option is selected by default."], "extent": [6361, 6502]}], "container": true}, {"type": "dt", "indent": 4, "text": ["RPC Message"], "extent": [6502, 6519], "body": [{"type": "para", "indent": 8, "text": ["The scheduler\u2019s running work items request attributes and data over RPC. If the scheduler is a farm scheduler, then the job scripts running on the farm will also request item data from the submitter when creating their out-of-process work item objects. "], "extent": [6519, 6782]}, {"type": "para", "indent": 8, "text": ["This parameter option removes the need to write data files to disk and is useful when your local and remote machines ", {"type": "em", "text": ["do not"]}, " share a file system."], "extent": [6782, 6938]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemdatasource"}}, {"type": "dt", "indent": 0, "text": ["Compress Work Item Data"], "extent": [6938, 6963], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG compresses the work item ", {"type": "code", "text": [".json"]}, " files when writing them to disk."], "extent": [6998, 7082]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Load Item Data From"]}, " is set to ", {"type": "ui", "text": ["Temporary JSON File"]}, "."], "extent": [7082, 7184]}], "container": true, "attrs": {"id": "pdg_compressworkitemdata"}}, {"type": "dt", "indent": 0, "text": ["Ignore RPC Errors"], "extent": [7184, 7203], "body": [{"type": "para", "indent": 4, "text": ["Determines whether RPC errors should cause out of process jobs to fail."], "extent": [7233, 7310]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Never"], "extent": [7310, 7321], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors will cause work items to fail."], "extent": [7321, 7383]}], "container": true}, {"type": "dt", "indent": 4, "text": ["When Cooking Batches"], "extent": [7383, 7409], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors are ignored for batch work items, which typically make a per-frame RPC back to PDG to report output files and communicate sub item status. This option prevents long-running simulations from being killed on the farm, if the submitter Houdini session crashes or becomes unresponsive."], "extent": [7409, 7722]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Always"], "extent": [7722, 7734], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors will never cause a work item to fail. Note that if a work item can\u2019t communicate with the scheduler, it will be unable to report output files, attributes or its cook status back to the PDG graph."], "extent": [7734, 7961]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_rpcignoreerrors"}}, {"type": "dt", "indent": 0, "text": ["Connection Timeout"], "extent": [7961, 7981], "body": [{"type": "para", "indent": 4, "text": ["The number of seconds to wait when an out of process jobs makes an RPC connection to the main PDG graph, before assuming the connection failed."], "extent": [8006, 8155]}], "container": true, "attrs": {"id": "pdg_rpctimeout"}}, {"type": "dt", "indent": 0, "text": ["Connection Retries"], "extent": [8155, 8175], "body": [{"type": "para", "indent": 4, "text": ["The number of times to retry a failed RPC call made by an out of process job."], "extent": [8200, 8283]}], "container": true, "attrs": {"id": "pdg_rpcretries"}}, {"type": "dt", "indent": 0, "text": ["Retry Backoff"], "extent": [8283, 8298], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Connection Retries"]}, " is greater than 0, this parameter determines how much time should be spent between consecutive retries."], "extent": [8323, 8460]}], "container": true, "attrs": {"id": "pdg_rpcbackoff"}}, {"type": "dt", "indent": 0, "text": ["Batch Poll Rate"], "extent": [8460, 8477], "body": [{"type": "para", "indent": 4, "text": ["Determines how quickly an out of process batch work item should poll the main Houdini session for dependency status updates, if the batch is configured to cook when it\u2019s first frame of work is ready. This has no impact on other types of batch work items."], "extent": [8500, 8760]}], "container": true, "attrs": {"id": "pdg_rpcbatch"}}, {"type": "dt", "indent": 0, "text": ["Release Job Slot When Polling"], "extent": [8760, 8791], "body": [{"type": "para", "indent": 4, "text": ["Determines whether or not the scheduler should decrement the number of active workers when a batch is polling for dependency updates."], "extent": [8816, 8954]}], "container": true, "attrs": {"id": "pdg_rpcrelease"}}], "container": true}]}]}