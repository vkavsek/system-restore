{"type": "root", "attrs": {"type": "node", "context": "top", "internal": "filerange", "icon": "TOP/filerange", "since": "18.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["File Range"], "extent": [0, 15]}, {"type": "summary", "indent": 0, "text": ["Creates a range of work items based on files that match a certain pattern."], "extent": [111, 193]}, {"type": "para", "indent": 0, "text": ["This node generates a work item for a range of frames based on a ", {"scheme": null, "value": "#pattern", "type": "link", "text": ["file pattern"], "fullpath": "/nodes/top/filerange#pattern", "fragment": "#pattern"}, "."], "extent": [193, 284]}, {"type": "para", "indent": 0, "text": ["For example, if the ", {"type": "ui", "text": ["Frame Range"]}, " parameter is set to 1,10,1 and the ", {"type": "ui", "text": ["Pattern"]}, " parameter is set to ", {"type": "code", "text": ["$HIP/render/$HIPNAME.$OS.$F4.exr"]}, ", then the node would generate up to 10 work items."], "extent": [284, 474]}, {"type": "para", "indent": 0, "text": ["Whenever this node is asked to generate items, like when it cooks or when you ask nodes to pre-generate static items, the node checks if the pattern matches different files from the last cook and if the modification times have changed on any files. If the answer is yes, then the node updates the changed items and marks them dirty. So when the directory contents change, usually only the changed items need to be recooked."], "extent": [474, 899]}, {"level": 1, "id": "top_attributes", "container": true, "type": "top_attributes_section", "indent": 0, "role": "section", "extent": [899, 915], "body": [{"type": "top_attributes_item_group", "body": [{"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["directory"]}], "role": "item", "extent": [915, 931], "body": [{"type": "para", "indent": 4, "text": ["The directory containing the matched file."], "extent": [950, 998]}], "container": true, "attrs": {"type": "string"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["extension"]}], "role": "item", "extent": [998, 1013], "body": [{"type": "para", "indent": 4, "text": ["The extension of the file associated with the work item."], "extent": [1032, 1094]}], "container": true, "attrs": {"type": "string"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["filename"]}], "role": "item", "extent": [1094, 1108], "body": [{"type": "para", "indent": 4, "text": ["The name of the file including the extension."], "extent": [1127, 1178]}], "container": true, "attrs": {"type": "string"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["exists"]}], "role": "item", "extent": [1178, 1190], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Missing Files"]}, " is set to ", {"type": "ui", "text": ["Create Work Items"]}, ", this attribute is added and set to ", {"type": "code", "text": ["1"]}, " if the file exists and ", {"type": "code", "text": ["0"]}, " if it does not."], "extent": [1206, 1349]}], "container": true, "attrs": {"type": "int"}}], "container": true, "role": "item_group"}], "text": "Top_attributes"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1349, 1361], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Generate When"], "extent": [16, 31], "body": [{"type": "para", "indent": 4, "text": ["Determines when this node will generate work items. You should generally leave this set to ", {"type": "q", "text": ["Automatic"]}, " unless you know the node requires a specific generation mode, or that the work items need to be generated dynamically."], "extent": [64, 291]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["All Upstream Items are Generated"], "extent": [291, 329], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have generated their work items."], "extent": [329, 437]}], "container": true}, {"type": "dt", "indent": 4, "text": ["All Upstream Items are Cooked"], "extent": [437, 472], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have cooked their work items."], "extent": [472, 577]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Each Upstream Item is Cooked"], "extent": [577, 611], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items each time a work item in an input node is cooked."], "extent": [611, 708]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [708, 723], "body": [{"type": "para", "indent": 11, "text": ["The generation mode is selected based on the generation mode of the input nodes. If any of the input nodes are generating work items when their inputs cook, this node will be set to ", {"type": "ui", "text": ["Each Upstream Item is Cooked"]}, ". Otherwise, it will be set to ", {"type": "ui", "text": ["All Upstream Items are Generated"]}, "."], "extent": [723, 1018]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemgeneration"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" File "], "extent": [1413, 1428]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Frame Range"], "extent": [1428, 1441], "body": [{"type": "para", "indent": 4, "text": ["The start, end, and step size of the frame range to generate."], "extent": [1457, 1524]}], "container": true, "attrs": {"id": "range"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["File Pattern"], "extent": [1524, 1538], "body": [{"type": "para", "indent": 4, "text": ["Specifies the pattern for the node to match file paths against. "], "extent": [1556, 1626]}, {"type": "para", "indent": 4, "text": [{"type": "ui", "text": ["File Pattern"]}, " allows wildcards such as ", {"type": "code", "text": ["?"]}, " (match any character), ", {"type": "code", "text": ["*"]}, " (match any string of characters), and ", {"type": "code", "text": ["[abc]"]}, " (match any one of the characters inside the square brackets). For example, ", {"type": "code", "text": ["*.png"]}, " matches any file that ends with ", {"type": "code", "text": [".png"]}, ". ", {"type": "code", "text": ["$F"]}, ", ", {"type": "code", "text": ["$FF"]}, ", ", {"type": "code", "text": ["$F4"]}, " are also supported."], "extent": [1626, 1912]}], "container": true, "attrs": {"id": "pattern"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" Operation "], "extent": [1912, 1932]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Missing Files"], "extent": [1932, 1948], "body": [{"type": "para", "indent": 4, "text": ["What to do when a file is ", {"type": "em", "text": ["not"]}, " matched."], "extent": [1971, 2017]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Ignore"], "extent": [2017, 2029], "body": [{"type": "para", "indent": 8, "text": ["Do not generate work items for missing files."], "extent": [2029, 2084]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Node Error"], "extent": [2084, 2104], "body": [{"type": "para", "indent": 8, "text": ["Sets an error on the node."], "extent": [2104, 2140]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Create Work Items"], "extent": [2140, 2163], "body": [{"type": "para", "indent": 8, "text": ["Creates a work item for the missing file and sets an attribute indicating that it is missing."], "extent": [2163, 2266]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "missingfiles"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["File Exists Attribute"], "extent": [2266, 2289], "body": [{"type": "para", "indent": 4, "text": ["The name of the ", {"type": "code", "text": ["Int"]}, " attribute to be added to work items. The value is ", {"type": "code", "text": ["1"]}, " if the file exists and ", {"type": "code", "text": ["0"]}, " if it does not. "], "extent": [2310, 2435]}], "container": true, "attrs": {"id": "existsattr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output File Tag"], "extent": [2435, 2452], "body": [{"type": "para", "indent": 4, "text": ["When on, the node assigns this ", {"scheme": null, "value": "/tops/filetags", "type": "link", "text": ["file tag"], "fullpath": "/tops/filetags"}, " to the output file paths. When off, the node guesses appropriate file tags based on filename extensions."], "extent": [2476, 2643]}], "container": true, "attrs": {"id": "resultdatatag"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Copy File(s) to Working Directory"], "extent": [2643, 2678], "body": [{"type": "para", "indent": 4, "text": ["Indicates that the globbed files should be copied from their source location to the scheduler\u2019s working directory when this work item cooks. "], "extent": [2698, 2845]}, {"type": "para", "indent": 4, "text": ["Enabling this toggle sets the ", {"scheme": "Py", "value": "pdg.attribFlag#Transfer", "type": "link", "text": "", "fullpath": "/nodes/top/pdg.attribFlag#Transfer", "fragment": "#Transfer"}, " attribute flag on the work item\u2019s output file list. "], "extent": [2845, 2962]}], "container": true, "attrs": {"id": "copyfiles"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2962, 2971], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/filepattern", "type": "link", "text": "", "fullpath": "/nodes/top/filepattern"}], "extent": [2971, 2996]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/filecopy", "type": "link", "text": "", "fullpath": "/nodes/top/filecopy"}], "extent": [2996, 3018]}], "container": true}], "text": "Related"}], "title": ["File Range"], "summary": ["Creates a range of work items based on files that match a certain pattern."], "included": ["/nodes/top/processor_common"]}