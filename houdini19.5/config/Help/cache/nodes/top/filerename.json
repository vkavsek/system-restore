{"type": "root", "attrs": {"type": "node", "context": "top", "internal": "filerename", "icon": "MISC/rename", "since": "17.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["File Rename"], "extent": [0, 16]}, {"type": "summary", "indent": 0, "text": ["Renames or moves a file."], "extent": [110, 142]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [142, 147], "body": [{"type": "para", "indent": 4, "text": ["You may want to avoid using destructive file operations such as move/rename and remove. They can make files appear to be missing, triggering the dependency system to do extra work. They can also make it harder to debug the network after it runs if intermediate files are not where they were."], "extent": [147, 444]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["This node can work in three different ways:"], "extent": [444, 489]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Do the rename(s) whenever the node generates work items (", {"type": "ui", "text": ["Rename During"]}, " set to ", {"type": "ui", "text": ["Generate"]}, ")"], "extent": [489, 586], "body": [{"type": "para", "indent": 4, "text": ["The node tries to rename the files synchronously when it generates work items (including when you choose ", {"type": "ui", "text": ["TOPs \u25b8 Generate Static Work Items"]}, "), blocking until the renaming is done. This can lead to the node working once and then erroring because the ", {"type": "q", "text": ["source"]}, " file has been moved/renamed."], "extent": [586, 880]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Do the rename(s) when the work items cook in process (", {"type": "ui", "text": ["Rename During"]}, " set to ", {"type": "ui", "text": ["In Process"]}, ")"], "extent": [880, 976], "body": [{"type": "para", "indent": 4, "text": ["The node performs the renames asynchronously when the work item cooks. Multiple renames may happen at the same time, but they're still processed in the current Houdini session."], "extent": [976, 1158]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Do the rename(s) when the work items cook out of process (", {"type": "ui", "text": ["Rename During"]}, " set to ", {"type": "ui", "text": ["Out of Process"]}, ")"], "extent": [1158, 1262], "body": [{"type": "para", "indent": 4, "text": ["The smae as in process, except the work items each cook in their own Python process. This can be useful when renaming files as farm jobs, which may not be accessible on the local machine."], "extent": [1262, 1455]}], "container": true}], "container": true}, {"level": 1, "id": "top_attributes", "container": true, "type": "top_attributes_section", "indent": 0, "role": "section", "extent": [1455, 1471], "body": [{"type": "top_attributes_item_group", "body": [{"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["directory"]}], "role": "item", "extent": [1471, 1486], "body": [{"type": "para", "indent": 4, "text": ["The directory where the source file will be moved"], "extent": [1503, 1558]}], "container": true, "attrs": {"type": "file"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["extension"]}], "role": "item", "extent": [1558, 1572], "body": [{"type": "para", "indent": 4, "text": ["The extension of the destination file"], "extent": [1591, 1634]}], "container": true, "attrs": {"type": "string"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["filename"]}], "role": "item", "extent": [1634, 1647], "body": [{"type": "para", "indent": 4, "text": ["The filename of the destination file"], "extent": [1668, 1710]}], "container": true, "attrs": {"type": "filename"}}], "container": true, "role": "item_group"}], "text": "Top_attributes"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1710, 1722], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Node"], "extent": [1722, 1734], "body": [{"type": "include_group", "body": [{"ext": "processor_common#pdg_workitemgeneraton", "type": "include", "indent": 0, "role": "item", "extent": [1734, 1785]}], "container": true, "role": "item_group"}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Rename During"], "extent": [1785, 1800], "body": [{"type": "para", "indent": 4, "text": ["When to rename the files."], "extent": [1823, 1854]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Generate"], "extent": [1854, 1868], "body": [{"type": "para", "indent": 8, "text": ["The file(s) will be renamed during the work item generation stage."], "extent": [1868, 1944]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cook (In-Process)"], "extent": [1944, 1967], "body": [{"type": "para", "indent": 8, "text": ["The file(s) will be renamed during the cook and within the graph cooking process."], "extent": [1967, 2058]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cook (Out-of-Process)"], "extent": [2058, 2085], "body": [{"type": "para", "indent": 8, "text": ["The file(s) will be renamed during the cook and within their own process."], "extent": [2085, 2168]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_cooktype"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" Source "], "extent": [2168, 2185]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["File Source"], "extent": [2185, 2199], "body": [{"type": "para", "indent": 4, "text": ["Specifies the source for the file that should be renamed."], "extent": [2220, 2283]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Upstream Output File"], "extent": [2283, 2309], "body": [{"type": "para", "indent": 8, "text": ["Get the file path from the incoming work item\u2019s file outputs that match the ", {"type": "ui", "text": ["File Tag"]}, " parameter. If multiple outputs match, the first one if selected."], "extent": [2309, 2472]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom File Path"], "extent": [2472, 2494], "body": [{"type": "para", "indent": 8, "text": ["Copy the file specified by the ", {"type": "code", "text": ["File Path"]}, " parameter."], "extent": [2494, 2557]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "filesource"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["File Path"], "extent": [2557, 2568], "body": [{"type": "para", "indent": 4, "text": ["The path to the file to move/rename, if ", {"type": "ui", "text": ["File Source"]}, " set seto ", {"type": "ui", "text": ["Custom File Path"]}, "."], "extent": [2591, 2683]}], "container": true, "attrs": {"id": "originalpath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["File Tag"], "extent": [2683, 2693], "body": [{"type": "para", "indent": 4, "text": ["The file tag to use when selecting input files, if ", {"type": "ui", "text": ["File Source"]}, " is set to ", {"type": "ui", "text": ["Upstream Output File"]}, "."], "extent": [2711, 2819]}], "container": true, "attrs": {"id": "filetag"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" Destination "], "extent": [2819, 2841]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["File Path"], "extent": [2841, 2853], "body": [{"type": "para", "indent": 4, "text": ["The new path of the file. This is used as the ", {"type": "code", "text": ["output"]}, " of the work item(s)."], "extent": [2871, 2952]}], "container": true, "attrs": {"id": "newpath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["File Tag"], "extent": [2952, 2962], "body": [{"type": "para", "indent": 4, "text": ["The ", {"scheme": null, "value": "/tops/filetags", "type": "link", "text": ["file tag"], "fullpath": "/tops/filetags"}, " to assign to the ", {"type": "code", "text": ["output"]}, " filename."], "extent": [2986, 3057]}], "container": true, "attrs": {"id": "resultdatatag"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Schedulers"], "extent": [3057, 3074], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["TOP Scheduler Override"], "extent": [5496, 5520], "body": [{"type": "para", "indent": 4, "text": ["This parameter overrides the TOP scheduler for this node."], "extent": [5543, 5606]}], "container": true, "attrs": {"id": "topscheduler"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Schedule When"], "extent": [9609, 9624], "body": [{"type": "para", "indent": 4, "text": ["When enabled, this parameter can be used to specify an expression that determines which work items from the node should be scheduled. If the expression returns zero for a given work item, that work item will immediately be marked as cooked instead of being queued with a scheduler. If the expression returns a non-zero value, the work item is scheduled normally."], "extent": [9651, 10021]}], "container": true, "attrs": {"id": "pdg_schedulewhen"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Work Item Label"], "extent": [8474, 8491], "body": [{"type": "para", "indent": 4, "text": ["Determines how the node should label its work items. This parameter allows you to assign non-unique label strings to your work items which are then used to identify the work items in the attribute panel, task bar, and scheduler job names."], "extent": [8519, 8763]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use Default Label"], "extent": [8763, 8787], "body": [{"type": "para", "indent": 8, "text": ["The work items in this node will use the default label from the TOP network, or have no label if the default is unset."], "extent": [8787, 8915]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [8915, 8948], "body": [{"type": "para", "indent": 8, "text": ["The work items inherit their labels from their parent work items.        "], "extent": [8948, 9031]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [9031, 9055], "body": [{"type": "para", "indent": 8, "text": ["The work item label is set to the ", {"type": "ui", "text": ["Label Expression"]}, " custom expression which is evaluated for each item."], "extent": [9055, 9171]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Label"], "extent": [9171, 9196], "body": [{"type": "para", "indent": 8, "text": ["The work item label is defined in the node\u2019s internal logic."], "extent": [9196, 9266]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemlabel"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Label Expression"], "extent": [9266, 9284], "body": [{"type": "para", "indent": 4, "text": ["When on, this parameter specifies a custom label for work items created by this node. The parameter can be an expression that includes references to work item attributes or built-in properties. For example, ", {"type": "code", "text": ["$OS: @pdg_frame"]}, " will set the label of each work item based on its frame value."], "extent": [9316, 9609]}], "container": true, "attrs": {"id": "pdg_workitemlabelexpr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Work Item Priority"], "extent": [6495, 6515], "body": [{"type": "para", "indent": 4, "text": ["This parameter determines how the current scheduler prioritizes the work items in this node."], "extent": [6546, 6644]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [6644, 6677], "body": [{"type": "para", "indent": 11, "text": ["The work items inherit their priority from their parent items. If a work item has no parent, its priority is set to 0."], "extent": [6677, 6808]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [6808, 6832], "body": [{"type": "para", "indent": 11, "text": ["The work item priority is set to the value of ", {"type": "ui", "text": ["Priority Expression"]}, "."], "extent": [6832, 6915]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Priority"], "extent": [6915, 6943], "body": [{"type": "para", "indent": 7, "text": ["The work item priority is set based on the node\u2019s own internal priority calculations."], "extent": [6943, 7048]}, {"type": "para", "indent": 7, "text": ["This option is only available on the ", {"scheme": "Icon", "value": "MISC/python.svg", "type": "link", "text": "", "fullpath": "/nodes/top/MISC/python.svg"}, " ", {"scheme": "Node", "value": "/nodes/top/pythonprocessor", "type": "link", "text": ["Python Processor TOP"], "fullpath": "/nodes/top/pythonprocessor"}, ", ", {"scheme": "Icon", "value": "TOP/ropfetch.svg", "type": "link", "text": "", "fullpath": "/nodes/top/TOP/ropfetch.svg"}, " ", {"scheme": "Node", "value": "/nodes/top/ropfetch", "type": "link", "text": ["ROP Fetch TOP"], "fullpath": "/nodes/top/ropfetch"}, ", and ROP Output TOP nodes. These nodes define their own prioritization schemes that are implemented in their node logic."], "extent": [7048, 7344]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitempriority"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Priority Expression"], "extent": [7344, 7365], "body": [{"type": "para", "indent": 4, "text": ["This parameter specifies an expression for work item priority. The expression is evaluated for each work item in the node."], "extent": [7400, 7528]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Work Item Priority"]}, " is set to ", {"type": "ui", "text": ["Custom Expression"]}, "."], "extent": [7528, 7627]}], "container": true, "attrs": {"id": "pdg_workitempriorityexpr"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "title": ["File Rename"], "summary": ["Renames or moves a file."], "included": ["/nodes/top/processor_common"]}