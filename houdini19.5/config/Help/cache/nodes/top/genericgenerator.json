{"type": "root", "attrs": {"type": "node", "context": "top", "internal": "genericgenerator", "icon": "TOP/genericgenerator", "since": "17.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Generic Generator"], "extent": [105, 127]}, {"type": "summary", "indent": 0, "text": ["Generates work items with no attributes that run a command line."], "extent": [127, 200]}, {"type": "para", "indent": 0, "text": ["You can use this node to generate work items with a command line generated by an expression. This node can also be useful when you want to start a network to generate a certain number of work items that don\u2019t do anything (by leaving the command line blank), so that you can add attributes to them and use them to drive downstream nodes."], "extent": [200, 538]}, {"type": "para", "indent": 0, "text": ["This node generates ", {"type": "ui", "text": ["Item Count"]}, " work items when it has no inputs. If the node has inputs, it generates ", {"type": "ui", "text": ["Item Count"]}, " work items for each upstream work item."], "extent": [538, 700]}, {"type": "para", "indent": 0, "text": ["If you need more advanced functionality, use the ", {"scheme": "Node", "value": "/nodes/top/pythonprocessor", "type": "link", "text": ["Python Processor"], "fullpath": "/nodes/top/pythonprocessor"}, " node instead."], "extent": [700, 808]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [808, 820], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Command Line"], "extent": [820, 840], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Generate When"], "extent": [16, 31], "body": [{"type": "para", "indent": 4, "text": ["Determines when this node will generate work items. You should generally leave this set to ", {"type": "q", "text": ["Automatic"]}, " unless you know the node requires a specific generation mode, or that the work items need to be generated dynamically."], "extent": [64, 291]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["All Upstream Items are Generated"], "extent": [291, 329], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have generated their work items."], "extent": [329, 437]}], "container": true}, {"type": "dt", "indent": 4, "text": ["All Upstream Items are Cooked"], "extent": [437, 472], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have cooked their work items."], "extent": [472, 577]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Each Upstream Item is Cooked"], "extent": [577, 611], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items each time a work item in an input node is cooked."], "extent": [611, 708]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [708, 723], "body": [{"type": "para", "indent": 11, "text": ["The generation mode is selected based on the generation mode of the input nodes. If any of the input nodes are generating work items when their inputs cook, this node will be set to ", {"type": "ui", "text": ["Each Upstream Item is Cooked"]}, ". Otherwise, it will be set to ", {"type": "ui", "text": ["All Upstream Items are Generated"]}, "."], "extent": [723, 1018]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemgeneration"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cache Mode"], "extent": [1270, 1282], "body": [{"type": "para", "indent": 4, "text": ["Determines how the processor node handles work items that report expected file results."], "extent": [1306, 1399]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [1399, 1414], "body": [{"type": "para", "indent": 8, "text": ["If the expected result file exists on disk, the work item is marked as\n        cooked without being scheduled. If the file ", {"type": "em", "text": ["does not"]}, " exist on disk, the work item is scheduled as normal. If upstream work item dependencies write out new\n        files during a cook, the cache files on work items in this node will\n        also be marked as out-of-date."], "extent": [1414, 1775]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Automatic (Ignore Upstream)"], "extent": [1775, 1808], "body": [{"type": "para", "indent": 8, "text": ["The same as ", {"type": "ui", "text": ["Automatic"]}, ", except upstream file writes ", {"type": "em", "text": ["do not"]}, " invalidate\n        cache files on work items in this node and this node will only check output files for its own work items."], "extent": [1808, 2006]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Read Files"], "extent": [2006, 2022], "body": [{"type": "para", "indent": 8, "text": ["If the expected result file exists on disk, the work item is marked as cooked without being scheduled. Otherwise the work item is marked as failed."], "extent": [2022, 2179]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Write Files"], "extent": [2179, 2196], "body": [{"type": "para", "indent": 8, "text": ["Work items are always scheduled and the expected result file is ignored even if it exists on disk."], "extent": [2196, 2304]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_cachemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sequential"], "extent": [934, 946], "body": [{"type": "para", "indent": 4, "text": ["Makes each generated work item depend on the previous one, so they run in sequence instead of simultaneously. If this node is dynamic, work items can only be made sequential with respect to other work items with the same parent."], "extent": [967, 1201]}], "container": true, "attrs": {"id": "sequential"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Copy Inputs to Outputs"], "extent": [1201, 1225], "body": [{"type": "para", "indent": 4, "text": ["When on, work items in the node automatically copy input files to their output file list. When off, the node assumes that the command line will attach output files to the work items."], "extent": [1246, 1434]}], "container": true, "attrs": {"id": "copyinputs"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["Flatten Work Item Indices"], "extent": [1434, 1460], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG will ensure that work item index values range from 0 to the number of work items in the node, even if the input work item list has gaps or the ", {"type": "ui", "text": ["Item Count"]}, " parameter has a variable size from an expression. If this node is Dynamic PDG cannot guarantee that the work items are sorted by their index, however all work items with the same parent work item will be sorted."], "extent": [1485, 1874]}], "container": true, "attrs": {"id": "flattenindices"}}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Item Count"], "extent": [1874, 1886], "body": [{"type": "para", "indent": 4, "text": ["Sets the number of outgoing work items to generate for each incoming work item. If there are no incoming work items, the node generates this number of outgoing work items."], "extent": [1906, 2083]}], "container": true, "attrs": {"id": "itemcount"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Index"], "extent": [2083, 2090], "body": [{"type": "para", "indent": 4, "text": ["By default, the node gives the generated work items sequential ", {"type": "code", "text": ["index"]}, " attributes starting at ", {"type": "code", "text": ["0"]}, ". But when ", {"type": "ui", "text": ["Index"]}, " is on, the node generates custom ", {"type": "code", "text": ["index"]}, " values from the expression specified in the parameter field. This parameter cannot be used if ", {"type": "ui", "text": ["Flatten Indices"]}, " is enabled."], "extent": [2106, 2396]}], "container": true, "attrs": {"id": "index"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frame"], "extent": [2396, 2403], "body": [{"type": "para", "indent": 4, "text": ["By default, the generated work items inherit the ", {"type": "code", "text": ["frame"]}, " attribute from the corresponding incoming work item. But when ", {"type": "ui", "text": ["Frame"]}, " is on, the node generates custom ", {"type": "code", "text": ["frame"]}, " values from the expression specified in the parameter field."], "extent": [2419, 2655]}], "container": true, "attrs": {"id": "frame"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Command "], "extent": [2655, 2671], "body": [{"type": "para", "indent": 4, "text": ["These parameters can be used to configure the command line executable that work items will execute when they cook."], "extent": [2671, 2792]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Specify Using"], "extent": [2792, 2811], "body": [{"type": "para", "indent": 8, "text": ["Determines how the command line executable is specified. "], "extent": [2834, 2901]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Custom String"], "extent": [2901, 2925], "body": [{"type": "para", "indent": 12, "text": ["The command line executable is defined by a custom string."], "extent": [2925, 2997]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Delay"], "extent": [2997, 3013], "body": [{"type": "para", "indent": 12, "text": ["The command line executable is defined by a delay time."], "extent": [3013, 3082]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Command Builder"], "extent": [3082, 3108], "body": [{"type": "para", "indent": 12, "text": ["The command line executable is defined by a multiparm of command line args."], "extent": [3108, 3197]}, {"type": "para", "indent": 12, "text": ["When the ", {"type": "ui", "text": ["Command Builder"]}, " parameters are used with caching, any arguments specified as output file paths are added as expected outputs on the work items. And if the files ", {"type": "em", "text": ["do not"]}, " already exist or the ", {"scheme": null, "value": "#pdg_cachemode", "type": "link", "text": ["Cache Mode"], "fullpath": "/nodes/top/genericgenerator#pdg_cachemode", "fragment": "#pdg_cachemode"}, " is set to ", {"type": "ui", "text": ["Write Files"]}, ", then the work items cook normally and the file paths are validated once the work items finish cooking."], "extent": [3197, 3572]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "usedelay"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Command"], "extent": [3572, 3585], "body": [{"type": "para", "indent": 8, "text": ["Determines the command string for work items in this node."], "extent": [3611, 3679]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Specify Command Using"]}, " is set to ", {"type": "ui", "text": ["Custom String"]}, "."], "extent": [3679, 3781]}], "container": true, "attrs": {"id": "pdg_command"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Delay Time"], "extent": [3781, 3797], "body": [{"type": "para", "indent": 8, "text": ["Determines how long of a delay to use (in seconds). Work items in this node run a generic sleep/wait command line instead of running a custom command line. This parameter can be useful for simulating a slow workload to see how it affects the rest of the network. "], "extent": [3817, 4090]}, {"type": "para", "indent": 8, "text": ["For example, you can use this parameter to check whether nodes correctly ", {"scheme": "Node", "value": "/nodes/top/waitforall", "type": "link", "text": ["wait for results"], "fullpath": "/nodes/top/waitforall"}, " before proceeding."], "extent": [4090, 4230]}], "container": true, "attrs": {"id": "delay"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Base Command"], "extent": [4230, 4248], "body": [{"type": "para", "indent": 8, "text": ["Specifies the base command line. This parameter contains the executable and any simple arguments that don\u2019t require the extra features available to the ones specified in the multiparm. The extra arguments specified by ", {"type": "ui", "text": ["Extra Arguments"]}, " are also appended to the end of the base command."], "extent": [4274, 4571]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Specify Command Using"]}, " is set to ", {"type": "ui", "text": ["Command Builder"]}, "."], "extent": [4571, 4675]}], "container": true, "attrs": {"id": "basecommand"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Run Command in System Shell"], "extent": [4675, 4708], "body": [{"type": "para", "indent": 8, "text": ["When this toggle is enabled, the command string will be run using the system shell instead of run directly. This makes it possible to use shell language features like pattern matching and expansion"], "extent": [4735, 4942]}], "container": true, "attrs": {"id": "shellcommand"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Extra Arguments"], "extent": [4942, 4963], "body": [{"type": "para", "indent": 8, "text": ["Specifies the number of extra arguments to append to the ", {"type": "ui", "text": ["Base Command"]}, "."], "extent": [4987, 5071]}, {"type": "para", "indent": 8, "text": ["Instead of specifying a command line string using a single expression, you can  use this ", {"type": "em", "text": ["multiparm command builder"]}, " to compose executable arguments. "], "extent": [5071, 5231]}, {"type": "para", "indent": 8, "text": ["You can drive these arguments with upstream files or work item attributes. You can also mark these arguments as command outputs, which adds the values of the arguments as output files on the work items."], "extent": [5231, 5443]}, {"type": "para", "indent": 8, "text": ["If the argument data is in an array, the array values are automatically expanded into strings using a ", {"scheme": null, "value": "#argumentsep", "type": "link", "text": ["configurable separator"], "fullpath": "/nodes/top/genericgenerator#argumentsep", "fragment": "#argumentsep"}, "."], "extent": [5443, 5593]}, {"type": "para", "indent": 8, "text": ["This multiparm is only available when ", {"type": "ui", "text": ["Specify Command Using"]}, " is set to ", {"type": "ui", "text": ["Command Builder"]}, "."], "extent": [5593, 5697]}], "container": true, "attrs": {"id": "extraargs"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Argument Enabled"], "extent": [5697, 5719], "body": [{"type": "para", "indent": 8, "text": ["When this toggle is enabled the argument is added to the command string. If it is disable the argument is ignored."], "extent": [5748, 5872]}], "container": true, "attrs": {"id": "argumentenable"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Argument Name"], "extent": [5872, 5891], "body": [{"type": "para", "indent": 8, "text": ["The name of the argument, such as ", {"type": "code", "text": ["-o"]}, " or ", {"type": "code", "text": ["--output"]}, ". When necessary, this name should include the '", {"type": "code", "text": ["-"]}, "'."], "extent": [5918, 6033]}], "container": true, "attrs": {"id": "argumentname"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Argument Source"], "extent": [6033, 6054], "body": [{"type": "para", "indent": 8, "text": ["The source of the data passed to the argument. "], "extent": [6078, 6135]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Upstream Output Files"], "extent": [6135, 6167], "body": [{"type": "para", "indent": 15, "text": ["The values come from upstream output files."], "extent": [6167, 6227]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Attribute Name"], "extent": [6227, 6252], "body": [{"type": "para", "indent": 15, "text": ["The values come from an attribute name."], "extent": [6252, 6308]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Custom Value"], "extent": [6308, 6331], "body": [{"type": "para", "indent": 15, "text": ["The values come from a custom expression."], "extent": [6331, 6389]}], "container": true}, {"type": "dt", "indent": 8, "text": ["None"], "extent": [6389, 6412], "body": [{"type": "para", "indent": 15, "text": ["The argument does not have a value, and only the argument name will be included in the command string."], "extent": [6412, 6531]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "valuetype"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Input File Tag"], "extent": [6531, 6551], "body": [{"type": "para", "indent": 8, "text": ["Determines which tag to use when filtering the files."], "extent": [6574, 6637]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Argument Source"]}, " is set to ", {"type": "ui", "text": ["Upstream Output Files"]}, "."], "extent": [6637, 6741]}], "container": true, "attrs": {"id": "inputtag"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attribute Name"], "extent": [6741, 6761], "body": [{"type": "para", "indent": 8, "text": ["Specifies the name of the attribute to use for setting arg data. Since PDG can load the array attribute regardless of its length and convert it to a string, this is useful when looking up array data."], "extent": [6786, 6995]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Argument Source"]}, " is set to ", {"type": "ui", "text": ["Attribute Name"]}, "."], "extent": [6995, 7092]}], "container": true, "attrs": {"id": "attribname"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Argument Value"], "extent": [7092, 7112], "body": [{"type": "para", "indent": 8, "text": ["Determines what the argument value should be for each work item."], "extent": [7138, 7212]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Argument Source"]}, " is set to ", {"type": "ui", "text": ["Custom Value"]}, "."], "extent": [7212, 7307]}], "container": true, "attrs": {"id": "customvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Collapse Arrays To"], "extent": [7307, 7331], "body": [{"type": "para", "indent": 8, "text": ["Determines how arrays of files or attribute values should be handled when adding them to the command line. Arrays can be added as a space-separated list of values, a command separated list, or a list with a custom separator between entries. Alternatively, the entire argument can be copied for each entry in the array."], "extent": [7360, 7688]}, {"type": "para", "indent": 8, "text": ["For example, given an input data array containing the entries ", {"type": "code", "text": ["[\"example\", \"example1\", \"example2\"]"]}, " and an argument name of ", {"type": "code", "text": ["--input"]}, ", the following expansions would take place:"], "extent": [7688, 7875]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Space-Separated String"], "extent": [7875, 7915], "body": [{"type": "para", "indent": 15, "text": [{"type": "code", "text": ["executable --input \"example\" \"example1\" \"example2\""]}], "extent": [7915, 7984]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Comma-Separated String"], "extent": [7984, 8024], "body": [{"type": "para", "indent": 15, "text": [{"type": "code", "text": ["executable --input \"example\",\"example1\",\"example2\""]}], "extent": [8024, 8093]}], "container": true}, {"type": "dt", "indent": 8, "text": ["String with Custom Separator"], "extent": [8093, 8132], "body": [{"type": "para", "indent": 15, "text": ["Set to ", {"type": "code", "text": ["#"]}, "."], "extent": [8132, 8160]}, {"type": "para", "indent": 15, "text": [{"type": "code", "text": ["executable --input \"example\"#\"example1\"#\"example2\""]}], "extent": [8160, 8229]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Multiple Arguments"], "extent": [8229, 8265], "body": [{"type": "para", "indent": 15, "text": [{"type": "code", "text": ["executable --input \"example\" --input \"example1\" --input \"example2\""]}], "extent": [8265, 8350]}, {"type": "para", "indent": 12, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Argument Source"]}, " is ", {"type": "em", "text": ["not"]}, " set to ", {"type": "ui", "text": ["Custom Value"]}, "."], "extent": [8350, 8455]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "collapsearrays"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Array Separator"], "extent": [8455, 8476], "body": [{"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Collapse Arrays To"]}, " is set to ", {"type": "ui", "text": ["String with Custom Separator"]}, ", and its field is located to the ", {"type": "em", "text": ["right"]}, " of the ", {"type": "ui", "text": ["Collapse Arrays To"]}, " drop-down menu."], "extent": [8502, 8702]}, {"type": "para", "indent": 8, "text": ["Specifies the separator used between entries in the array."], "extent": [8702, 8770]}], "container": true, "attrs": {"id": "argumentsep"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attach Argument as Output File"], "extent": [8770, 8806], "body": [{"type": "para", "indent": 8, "text": ["When on, the value(s) from this argument are attached as output files on the work item. Files are added as Expected Outputs so they work with the ", {"type": "ui", "text": ["Cache Mode"]}, " parameter. The file is converted to a regular output after the work item cooks, assuming it is found on disk."], "extent": [8832, 9112]}], "container": true, "attrs": {"id": "writeoutput"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Take Ownership of File"], "extent": [9112, 9140], "body": [{"type": "para", "indent": 8, "text": ["Mark the file as ", {"type": "ui", "text": ["owned"]}, " by the PDG work item.  This should be used to indicate that the file was produced by the PDG cook. WARNING: owned ", {"type": "ui", "text": ["Output Files"]}, " are deleted by menu actions like ", {"type": "ui", "text": ["Delete All File Outputs From Disk"]}, "."], "extent": [9164, 9403]}], "container": true, "attrs": {"id": "ownoutput"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Custom File Tag"], "extent": [9403, 9424], "body": [{"type": "para", "indent": 8, "text": ["When this parameter is enabled, it can be used to specify the file tag the node uses when attaching output files to the work item. Otherwise, PDG will use the existing tag associated with the file if it was copied from an upstream work item, or pick a tag automatically based on the extension if one does not exist."], "extent": [9448, 9773]}], "container": true, "attrs": {"id": "outputtag"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Expected Outputs ~~~ "], "extent": [9773, 9799], "body": [{"type": "para", "indent": 4, "text": ["You can use these parameters can be used to assign expected output files to the work items to PDG knows what outputs the work items produce when they cook."], "extent": [9826, 9987]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Expected Outputs From"], "extent": [9987, 10014], "body": [{"type": "para", "indent": 8, "text": ["Determines how expected output files should be specified."], "extent": [10048, 10115]}], "container": true, "attrs": {"id": "expectedoutputsfrom"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attribute Name"], "extent": [10115, 10135], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Expected Outputs From"]}, " is set to ", {"type": "ui", "text": ["Attribute Name"]}, ", this parameter specifies the name of the attribute that contains the file paths(s)."], "extent": [10168, 10322]}], "container": true, "attrs": {"id": "expectedoutputattr"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Custom File Tag"], "extent": [10322, 10343], "body": [{"type": "para", "indent": 8, "text": ["When this parameter is enabled, the custom tag value will be assigned to all output files. Otherwise, PDG will use the existing tag for the file if one has been set, or pick one automatically based on the file extension if a tag does not exist."], "extent": [10375, 10629]}], "container": true, "attrs": {"id": "expectedoutputtag"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Files"], "extent": [10629, 10640], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Expected Outputs From"]}, " is set to ", {"type": "ui", "text": ["File List"]}, ", this parameter determines the number of file list entries."], "extent": [10674, 10798]}], "container": true, "attrs": {"id": "expectedoutputfiles"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Output File"], "extent": [10798, 10815], "body": [{"type": "para", "indent": 8, "text": ["The path to the file."], "extent": [10848, 10879]}], "container": true, "attrs": {"id": "expectedoutputfile"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "expected_outputs"}}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Schedulers"], "extent": [10879, 10896], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["TOP Scheduler Override"], "extent": [5496, 5520], "body": [{"type": "para", "indent": 4, "text": ["This parameter overrides the TOP scheduler for this node."], "extent": [5543, 5606]}], "container": true, "attrs": {"id": "topscheduler"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Schedule When"], "extent": [9609, 9624], "body": [{"type": "para", "indent": 4, "text": ["When enabled, this parameter can be used to specify an expression that determines which work items from the node should be scheduled. If the expression returns zero for a given work item, that work item will immediately be marked as cooked instead of being queued with a scheduler. If the expression returns a non-zero value, the work item is scheduled normally."], "extent": [9651, 10021]}], "container": true, "attrs": {"id": "pdg_schedulewhen"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Work Item Label"], "extent": [8474, 8491], "body": [{"type": "para", "indent": 4, "text": ["Determines how the node should label its work items. This parameter allows you to assign non-unique label strings to your work items which are then used to identify the work items in the attribute panel, task bar, and scheduler job names."], "extent": [8519, 8763]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use Default Label"], "extent": [8763, 8787], "body": [{"type": "para", "indent": 8, "text": ["The work items in this node will use the default label from the TOP network, or have no label if the default is unset."], "extent": [8787, 8915]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [8915, 8948], "body": [{"type": "para", "indent": 8, "text": ["The work items inherit their labels from their parent work items.        "], "extent": [8948, 9031]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [9031, 9055], "body": [{"type": "para", "indent": 8, "text": ["The work item label is set to the ", {"type": "ui", "text": ["Label Expression"]}, " custom expression which is evaluated for each item."], "extent": [9055, 9171]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Label"], "extent": [9171, 9196], "body": [{"type": "para", "indent": 8, "text": ["The work item label is defined in the node\u2019s internal logic."], "extent": [9196, 9266]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemlabel"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Label Expression"], "extent": [9266, 9284], "body": [{"type": "para", "indent": 4, "text": ["When on, this parameter specifies a custom label for work items created by this node. The parameter can be an expression that includes references to work item attributes or built-in properties. For example, ", {"type": "code", "text": ["$OS: @pdg_frame"]}, " will set the label of each work item based on its frame value."], "extent": [9316, 9609]}], "container": true, "attrs": {"id": "pdg_workitemlabelexpr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Work Item Priority"], "extent": [6495, 6515], "body": [{"type": "para", "indent": 4, "text": ["This parameter determines how the current scheduler prioritizes the work items in this node."], "extent": [6546, 6644]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [6644, 6677], "body": [{"type": "para", "indent": 11, "text": ["The work items inherit their priority from their parent items. If a work item has no parent, its priority is set to 0."], "extent": [6677, 6808]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [6808, 6832], "body": [{"type": "para", "indent": 11, "text": ["The work item priority is set to the value of ", {"type": "ui", "text": ["Priority Expression"]}, "."], "extent": [6832, 6915]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Priority"], "extent": [6915, 6943], "body": [{"type": "para", "indent": 7, "text": ["The work item priority is set based on the node\u2019s own internal priority calculations."], "extent": [6943, 7048]}, {"type": "para", "indent": 7, "text": ["This option is only available on the ", {"scheme": "Icon", "value": "MISC/python.svg", "type": "link", "text": "", "fullpath": "/nodes/top/MISC/python.svg"}, " ", {"scheme": "Node", "value": "/nodes/top/pythonprocessor", "type": "link", "text": ["Python Processor TOP"], "fullpath": "/nodes/top/pythonprocessor"}, ", ", {"scheme": "Icon", "value": "TOP/ropfetch.svg", "type": "link", "text": "", "fullpath": "/nodes/top/TOP/ropfetch.svg"}, " ", {"scheme": "Node", "value": "/nodes/top/ropfetch", "type": "link", "text": ["ROP Fetch TOP"], "fullpath": "/nodes/top/ropfetch"}, ", and ROP Output TOP nodes. These nodes define their own prioritization schemes that are implemented in their node logic."], "extent": [7048, 7344]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitempriority"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Priority Expression"], "extent": [7344, 7365], "body": [{"type": "para", "indent": 4, "text": ["This parameter specifies an expression for work item priority. The expression is evaluated for each work item in the node."], "extent": [7400, 7528]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Work Item Priority"]}, " is set to ", {"type": "ui", "text": ["Custom Expression"]}, "."], "extent": [7528, 7627]}], "container": true, "attrs": {"id": "pdg_workitempriorityexpr"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Files"], "extent": [11181, 11193], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["File Dependencies"], "extent": [2715, 2734], "body": [{"type": "para", "indent": 4, "text": ["A list of files that should be copied to the PDG working directory before the first work item in this node is executed.  This can be used to ensure that supporting files like digital assets and custom scripts are available for the work item job."], "extent": [2756, 3007]}, {"type": "para", "indent": 4, "text": ["The specified paths can be absolute or relative to HOUDINI_PATH."], "extent": [3007, 3077]}], "container": true, "attrs": {"id": "pdgnodedeps"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [11234, 11243], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/pythonprocessor", "type": "link", "text": "", "fullpath": "/nodes/top/pythonprocessor"}], "extent": [11243, 11273]}], "container": true}], "text": "Related"}], "title": ["Generic Generator"], "summary": ["Generates work items with no attributes that run a command line."], "included": ["/nodes/top/processor_common"]}