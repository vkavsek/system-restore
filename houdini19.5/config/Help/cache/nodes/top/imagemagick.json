{"type": "root", "attrs": {"type": "node", "context": "top", "internal": "imagemagick", "icon": "TOP/imagemagick", "since": "17.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["ImageMagick"], "extent": [0, 16]}, {"type": "summary", "indent": 0, "text": ["Provides easy access to ImageMagick functionality such as mass image convert, resize, and image mosaics."], "extent": [116, 229]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [229, 244], "body": [{"type": "para", "indent": 0, "text": ["This node creates work items that call functions in the ImageMagick library to manipulate images. The ", {"type": "ui", "text": ["Operation"]}, " parameter chooses between different built-in methods of editing or combining images."], "extent": [244, 447]}, {"type": "para", "indent": 0, "text": ["Before you can use this node, you ", {"type": "em", "text": ["must"]}, " have ", {"scheme": null, "value": "#install", "type": "link", "text": ["ImageMagick"], "fullpath": "/nodes/top/imagemagick#install", "fragment": "#install"}, " installed on your system."], "extent": [447, 543]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [543, 549], "body": [{"type": "para", "indent": 4, "text": ["We recommend that you use ImageMagick v7 or higher."], "extent": [549, 606]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips and notes"], "extent": [606, 627], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["This node will perform the given operation for the list of output result files on each incoming work item, ", {"type": "strong", "text": ["even when it\u2019s a montage or composite"]}, "."], "extent": [627, 779], "body": [{"type": "para", "indent": 4, "text": ["If you have multiple incoming work items each representing one file you want to montage or composite (for example, you generate work items from files using ", {"scheme": "Node", "value": "/nodes/top/filepattern", "type": "link", "text": ["File Pattern"], "fullpath": "/nodes/top/filepattern"}, " and then want to merge them into an image mosaic), insert a ", {"scheme": "Node", "value": "/nodes/top/waitforall", "type": "link", "text": ["Wait for All node"], "fullpath": "/nodes/top/waitforall"}, " before this node to merge them into a single work item."], "extent": [779, 1132]}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["When resizing/converting"]}, ", if you have multiple incoming work items each representing one file, by default (no Wait for All) the node will perform the operations in parallel. However, it\u2019s ", {"type": "strong", "text": ["much"]}, " faster to convert all files in one process by enabling batching. This avoids the overhead of scheduling and executing separately for each file."], "extent": [1132, 1476]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Montage (image mosaic) works best when all input images are the same size. You can pipeline two ImageMagick nodes, one to resize all input images to the same size, and one to create the montage."], "extent": [1476, 1674]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can access the full set of ImageMagick options by writing a custom command line. For example, you can change the background for overlays from black to transparent (", {"type": "code", "text": ["-background 'rgba(0,0,0,0)'"]}, "), or change the pixel filter used when resizing."], "extent": [1674, 1925]}], "container": true}]}, {"level": 2, "id": "install", "container": true, "type": "h", "indent": 0, "text": ["Installation"], "extent": [1925, 1954], "body": [{"type": "para", "indent": 0, "text": ["Before you can use this node, you must install the ", {"scheme": null, "value": "http://www.imagemagick.org/", "type": "link", "text": ["ImageMagick software"], "exists": true}, ", either from the website (Mac/Windows) or using a package manager (Linux)."], "extent": [1954, 2133]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [2133, 2139], "body": [{"type": "para", "indent": 4, "text": ["We recommend that you install ImageMagick v7 or higher."], "extent": [2139, 2200]}], "container": true}], "container": true, "role": "item_group"}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["You must manually install ImageMagick on each machine where work items will run"]}, ". (If you're using the local scheduler, you must install ImageMagick on the local machine. If you're using a render farm, you must install ImageMagick on all host machines on the farm.)"], "extent": [2200, 2470]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["The work items must be able to find the ImageMagick executable"]}, "."], "extent": [2470, 2539], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["The ", {"type": "code", "text": ["imagemagick"]}, " executable should be on the command path for the remote user."], "extent": [2539, 2626], "body": [{"type": "para", "indent": 8, "text": [{"type": "em", "text": ["or"]}], "extent": [2626, 2640]}], "container": true}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["You can define a ", {"type": "code", "text": ["PDG_IMAGEMAGICK"]}, " environment variable. This should contain the path to the ImageMagick executable."], "extent": [2640, 2764], "body": [{"type": "para", "indent": 8, "text": [{"type": "em", "text": ["or"]}], "extent": [2764, 2778]}], "container": true}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["You can define a ", {"type": "code", "text": ["PDG_IMAGEMAGICK_DIR"]}, " environment variable. This should contain the path to the folder where the ImageMagick executables are located. This variable should be used instead of ", {"type": "code", "text": ["PDG_IMAGEMAGICK"]}, " when your installation of ImageMagick has separate executables for each subcommand (", {"type": "code", "text": ["montage"]}, ", ", {"type": "code", "text": ["convert"]}, ", etc.)."], "extent": [2778, 3107], "body": [{"type": "para", "indent": 8, "text": [{"type": "em", "text": ["or"]}], "extent": [3107, 3121]}], "container": true}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["You can manually enter the path to the executable in the ", {"type": "ui", "text": ["ImageMagick Path"]}, " parameter."], "extent": [3121, 3217]}], "container": true}], "container": true}], "container": true}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [3217, 3222], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "code", "text": ["$HH/help/files/pdg_examples/top_imagemanipulation"]}, " example shows how you can use this node to create work items that modify images using the ImageMagick utility."], "extent": [3222, 3394]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "top_attributes", "container": true, "type": "top_attributes_section", "indent": 0, "role": "section", "extent": [3394, 3410], "body": [{"type": "top_attributes_item_group", "body": [{"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["operation"]}], "role": "item", "extent": [3410, 3425], "body": [{"type": "para", "indent": 4, "text": ["The ImageMagick operation that will be performed (", {"type": "code", "text": ["convert"]}, ", ", {"type": "code", "text": ["composite"]}, ", ", {"type": "code", "text": ["montage"]}, ", ", {"type": "code", "text": ["compare"]}, ", ", {"type": "code", "text": ["import"]}, ", or ", {"type": "code", "text": ["conjure"]}, ")"], "extent": [3445, 3570]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["batchmode"]}], "role": "item", "extent": [3570, 3584], "body": [{"type": "para", "indent": 4, "text": ["The selected batch mode."], "extent": [3604, 3634]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["cookwhen"]}], "role": "item", "extent": [3634, 3647], "body": [{"type": "para", "indent": 4, "text": ["The selected ", {"type": "ui", "text": ["Cook Batch When"]}, " setting."], "extent": [3667, 3714]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["inputsort"]}], "role": "item", "extent": [3714, 3728], "body": [{"type": "para", "indent": 4, "text": ["The selected ", {"type": "ui", "text": ["Sort Input Files By"]}, " setting."], "extent": [3748, 3799]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["inputsource"]}], "role": "item", "extent": [3799, 3815], "body": [{"type": "para", "indent": 4, "text": ["The selected ", {"type": "ui", "text": ["Input Source"]}, " setting."], "extent": [3835, 3879]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["inputfiletag"]}], "role": "item", "extent": [3879, 3896], "body": [{"type": "para", "indent": 4, "text": ["The ", {"scheme": null, "value": "/tops/filetags", "type": "link", "text": ["file tag"], "fullpath": "/tops/filetags"}, " of the input files to use in the operation. "], "extent": [3915, 3995]}], "container": true, "attrs": {"type": "string"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["inputfilepath"]}], "role": "item", "extent": [3995, 4013], "body": [{"type": "para", "indent": 4, "text": ["The file path of the input file to the operation."], "extent": [4032, 4087]}], "container": true, "attrs": {"type": "string"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["enablemode"]}], "role": "item", "extent": [4087, 4102], "body": [{"type": "para", "indent": 4, "text": ["Indicates whether the ", {"type": "code", "text": ["-mode"]}, " argument is enabled."], "extent": [4122, 4178]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["mode"]}], "role": "item", "extent": [4178, 4187], "body": [{"type": "para", "indent": 4, "text": ["The value of the ", {"type": "code", "text": ["-mode"]}, " argument."], "extent": [4206, 4246]}], "container": true, "attrs": {"type": "string"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["overlaymode"]}], "role": "item", "extent": [4246, 4262], "body": [{"type": "para", "indent": 4, "text": ["The selected overlay mode."], "extent": [4282, 4314]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["overlayattribute"]}], "role": "item", "extent": [4314, 4335], "body": [{"type": "para", "indent": 4, "text": ["The name of the attribute array with the labels for each input image to the montage."], "extent": [4354, 4444]}], "container": true, "attrs": {"type": "string"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["compositeop"]}], "role": "item", "extent": [4444, 4460], "body": [{"type": "para", "indent": 4, "text": ["The selected composite operation."], "extent": [4479, 4518]}], "container": true, "attrs": {"type": "string"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["enablebackground"]}], "role": "item", "extent": [4518, 4539], "body": [{"type": "para", "indent": 4, "text": ["Indicates whether the ", {"type": "code", "text": ["-background"]}, " argument is enabled."], "extent": [4559, 4621]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["background"]}], "role": "item", "extent": [4621, 4636], "body": [{"type": "para", "indent": 4, "text": ["The value of the ", {"type": "code", "text": ["-background"]}, " argument."], "extent": [4655, 4701]}], "container": true, "attrs": {"type": "string"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["enableresolution"]}], "role": "item", "extent": [4701, 4722], "body": [{"type": "para", "indent": 4, "text": ["Indicates whether the ", {"type": "code", "text": ["-resize"]}, " argument is enabled."], "extent": [4742, 4800]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["imgwidth"]}], "role": "item", "extent": [4800, 4813], "body": [{"type": "para", "indent": 4, "text": ["The width component of the ", {"type": "code", "text": ["-resize"]}, " argument."], "extent": [4833, 4885]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["imgheight"]}], "role": "item", "extent": [4885, 4899], "body": [{"type": "para", "indent": 4, "text": ["The height component of the ", {"type": "code", "text": ["-resize"]}, " argument."], "extent": [4919, 4972]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["preservear"]}], "role": "item", "extent": [4972, 4987], "body": [{"type": "para", "indent": 4, "text": ["Whether the aspect ratio should be preserved when resizing the image."], "extent": [5007, 5082]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["enableimgquality"]}], "role": "item", "extent": [5082, 5103], "body": [{"type": "para", "indent": 4, "text": ["Indicates whether the ", {"type": "code", "text": ["-quality"]}, " argument is enabled."], "extent": [5123, 5182]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["imgquality"]}], "role": "item", "extent": [5182, 5197], "body": [{"type": "para", "indent": 4, "text": ["The value of the ", {"type": "code", "text": ["-quality"]}, " argument."], "extent": [5217, 5260]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["imagemagickbinary"]}], "role": "item", "extent": [5260, 5282], "body": [{"type": "para", "indent": 4, "text": ["The selected method for discovering the ImageMagick binary."], "extent": [5302, 5367]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["customimagemagickbinary"]}], "role": "item", "extent": [5367, 5395], "body": [{"type": "para", "indent": 4, "text": ["The file path to the ImageMagick binary when ", {"type": "ui", "text": ["ImageMagick Binary"]}, " is set to ", {"type": "ui", "text": ["Custom Path"]}, "."], "extent": [5414, 5514]}], "container": true, "attrs": {"type": "string"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["outputfile"]}], "role": "item", "extent": [5514, 5529], "body": [{"type": "para", "indent": 4, "text": ["The output file that should result from the operation. "], "extent": [5546, 5607]}], "container": true, "attrs": {"type": "file"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["imagemagickarguments"]}], "role": "item", "extent": [5607, 5632], "body": [{"type": "para", "indent": 4, "text": ["The ImageMagick arguments built by the node based on the parameter configuration."], "extent": [5651, 5738]}], "container": true, "attrs": {"type": "string"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["enablecustomarguments"]}], "role": "item", "extent": [5738, 5764], "body": [{"type": "para", "indent": 4, "text": ["Indicates that the work item job should use the user-supplied custom arguments. "], "extent": [5784, 5870]}], "container": true, "attrs": {"type": "integer"}}, {"ext": null, "type": "top_attributes_item", "indent": 0, "text": [{"type": "code", "text": ["customarguments"]}], "role": "item", "extent": [5870, 5890], "body": [{"type": "para", "indent": 4, "text": ["The user-supplied custom arguments which will be used to construct the ImageMagick command when the ", {"type": "ui", "text": ["Custom ImageMagick Arguments"]}, " field is enabled."], "extent": [5909, 6065]}], "container": true, "attrs": {"type": "string"}}], "container": true, "role": "item_group"}], "text": "Top_attributes"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [6065, 6077], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Node"], "extent": [6077, 6089], "body": [{"level": 4, "type": "sep", "indent": 0, "text": [" Work Items "], "extent": [6089, 6111], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Generate When"], "extent": [16, 31], "body": [{"type": "para", "indent": 4, "text": ["Determines when this node will generate work items. You should generally leave this set to ", {"type": "q", "text": ["Automatic"]}, " unless you know the node requires a specific generation mode, or that the work items need to be generated dynamically."], "extent": [64, 291]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["All Upstream Items are Generated"], "extent": [291, 329], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have generated their work items."], "extent": [329, 437]}], "container": true}, {"type": "dt", "indent": 4, "text": ["All Upstream Items are Cooked"], "extent": [437, 472], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have cooked their work items."], "extent": [472, 577]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Each Upstream Item is Cooked"], "extent": [577, 611], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items each time a work item in an input node is cooked."], "extent": [611, 708]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [708, 723], "body": [{"type": "para", "indent": 11, "text": ["The generation mode is selected based on the generation mode of the input nodes. If any of the input nodes are generating work items when their inputs cook, this node will be set to ", {"type": "ui", "text": ["Each Upstream Item is Cooked"]}, ". Otherwise, it will be set to ", {"type": "ui", "text": ["All Upstream Items are Generated"]}, "."], "extent": [723, 1018]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemgeneration"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cache Mode"], "extent": [1270, 1282], "body": [{"type": "para", "indent": 4, "text": ["Determines how the processor node handles work items that report expected file results."], "extent": [1306, 1399]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [1399, 1414], "body": [{"type": "para", "indent": 8, "text": ["If the expected result file exists on disk, the work item is marked as\n        cooked without being scheduled. If the file ", {"type": "em", "text": ["does not"]}, " exist on disk, the work item is scheduled as normal. If upstream work item dependencies write out new\n        files during a cook, the cache files on work items in this node will\n        also be marked as out-of-date."], "extent": [1414, 1775]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Automatic (Ignore Upstream)"], "extent": [1775, 1808], "body": [{"type": "para", "indent": 8, "text": ["The same as ", {"type": "ui", "text": ["Automatic"]}, ", except upstream file writes ", {"type": "em", "text": ["do not"]}, " invalidate\n        cache files on work items in this node and this node will only check output files for its own work items."], "extent": [1808, 2006]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Read Files"], "extent": [2006, 2022], "body": [{"type": "para", "indent": 8, "text": ["If the expected result file exists on disk, the work item is marked as cooked without being scheduled. Otherwise the work item is marked as failed."], "extent": [2022, 2179]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Write Files"], "extent": [2179, 2196], "body": [{"type": "para", "indent": 8, "text": ["Work items are always scheduled and the expected result file is ignored even if it exists on disk."], "extent": [2196, 2304]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_cachemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cook Type"], "extent": [2304, 2315], "body": [{"type": "para", "indent": 4, "text": ["Determines how work items in the node should cook, e.g. if they should run in process, out of process, or using services."], "extent": [2338, 2465]}], "container": true, "attrs": {"id": "pdg_cooktype"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Batch Mode"], "extent": [6258, 6274], "body": [{"type": "para", "indent": 8, "text": ["Determines the batch mode of generated work items."], "extent": [6298, 6358]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Off"], "extent": [6358, 6371], "body": [{"type": "para", "indent": 12, "text": ["No batching is performed. Each work item is submitted as its own individual job."], "extent": [6371, 6465]}], "container": true}, {"type": "dt", "indent": 8, "text": ["All Items in One Batch"], "extent": [6465, 6497], "body": [{"type": "para", "indent": 12, "text": ["All work items are submitted as a single batch job and take place in a single ", {"type": "code", "text": ["python"]}, " session. This is useful for batch processing images (such as performing a file conversion on a folder of images)."], "extent": [6497, 6711]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "batchmode"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Cook Batch When"], "extent": [6711, 6732], "body": [{"type": "para", "indent": 8, "text": ["Determines when batches of work items are scheduled."], "extent": [6755, 6817]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["All Items are Ready"], "extent": [6817, 6846], "body": [{"type": "para", "indent": 12, "text": ["The batch is only scheduled once all dependencies on all work items in the batch are satisfied."], "extent": [6846, 6955]}], "container": true}, {"type": "dt", "indent": 8, "text": ["First Item is Ready"], "extent": [6955, 6984], "body": [{"type": "para", "indent": 12, "text": ["The batch is scheduled as soon as the dependencies for its first work item are ready. The ImageMagick job script communicates back to PDG as the job is running to check the status of the dependencies before cooking each work item in the batch. This incurs slightly more network overhead and requires ongoing communication between the job and PDG."], "extent": [6984, 7344]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "cookwhen"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Input "], "extent": [7344, 7360], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Input Source"], "extent": [7360, 7379], "body": [{"type": "para", "indent": 8, "text": ["Specifies the input source."], "extent": [7405, 7442]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Upstream Output Files"], "extent": [7442, 7473], "body": [{"type": "para", "indent": 12, "text": ["Sets the input to the output files from the upstream work item with the tag specified by the ", {"type": "ui", "text": ["File Tag"]}, " parameter."], "extent": [7473, 7603]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Custom File Path"], "extent": [7603, 7629], "body": [{"type": "para", "indent": 12, "text": ["Sets the input to the file path specified by the ", {"type": "ui", "text": ["File Path"]}, " parameter."], "extent": [7629, 7716]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "inputsource"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["File Tag"], "extent": [7716, 7730], "body": [{"type": "para", "indent": 8, "text": ["Specifies the ", {"scheme": null, "value": "/tops/filetags", "type": "link", "text": ["file tag"], "fullpath": "/tops/filetags"}, " of the input source."], "extent": [7757, 7827]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Input Source"]}, " is set to ", {"type": "ui", "text": ["Upstream Output Files"]}, "."], "extent": [7827, 7928]}], "container": true, "attrs": {"id": "inputfiletag"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["File Path"], "extent": [7928, 7943], "body": [{"type": "para", "indent": 8, "text": ["Specifies the input file path."], "extent": [7971, 8011]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Input Source"]}, " is set to ", {"type": "ui", "text": ["Custom File Path"]}, "."], "extent": [8011, 8107]}], "container": true, "attrs": {"id": "inputfilepath"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Output "], "extent": [8107, 8124], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Output File Path"], "extent": [8124, 8147], "body": [{"type": "para", "indent": 8, "text": ["Specifies the file path of the output."], "extent": [8176, 8224]}], "container": true, "attrs": {"id": "outputfilepath"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["File Tag"], "extent": [8224, 8238], "body": [{"type": "para", "indent": 8, "text": ["Specifies the ", {"scheme": null, "value": "/tops/filetags", "type": "link", "text": ["file tag"], "fullpath": "/tops/filetags"}, " of the output."], "extent": [8266, 8330]}], "container": true, "attrs": {"id": "outputfiletag"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Operation"], "extent": [8330, 8341], "body": [{"type": "para", "indent": 4, "text": ["Chooses the ImageMagick operation to use (", {"type": "code", "text": ["convert"]}, ", ", {"type": "code", "text": ["composite"]}, ", ", {"type": "code", "text": ["montage"]}, ", ", {"type": "code", "text": ["compare"]}, ", ", {"type": "code", "text": ["import"]}, ", ", {"type": "code", "text": ["conjure"]}, ")."], "extent": [8361, 8476]}], "container": true, "attrs": {"id": "operation"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sort Input Files By"], "extent": [8476, 8497], "body": [{"type": "para", "indent": 4, "text": ["Chooses how the input files should be sorted."], "extent": [8517, 8568]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [8568, 8578], "body": [{"type": "para", "indent": 8, "text": ["No sorting will be performed on the input files."], "extent": [8578, 8636]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Natural Filename"], "extent": [8636, 8658], "body": [{"type": "para", "indent": 8, "text": ["Uses a natural sort order based on the input filenames."], "extent": [8658, 8723]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "inputsort"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "text": [" Montage "], "extent": [8723, 8741], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Mode"], "extent": [8741, 8752], "body": [{"type": "para", "indent": 8, "text": ["Specifies the value of the ", {"type": "ui", "text": ["mode"]}, " argument."], "extent": [8771, 8826]}], "container": true, "attrs": {"id": "mode"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Overlay"], "extent": [8826, 8839], "body": [{"type": "para", "indent": 8, "text": ["Chooses what should be used as overlay text for each image in the montage."], "extent": [8865, 8949]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["None"], "extent": [8949, 8963], "body": [{"type": "para", "indent": 12, "text": ["No overlay will be used."], "extent": [8963, 9001]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Input Filename"], "extent": [9001, 9025], "body": [{"type": "para", "indent": 12, "text": ["Each image in the montage will be captioned with its source filename."], "extent": [9025, 9108]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Attribute Array"], "extent": [9108, 9133], "body": [{"type": "para", "indent": 13, "text": ["This option allows procedural text to be used as an overlay for each image in the montage. The ", {"type": "ui", "text": ["Attribute Array Name"]}, " attribute must be set when this option is selected."], "extent": [9133, 9319]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "overlaymode"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attribute Array Name"], "extent": [9319, 9345], "body": [{"type": "para", "indent": 8, "text": ["The value of this parameter should be set to the name of a string attribute which contains an array of labels. The number of entries in the string attribute must be equal to the number of inputs."], "extent": [9376, 9581]}], "container": true, "attrs": {"id": "overlayattribute"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Composite "], "extent": [9581, 9601], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Composite Operation"], "extent": [9601, 9627], "body": [{"type": "para", "indent": 8, "text": ["Chooses the ImageMagick composite operation."], "extent": [9653, 9707]}], "container": true, "attrs": {"id": "compositeop"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" Options "], "extent": [9707, 9725], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Background"], "extent": [9725, 9742], "body": [{"type": "para", "indent": 8, "text": ["Specifies the ", {"type": "code", "text": ["-background"]}, " argument."], "extent": [9767, 9814]}], "container": true, "attrs": {"id": "background"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Width"], "extent": [9814, 9825], "body": [{"type": "para", "indent": 8, "text": ["Specifies the width component of the ", {"type": "code", "text": ["-resize"]}, " argument."], "extent": [9848, 9914]}], "container": true, "attrs": {"id": "imgwidth"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Height"], "extent": [9914, 9926], "body": [{"type": "para", "indent": 8, "text": ["Specifies the height component of the ", {"type": "code", "text": ["-resize"]}, " argument."], "extent": [9950, 10017]}], "container": true, "attrs": {"id": "imgheight"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Preserve Aspect Ratio"], "extent": [10017, 10044], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Preserve Aspect Ratio"]}, " is enabled, ImageMagick will preserve the aspect ratio of the input image(s). When this is disabled, the ", {"type": "ui", "text": ["Width"]}, " and ", {"type": "ui", "text": ["Height"]}, " values will be used with no attempt to preserve the original aspect ratio of the image(s). "], "extent": [10069, 10331]}], "container": true, "attrs": {"id": "preservear"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Image Quality Percentage"], "extent": [10331, 10361], "body": [{"type": "para", "indent": 8, "text": ["Specifies the ", {"type": "code", "text": ["-quality"]}, " argument."], "extent": [10386, 10430]}], "container": true, "attrs": {"id": "imgquality"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Extra Arguments"], "extent": [10430, 10451], "body": [{"type": "para", "indent": 8, "text": ["This multiparameter can be used to specify additional arguments that will be added to the ImageMagick command line that is executed."], "extent": [10475, 10617]}], "container": true, "attrs": {"id": "extraargs"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Argument Name"], "extent": [10617, 10636], "body": [{"type": "para", "indent": 8, "text": ["Specifies the name of the additional argument."], "extent": [10664, 10720]}], "container": true, "attrs": {"id": "argumentname#"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Argument Source"], "extent": [10720, 10741], "body": [{"type": "para", "indent": 8, "text": ["Chooses the source of the additional argument."], "extent": [10766, 10822]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Attribute Name"], "extent": [10822, 10846], "body": [{"type": "para", "indent": 12, "text": ["The argument will be set to the value of an attribute with the name specified by the ", {"type": "ui", "text": ["Attribute Name"]}, " parameter."], "extent": [10846, 10974]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Custom Value"], "extent": [10974, 10996], "body": [{"type": "para", "indent": 12, "text": ["The argument will be set to a custom value specified by the ", {"type": "ui", "text": ["Argument Value"]}, " parameter."], "extent": [10996, 11099]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "valuetype#"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attribute Name"], "extent": [11099, 11119], "body": [{"type": "para", "indent": 8, "text": ["When the ", {"type": "ui", "text": ["Argument Source"]}, " is set to ", {"type": "ui", "text": ["Attribute Name"]}, ", this parameter is used to specify the name of the attribute to use."], "extent": [11145, 11281]}], "container": true, "attrs": {"id": "attribname#"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Argument Value"], "extent": [11281, 11301], "body": [{"type": "para", "indent": 8, "text": ["When the ", {"type": "ui", "text": ["Argument Source"]}, " is set to ", {"type": "ui", "text": ["Custom Value"]}, ", this parameter is used to specify the value of the argument.        "], "extent": [11328, 11463]}], "container": true, "attrs": {"id": "customvalue#"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 4, "type": "sep", "indent": 0, "text": [" ImageMagick "], "extent": [11463, 11485], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["ImageMagick Binary"], "extent": [11485, 11510], "body": [{"type": "para", "indent": 8, "text": ["Chooses the method for finding the ImageMagick binary on the job machine."], "extent": [11542, 11625]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["System Path"], "extent": [11625, 11646], "body": [{"type": "para", "indent": 12, "text": ["ImageMagick will be invoked assuming that it is on the system path."], "extent": [11646, 11727]}], "container": true}, {"type": "dt", "indent": 8, "text": ["$PDG_IMAGEMAGICK_DIR"], "extent": [11727, 11757], "body": [{"type": "para", "indent": 12, "text": ["ImageMagick will be found by using the value of a ", {"type": "code", "text": ["PDG_IMAGEMAGICK_DIR"]}, " environment variable that must be set on the job\u2019s machine. The value of the environment variable should be set to the directory where the ImageMagick executables are located. This method is useful for machines that have installations of ImageMagick that have separate executables for each subcommand (", {"type": "code", "text": ["montage"]}, ", ", {"type": "code", "text": ["convert"]}, ", etc.)."], "extent": [11757, 12173]}], "container": true}, {"type": "dt", "indent": 8, "text": ["$PDG_IMAGEMAGICK"], "extent": [12173, 12199], "body": [{"type": "para", "indent": 12, "text": ["ImageMagick will be found by using the value of the ", {"type": "code", "text": ["PDG_IMAGEMAGICK"]}, " environment variable that must be set on the job\u2019s machine. The value of the environment variable should be set to the filepath of the ", {"type": "code", "text": ["magick"]}, " executable. If you have an installation of ImageMagick with separate executables for each subcommand, the ", {"type": "code", "text": ["PDG_IMAGEMAGICK_DIR"]}, " option should be used instead."], "extent": [12199, 12585]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Custom Path"], "extent": [12585, 12606], "body": [{"type": "para", "indent": 12, "text": ["ImageMagick will be invoked using the file path specified in the ", {"type": "ui", "text": ["Imagemagick Binary Path"]}, " parameter."], "extent": [12606, 12723]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "imagemagickbinary"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["ImageMagick Binary Path"], "extent": [12723, 12752], "body": [{"type": "para", "indent": 8, "text": ["This should be used to specify the path to the ImageMagick exectutable when ", {"type": "ui", "text": ["ImageMagick Binary"]}, " is set to ", {"type": "ui", "text": ["Custom Path"]}, "."], "extent": [12790, 12925]}], "container": true, "attrs": {"id": "customimagemagickbinary"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Custom ImageMagick Arguments"], "extent": [12925, 12959], "body": [{"type": "para", "indent": 8, "text": ["This parameter can be used to construct an entirely custom command line to be executed. When this parameter is enabled, the custom set of arguments specified here will be used to call ImageMagick, rather than the set of arguments automatically constructed by the node. The arguments should begin after the ImageMagick subcommand. For example, to run a custom ", {"type": "code", "text": ["magick montage"]}, " command, all the arguments that occur after ", {"type": "code", "text": ["magick montage"]}, " should be supplied via this parameter."], "extent": [12989, 13474]}], "container": true, "attrs": {"id": "customarguments"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Schedulers"], "extent": [13474, 13491], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["TOP Scheduler Override"], "extent": [5496, 5520], "body": [{"type": "para", "indent": 4, "text": ["This parameter overrides the TOP scheduler for this node."], "extent": [5543, 5606]}], "container": true, "attrs": {"id": "topscheduler"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Schedule When"], "extent": [9609, 9624], "body": [{"type": "para", "indent": 4, "text": ["When enabled, this parameter can be used to specify an expression that determines which work items from the node should be scheduled. If the expression returns zero for a given work item, that work item will immediately be marked as cooked instead of being queued with a scheduler. If the expression returns a non-zero value, the work item is scheduled normally."], "extent": [9651, 10021]}], "container": true, "attrs": {"id": "pdg_schedulewhen"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Work Item Label"], "extent": [8474, 8491], "body": [{"type": "para", "indent": 4, "text": ["Determines how the node should label its work items. This parameter allows you to assign non-unique label strings to your work items which are then used to identify the work items in the attribute panel, task bar, and scheduler job names."], "extent": [8519, 8763]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use Default Label"], "extent": [8763, 8787], "body": [{"type": "para", "indent": 8, "text": ["The work items in this node will use the default label from the TOP network, or have no label if the default is unset."], "extent": [8787, 8915]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [8915, 8948], "body": [{"type": "para", "indent": 8, "text": ["The work items inherit their labels from their parent work items.        "], "extent": [8948, 9031]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [9031, 9055], "body": [{"type": "para", "indent": 8, "text": ["The work item label is set to the ", {"type": "ui", "text": ["Label Expression"]}, " custom expression which is evaluated for each item."], "extent": [9055, 9171]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Label"], "extent": [9171, 9196], "body": [{"type": "para", "indent": 8, "text": ["The work item label is defined in the node\u2019s internal logic."], "extent": [9196, 9266]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemlabel"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Label Expression"], "extent": [9266, 9284], "body": [{"type": "para", "indent": 4, "text": ["When on, this parameter specifies a custom label for work items created by this node. The parameter can be an expression that includes references to work item attributes or built-in properties. For example, ", {"type": "code", "text": ["$OS: @pdg_frame"]}, " will set the label of each work item based on its frame value."], "extent": [9316, 9609]}], "container": true, "attrs": {"id": "pdg_workitemlabelexpr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Work Item Priority"], "extent": [6495, 6515], "body": [{"type": "para", "indent": 4, "text": ["This parameter determines how the current scheduler prioritizes the work items in this node."], "extent": [6546, 6644]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [6644, 6677], "body": [{"type": "para", "indent": 11, "text": ["The work items inherit their priority from their parent items. If a work item has no parent, its priority is set to 0."], "extent": [6677, 6808]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [6808, 6832], "body": [{"type": "para", "indent": 11, "text": ["The work item priority is set to the value of ", {"type": "ui", "text": ["Priority Expression"]}, "."], "extent": [6832, 6915]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Priority"], "extent": [6915, 6943], "body": [{"type": "para", "indent": 7, "text": ["The work item priority is set based on the node\u2019s own internal priority calculations."], "extent": [6943, 7048]}, {"type": "para", "indent": 7, "text": ["This option is only available on the ", {"scheme": "Icon", "value": "MISC/python.svg", "type": "link", "text": "", "fullpath": "/nodes/top/MISC/python.svg"}, " ", {"scheme": "Node", "value": "/nodes/top/pythonprocessor", "type": "link", "text": ["Python Processor TOP"], "fullpath": "/nodes/top/pythonprocessor"}, ", ", {"scheme": "Icon", "value": "TOP/ropfetch.svg", "type": "link", "text": "", "fullpath": "/nodes/top/TOP/ropfetch.svg"}, " ", {"scheme": "Node", "value": "/nodes/top/ropfetch", "type": "link", "text": ["ROP Fetch TOP"], "fullpath": "/nodes/top/ropfetch"}, ", and ROP Output TOP nodes. These nodes define their own prioritization schemes that are implemented in their node logic."], "extent": [7048, 7344]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitempriority"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Priority Expression"], "extent": [7344, 7365], "body": [{"type": "para", "indent": 4, "text": ["This parameter specifies an expression for work item priority. The expression is evaluated for each work item in the node."], "extent": [7400, 7528]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Work Item Priority"]}, " is set to ", {"type": "ui", "text": ["Custom Expression"]}, "."], "extent": [7528, 7627]}], "container": true, "attrs": {"id": "pdg_workitempriorityexpr"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "title": ["ImageMagick"], "summary": ["Provides easy access to ImageMagick functionality such as mass image convert, resize, and image mosaics."], "included": ["/nodes/top/processor_common"]}