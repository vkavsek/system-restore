{"type": "root", "attrs": {"type": "node", "context": "top", "internal": "localscheduler", "icon": "TOP/scheduler", "since": "17.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Local Scheduler"], "extent": [96, 116]}, {"type": "summary", "indent": 0, "text": ["Schedules work items on the local machine."], "extent": [116, 167]}, {"type": "para", "indent": 0, "text": ["This node is the default scheduler that executes work items on your local\nmachine. This node also runs its scheduled work items in parallel."], "extent": [167, 309]}, {"type": "para", "indent": 0, "text": ["This node lets you:"], "extent": [309, 330]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Specify the total number of work items running at once with the ", {"scheme": null, "value": "#maxprocsmenu", "type": "link", "text": ["Total Slots"], "fullpath": "/nodes/top/localscheduler#maxprocsmenu", "fragment": "#maxprocsmenu"}, " and ", {"scheme": null, "value": "#local_CPUs_to_use", "type": "link", "text": ["Slots Per Work Item"], "fullpath": "/nodes/top/localscheduler#local_CPUs_to_use", "fragment": "#local_CPUs_to_use"}, " parameters."], "extent": [330, 481]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Specify the total resources of the scheduler with the ", {"type": "ui", "text": ["Total Slots"]}, " parameter."], "extent": [481, 564]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Set how many work items should run at once with the ", {"type": "ui", "text": ["Slots Per Work Item"]}, " parameter."], "extent": [564, 654]}], "container": true}, {"type": "para", "indent": 0, "text": ["These parameters are ", {"type": "em", "text": ["not"]}, " related to the multi-threading of individual processes. To control the multi-threading of Houdini work items, use the ", {"scheme": null, "value": "#local_houdinimaxthreads", "type": "link", "text": ["Houdini Max Threads"], "fullpath": "/nodes/top/localscheduler#local_houdinimaxthreads", "fragment": "#local_houdinimaxthreads"}, " parameter."], "extent": [654, 858]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [858, 863], "body": [{"type": "para", "indent": 4, "text": ["To execute work items on a farm or on remote machines, use a different scheduler like the ", {"scheme": "Node", "value": "/nodes/top/hqueuescheduler", "type": "link", "text": ["HQueue Scheduler"], "fullpath": "/nodes/top/hqueuescheduler"}, "."], "extent": [863, 1003]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1003, 1015], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Scheduler"], "extent": [1015, 1032], "body": [{"type": "para", "indent": 0, "text": ["Global parameters for all work items using this scheduler."], "extent": [1032, 1093]}, {"level": 3, "type": "sep", "indent": 0, "text": [" Scheduling "], "extent": [1093, 1112], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Total Slots"], "extent": [1112, 1130], "body": [{"type": "para", "indent": 8, "text": ["Specifies the number of available slots for this scheduler to use when executing work items. This also provides some default slot counts based on the detected CPU. A higher slot count means more work items can run at once."], "extent": [1157, 1389]}, {"type": "para", "indent": 8, "text": ["For more information, see ", {"scheme": null, "value": "/tops/schedulers#limits", "type": "link", "text": ["limiting resource usage"], "fullpath": "/tops/schedulers#limits", "fragment": "#limits"}, "."], "extent": [1389, 1475]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Equal to 1/4 of Total CPU Count"], "extent": [1475, 1516], "body": [{"type": "para", "indent": 12, "text": ["Use the number of logical cores divided by four."], "extent": [1516, 1578]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Equal to CPU Count Less One"], "extent": [1578, 1615], "body": [{"type": "para", "indent": 12, "text": ["Use the number of logical cores less 1."], "extent": [1615, 1668]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Custom Slot Count"], "extent": [1668, 1695], "body": [{"type": "para", "indent": 12, "text": ["Use the number specified in the ", {"type": "ui", "text": ["Custom Slot Count"]}, " field."], "extent": [1695, 1769]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Custom Slot Count"], "extent": [1769, 1796], "body": [{"type": "para", "indent": 12, "text": ["The number of slots available to execute work items. A positive number sets the slot count. A negative number sets the slot count as the total logical CPU cores minus the number specified in this field."], "extent": [1823, 2039]}], "container": true, "attrs": {"id": "maxprocs"}}], "container": true}], "container": true, "attrs": {"id": "maxprocsmenu"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Verbose Logging"], "extent": [2039, 2060], "body": [{"type": "para", "indent": 8, "text": ["Print extra debugging information in job output logs."], "extent": [2082, 2145]}], "container": true, "attrs": {"id": "verbose"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Block on Failed Work Items"], "extent": [5438, 5466], "body": [{"type": "para", "indent": 4, "text": ["When on, if there are any failed work items on the scheduler, then the cook is blocked from completing and the PDG graph cook is prevented from ending. This allows you to manually retry your failed work items. You can ", {"type": "em", "text": ["cancel"]}, " the scheduler\u2019s cook when it is blocked by failed work items by pressing the ", {"keys": ["ESC"], "type": "keys", "text": null}, " key, clicking the ", {"type": "ui", "text": ["Cancels the current cook"]}, " button in the ", {"scheme": null, "value": "/tops/ui#tasks_bar", "type": "link", "text": ["TOP tasks bar"], "fullpath": "/tops/ui#tasks_bar", "fragment": "#tasks_bar"}, ", or by using the cancel API method."], "extent": [5496, 5945]}], "container": true, "attrs": {"id": "pdg_waitforfailures"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Paths "], "extent": [2198, 2212], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Working Directory"], "extent": [16, 35], "body": [{"type": "para", "indent": 4, "text": ["Specifies the relative directory where the work generates intermediate files and output. The intermediate files are placed in a subdirectory. For the Local Scheduler or HQueue, typically ", {"type": "code", "text": ["$HIP"]}, " is used. For other schedulers, this should be a relative directory to ", {"type": "code", "text": ["Local Shared Root Path"]}, " and ", {"type": "code", "text": ["Remote Shared Root Path"]}, "; this path is then appended to these root paths."], "extent": [60, 433]}], "container": true, "attrs": {"id": "pdg_workingdir"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Load Item Data From"], "extent": [6185, 6206], "body": [{"type": "para", "indent": 4, "text": ["Determines how jobs processed by this scheduler should load work item attributes and data. "], "extent": [6239, 6336]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Temporary JSON File"], "extent": [6336, 6361], "body": [{"type": "para", "indent": 8, "text": ["The scheduler writes out a ", {"type": "code", "text": [".json"]}, " file for each work item to the PDG temporary file directory. This option is selected by default."], "extent": [6361, 6502]}], "container": true}, {"type": "dt", "indent": 4, "text": ["RPC Message"], "extent": [6502, 6519], "body": [{"type": "para", "indent": 8, "text": ["The scheduler\u2019s running work items request attributes and data over RPC. If the scheduler is a farm scheduler, then the job scripts running on the farm will also request item data from the submitter when creating their out-of-process work item objects. "], "extent": [6519, 6782]}, {"type": "para", "indent": 8, "text": ["This parameter option removes the need to write data files to disk and is useful when your local and remote machines ", {"type": "em", "text": ["do not"]}, " share a file system."], "extent": [6782, 6938]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemdatasource"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Compress Work Item Data"], "extent": [6938, 6963], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG compresses the work item ", {"type": "code", "text": [".json"]}, " files when writing them to disk."], "extent": [6998, 7082]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Load Item Data From"]}, " is set to ", {"type": "ui", "text": ["Temporary JSON File"]}, "."], "extent": [7082, 7184]}], "container": true, "attrs": {"id": "pdg_compressworkitemdata"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Path Mapping"], "extent": [433, 447], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Global"], "extent": [469, 481], "body": [{"type": "para", "indent": 8, "text": ["If the ", {"scheme": null, "value": "/ref/panes/pdgpathmap", "type": "link", "text": ["PDG Path Map"], "fullpath": "/ref/panes/pdgpathmap"}, " exists, then it is applied to file paths."], "extent": [481, 576]}], "container": true}, {"type": "dt", "indent": 4, "text": ["None"], "extent": [576, 586], "body": [{"type": "para", "indent": 8, "text": ["Delocalizes paths using the ", {"type": "code", "text": ["PDG_DIR"]}, " token."], "extent": [586, 640]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_mapmode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Path Map Zone"], "extent": [640, 655], "body": [{"type": "para", "indent": 4, "text": ["When on, specifies a custom mapping zone to apply to all jobs executed by this scheduler. Otherwise, the local platforms are ", {"type": "code", "text": ["LINUX"]}, ", ", {"type": "code", "text": ["MAC"]}, " or ", {"type": "code", "text": ["WIN"]}, "."], "extent": [677, 832]}], "container": true, "attrs": {"id": "pdg_mapzone"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Validate Outputs When Recooking"], "extent": [832, 865], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG validates the output files of the scheduler\u2019s cooked work items when the graph is recooked to see if the files still exist on disk. Work items that are missing output files are then automatically dirtied and cooked again. If any work items are dirtied by parameter changes, then their cache files are also automatically invalidated. ", {"type": "ui", "text": ["Validate Outputs When Recooking"]}, " is ", {"type": "em", "text": ["on"]}, " by default."], "extent": [895, 1302]}], "container": true, "attrs": {"id": "pdg_validateoutputs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Check Expected Outputs on Disk"], "extent": [1302, 1334], "body": [{"type": "para", "indent": 4, "text": ["When on, PDG looks for any unexpected outputs (for example, like outputs that can result from custom output handling internal logic) that were not explicitly reported when the scheduler\u2019s work items finished cooking. This check occurs immediately after the scheduler marks work items as cooked, and expected outputs that were reported normally are not checked. If PDG finds any files that are different from the expected outputs, then they are automatically added as real output files."], "extent": [1369, 1860]}], "container": true, "attrs": {"id": "pdg_checkexpectedoutputs"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 4, "text": [" Temp Directory "], "extent": [2576, 2603], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Location"], "extent": [2603, 2622], "body": [{"type": "para", "indent": 12, "text": ["Determines where the local temporary files are written to. Files that are written to this location are needed for the PDG cook, but are ", {"type": "em", "text": ["not"]}, " typically the end product and can be removed when the cook completes. "], "extent": [2652, 2878]}, {"type": "para", "indent": 12, "text": ["For example, log files and python scripts are some of the files that are usually written during the cook."], "extent": [2878, 2997]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Working Directory"], "extent": [2997, 3028], "body": [{"type": "para", "indent": 16, "text": ["Use ", {"type": "code", "text": ["pdgtemp"]}, " subdirectory specified in the ", {"type": "ui", "text": ["Working Directory"]}, " field."], "extent": [3028, 3118]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Houdini Temp"], "extent": [3118, 3144], "body": [{"type": "para", "indent": 16, "text": ["Use ", {"type": "code", "text": ["pdgtemp"]}, " subdirectory of ", {"type": "code", "text": ["$HOUDINI_TEMP_DIR"]}, "."], "extent": [3144, 3212]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Custom"], "extent": [3212, 3232], "body": [{"type": "para", "indent": 16, "text": ["Use the custom directory specified by in the ", {"type": "ui", "text": ["Custom"]}, " field."], "extent": [3232, 3312]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "tempdirmenu"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Append PID"], "extent": [3312, 3332], "body": [{"type": "para", "indent": 12, "text": ["When on, a subdirectory is added to the location specified by the ", {"type": "ui", "text": ["Location"]}, " parameter and is named after the value of your Houdini session\u2019s PID (Process Identifier). The PID is typically a 3-5 digit number."], "extent": [3367, 3591]}, {"type": "para", "indent": 12, "text": ["This is necessary when multiple sessions of Houdini are cooking TOP graphs at the same time."], "extent": [3591, 3697]}], "container": true, "attrs": {"id": "tempdirappendpid"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Custom"], "extent": [3697, 3713], "body": [{"type": "para", "indent": 12, "text": ["The full path to the custom temporary directory."], "extent": [3745, 3807]}, {"type": "para", "indent": 12, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Directory Location"]}, " is set to ", {"type": "ui", "text": ["Custom"]}, "."], "extent": [3807, 3903]}], "container": true, "attrs": {"id": "tempdircustom"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["RPC Server"], "extent": [3903, 3920], "body": [{"type": "para", "indent": 0, "text": ["Parameters for configuring the behavior of RPC connections from out of process jobs back to a scheduler instance."], "extent": [3920, 4036]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Ignore RPC Errors"], "extent": [7184, 7203], "body": [{"type": "para", "indent": 4, "text": ["Determines whether RPC errors should cause out of process jobs to fail."], "extent": [7233, 7310]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Never"], "extent": [7310, 7321], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors will cause work items to fail."], "extent": [7321, 7383]}], "container": true}, {"type": "dt", "indent": 4, "text": ["When Cooking Batches"], "extent": [7383, 7409], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors are ignored for batch work items, which typically make a per-frame RPC back to PDG to report output files and communicate sub item status. This option prevents long-running simulations from being killed on the farm, if the submitter Houdini session crashes or becomes unresponsive."], "extent": [7409, 7722]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Always"], "extent": [7722, 7734], "body": [{"type": "para", "indent": 8, "text": ["RPC connection errors will never cause a work item to fail. Note that if a work item can\u2019t communicate with the scheduler, it will be unable to report output files, attributes or its cook status back to the PDG graph."], "extent": [7734, 7961]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_rpcignoreerrors"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Connection Timeout"], "extent": [7961, 7981], "body": [{"type": "para", "indent": 4, "text": ["The number of seconds to wait when an out of process jobs makes an RPC connection to the main PDG graph, before assuming the connection failed."], "extent": [8006, 8155]}], "container": true, "attrs": {"id": "pdg_rpctimeout"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Connection Retries"], "extent": [8155, 8175], "body": [{"type": "para", "indent": 4, "text": ["The number of times to retry a failed RPC call made by an out of process job."], "extent": [8200, 8283]}], "container": true, "attrs": {"id": "pdg_rpcretries"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Retry Backoff"], "extent": [8283, 8298], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Connection Retries"]}, " is greater than 0, this parameter determines how much time should be spent between consecutive retries."], "extent": [8323, 8460]}], "container": true, "attrs": {"id": "pdg_rpcbackoff"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Batch Poll Rate"], "extent": [8460, 8477], "body": [{"type": "para", "indent": 4, "text": ["Determines how quickly an out of process batch work item should poll the main Houdini session for dependency status updates, if the batch is configured to cook when it\u2019s first frame of work is ready. This has no impact on other types of batch work items."], "extent": [8500, 8760]}], "container": true, "attrs": {"id": "pdg_rpcbatch"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Release Job Slot When Polling"], "extent": [8760, 8791], "body": [{"type": "para", "indent": 4, "text": ["Determines whether or not the scheduler should decrement the number of active workers when a batch is polling for dependency updates."], "extent": [8816, 8954]}], "container": true, "attrs": {"id": "pdg_rpcrelease"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Job Parms"], "extent": [4303, 4319], "body": [{"type": "para", "indent": 0, "text": ["Job-specific parameters."], "extent": [4319, 4346]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [4346, 4351], "body": [{"type": "para", "indent": 4, "text": ["You can override these parameters per node with the ", {"type": "ui", "text": ["Edit Parameter Interface"]}, ". For more information, see ", {"scheme": null, "value": "/tops/schedulers#jobparms", "type": "link", "text": ["Scheduler Job Parms / Properties"], "fullpath": "/tops/schedulers#jobparms", "fragment": "#jobparms"}, "."], "extent": [4351, 4526]}], "container": true}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Scheduling "], "extent": [4526, 4545], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Single"], "extent": [4545, 4562], "body": [{"type": "para", "indent": 8, "text": ["When on, only one single work item is executed at a time."], "extent": [4589, 4656]}], "container": true, "attrs": {"id": "local_single"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Slots Per Work Item"], "extent": [4656, 4681], "body": [{"type": "para", "indent": 8, "text": ["When on, sets the number of slots consumed by each work item. Work items are only run by the scheduler if at least this number of slots are available."], "extent": [4713, 4873]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [4873, 4887], "body": [{"type": "para", "indent": 12, "text": ["The total number of slots that are available to the scheduler is determined by the ", {"type": "ui", "text": ["Total Slots"]}, " parameter setting."], "extent": [4887, 5018]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 8, "text": ["If some of your tasks consume a lot of computational or memory resources, you can use the ", {"type": "ui", "text": ["Slots Per Work Item"]}, " parameter to change the maximum number of processes that are run in parallel. For example, if there are 8 slots available as determined by ", {"type": "ui", "text": ["Total Slots"]}, ", then a maximum of 8 processes will be executed in parallel. However, if ", {"type": "ui", "text": ["Slots Per Work Item"]}, " is set to 2 on the processor node, then a maximum of 4 processes will be executed in parallel with each task consuming 2 slots worth of resources in the scheduler."], "extent": [5018, 5557]}], "container": true, "attrs": {"id": "local_CPUs_to_use"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 4, "text": [" Minimum Available Memory "], "extent": [5557, 5594], "body": [{"type": "para", "indent": 8, "text": ["Specifies the amount of available memory that is ", {"type": "em", "text": ["required"]}, " to start a job. This allows you to delay a job from starting until a specific amount of memory is available."], "extent": [5627, 5805]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Rule"], "extent": [5805, 5819], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["No Minimum"], "extent": [5857, 5881], "body": [{"type": "para", "indent": 16, "text": ["No check is performed for available memory."], "extent": [5881, 5942]}], "container": true}, {"type": "dt", "indent": 12, "text": ["MB Available"], "extent": [5942, 5968], "body": [{"type": "para", "indent": 16, "text": ["Check for the specified ", {"type": "ui", "text": ["Minimum MB"]}, "."], "extent": [5968, 6033]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Percent Available"], "extent": [6033, 6064], "body": [{"type": "para", "indent": 16, "text": ["Check for the specified ", {"type": "ui", "text": ["Minimum Percent"]}, "."], "extent": [6064, 6130]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "local_useminfreemem"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Minimum MB"], "extent": [6130, 6150], "body": [{"type": "para", "indent": 12, "text": ["Sets the minimum amount of available memory in Megabytes (MBs). Available memory is the amount of memory that can be used by a process without going into swap."], "extent": [6185, 6358]}, {"type": "para", "indent": 12, "text": ["The parameter is only available when ", {"type": "ui", "text": ["Rule"]}, " is set to ", {"type": "ui", "text": ["MB Available"]}, "."], "extent": [6358, 6445]}], "container": true, "attrs": {"id": "local_minfreemem"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Minimum Percent"], "extent": [6445, 6470], "body": [{"type": "para", "indent": 12, "text": ["Sets the minimum amount of available memory as a percentage of the system\u2019s total memory. Available memory is the amount of memory that can be used by a process without going into swap."], "extent": [6509, 6708]}, {"type": "para", "indent": 12, "text": ["The parameter is only available when ", {"type": "ui", "text": ["Rule"]}, " is set to ", {"type": "ui", "text": ["Percent Available"]}, "."], "extent": [6708, 6800]}], "container": true, "attrs": {"id": "local_minfreemempct:"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "minimumavailmemory"}}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Tasks "], "extent": [6800, 6814], "body": [{"type": "para", "indent": 4, "text": ["When a work item process terminates with a non-zero exit code, it is marked as failed by default. These parameters change that behavior."], "extent": [6814, 6957]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["On Task Failure"], "extent": [6957, 6978], "body": [{"type": "para", "indent": 8, "text": ["Determines what happens when a work item fails."], "extent": [7009, 7066]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Report Error"], "extent": [7066, 7088], "body": [{"type": "para", "indent": 12, "text": ["The work item fails and an error message is added to the node."], "extent": [7088, 7164]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Report Warning"], "extent": [7164, 7188], "body": [{"type": "para", "indent": 12, "text": ["The work item succeeds and a warning message is added to the node."], "extent": [7188, 7268]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Retry Task"], "extent": [7268, 7288], "body": [{"type": "para", "indent": 12, "text": ["The work item restarts immediately, according to the ", {"type": "ui", "text": ["Maximum Retries"]}, " and ", {"type": "ui", "text": ["Retry Count Attribute"]}, " parameter settings."], "extent": [7288, 7424]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Ignore"], "extent": [7424, 7440], "body": [{"type": "para", "indent": 12, "text": ["The work item succeeds and no message is issued."], "extent": [7440, 7502]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "local_echandleby"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Handle All Non Zero"], "extent": [7502, 7527], "body": [{"type": "para", "indent": 8, "text": ["When off, lets you specify a particular exit code with the ", {"type": "ui", "text": ["Exit Code"]}, " field. All other non-zero exit codes are regarded as failures."], "extent": [7559, 7704]}], "container": true, "attrs": {"id": "local_echandleall"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Exit Code"], "extent": [7704, 7719], "body": [{"type": "para", "indent": 8, "text": ["Specifies the exit code that is handled by the ", {"type": "ui", "text": ["On Task Failure"]}, " parameter setting. All other non-zero exit codes are treated as failures."], "extent": [7752, 7902]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Handle All Non Zero"]}, " is ", {"type": "em", "text": ["off"]}, "."], "extent": [7902, 7983]}], "container": true, "attrs": {"id": "local_eccustomcode"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Maximum Retries"], "extent": [7983, 8004], "body": [{"type": "para", "indent": 8, "text": ["Sets the maximum number of times the work item will be restarted."], "extent": [8039, 8114]}], "container": true, "attrs": {"id": "local_maximumretries"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Retry Count Attribute"], "extent": [8114, 8141], "body": [{"type": "para", "indent": 8, "text": ["When on, adds an ", {"type": "code", "text": ["int"]}, " attribute set to the number of times the task was restarted."], "extent": [8175, 8268]}], "container": true, "attrs": {"id": "local_failcountattr"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Maximum Run Time"], "extent": [8268, 8290], "body": [{"type": "para", "indent": 8, "text": ["When on, this parameter determines the maximum time in seconds that a work item can run. When the time limit is exceeded, the work item\u2019s process is terminated."], "extent": [8318, 8488]}], "container": true, "attrs": {"id": "local_maxtime"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["On Task Timeout"], "extent": [8488, 8509], "body": [{"type": "para", "indent": 8, "text": ["Determines what status to set on the work items that timed out."], "extent": [8543, 8616]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Maximum Run Time"]}, " is enabled."], "extent": [8616, 8696]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Mark as Failed"], "extent": [8696, 8721], "body": [{"type": "para", "indent": 12, "text": ["Sets the work item\u2019s status to ", {"type": "em", "text": ["Failed"]}, "."], "extent": [8721, 8775]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Mark as Succeeded"], "extent": [8775, 8803], "body": [{"type": "para", "indent": 12, "text": ["Sets the work item\u2019s status to ", {"type": "em", "text": ["Succeeded"]}, "."], "extent": [8803, 8868]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "local_handletimeout"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Task Environment "], "extent": [8868, 8893], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Houdini Max Threads"], "extent": [8893, 8919], "body": [{"type": "para", "indent": 8, "text": ["When on, sets the maximum number of threads each work item can use. This also sets the ", {"type": "code", "text": ["HOUDINI_MAXTHREADS"]}, " environment value which is used by Houdini-based programs like Mantra, Karma, Hython, and HBatch."], "extent": [8957, 9172]}], "container": true, "attrs": {"id": "local_houdinimaxthreads"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Requires GUI Window"], "extent": [9172, 9197], "body": [{"type": "para", "indent": 8, "text": ["Normally, processes are started such that they do ", {"type": "em", "text": ["not"]}, " pop up command windows on the desktop when they run. However, some ", {"type": "strong", "text": ["Windows"]}, " applications require a GUI window."], "extent": [9232, 9409]}, {"type": "platform_group", "body": [{"ext": null, "type": "platform", "indent": 8, "text": ["Windows"], "role": "item", "extent": [9409, 9435], "body": [{"type": "para", "indent": 12, "text": ["When on, your work items can run GUI Applications in pop-up windows."], "extent": [9435, 9517]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "local_requireswindow"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Skip Loading Packages"], "extent": [9517, 9544], "body": [{"type": "para", "indent": 11, "text": ["When on, packages are not loaded into processes created by the local scheduler. Processes spawned by the local scheduler inherit the environment of the main Houdini session and usually do not need to load in Houdini packages again."], "extent": [9580, 9824]}], "container": true, "attrs": {"id": "local_skippackages"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Unset Variables"], "extent": [9824, 9845], "body": [{"type": "para", "indent": 8, "text": ["Specifies a space-separated list of environment variables that should be unset in or removed from the scheduler\u2019s task environment."], "extent": [9874, 10015]}], "container": true, "attrs": {"id": "local_envunset"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Environment Variables"], "extent": [10015, 10042], "body": [{"type": "para", "indent": 0, "text": ["Additional work item environment variables can be specified here.  These will be added to the job\u2019s environment.  If the value of the variable is empty, it will be removed from the job\u2019s environment."], "extent": [16, 217]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Name"], "extent": [217, 223], "body": [{"type": "para", "indent": 4, "text": ["Name of the work item environment variable."], "extent": [248, 301]}], "container": true, "attrs": {"id": "local_envname#"}}, {"type": "dt", "indent": 0, "text": ["Value"], "extent": [301, 308], "body": [{"type": "para", "indent": 4, "text": ["Value of the work item environment variable."], "extent": [334, 383]}], "container": true, "attrs": {"id": "local_envvalue#"}}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "container": true}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [10099, 10108], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/pythonscheduler", "type": "link", "text": "", "fullpath": "/nodes/top/pythonscheduler"}], "extent": [10108, 10137]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/hqueuescheduler", "type": "link", "text": "", "fullpath": "/nodes/top/hqueuescheduler"}], "extent": [10137, 10166]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/tractorscheduler", "type": "link", "text": "", "fullpath": "/nodes/top/tractorscheduler"}], "extent": [10166, 10196]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/deadlinescheduler", "type": "link", "text": "", "fullpath": "/nodes/top/deadlinescheduler"}], "extent": [10196, 10228]}], "container": true}], "text": "Related"}], "title": ["Local Scheduler"], "summary": ["Schedules work items on the local machine."], "included": ["/nodes/top/_scheduler_common", "/nodes/top/_scheduler_task_env_common"]}