{"type": "root", "attrs": {"type": "node", "context": "vop", "internal": "block_end", "icon": "SOP/block_end", "since": "14.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Block End"], "extent": [82, 96]}, {"type": "summary", "indent": 0, "text": ["Marks the end of a code block."], "extent": [96, 135]}, {"type": "para", "indent": 0, "text": ["The Block End node is a generic block end node.  It can\nbe used with the Block Begin nodes to build loops and conditional\nif blocks."], "extent": [135, 269]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [269, 275], "body": [{"type": "para", "indent": 4, "text": ["The block nodes are usually implicitly put down with the higher\n    level For Loop, For-Each Loop, While Loop tools."], "extent": [275, 398]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [398, 410], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Paired Block"], "extent": [410, 428], "body": [{"type": "para", "indent": 8, "text": ["A path to the paired block forming a begin/end block pair.\n        Both nodes must be in the same network.  Nodes wired between\n        the pair are enclosed in a convex hull and are placed inside\n        a code block.  Depending on the types of the begin and end\n        blocks, different control flow can be done on the block."], "extent": [428, 766]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Enclose Inputs"], "extent": [766, 786], "body": [{"type": "para", "indent": 8, "text": ["There are two ways to determine which input nodes should\n        be put inside of the code block.  If this is not set, they\n        are only enclosed if they depend on the outputs of the paired\n        begin block.  If this is set, any node that can be moved\n        into the block is so moved."], "extent": [786, 1090]}, {"type": "para", "indent": 8, "text": ["It is advantageous with if-blocks to move as many nodes inside\n        as possible as this avoids executing them if the condition is false."], "extent": [1090, 1239]}, {"type": "para", "indent": 8, "text": ["It is advantageous with loop-blocks to move as many nodes\n        outside as possible to avoid having execute them more than once\n        when looping."], "extent": [1239, 1400]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Number of Outputs"], "extent": [1400, 1423], "body": [{"type": "para", "indent": 8, "text": ["By default an output is generated for each input.  This allows\n        the specification of extra outputs.  If no input wire is present,\n        the value is assumed to be ", {"type": "code", "text": ["0"]}, " and the type must be specified."], "extent": [1423, 1640]}, {"type": "para", "indent": 8, "text": ["The outputs of an End block are paired with the outputs of the\n        Begin block.  If no names are present, the pairing is done in\n        order.  If names are present, they are paired by name."], "extent": [1640, 1845]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [1845, 1854], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/block_begin", "type": "link", "text": "", "fullpath": "/nodes/vop/block_begin"}], "extent": [1854, 1883]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/block_begin_if", "type": "link", "text": "", "fullpath": "/nodes/vop/block_begin_if"}], "extent": [1883, 1915]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/block_begin_for", "type": "link", "text": "", "fullpath": "/nodes/vop/block_begin_for"}], "extent": [1915, 1948]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/block_begin_foreach", "type": "link", "text": "", "fullpath": "/nodes/vop/block_begin_foreach"}], "extent": [1948, 1985]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/block_end", "type": "link", "text": "", "fullpath": "/nodes/vop/block_end"}], "extent": [1985, 2012]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/block_end_while", "type": "link", "text": "", "fullpath": "/nodes/vop/block_end_while"}], "extent": [2012, 2045]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/block_end_breakif", "type": "link", "text": "", "fullpath": "/nodes/vop/block_end_breakif"}], "extent": [2045, 2082]}], "container": true}], "text": "Related"}], "title": ["Block End"], "summary": ["Marks the end of a code block."]}