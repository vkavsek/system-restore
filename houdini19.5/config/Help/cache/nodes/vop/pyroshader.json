{"type": "root", "attrs": {"type": "node", "context": "vop", "internal": "pyro", "icon": "SHELF/fireball", "since": "16.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Pyro Shader - Classic"], "extent": [78, 104]}, {"type": "summary", "indent": 0, "text": ["Flexible, production-quality fire and smoke shader."], "extent": [104, 164]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [164, 179], "body": [{"type": "para", "indent": 0, "text": ["This shader can be used to create realistic renders of smoke, fire and explosion simulations or procedurally generated volumes. It is used by many of the tools on the ", {"type": "ui", "text": ["Pyro FX"]}, " shelf."], "extent": [179, 367]}, {"type": "para", "indent": 0, "text": ["This shader relies on a set of volumes to do it\u2019s work. Their names are set on the ", {"type": "ui", "text": ["Smoke Field"]}, ", ", {"type": "ui", "text": ["Fire Intensity Field"]}, " and ", {"type": "ui", "text": ["Fire Temperature Field"]}, " tabs. These also provide additional, fine-grained control over each a volume."], "extent": [367, 602]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["The ", {"type": "ui", "text": ["Smoke Field"]}, " provides the smoke density."], "extent": [602, 653]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The ", {"type": "ui", "text": ["Fire Intensity Field"]}, " controls the intensity of light emitted by the fire."], "extent": [653, 738]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The ", {"type": "ui", "text": ["Fire Temperature Field"]}, " is converted to the fire\u2019s color."], "extent": [738, 806]}], "container": true}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [806, 818], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["General"], "extent": [818, 833], "body": [{"type": "para", "indent": 0, "text": ["Provides a simple, compact interface for defining the overall look."], "extent": [833, 903]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Smoke"], "extent": [903, 917], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Density Scale"], "extent": [917, 933], "body": [{"type": "para", "indent": 4, "text": ["Controls the overall density. This is multiplied with the ", {"scheme": null, "value": "#smokefield", "type": "link", "text": ["Smoke Field"], "fullpath": "/nodes/vop/pyroshader#smokefield", "fragment": "#smokefield"}, "'s value."], "extent": [957, 1055]}, {"type": "para", "indent": 4, "text": [{"type": "em", "text": ["The figure below shows the effect of a relative change by various factors:"]}], "extent": [1055, 1137]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/shop/pyro_s_densityscale.png", "type": "img", "text": ""}], "extent": [1137, 1193]}], "container": true, "attrs": {"id": "s_densityscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Smoke Brightness"], "extent": [1193, 1211], "body": [{"type": "para", "indent": 4, "text": ["Controls the overall smoke brightness. This is multiplied with the ", {"type": "ui", "text": ["Smoke Color"]}, " and the ", {"type": "ui", "text": ["Cd"]}, " volume, if ", {"type": "ui", "text": ["Tint Smoke Color with Cd"]}, " is enabled."], "extent": [1226, 1381]}, {"type": "para", "indent": 4, "text": [{"type": "em", "text": ["The figure below shows the effect of a relative change by various factors:"]}], "extent": [1381, 1463]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/shop/pyro_s_int.png", "type": "img", "text": ""}], "extent": [1463, 1510]}], "container": true, "attrs": {"id": "s_int"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Smoke Color"], "extent": [1510, 1523], "body": [{"type": "para", "indent": 4, "text": ["Controls the overall smoke color."], "extent": [1540, 1579]}], "container": true, "attrs": {"id": "s_color"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tint Smoke Color with Cd"], "extent": [1579, 1605], "body": [{"type": "para", "indent": 4, "text": ["Tint the smoke\u2019s color using a color volume."], "extent": [1627, 1677]}, {"type": "para", "indent": 4, "text": ["This can either be a set of 3 volumes named ", {"type": "ui", "text": ["Cd.x"]}, ", ", {"type": "ui", "text": ["Cd.y"]}, " and ", {"type": "ui", "text": ["Cd.z"]}, " or a single ", {"type": "ui", "text": ["VDB Vector Volume"]}, " named ", {"type": "ui", "text": ["Cd"]}, "."], "extent": [1677, 1806]}], "container": true, "attrs": {"id": "s_tintwithcd"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scattering Phase"], "extent": [1806, 1824], "body": [{"type": "para", "indent": 4, "text": ["Controls the direction in which light entering the volume is scattered. At the default of ", {"type": "code", "text": ["0"]}, ", light scatters evenly in all directions (isotropic scattering). Positive values up to ", {"type": "code", "text": ["1"]}, " scatter more and more in the same direction as the incoming light, Negative values down to ", {"type": "code", "text": ["-1"]}, " scatter backwards."], "extent": [1845, 2150]}, {"type": "para", "indent": 4, "text": ["In reality, this effect depends on type of particles suspended in the volume."], "extent": [2150, 2233]}, {"type": "para", "indent": 4, "text": [{"type": "em", "text": ["The figure below shows the effect of various values on smoke lit from behind by a green light:"]}, "\n    ", {"scheme": "Image", "value": "/images/nodes/shop/pyro_shade_phase.png", "type": "img", "text": ""}], "extent": [2233, 2387]}], "container": true, "attrs": {"id": "shade_phase"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Fire"], "extent": [2387, 2400], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Emission"], "extent": [2400, 2418], "body": [{"type": "para", "indent": 4, "text": ["When disabled, no light will be emitted by the rendered object."], "extent": [2437, 2506]}], "container": true, "attrs": {"id": "fi_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Intensity Scale"], "extent": [2506, 2523], "body": [{"type": "para", "indent": 4, "text": ["Scales the fire\u2019s emission intensity. This is multiplied with ", {"scheme": null, "value": "#fireintensityfield", "type": "link", "text": ["Fire Intensity Field"], "fullpath": "/nodes/vop/pyroshader#fireintensityfield", "fragment": "#fireintensityfield"}, "'s value"], "extent": [2539, 2657]}, {"type": "para", "indent": 4, "text": [{"type": "em", "text": ["The figure below shows the effect of a relative change by various factors:"]}], "extent": [2657, 2739]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/shop/pyro_fi_int.png", "type": "img", "text": ""}], "extent": [2739, 2787]}], "container": true, "attrs": {"id": "fi_int"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temperature Scale"], "extent": [2787, 2806], "body": [{"type": "para", "indent": 4, "text": ["Scales the fire\u2019s temperature. This is multiplied with ", {"scheme": null, "value": "#firetemperaturefield", "type": "link", "text": ["Fire Temperature Field"], "fullpath": "/nodes/vop/pyroshader#firetemperaturefield", "fragment": "#firetemperaturefield"}, "'s value."], "extent": [2822, 2938]}, {"type": "para", "indent": 4, "text": ["The fire\u2019s color depends on it\u2019s temperature."], "extent": [2938, 2989]}, {"type": "para", "indent": 4, "text": [{"type": "em", "text": ["The figure below shows the effect of a relative change by various factors:"]}], "extent": [2989, 3071]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/shop/pyro_fc_int.png", "type": "img", "text": ""}], "extent": [3071, 3119]}], "container": true, "attrs": {"id": "fc_int"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temp>Color Mapping"], "extent": [3119, 3139], "body": [{"type": "para", "indent": 4, "text": ["The method to use for mapping temperature to a color."], "extent": [3161, 3220]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Constant"], "extent": [3220, 3234], "body": [{"type": "para", "indent": 8, "text": ["Ignore temperature and set a global color."], "extent": [3234, 3285]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Ramp"], "extent": [3285, 3295], "body": [{"type": "para", "indent": 8, "text": ["Map temperature to color using a color ramp."], "extent": [3295, 3348]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Physical (Black-Body)"], "extent": [3348, 3375], "body": [{"type": "para", "indent": 8, "text": ["Converts physical color temperatures to RGB color values and intensities, with some additional artistic controls."], "extent": [3375, 3498]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fc_colormode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constant Color"], "extent": [3498, 3514], "body": [{"type": "para", "indent": 4, "text": ["Sets the fire color uniformly, ignoring temperature."], "extent": [3540, 3598]}], "container": true, "attrs": {"id": "fc_constantcolor"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Input Range"], "extent": [3598, 3611], "body": [{"type": "para", "indent": 4, "text": ["Sets the range of temperatures that map to the ramp."], "extent": [3631, 3689]}], "container": true, "attrs": {"id": "fc_rampmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ramp"], "extent": [3689, 3695], "body": [{"type": "para", "indent": 4, "text": ["The colors within the ", {"type": "ui", "text": ["Input Range"]}, " are mapped to the colors set on this ramp."], "extent": [3717, 3803]}], "container": true, "attrs": {"id": "fc_colorramp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temperature at 0 (K)"], "extent": [3803, 3825], "body": [{"type": "para", "indent": 4, "text": ["This sets the color temperature corresponding to a temperature field value of ", {"type": "code", "text": ["0.0"]}, "."], "extent": [3845, 3935]}], "container": true, "attrs": {"id": "fc_bbtemp0"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temperature at 1 (K)"], "extent": [3935, 3957], "body": [{"type": "para", "indent": 4, "text": ["This sets the color temperature corresponding to a temperature field value of ", {"type": "code", "text": ["1.0"]}, "."], "extent": [3976, 4066]}], "container": true, "attrs": {"id": "fc_bbtemp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Adaptation"], "extent": [4066, 4078], "body": [{"type": "para", "indent": 4, "text": ["Manipulates the low end of the generated intensity."], "extent": [4098, 4155]}], "container": true, "attrs": {"id": "fc_bbadapt"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Burn"], "extent": [4155, 4161], "body": [{"type": "para", "indent": 4, "text": ["Manipulates the high end of the generated intensity."], "extent": [4180, 4238]}], "container": true, "attrs": {"id": "fc_bbburn"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Shadows"], "extent": [4238, 4254], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Shadow Density"], "extent": [4254, 4271], "body": [{"type": "para", "indent": 4, "text": ["Controls the overall density of shadow\u2019s cast by the smoke."], "extent": [4292, 4357]}, {"type": "para", "indent": 4, "text": [{"type": "em", "text": ["The figure below shows the of effect various values:"]}], "extent": [4357, 4417]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/shop/pyro_s_shadowint.png", "type": "img", "text": ""}], "extent": [4417, 4470]}], "container": true, "attrs": {"id": "s_shadowint"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shadow Color"], "extent": [4470, 4484], "body": [{"type": "para", "indent": 4, "text": ["The color of shadows cast by the smoke."], "extent": [4505, 4550]}], "container": true, "attrs": {"id": "s_shadowclr"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Filtering"], "extent": [4550, 4568], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Filter"], "extent": [4568, 4577], "body": [{"type": "para", "indent": 4, "text": ["The type of filter to use for field shape controls and noise."], "extent": [4592, 4659]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Point"], "extent": [4659, 4670], "body": [{"type": "para", "indent": 8, "text": ["Takes a single sample, no filtering."], "extent": [4670, 4715]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Box"], "extent": [4715, 4724], "body": [{"type": "para", "indent": 8, "text": ["Applies a box filter."], "extent": [4724, 4754]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Gaussian"], "extent": [4754, 4768], "body": [{"type": "para", "indent": 8, "text": ["Applies a gaussian filter. Produces the smoothest results."], "extent": [4768, 4836]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "ftype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale"], "extent": [4836, 4843], "body": [{"type": "para", "indent": 4, "text": ["A scale on the width of the filter."], "extent": [4859, 4900]}], "container": true, "attrs": {"id": "fscale"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": "smokefield", "container": true, "type": "h", "indent": 0, "text": ["Smoke Field"], "extent": [4900, 4931], "body": [{"type": "para", "indent": 0, "text": ["The controls on this tab allow you to change the look of the ", {"type": "ui", "text": ["Smoke Field"]}, ". The operations are performed in the order they're listed in."], "extent": [4931, 5072]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Density Volume"], "extent": [5072, 5088], "body": [{"type": "para", "indent": 4, "text": ["The name of the smoke density volume to be rendered."], "extent": [5110, 5168]}], "container": true, "attrs": {"id": "s_volumename"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Shape"], "extent": [5168, 5182], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fit to Range (Unclamped)"], "extent": [5182, 5208], "body": [{"type": "para", "indent": 4, "text": ["Maps a range of input values to a different output range."], "extent": [5229, 5292]}], "container": true, "attrs": {"id": "s_fitenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Source Range"], "extent": [5292, 5306], "body": [{"type": "para", "indent": 4, "text": ["The range of input values."], "extent": [5327, 5359]}], "container": true, "attrs": {"id": "s_fitsrcmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Target Range"], "extent": [5359, 5373], "body": [{"type": "para", "indent": 4, "text": ["The range of output values."], "extent": [5395, 5428]}], "container": true, "attrs": {"id": "s_fitdestmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Lookup Ramp"], "extent": [5428, 5445], "body": [{"type": "para", "indent": 4, "text": ["Maps input values to the ramp values, giving find-grained control over the shape of the field."], "extent": [5467, 5567]}, {"type": "para", "indent": 4, "text": ["Use ", {"type": "ui", "text": ["Fit to Range"]}, " to controls which range of values is used to look up the ramp."], "extent": [5567, 5656]}], "container": true, "attrs": {"id": "s_rampenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ramp Boundaries"], "extent": [5656, 5673], "body": [{"type": "para", "indent": 4, "text": ["How to compute the result for inputs below/above the ramp\u2019s range."], "extent": [1768, 1844]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Hold"], "extent": [1844, 1854], "body": [{"type": "para", "indent": 8, "text": ["Returns the value at the nearest end of the ramp (for example, if the\n        ramp\u2019s range is ", {"type": "code", "text": ["0-1"]}, ", and the input is ", {"type": "code", "text": ["-10"]}, ", it will return the\n        ramp value for ", {"type": "code", "text": ["0"]}, ")."], "extent": [1854, 2040]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cycle"], "extent": [2040, 2051], "body": [{"type": "para", "indent": 8, "text": ["Repeats the ramp continuously outside the range."], "extent": [2051, 2117]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/rampfilter_cycle.jpg", "type": "img", "text": ""}], "extent": [2117, 2177]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cycle-Accumulate"], "extent": [2177, 2199], "body": [{"type": "para", "indent": 8, "text": ["Like ", {"type": "q", "text": ["Cycle"]}, ", but starts each cycle relative to the end value \n        of the previous cycle."], "extent": [2199, 2310]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/rampfilter_cycle_accumulate.jpg", "type": "img", "text": ""}], "extent": [2310, 2381]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Mirror"], "extent": [2381, 2393], "body": [{"type": "para", "indent": 8, "text": ["Cycles before/after the range are mirror images (reversed) of\n        one another. The first cycle is not mirrored."], "extent": [2393, 2526]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/rampfilter_mirror.jpg", "type": "img", "text": ""}], "extent": [2526, 2587]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Slope"], "extent": [2587, 2598], "body": [{"type": "para", "indent": 8, "text": ["Extends a line using the slope at the beginning/end of the ramp \n        range."], "extent": [2598, 2695]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/rampfilter_slope.jpg", "type": "img", "text": ""}], "extent": [2695, 2751]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "s_rampextl"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ramp"], "extent": [5738, 5744], "body": [{"type": "para", "indent": 4, "text": ["The lookup ramp."], "extent": [5760, 5782]}], "container": true, "attrs": {"id": "s_ramp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Contour"], "extent": [5782, 5791], "body": [{"type": "para", "indent": 4, "text": ["Increases or decreases contrast for values at the ", {"type": "em", "text": ["bottom"]}, " of the\n    input range. This is sometimes useful to control feathering in volume\n    fields."], "extent": [5816, 5973]}], "container": true, "attrs": {"id": "s_contourenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soft Clip"], "extent": [5973, 5984], "body": [{"type": "para", "indent": 4, "text": ["Increases or decreases contrast for values at the ", {"type": "em", "text": ["top"]}, " of the\n    input range. This is sometimes useful to control feathering in volume\n    fields."], "extent": [6007, 6161]}], "container": true, "attrs": {"id": "s_sclipenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clamp at Lower Limit"], "extent": [6161, 6183], "body": [{"type": "para", "indent": 4, "text": ["Clamp values to a lower limit."], "extent": [6209, 6245]}], "container": true, "attrs": {"id": "s_lowlimitenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clamp at Upper Limit"], "extent": [6245, 6267], "body": [{"type": "para", "indent": 4, "text": ["Clamp values to an upper limit."], "extent": [6294, 6331]}], "container": true, "attrs": {"id": "s_highlimitenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Final Scale"], "extent": [6331, 6344], "body": [{"type": "para", "indent": 4, "text": ["A multiplier on the final value."], "extent": [6359, 6397]}], "container": true, "attrs": {"id": "s_amp"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Noise"], "extent": [6397, 6411], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable"], "extent": [6411, 6420], "body": [{"type": "para", "indent": 4, "text": ["Whether to add any noise to this field."], "extent": [6443, 6488]}], "container": true, "attrs": {"id": "s_noiseenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Mode"], "extent": [6488, 6494], "body": [{"type": "para", "indent": 4, "text": ["Controls how the noise is applied to this field."], "extent": [6515, 6569]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Offset (Field + Noise)"], "extent": [6569, 6597], "body": [{"type": "para", "indent": 8, "text": ["The noise value is added to the field value."], "extent": [6597, 6651]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale (Field + Noise)"], "extent": [6651, 6678], "body": [{"type": "para", "indent": 8, "text": ["The field value is multiplied with the noise value."], "extent": [6678, 6739]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "s_noisemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [6739, 6745], "body": [{"type": "para", "indent": 4, "text": ["The type of noise to generate. Different algorithms give noise with different characteristics."], "extent": [3119, 3223]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Fast"], "extent": [3223, 3233], "body": [{"type": "para", "indent": 8, "text": ["The default. A faster and more interesting variant of Perlin noise."], "extent": [3233, 3314]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_simplex.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_simplex.jpg"}], "extent": [3314, 3368]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sparse Convolution"], "extent": [3368, 3392], "body": [{"type": "para", "indent": 8, "text": ["Sparse Convolution noise is similar to Worley noise. Does not have artifacts at grid points."], "extent": [3392, 3498]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_sparse.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_sparse.jpg"}], "extent": [3498, 3551]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Alligator"], "extent": [3551, 3566], "body": [{"type": "para", "indent": 8, "text": ["Produces a bumpy output. Named for its alleged resemblance to alligator skin."], "extent": [3566, 3657]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_alligator.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_alligator.jpg"}], "extent": [3657, 3717]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin"], "extent": [3717, 3729], "body": [{"type": "para", "indent": 8, "text": ["A noise where the visual details are the same size. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Perlin_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [3729, 3830]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_perlin.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_perlin.jpg"}, "\n        ", {"scheme": "Image", "value": "/images/nodes/vop/unoise_periodic_perlin.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_periodic_perlin.jpg"}], "extent": [3830, 3944]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin Flow"], "extent": [3944, 3961], "body": [{"type": "para", "indent": 8, "text": ["A noise that\u2019s stable over time, like a rotated Perlin noise, useful to create noise that seems to swirl and flow smoothly across time. Use the ", {"type": "ui", "text": ["Flow rotation"]}, " parameter below to control the rotation."], "extent": [3961, 4177]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4177, 4201], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_flow.mp4"}}, {"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4248, 4264], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_periodic_flow.mp4"}}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Simplex"], "extent": [4324, 4337], "body": [{"type": "para", "indent": 8, "text": ["A noise similar to Perlin but the noise lattice is on a tetrahedral mesh rather than a grid.  This can avoid the grid patterns often visible in Perlin noise."], "extent": [4337, 4504]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F1"], "extent": [4504, 4528], "body": [{"type": "para", "indent": 8, "text": ["Produces cellular features similar to plant cells, ocean waves, honeycombs, cratered landscapes, and so on. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Worley_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [4528, 4685]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f1.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_worley_f1.jpg"}], "extent": [4685, 4745]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F2-F1"], "extent": [4745, 4772], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley noise that produces blunted and cornered features."], "extent": [4772, 4856]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f2.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_worley_f2.jpg"}], "extent": [4856, 4916]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F1"], "extent": [4916, 4943], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [4943, 5071]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F2-F1"], "extent": [5071, 5101], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [5101, 5232]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F1"], "extent": [5232, 5259], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5259, 5387]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F2-F1"], "extent": [5387, 5417], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5417, 5544]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "s_noisebasis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frequency"], "extent": [6816, 6827], "body": [{"type": "para", "indent": 4, "text": ["The frequency of the noise. Higher values give smaller scaled details in the noise."], "extent": [5574, 5667]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [5667, 5683], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_frequency.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "s_noisefreq"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [6896, 6904], "body": [{"type": "para", "indent": 4, "text": ["The offset of the input into the noise function. If you visualize the noise as a 2D graph or 3D height field, this has the effect of ", {"type": "q", "text": ["panning"]}, " across the space of possible noise outputs. If you have the general noise effect you want but just want to get a different set of values for a different look, try changing the offset."], "extent": [5760, 6096]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [6096, 6112], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_offset.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "s_noiseoffset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Period"], "extent": [6977, 6985], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Periodic"]}, " is on, the multiple of the input range before the noise pattern repeats.  "], "extent": [6320, 6422]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [6422, 6432], "body": [{"type": "para", "indent": 8, "text": ["If Lacunarity is not 2, successive octaves will not have matching periods so a periodic noise won\u2019t be built."], "extent": [6432, 6555]}], "container": true}], "container": true, "role": "item_group"}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [6555, 6571], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_period.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "s_noiseperiod"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Fractal"], "extent": [7058, 7076], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fractal Type"], "extent": [7076, 7091], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [6777, 6787], "body": [{"type": "para", "indent": 8, "text": ["Does not add any additional noise on top of the basic noise."], "extent": [6787, 6865]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_none.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_fractal_none.jpg"}], "extent": [6865, 6928]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Standard"], "extent": [6928, 6942], "body": [{"type": "para", "indent": 8, "text": ["Adds pseudo-random noise on top of the basic output."], "extent": [6942, 7012]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_standard.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_fractal_standard.jpg"}], "extent": [7012, 7079]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Terrain"], "extent": [7079, 7092], "body": [{"type": "para", "indent": 8, "text": ["Adds noise like ", {"type": "q", "text": ["Standard"]}, " but dampens the noise in the valleys, which can be useful for generating mountainous terrain."], "extent": [7092, 7230]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_terrain.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_fractal_terrain.jpg"}], "extent": [7230, 7296]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hybrid"], "extent": [7296, 7308], "body": [{"type": "para", "indent": 8, "text": ["Like terrain, but with more sharpness in the valleys."], "extent": [7308, 7371]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "s_noisefractal"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Octaves"], "extent": [7166, 7179], "body": [{"type": "para", "indent": 4, "text": ["The number of iterations of distortion to add to the output of the basic noise. The more iterations you add, the more ", {"type": "q", "text": ["detailed"]}, " the output. Note that the output may have fewer octaves than this parameter (that is, increasing the parameter will eventually stop adding detail), because the node eventually stops when there\u2019s no more room to add more detail in the output."], "extent": [7479, 7855]}], "container": true, "attrs": {"id": "s_noiseoct"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lacunarity"], "extent": [7246, 7258], "body": [{"type": "para", "indent": 4, "text": ["The frequency increment between iterations of fractal noise added to the basic output. Note that you can use a negative value."], "extent": [7885, 8021]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8021, 8037], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lacunarity.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "s_noiselac"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Roughness"], "extent": [7325, 7336], "body": [{"type": "para", "indent": 4, "text": ["The scale increment between iterations of fractal noise added to the basic output. The higher the value the larger the ", {"type": "q", "text": ["jaggies"]}, " added to the output. You can use a negative value for roughness."], "extent": [8117, 8320]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8320, 8336], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_roughness.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "s_noiserough"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 4, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Warping"], "extent": [7407, 7425], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Lattice Warp"], "extent": [7425, 7447], "body": [{"type": "para", "indent": 4, "text": ["Adds ", {"type": "q", "text": ["stringiness"]}, " or ", {"type": "q", "text": ["wiriness"]}, " to standard noise."], "extent": [8562, 8619]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8619, 8631], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lattice_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "s_noisedolwarp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Accumulate Lattice Warp"], "extent": [7522, 7547], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Lattice Warp"]}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise. When used in images, this can add interesting smudgy effects, and interesting landmarks when used for terrain."], "extent": [8727, 8950]}], "container": true, "attrs": {"id": "s_noiseaccuml"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Freq"], "extent": [7620, 7626], "body": [], "container": true, "attrs": {"id": "s_noisedispfreq"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Gradient Warp"], "extent": [7652, 7674], "body": [{"type": "para", "indent": 4, "text": ["Enables a slider to widen the peaks or valleys of the noise output."], "extent": [8994, 9071]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [9071, 9087], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_gradient_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "s_noisedogwarp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Accumulate Gradient Warp"], "extent": [7749, 7775], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Lattice Warp"]}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise. When used in images, this can add interesting smudgy effects, and interesting landmarks when used for terrain."], "extent": [8727, 8950]}], "container": true, "attrs": {"id": "s_noiseaccumg"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flow Rotation"], "extent": [7848, 7863], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Noise type"]}, " is ", {"type": "q", "text": ["Flow"]}, ", this controls the rotation of the ", {"type": "q", "text": ["swirl"]}, ", from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ". Because this parameter is fractional, you can\u2019t just use ", {"type": "code", "text": ["$F"]}, " to animate it, since all integral values will look the same, representing a complete revolution. Instead, try something like ", {"type": "code", "text": ["$FF / 100"]}, "."], "extent": [9432, 9729]}], "container": true, "attrs": {"id": "s_noiseflowrot"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 4, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Output Correction"], "extent": [7938, 7966], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Bias"], "extent": [7966, 7973], "body": [{"type": "para", "indent": 4, "text": ["Enables the bias controls to nudge values up or down."], "extent": [10320, 10379]}], "container": true, "attrs": {"id": "s_noisecc_dobias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gain"], "extent": [8052, 8058], "body": [{"type": "para", "indent": 4, "text": ["Enables the gain controls to increase or decrease the contrast."], "extent": [10489, 10562]}], "container": true, "attrs": {"id": "s_noisecc_dogain"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Complement"], "extent": [8137, 8149], "body": [{"type": "para", "indent": 4, "text": ["Outputs the numerical complement (", {"type": "code", "text": ["1 - x"]}, ") of the computed noise. Basically turns the output upside-down."], "extent": [10688, 10803]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_sine.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_sine.jpg"}, "\n    ", {"scheme": "Image", "value": "/images/nodes/vop/unoise_complement.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_complement.jpg"}], "extent": [10803, 10902]}], "container": true, "attrs": {"id": "s_noisecc_inv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Range (Clamped)"], "extent": [8222, 8246], "body": [{"type": "para", "indent": 4, "text": ["Enables the ", {"type": "ui", "text": ["New minimum"]}, " and ", {"type": "ui", "text": ["New maximum"]}, " parameters to allow you to map the noise, which is normally in the ", {"type": "code", "text": ["[0,1]"]}, " range, to a different range of values."], "extent": [10949, 11116]}], "container": true, "attrs": {"id": "s_noisecc_dorng"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Final Amplitude"], "extent": [8323, 8340], "body": [{"type": "para", "indent": 4, "text": ["Scales the final conditioned output up or down."], "extent": [11396, 11450]}], "container": true, "attrs": {"id": "s_noisecc_amp"}, "role": "item"}], "container": true, "role": "item_group"}]}]}]}, {"level": 2, "id": "fireintensityfield", "container": true, "type": "h", "indent": 0, "text": ["Fire Intensity Field"], "extent": [8413, 8461], "body": [{"type": "para", "indent": 0, "text": ["The controls on this tab allow you to change the look of the ", {"type": "ui", "text": ["Fire Intensity Field"]}, ", which controls the fire\u2019s emission intensity. The operations are performed in the order they're listed in."], "extent": [8461, 8657]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Density Volume"], "extent": [8657, 8673], "body": [{"type": "para", "indent": 4, "text": ["The name of the smoke density volume to be rendered."], "extent": [8696, 8754]}], "container": true, "attrs": {"id": "fi_volumename"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Shape"], "extent": [8754, 8768], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fit to Range (Unclamped)"], "extent": [8768, 8794], "body": [{"type": "para", "indent": 4, "text": ["Maps a range of input values to a different output range."], "extent": [8816, 8879]}], "container": true, "attrs": {"id": "fi_fitenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Source Range"], "extent": [8879, 8893], "body": [{"type": "para", "indent": 4, "text": ["The range of input values."], "extent": [8915, 8947]}], "container": true, "attrs": {"id": "fi_fitsrcmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Target Range"], "extent": [8947, 8961], "body": [{"type": "para", "indent": 4, "text": ["The range of output values."], "extent": [8984, 9017]}], "container": true, "attrs": {"id": "fi_fitdestmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Lookup Ramp"], "extent": [9017, 9034], "body": [{"type": "para", "indent": 4, "text": ["Maps input values to the ramp values, giving find-grained control over the shape of the field."], "extent": [9057, 9157]}, {"type": "para", "indent": 4, "text": ["Use ", {"type": "ui", "text": ["Fit to Range"]}, " to controls which range of values is used to look up the ramp."], "extent": [9157, 9246]}], "container": true, "attrs": {"id": "fi_rampenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ramp Boundaries"], "extent": [9246, 9263], "body": [{"type": "para", "indent": 4, "text": ["How to compute the result for inputs below/above the ramp\u2019s range."], "extent": [1768, 1844]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Hold"], "extent": [1844, 1854], "body": [{"type": "para", "indent": 8, "text": ["Returns the value at the nearest end of the ramp (for example, if the\n        ramp\u2019s range is ", {"type": "code", "text": ["0-1"]}, ", and the input is ", {"type": "code", "text": ["-10"]}, ", it will return the\n        ramp value for ", {"type": "code", "text": ["0"]}, ")."], "extent": [1854, 2040]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cycle"], "extent": [2040, 2051], "body": [{"type": "para", "indent": 8, "text": ["Repeats the ramp continuously outside the range."], "extent": [2051, 2117]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/rampfilter_cycle.jpg", "type": "img", "text": ""}], "extent": [2117, 2177]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cycle-Accumulate"], "extent": [2177, 2199], "body": [{"type": "para", "indent": 8, "text": ["Like ", {"type": "q", "text": ["Cycle"]}, ", but starts each cycle relative to the end value \n        of the previous cycle."], "extent": [2199, 2310]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/rampfilter_cycle_accumulate.jpg", "type": "img", "text": ""}], "extent": [2310, 2381]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Mirror"], "extent": [2381, 2393], "body": [{"type": "para", "indent": 8, "text": ["Cycles before/after the range are mirror images (reversed) of\n        one another. The first cycle is not mirrored."], "extent": [2393, 2526]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/rampfilter_mirror.jpg", "type": "img", "text": ""}], "extent": [2526, 2587]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Slope"], "extent": [2587, 2598], "body": [{"type": "para", "indent": 8, "text": ["Extends a line using the slope at the beginning/end of the ramp \n        range."], "extent": [2598, 2695]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/rampfilter_slope.jpg", "type": "img", "text": ""}], "extent": [2695, 2751]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fi_rampextl"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ramp"], "extent": [9329, 9335], "body": [{"type": "para", "indent": 4, "text": ["The lookup ramp."], "extent": [9352, 9374]}], "container": true, "attrs": {"id": "fi_ramp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Contour"], "extent": [9374, 9383], "body": [{"type": "para", "indent": 4, "text": ["Increases or decreases contrast for values at the ", {"type": "em", "text": ["bottom"]}, " of the\n    input range. This is sometimes useful to control feathering in volume\n    fields."], "extent": [9409, 9566]}], "container": true, "attrs": {"id": "fi_contourenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soft Clip"], "extent": [9566, 9577], "body": [{"type": "para", "indent": 4, "text": ["Increases or decreases contrast for values at the ", {"type": "em", "text": ["top"]}, " of the\n    input range. This is sometimes useful to control feathering in volume\n    fields."], "extent": [9601, 9755]}], "container": true, "attrs": {"id": "fi_sclipenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clamp at Lower Limit"], "extent": [9755, 9777], "body": [{"type": "para", "indent": 4, "text": ["Clamp values to a lower limit."], "extent": [9804, 9840]}], "container": true, "attrs": {"id": "fi_lowlimitenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clamp at Upper Limit"], "extent": [9840, 9862], "body": [{"type": "para", "indent": 4, "text": ["Clamp values to an upper limit."], "extent": [9890, 9927]}], "container": true, "attrs": {"id": "fi_highlimitenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Final Scale"], "extent": [9927, 9940], "body": [{"type": "para", "indent": 4, "text": ["A multiplier on the final value."], "extent": [9956, 9994]}], "container": true, "attrs": {"id": "fi_amp"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Noise"], "extent": [9994, 10008], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable"], "extent": [10008, 10017], "body": [{"type": "para", "indent": 4, "text": ["Whether to add any noise to this field."], "extent": [10041, 10086]}], "container": true, "attrs": {"id": "fi_noiseenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Mode"], "extent": [10086, 10092], "body": [{"type": "para", "indent": 4, "text": ["Controls how the noise is applied to this field."], "extent": [10114, 10168]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Offset (Field + Noise)"], "extent": [10168, 10196], "body": [{"type": "para", "indent": 8, "text": ["The noise value is added to the field value."], "extent": [10196, 10250]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale (Field + Noise)"], "extent": [10250, 10277], "body": [{"type": "para", "indent": 8, "text": ["The field value is multiplied with the noise value."], "extent": [10277, 10338]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fi_noisemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [10338, 10344], "body": [{"type": "para", "indent": 4, "text": ["The type of noise to generate. Different algorithms give noise with different characteristics."], "extent": [3119, 3223]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Fast"], "extent": [3223, 3233], "body": [{"type": "para", "indent": 8, "text": ["The default. A faster and more interesting variant of Perlin noise."], "extent": [3233, 3314]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_simplex.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_simplex.jpg"}], "extent": [3314, 3368]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sparse Convolution"], "extent": [3368, 3392], "body": [{"type": "para", "indent": 8, "text": ["Sparse Convolution noise is similar to Worley noise. Does not have artifacts at grid points."], "extent": [3392, 3498]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_sparse.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_sparse.jpg"}], "extent": [3498, 3551]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Alligator"], "extent": [3551, 3566], "body": [{"type": "para", "indent": 8, "text": ["Produces a bumpy output. Named for its alleged resemblance to alligator skin."], "extent": [3566, 3657]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_alligator.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_alligator.jpg"}], "extent": [3657, 3717]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin"], "extent": [3717, 3729], "body": [{"type": "para", "indent": 8, "text": ["A noise where the visual details are the same size. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Perlin_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [3729, 3830]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_perlin.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_perlin.jpg"}, "\n        ", {"scheme": "Image", "value": "/images/nodes/vop/unoise_periodic_perlin.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_periodic_perlin.jpg"}], "extent": [3830, 3944]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin Flow"], "extent": [3944, 3961], "body": [{"type": "para", "indent": 8, "text": ["A noise that\u2019s stable over time, like a rotated Perlin noise, useful to create noise that seems to swirl and flow smoothly across time. Use the ", {"type": "ui", "text": ["Flow rotation"]}, " parameter below to control the rotation."], "extent": [3961, 4177]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4177, 4201], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_flow.mp4"}}, {"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4248, 4264], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_periodic_flow.mp4"}}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Simplex"], "extent": [4324, 4337], "body": [{"type": "para", "indent": 8, "text": ["A noise similar to Perlin but the noise lattice is on a tetrahedral mesh rather than a grid.  This can avoid the grid patterns often visible in Perlin noise."], "extent": [4337, 4504]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F1"], "extent": [4504, 4528], "body": [{"type": "para", "indent": 8, "text": ["Produces cellular features similar to plant cells, ocean waves, honeycombs, cratered landscapes, and so on. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Worley_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [4528, 4685]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f1.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_worley_f1.jpg"}], "extent": [4685, 4745]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F2-F1"], "extent": [4745, 4772], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley noise that produces blunted and cornered features."], "extent": [4772, 4856]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f2.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_worley_f2.jpg"}], "extent": [4856, 4916]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F1"], "extent": [4916, 4943], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [4943, 5071]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F2-F1"], "extent": [5071, 5101], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [5101, 5232]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F1"], "extent": [5232, 5259], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5259, 5387]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F2-F1"], "extent": [5387, 5417], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5417, 5544]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fi_noisebasis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frequency"], "extent": [10416, 10427], "body": [{"type": "para", "indent": 4, "text": ["The frequency of the noise. Higher values give smaller scaled details in the noise."], "extent": [5574, 5667]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [5667, 5683], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_frequency.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fi_noisefreq"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [10497, 10505], "body": [{"type": "para", "indent": 4, "text": ["The offset of the input into the noise function. If you visualize the noise as a 2D graph or 3D height field, this has the effect of ", {"type": "q", "text": ["panning"]}, " across the space of possible noise outputs. If you have the general noise effect you want but just want to get a different set of values for a different look, try changing the offset."], "extent": [5760, 6096]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [6096, 6112], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_offset.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fi_noiseoffset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Period"], "extent": [10579, 10587], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Periodic"]}, " is on, the multiple of the input range before the noise pattern repeats.  "], "extent": [6320, 6422]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [6422, 6432], "body": [{"type": "para", "indent": 8, "text": ["If Lacunarity is not 2, successive octaves will not have matching periods so a periodic noise won\u2019t be built."], "extent": [6432, 6555]}], "container": true}], "container": true, "role": "item_group"}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [6555, 6571], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_period.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fi_noiseperiod"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Fractal"], "extent": [10661, 10679], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fractal Type"], "extent": [10679, 10694], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [6777, 6787], "body": [{"type": "para", "indent": 8, "text": ["Does not add any additional noise on top of the basic noise."], "extent": [6787, 6865]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_none.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_fractal_none.jpg"}], "extent": [6865, 6928]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Standard"], "extent": [6928, 6942], "body": [{"type": "para", "indent": 8, "text": ["Adds pseudo-random noise on top of the basic output."], "extent": [6942, 7012]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_standard.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_fractal_standard.jpg"}], "extent": [7012, 7079]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Terrain"], "extent": [7079, 7092], "body": [{"type": "para", "indent": 8, "text": ["Adds noise like ", {"type": "q", "text": ["Standard"]}, " but dampens the noise in the valleys, which can be useful for generating mountainous terrain."], "extent": [7092, 7230]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_terrain.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_fractal_terrain.jpg"}], "extent": [7230, 7296]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hybrid"], "extent": [7296, 7308], "body": [{"type": "para", "indent": 8, "text": ["Like terrain, but with more sharpness in the valleys."], "extent": [7308, 7371]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fi_noisefractal"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Octaves"], "extent": [10770, 10783], "body": [{"type": "para", "indent": 4, "text": ["The number of iterations of distortion to add to the output of the basic noise. The more iterations you add, the more ", {"type": "q", "text": ["detailed"]}, " the output. Note that the output may have fewer octaves than this parameter (that is, increasing the parameter will eventually stop adding detail), because the node eventually stops when there\u2019s no more room to add more detail in the output."], "extent": [7479, 7855]}], "container": true, "attrs": {"id": "fi_noiseoct"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lacunarity"], "extent": [10851, 10863], "body": [{"type": "para", "indent": 4, "text": ["The frequency increment between iterations of fractal noise added to the basic output. Note that you can use a negative value."], "extent": [7885, 8021]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8021, 8037], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lacunarity.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fi_noiselac"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Roughness"], "extent": [10931, 10942], "body": [{"type": "para", "indent": 4, "text": ["The scale increment between iterations of fractal noise added to the basic output. The higher the value the larger the ", {"type": "q", "text": ["jaggies"]}, " added to the output. You can use a negative value for roughness."], "extent": [8117, 8320]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8320, 8336], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_roughness.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fi_noiserough"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 4, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Warping"], "extent": [11014, 11032], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Lattice Warp"], "extent": [11032, 11054], "body": [{"type": "para", "indent": 4, "text": ["Adds ", {"type": "q", "text": ["stringiness"]}, " or ", {"type": "q", "text": ["wiriness"]}, " to standard noise."], "extent": [8562, 8619]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8619, 8631], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lattice_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fi_noisedolwarp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Accumulate Lattice Warp"], "extent": [11130, 11155], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Lattice Warp"]}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise. When used in images, this can add interesting smudgy effects, and interesting landmarks when used for terrain."], "extent": [8727, 8950]}], "container": true, "attrs": {"id": "fi_noiseaccuml"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Freq"], "extent": [11229, 11235], "body": [], "container": true, "attrs": {"id": "fi_noisedispfreq"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Gradient Warp"], "extent": [11262, 11284], "body": [{"type": "para", "indent": 4, "text": ["Enables a slider to widen the peaks or valleys of the noise output."], "extent": [8994, 9071]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [9071, 9087], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_gradient_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fi_noisedogwarp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Accumulate Gradient Warp"], "extent": [11360, 11386], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Lattice Warp"]}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise. When used in images, this can add interesting smudgy effects, and interesting landmarks when used for terrain."], "extent": [8727, 8950]}], "container": true, "attrs": {"id": "fi_noiseaccumg"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flow Rotation"], "extent": [11460, 11475], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Noise type"]}, " is ", {"type": "q", "text": ["Flow"]}, ", this controls the rotation of the ", {"type": "q", "text": ["swirl"]}, ", from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ". Because this parameter is fractional, you can\u2019t just use ", {"type": "code", "text": ["$F"]}, " to animate it, since all integral values will look the same, representing a complete revolution. Instead, try something like ", {"type": "code", "text": ["$FF / 100"]}, "."], "extent": [9432, 9729]}], "container": true, "attrs": {"id": "fi_noiseflowrot"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 4, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Output Correction"], "extent": [11551, 11579], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Bias"], "extent": [11579, 11586], "body": [{"type": "para", "indent": 4, "text": ["Enables the bias controls to nudge values up or down."], "extent": [10320, 10379]}], "container": true, "attrs": {"id": "fi_noisecc_dobias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gain"], "extent": [11666, 11672], "body": [{"type": "para", "indent": 4, "text": ["Enables the gain controls to increase or decrease the contrast."], "extent": [10489, 10562]}], "container": true, "attrs": {"id": "fi_noisecc_dogain"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Complement"], "extent": [11752, 11764], "body": [{"type": "para", "indent": 4, "text": ["Outputs the numerical complement (", {"type": "code", "text": ["1 - x"]}, ") of the computed noise. Basically turns the output upside-down."], "extent": [10688, 10803]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_sine.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_sine.jpg"}, "\n    ", {"scheme": "Image", "value": "/images/nodes/vop/unoise_complement.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_complement.jpg"}], "extent": [10803, 10902]}], "container": true, "attrs": {"id": "fi_noisecc_inv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Range (Clamped)"], "extent": [11838, 11862], "body": [{"type": "para", "indent": 4, "text": ["Enables the ", {"type": "ui", "text": ["New minimum"]}, " and ", {"type": "ui", "text": ["New maximum"]}, " parameters to allow you to map the noise, which is normally in the ", {"type": "code", "text": ["[0,1]"]}, " range, to a different range of values."], "extent": [10949, 11116]}], "container": true, "attrs": {"id": "fi_noisecc_dorng"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Final Amplitude"], "extent": [11940, 11957], "body": [{"type": "para", "indent": 4, "text": ["Scales the final conditioned output up or down."], "extent": [11396, 11450]}], "container": true, "attrs": {"id": "fi_noisecc_amp"}, "role": "item"}], "container": true, "role": "item_group"}]}]}]}, {"level": 2, "id": "firetemperaturefield", "container": true, "type": "h", "indent": 0, "text": ["Fire Temperature Field"], "extent": [12031, 12083], "body": [{"type": "para", "indent": 0, "text": ["The controls on this tab allow you to change the look of the ", {"type": "ui", "text": ["Fire Temperature Field"]}, ", which is convert to the fire\u2019s color. The operations are performed in the order they're listed in."], "extent": [12083, 12273]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Density Volume"], "extent": [12273, 12289], "body": [{"type": "para", "indent": 4, "text": ["The name of the smoke density volume to be rendered."], "extent": [12312, 12370]}], "container": true, "attrs": {"id": "fc_volumename"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Shape"], "extent": [12370, 12384], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fit to Range (Unclamped)"], "extent": [12384, 12410], "body": [{"type": "para", "indent": 4, "text": ["Maps a range of input values to a different output range."], "extent": [12432, 12495]}], "container": true, "attrs": {"id": "fc_fitenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Source Range"], "extent": [12495, 12509], "body": [{"type": "para", "indent": 4, "text": ["The range of input values."], "extent": [12531, 12563]}], "container": true, "attrs": {"id": "fc_fitsrcmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Target Range"], "extent": [12563, 12577], "body": [{"type": "para", "indent": 4, "text": ["The range of output values."], "extent": [12600, 12633]}], "container": true, "attrs": {"id": "fc_fitdestmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Lookup Ramp"], "extent": [12633, 12650], "body": [{"type": "para", "indent": 4, "text": ["Maps input values to the ramp values, giving find-grained control over the shape of the field."], "extent": [12673, 12773]}, {"type": "para", "indent": 4, "text": ["Use ", {"type": "ui", "text": ["Fit to Range"]}, " to controls which range of values is used to look up the ramp."], "extent": [12773, 12862]}], "container": true, "attrs": {"id": "fc_rampenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ramp Boundaries"], "extent": [12862, 12879], "body": [{"type": "para", "indent": 4, "text": ["How to compute the result for inputs below/above the ramp\u2019s range."], "extent": [1768, 1844]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Hold"], "extent": [1844, 1854], "body": [{"type": "para", "indent": 8, "text": ["Returns the value at the nearest end of the ramp (for example, if the\n        ramp\u2019s range is ", {"type": "code", "text": ["0-1"]}, ", and the input is ", {"type": "code", "text": ["-10"]}, ", it will return the\n        ramp value for ", {"type": "code", "text": ["0"]}, ")."], "extent": [1854, 2040]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cycle"], "extent": [2040, 2051], "body": [{"type": "para", "indent": 8, "text": ["Repeats the ramp continuously outside the range."], "extent": [2051, 2117]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/rampfilter_cycle.jpg", "type": "img", "text": ""}], "extent": [2117, 2177]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cycle-Accumulate"], "extent": [2177, 2199], "body": [{"type": "para", "indent": 8, "text": ["Like ", {"type": "q", "text": ["Cycle"]}, ", but starts each cycle relative to the end value \n        of the previous cycle."], "extent": [2199, 2310]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/rampfilter_cycle_accumulate.jpg", "type": "img", "text": ""}], "extent": [2310, 2381]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Mirror"], "extent": [2381, 2393], "body": [{"type": "para", "indent": 8, "text": ["Cycles before/after the range are mirror images (reversed) of\n        one another. The first cycle is not mirrored."], "extent": [2393, 2526]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/rampfilter_mirror.jpg", "type": "img", "text": ""}], "extent": [2526, 2587]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Slope"], "extent": [2587, 2598], "body": [{"type": "para", "indent": 8, "text": ["Extends a line using the slope at the beginning/end of the ramp \n        range."], "extent": [2598, 2695]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/rampfilter_slope.jpg", "type": "img", "text": ""}], "extent": [2695, 2751]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fc_rampextl"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ramp"], "extent": [12945, 12951], "body": [{"type": "para", "indent": 4, "text": ["The lookup ramp."], "extent": [12968, 12990]}], "container": true, "attrs": {"id": "fc_ramp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Contour"], "extent": [12990, 12999], "body": [{"type": "para", "indent": 4, "text": ["Increases or decreases contrast for values at the ", {"type": "em", "text": ["bottom"]}, " of the\n    input range. This is sometimes useful to control feathering in volume\n    fields."], "extent": [13025, 13182]}], "container": true, "attrs": {"id": "fc_contourenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soft Clip"], "extent": [13182, 13193], "body": [{"type": "para", "indent": 4, "text": ["Increases or decreases contrast for values at the ", {"type": "em", "text": ["top"]}, " of the\n    input range. This is sometimes useful to control feathering in volume\n    fields."], "extent": [13217, 13371]}], "container": true, "attrs": {"id": "fc_sclipenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clamp at Lower Limit"], "extent": [13371, 13393], "body": [{"type": "para", "indent": 4, "text": ["Clamp values to a lower limit."], "extent": [13420, 13456]}], "container": true, "attrs": {"id": "fc_lowlimitenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clamp at Upper Limit"], "extent": [13456, 13478], "body": [{"type": "para", "indent": 4, "text": ["Clamp values to an upper limit."], "extent": [13506, 13543]}], "container": true, "attrs": {"id": "fc_highlimitenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Final Scale"], "extent": [13543, 13556], "body": [{"type": "para", "indent": 4, "text": ["A multiplier on the final value."], "extent": [13572, 13610]}], "container": true, "attrs": {"id": "fc_amp"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Noise"], "extent": [13610, 13624], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable"], "extent": [13624, 13633], "body": [{"type": "para", "indent": 4, "text": ["Whether to add any noise to this field."], "extent": [13657, 13702]}], "container": true, "attrs": {"id": "fc_noiseenable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Mode"], "extent": [13702, 13708], "body": [{"type": "para", "indent": 4, "text": ["Controls how the noise is applied to this field."], "extent": [13730, 13784]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Offset (Field + Noise)"], "extent": [13784, 13812], "body": [{"type": "para", "indent": 8, "text": ["The noise value is added to the field value."], "extent": [13812, 13866]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale (Field + Noise)"], "extent": [13866, 13893], "body": [{"type": "para", "indent": 8, "text": ["The field value is multiplied with the noise value."], "extent": [13893, 13954]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fc_noisemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [13954, 13960], "body": [{"type": "para", "indent": 4, "text": ["The type of noise to generate. Different algorithms give noise with different characteristics."], "extent": [3119, 3223]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Fast"], "extent": [3223, 3233], "body": [{"type": "para", "indent": 8, "text": ["The default. A faster and more interesting variant of Perlin noise."], "extent": [3233, 3314]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_simplex.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_simplex.jpg"}], "extent": [3314, 3368]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sparse Convolution"], "extent": [3368, 3392], "body": [{"type": "para", "indent": 8, "text": ["Sparse Convolution noise is similar to Worley noise. Does not have artifacts at grid points."], "extent": [3392, 3498]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_sparse.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_sparse.jpg"}], "extent": [3498, 3551]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Alligator"], "extent": [3551, 3566], "body": [{"type": "para", "indent": 8, "text": ["Produces a bumpy output. Named for its alleged resemblance to alligator skin."], "extent": [3566, 3657]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_alligator.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_alligator.jpg"}], "extent": [3657, 3717]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin"], "extent": [3717, 3729], "body": [{"type": "para", "indent": 8, "text": ["A noise where the visual details are the same size. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Perlin_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [3729, 3830]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_perlin.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_perlin.jpg"}, "\n        ", {"scheme": "Image", "value": "/images/nodes/vop/unoise_periodic_perlin.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_periodic_perlin.jpg"}], "extent": [3830, 3944]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin Flow"], "extent": [3944, 3961], "body": [{"type": "para", "indent": 8, "text": ["A noise that\u2019s stable over time, like a rotated Perlin noise, useful to create noise that seems to swirl and flow smoothly across time. Use the ", {"type": "ui", "text": ["Flow rotation"]}, " parameter below to control the rotation."], "extent": [3961, 4177]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4177, 4201], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_flow.mp4"}}, {"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4248, 4264], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_periodic_flow.mp4"}}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Simplex"], "extent": [4324, 4337], "body": [{"type": "para", "indent": 8, "text": ["A noise similar to Perlin but the noise lattice is on a tetrahedral mesh rather than a grid.  This can avoid the grid patterns often visible in Perlin noise."], "extent": [4337, 4504]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F1"], "extent": [4504, 4528], "body": [{"type": "para", "indent": 8, "text": ["Produces cellular features similar to plant cells, ocean waves, honeycombs, cratered landscapes, and so on. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Worley_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [4528, 4685]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f1.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_worley_f1.jpg"}], "extent": [4685, 4745]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F2-F1"], "extent": [4745, 4772], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley noise that produces blunted and cornered features."], "extent": [4772, 4856]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f2.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_worley_f2.jpg"}], "extent": [4856, 4916]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F1"], "extent": [4916, 4943], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [4943, 5071]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F2-F1"], "extent": [5071, 5101], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [5101, 5232]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F1"], "extent": [5232, 5259], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5259, 5387]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F2-F1"], "extent": [5387, 5417], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5417, 5544]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fc_noisebasis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frequency"], "extent": [14032, 14043], "body": [{"type": "para", "indent": 4, "text": ["The frequency of the noise. Higher values give smaller scaled details in the noise."], "extent": [5574, 5667]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [5667, 5683], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_frequency.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fc_noisefreq"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [14113, 14121], "body": [{"type": "para", "indent": 4, "text": ["The offset of the input into the noise function. If you visualize the noise as a 2D graph or 3D height field, this has the effect of ", {"type": "q", "text": ["panning"]}, " across the space of possible noise outputs. If you have the general noise effect you want but just want to get a different set of values for a different look, try changing the offset."], "extent": [5760, 6096]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [6096, 6112], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_offset.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fc_noiseoffset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Period"], "extent": [14195, 14203], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Periodic"]}, " is on, the multiple of the input range before the noise pattern repeats.  "], "extent": [6320, 6422]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [6422, 6432], "body": [{"type": "para", "indent": 8, "text": ["If Lacunarity is not 2, successive octaves will not have matching periods so a periodic noise won\u2019t be built."], "extent": [6432, 6555]}], "container": true}], "container": true, "role": "item_group"}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [6555, 6571], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_period.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fc_noiseperiod"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Fractal"], "extent": [14277, 14295], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fractal Type"], "extent": [14295, 14310], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [6777, 6787], "body": [{"type": "para", "indent": 8, "text": ["Does not add any additional noise on top of the basic noise."], "extent": [6787, 6865]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_none.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_fractal_none.jpg"}], "extent": [6865, 6928]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Standard"], "extent": [6928, 6942], "body": [{"type": "para", "indent": 8, "text": ["Adds pseudo-random noise on top of the basic output."], "extent": [6942, 7012]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_standard.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_fractal_standard.jpg"}], "extent": [7012, 7079]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Terrain"], "extent": [7079, 7092], "body": [{"type": "para", "indent": 8, "text": ["Adds noise like ", {"type": "q", "text": ["Standard"]}, " but dampens the noise in the valleys, which can be useful for generating mountainous terrain."], "extent": [7092, 7230]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_terrain.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_fractal_terrain.jpg"}], "extent": [7230, 7296]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hybrid"], "extent": [7296, 7308], "body": [{"type": "para", "indent": 8, "text": ["Like terrain, but with more sharpness in the valleys."], "extent": [7308, 7371]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fc_noisefractal"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Octaves"], "extent": [14386, 14399], "body": [{"type": "para", "indent": 4, "text": ["The number of iterations of distortion to add to the output of the basic noise. The more iterations you add, the more ", {"type": "q", "text": ["detailed"]}, " the output. Note that the output may have fewer octaves than this parameter (that is, increasing the parameter will eventually stop adding detail), because the node eventually stops when there\u2019s no more room to add more detail in the output."], "extent": [7479, 7855]}], "container": true, "attrs": {"id": "fc_noiseoct"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lacunarity"], "extent": [14467, 14479], "body": [{"type": "para", "indent": 4, "text": ["The frequency increment between iterations of fractal noise added to the basic output. Note that you can use a negative value."], "extent": [7885, 8021]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8021, 8037], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lacunarity.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fc_noiselac"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Roughness"], "extent": [14547, 14558], "body": [{"type": "para", "indent": 4, "text": ["The scale increment between iterations of fractal noise added to the basic output. The higher the value the larger the ", {"type": "q", "text": ["jaggies"]}, " added to the output. You can use a negative value for roughness."], "extent": [8117, 8320]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8320, 8336], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_roughness.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fc_noiserough"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 4, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Warping"], "extent": [14630, 14648], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Lattice Warp"], "extent": [14648, 14670], "body": [{"type": "para", "indent": 4, "text": ["Adds ", {"type": "q", "text": ["stringiness"]}, " or ", {"type": "q", "text": ["wiriness"]}, " to standard noise."], "extent": [8562, 8619]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8619, 8631], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lattice_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fc_noisedolwarp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Accumulate Lattice Warp"], "extent": [14746, 14771], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Lattice Warp"]}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise. When used in images, this can add interesting smudgy effects, and interesting landmarks when used for terrain."], "extent": [8727, 8950]}], "container": true, "attrs": {"id": "fc_noiseaccuml"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Freq"], "extent": [14845, 14851], "body": [], "container": true, "attrs": {"id": "fc_noisedispfreq"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Gradient Warp"], "extent": [14878, 14900], "body": [{"type": "para", "indent": 4, "text": ["Enables a slider to widen the peaks or valleys of the noise output."], "extent": [8994, 9071]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [9071, 9087], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_gradient_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "fc_noisedogwarp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Accumulate Gradient Warp"], "extent": [14976, 15002], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Lattice Warp"]}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise. When used in images, this can add interesting smudgy effects, and interesting landmarks when used for terrain."], "extent": [8727, 8950]}], "container": true, "attrs": {"id": "fc_noiseaccumg"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flow Rotation"], "extent": [15076, 15091], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Noise type"]}, " is ", {"type": "q", "text": ["Flow"]}, ", this controls the rotation of the ", {"type": "q", "text": ["swirl"]}, ", from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ". Because this parameter is fractional, you can\u2019t just use ", {"type": "code", "text": ["$F"]}, " to animate it, since all integral values will look the same, representing a complete revolution. Instead, try something like ", {"type": "code", "text": ["$FF / 100"]}, "."], "extent": [9432, 9729]}], "container": true, "attrs": {"id": "fc_noiseflowrot"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 4, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Output Correction"], "extent": [15167, 15195], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Bias"], "extent": [15195, 15202], "body": [{"type": "para", "indent": 4, "text": ["Enables the bias controls to nudge values up or down."], "extent": [10320, 10379]}], "container": true, "attrs": {"id": "fc_noisecc_dobias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gain"], "extent": [15282, 15288], "body": [{"type": "para", "indent": 4, "text": ["Enables the gain controls to increase or decrease the contrast."], "extent": [10489, 10562]}], "container": true, "attrs": {"id": "fc_noisecc_dogain"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Complement"], "extent": [15368, 15380], "body": [{"type": "para", "indent": 4, "text": ["Outputs the numerical complement (", {"type": "code", "text": ["1 - x"]}, ") of the computed noise. Basically turns the output upside-down."], "extent": [10688, 10803]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_sine.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_sine.jpg"}, "\n    ", {"scheme": "Image", "value": "/images/nodes/vop/unoise_complement.jpg", "type": "link", "text": "", "fullpath": "/images/nodes/vop/unoise_complement.jpg"}], "extent": [10803, 10902]}], "container": true, "attrs": {"id": "fc_noisecc_inv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Range (Clamped)"], "extent": [15454, 15478], "body": [{"type": "para", "indent": 4, "text": ["Enables the ", {"type": "ui", "text": ["New minimum"]}, " and ", {"type": "ui", "text": ["New maximum"]}, " parameters to allow you to map the noise, which is normally in the ", {"type": "code", "text": ["[0,1]"]}, " range, to a different range of values."], "extent": [10949, 11116]}], "container": true, "attrs": {"id": "fc_noisecc_dorng"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Final Amplitude"], "extent": [15556, 15573], "body": [{"type": "para", "indent": 4, "text": ["Scales the final conditioned output up or down."], "extent": [11396, 11450]}], "container": true, "attrs": {"id": "fc_noisecc_amp"}, "role": "item"}], "container": true, "role": "item_group"}]}]}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [15647, 15656], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/vop/classicshader", "type": "link", "text": "", "fullpath": "/nodes/vop/classicshader"}], "extent": [15656, 15684]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/vop/principledshader", "type": "link", "text": "", "fullpath": "/nodes/vop/principledshader"}], "extent": [15684, 15714]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/vop/pyroshadercore", "type": "link", "text": "", "fullpath": "/nodes/vop/pyroshadercore"}], "extent": [15714, 15742]}], "container": true}], "text": "Related"}], "title": ["Pyro Shader - Classic"], "summary": ["Flexible, production-quality fire and smoke shader."], "included": ["/nodes/vop/rampfilter", "/nodes/vop/unifiednoise"]}