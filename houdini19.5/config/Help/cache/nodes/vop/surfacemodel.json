{"type": "root", "attrs": {"type": "node", "context": "vop", "internal": "surfacemodel", "icon": "VOP/surfacemodel", "version": "3.0", "since": "14.5", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Surface Model Shader"], "extent": [0, 25]}, {"type": "summary", "indent": 0, "text": ["A powerful, highly flexible, general model for surface shading."], "extent": [128, 199]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [199, 214], "body": [{"type": "para", "indent": 0, "text": ["This node is a fully featured model of surface shading. It supports\ndiffuse, specular, and refractive components and computes direct\nlighting (from light sources) and indirect lighting (lighting bouncing\noff other objects in the scene)."], "extent": [214, 453]}, {"type": "para", "indent": 0, "text": ["Since the Surface Model itself takes care of lighting and simulates most\nphysical properties, simply connecting the Surface Model VOP to the output\nwould create an ", {"type": "q", "text": ["uber-shader"]}, " capable of simulating most surfaces."], "extent": [453, 669]}, {"type": "para", "indent": 0, "text": ["For more information on building a material shader with VOPs, see\n", {"scheme": "Node", "value": "/nodes/shop/vopmaterial", "type": "link", "text": ["creating materials"], "fullpath": "/nodes/shop/vopmaterial"}, "."], "extent": [669, 780]}, {"type": "para", "indent": 0, "text": ["These are the main features:"], "extent": [780, 810]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Diffuse reflection"], "extent": [810, 831]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Specular reflections with 2 separate layers"], "extent": [831, 877]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Refraction"], "extent": [877, 890]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Subsurface scattering"], "extent": [890, 914]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Emission controls"], "extent": [914, 935]}], "container": true}, {"type": "para", "indent": 0, "text": ["In non-physically based renders, this node adds support for the following:"], "extent": [935, 1011]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Per-light exports"], "extent": [1011, 1031]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Variance antialiasing support for area lights"], "extent": [1031, 1079]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Variance antialiasing support for raytracing"], "extent": [1079, 1127]}], "container": true}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [1127, 1132], "body": [{"type": "para", "indent": 4, "text": ["Most of the parameters are available as inputs but are hidden by\n    default. See ", {"scheme": null, "value": "/shade/vops", "type": "link", "text": ["working with VOPs"], "fullpath": "/shade/vops"}, " for information on\n    connecting hidden inputs."], "extent": [1132, 1300]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Reflectivity"], "extent": [1300, 1319], "body": [{"type": "para", "indent": 0, "text": ["This node uses ", {"type": "em", "text": ["reflectivity"]}, " (or ", {"type": "em", "text": ["intensity"]}, ") to scale the different\ncontributions. For example, the default look reflects 50% of the\nincoming illumination as diffuse and 10% as specular reflection. The\nremaining 40% is absorbed by the surface and not reflected into the\nscene. Using reflectivity makes it easy to model real materials and\nensure energy is conserved (that is, to ensure the surface shader does\nnot increase the amount of light in the scene). It also lets you\naccurately predict how much indirect light will be present in a\nphysically based render."], "extent": [1319, 1886]}, {"type": "para", "indent": 0, "text": ["This is significantly different from how you specify diffuse and\nspecular amounts in older shaders such as the ", {"scheme": "Node", "value": "/nodes/shop/v_plastic", "type": "link", "text": ["plastic\nshader"], "fullpath": "/nodes/shop/v_plastic"}, " or the ", {"scheme": "Node", "value": "/nodes/vop/lighting", "type": "link", "text": ["Lighting Model\nVOP"], "fullpath": "/nodes/vop/lighting"}, ". In those nodes, varying the specular highlight\nsize by changing the roughness would have a dramatic effect on the\nsurface reflectivity, making it difficult to predict the amount of\nlight in the scene when using physically based rendering. With this\nnode, you can vary the specular highlight size and anisotropy without\nhaving any effect on the total amount of light reflected by that\ncomponent."], "extent": [1886, 2477]}, {"type": "para", "indent": 0, "text": ["The side effect of this design is that the maximum intensity of the specular\nhighlight varies as you change the roughness and anisotropy. For this\nreason, sharp specular highlights you create with the Surface Model\nnode often appear much brighter."], "extent": [2477, 2726]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [2726, 2731], "body": [{"type": "para", "indent": 4, "text": ["To measure the actual reflectivity of a material, place a sphere under a\n    default white environment light, and inspect the color of the surface\n    under this simple lighting. The average pixel color is the actual shader\n    reflectivity."], "extent": [2731, 2978]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "pointlights", "container": true, "type": "h", "indent": 0, "text": ["Reflectivity and point/spot lights"], "extent": [2978, 3033], "body": [{"type": "para", "indent": 0, "text": ["The default diffuse reflectivity (or ", {"type": "em", "text": ["intensity"]}, ") of the surface model is\n0.5.  However, when rendering using light sources with non-physical\nattenuation (for example, a default point light), pixels can have values\nhigher than 0.5, especially where the light hits the surface directly. Even\nthough the image appears brighter, the actual surface reflectivity is still\n0.5 \u2013 the brighter image is the result of a higher default intensity for these\nlight types."], "extent": [3033, 3495]}, {"type": "para", "indent": 0, "text": ["In particular, the following non-physical light source types will do this:"], "extent": [3495, 3571]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Point/spot lights with ", {"type": "ui", "text": ["No Attenuation"]}, " on."], "extent": [3571, 3619]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Distant/sun lights"], "extent": [3619, 3640]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Area lights with ", {"type": "ui", "text": ["No attenuation"]}, " and ", {"type": "ui", "text": ["Normalize Light Intensity to Area"]}, " on."], "extent": [3640, 3725]}], "container": true}, {"type": "para", "indent": 0, "text": ["If you increase the reflectivity above 0.5 for physically based renders, the\nmaximum brightness in the image can be above 1 if you use these light\ntypes. To reduce the brightness of the image in these cases, decrease light\nintensities (instead of decreasing ", {"type": "ui", "text": ["Diffuse Intensity"]}, "), since changing\nlight intensity doesn\u2019t affect the proportion of reflected light in the scene\nfor physically based renders."], "extent": [3725, 4131]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Anisotropic highlights/reflections"], "extent": [4131, 4172], "body": [{"type": "para", "indent": 0, "text": ["Anisotropic materials have different physical properties in one\ndirection. Classic examples are hair, brushed metal, and record albums\n(ask your parents, kids!), which all have ", {"type": "q", "text": ["stretched"]}, "\nreflections/highlights along one direction because of how light\ninteracts with microscopic grooves in the material."], "extent": [4172, 4479]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["The ", {"type": "ui", "text": ["Specular anisotropy"]}, " parameter on the ", {"type": "ui", "text": ["Reflect"]}, " tab\n  controls the direction of the highlights. Negative values stretch the\n  highlight along the V direction. Positive values stretch the highlight along\n  the U direction."], "extent": [4479, 4713]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The ", {"type": "ui", "text": ["Tangent style"]}, " controls how the node decides which directions\n  on the object correspond to U and V. You can use the inherent\n  tangents, world or local space, UV attributes, or for complete control\n  hook up the ", {"type": "code", "text": ["U tangent (utan)"]}, " and ", {"type": "code", "text": ["V tangent (vtan)"]}, " inputs."], "extent": [4713, 4986]}], "container": true}]}, {"level": 2, "id": "exports", "container": true, "type": "h", "indent": 0, "text": ["Exporting image planes"], "extent": [4986, 5025], "body": [{"type": "para", "indent": 0, "text": ["This node ", {"type": "em", "text": ["exports"]}, " a large number of variables you can use to create extra\nimage planes when rendering to the OpenEXR format. It is often useful for compositing and special effects to have, for example, the diffuse and specular output of the shader as separate images."], "extent": [5025, 5297]}, {"type": "para", "indent": 0, "text": ["For example, you can export the shader\u2019s direct/indirect/combined diffuse/reflect/refract output, scattering, samples, and so on. You can export the total output for each variable, or separate ", {"type": "em", "text": ["per-light"]}, " exports."], "extent": [5297, 5512]}, {"type": "para", "indent": 0, "text": ["See the ", {"scheme": "Node", "value": "/nodes/out/ifd#vm_numaux", "type": "link", "text": ["Extra image planes"], "fullpath": "/nodes/out/ifd#vm_numaux", "fragment": "#vm_numaux"}, " parameter of the\n", {"scheme": "Node", "value": "/nodes/out/ifd", "type": "link", "text": ["mantra render node"], "fullpath": "/nodes/out/ifd"}, " for more information."], "extent": [5512, 5638]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [5638, 5650], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Diffuse"], "extent": [5650, 5665], "body": [{"type": "para", "indent": 0, "text": ["This tab controls diffuse reflection (in simple terms, the overall\ncolor of the surface). The default values reflect 50% of the incoming\nlight."], "extent": [5665, 5811]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Diffuse"], "extent": [5811, 5827], "body": [{"type": "para", "indent": 4, "text": ["Enables diffuse reflection."], "extent": [5849, 5882]}], "container": true, "attrs": {"id": "diff_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Diffuse Intensity"], "extent": [5882, 5901], "body": [{"type": "para", "indent": 4, "text": ["The proportion of incoming light reflected back as the diffuse\n    component, from ", {"type": "code", "text": ["0"]}, " (no diffuse reflection) to ", {"type": "code", "text": ["1"]}, " (all incoming\n    light is reflected). Non-attenuated lights such as point lights\n    and spot lights ", {"scheme": null, "value": "/nodes/vop/surfacemodel#pointlights", "type": "link", "text": ["may produce brighter pixel values than this value"], "fullpath": "/nodes/vop/surfacemodel#pointlights", "fragment": "#pointlights"}, "."], "extent": [5920, 6234]}, {"type": "para", "indent": 4, "text": ["(Old shaders such as the ", {"scheme": "Node", "value": "/nodes/shop/v_plastic", "type": "link", "text": ["VEX Plastic"], "fullpath": "/nodes/shop/v_plastic"}, " shader\n    implicitly have a reflectivity of ", {"type": "code", "text": ["0.5"]}, " when the shader\u2019s diffuse\n    coefficient is set to ", {"type": "code", "text": ["1"]}, ".)"], "extent": [6234, 6407]}], "container": true, "attrs": {"id": "diff_int"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Diffuse Minimum"], "extent": [6407, 6424], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Fresnel Blending"]}, " is on, controls the minimum amount of\n    reflection that will not be blended with the Fresnel factor.\n    Diffuse components are blended with the transmissive Fresnel\n    component."], "extent": [6443, 6657]}, {"type": "para", "indent": 4, "text": ["Fresnel blending of the diffuse component only makes sense when\n    one or both specular reflection layers are on. If there is no\n    specular reflection, you should turn off ", {"type": "ui", "text": ["Fresnel Blending"]}, "."], "extent": [6657, 6859]}], "container": true, "attrs": {"id": "diff_min"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Diffuse Color"], "extent": [6859, 6874], "body": [{"type": "para", "indent": 4, "text": ["The color reflected by the object (technically, the reflectivity\n    of red, green, and blue color components)."], "extent": [6893, 7010]}], "container": true, "attrs": {"id": "diff_clr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Oren-Nayar Roughness"], "extent": [7010, 7032], "body": [{"type": "para", "indent": 4, "text": ["A floating point value used to control the size or spread of the\n    diffuse  component. Higher values make the surface look less\n    glossy with flatter color."], "extent": [7053, 7219]}], "container": true, "attrs": {"id": "diff_rough"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Diffuse Component"], "extent": [7219, 7238], "body": [{"type": "para", "indent": 4, "text": ["Specifies a label for the BSDF component. This can be used to export\n    contributions from this component to a separate image plane."], "extent": [1442, 1581]}], "container": true, "attrs": {"id": "diff_label"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Subsurface"], "extent": [7295, 7312], "body": [{"type": "para", "indent": 0, "text": ["This tab controls subsurface scattering. This node provides a subset of the\ninterface of the ", {"scheme": "Node", "value": "/nodes/vop/physicalsss", "type": "link", "text": ["Physical SSS"], "fullpath": "/nodes/vop/physicalsss"}, " node. If you need even\nmore control over subsurface scattering, you may want to create a Physical SSS\nnode yourself."], "extent": [7312, 7560]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Subsurface Scattering"], "extent": [7560, 7590], "body": [{"type": "para", "indent": 4, "text": ["Simulate subsurface scattering of light through the object."], "extent": [7611, 7676]}], "container": true, "attrs": {"id": "sss_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Subsurface Albedo"], "extent": [7676, 7695], "body": [{"type": "para", "indent": 4, "text": ["The overall proportion of light that is scattered, from ", {"type": "code", "text": ["0"]}, " (no\n    scattering) to ", {"type": "code", "text": ["1"]}, " (all light is scattered). Higher subsurface albedo\n    values will produce more multiple scattering and a greater scattering\n    distance."], "extent": [7713, 7944]}], "container": true, "attrs": {"id": "sss_int"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Subsurface Color"], "extent": [7944, 7962], "body": [{"type": "para", "indent": 4, "text": ["The dominant color in lit areas of the surface."], "extent": [7980, 8033]}], "container": true, "attrs": {"id": "sss_clr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Subsurface Minimum"], "extent": [8033, 8053], "body": [{"type": "para", "indent": 4, "text": ["The minimum scattering intensity."], "extent": [8071, 8110]}], "container": true, "attrs": {"id": "sss_min"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attenuation Density"], "extent": [3839, 3860], "body": [{"type": "para", "indent": 4, "text": ["How quickly the light intensity decreases as it scatters. Higher values make the lighting level decrease faster. Available when ", {"type": "ui", "text": ["Parameter mode"]}, " is ", {"type": "ui", "text": ["Artist"]}, "."], "extent": [3883, 4050]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/shop/mantrasurface_sss_atten.png", "type": "link", "text": "", "fullpath": "/images/nodes/shop/mantrasurface_sss_atten.png"}], "extent": [4050, 4110]}], "container": true, "attrs": {"id": "attendensity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attenuation Color"], "extent": [8146, 8165], "body": [{"type": "para", "indent": 4, "text": ["The color tint that light takes on as it\u2019s scattered under the surface. In practice, this controls the ", {"type": "q", "text": ["far side"]}, " color of subsurface scattering."], "extent": [8188, 8339]}], "container": true, "attrs": {"id": "sss_attenclr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scattering Phase"], "extent": [8339, 8357], "body": [{"type": "para", "indent": 4, "text": ["Controls the nature of the scattering. Positive values give forward scattering, ", {"type": "code", "text": ["0"]}, " gives isotropic scattering, and negative values give backscattering. Range is ", {"type": "code", "text": ["-1"]}, " (full backscattering) to ", {"type": "code", "text": ["1"]}, " (full forward scattering)."], "extent": [5691, 5923]}, {"type": "para", "indent": 4, "text": ["The value depends on the type of material you are trying to model. For example, skin is highly forward scattering, while marble is backscattering."], "extent": [5923, 6075]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/shop/mantrasurface_sss_phase.png", "type": "link", "text": "", "fullpath": "/images/nodes/shop/mantrasurface_sss_phase.png"}], "extent": [6075, 6135]}], "container": true, "attrs": {"id": "sss_phase"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable RGB Spectral Scattering"], "extent": [8409, 8441], "body": [{"type": "para", "indent": 4, "text": ["Enables independent scattering of the red, green, and blue color\n    components.  When enabled, an independent scattering and absorption\n    coefficient will be used for each color component, leading to more\n    accurate renders - though the results can sometimes show colors that\n    are complementary to the attenuation color. For example, with a blue\n    attenuation color, shorter scattering distances will render with a\n    yellow tint. To partially eliminate this unpredictable effect, disable\n    this toggle."], "extent": [6526, 7048]}], "container": true, "attrs": {"id": "sss_spectral"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Single Scattering"], "extent": [8503, 8529], "body": [{"type": "para", "indent": 4, "text": ["Enable/disable contribution from light that scatters exactly once in the surface.  Certain types of surfaces (such as skin) gain little contribution from single scattering and so disabling this option will reduce computation time with little impact on accuracy."], "extent": [7119, 7386]}], "container": true, "attrs": {"id": "sss_1enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Single Intensity"], "extent": [8591, 8609], "body": [{"type": "para", "indent": 4, "text": ["A scaling factor for the contribution of single scattering to the surface\n    color, from ", {"type": "code", "text": ["0"]}, " (no contribution) to ", {"type": "code", "text": ["1"]}, " (full contribution)."], "extent": [8634, 8779]}], "container": true, "attrs": {"id": "sss_1intensity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Single Quality"], "extent": [8779, 8795], "body": [{"type": "para", "indent": 4, "text": ["The number of samples for single scattering. Increase this option to decrease noise at the expense of slower shading."], "extent": [7584, 7707]}], "container": true, "attrs": {"id": "sss_1quality"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Multiple Scattering"], "extent": [8867, 8895], "body": [{"type": "para", "indent": 4, "text": ["Enable contribution from light that scatters more than once in the surface.  For low albedo materials (low ", {"type": "ui", "text": ["Subsurface Albedo"]}, "), multiple scattering contributes little to the image and can be disabled to reduce computation time."], "extent": [8917, 9153]}], "container": true, "attrs": {"id": "sss_2enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Multi Model"], "extent": [9153, 9166], "body": [{"type": "para", "indent": 4, "text": ["Controls the way in which multiple scattering is computed.  Normally\n    you should use the ", {"type": "ui", "text": ["Local And Global"]}, " mode if you are planning to use\n    a point cloud, and ", {"type": "ui", "text": ["Ray Tracing"]}, " to compute multiple scattering\n    without a point cloud.  Using a point cloud can produce smoother and\n    faster results, but it requires precomputation of a point cloud and\n    computation of irradiance for each point in the cloud (once per\n    render)."], "extent": [8048, 8494]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Ray Tracing"], "extent": [8494, 8511], "body": [{"type": "para", "indent": 8, "text": ["Use ray tracing rather than a point cloud to approximate multiple\n        scattering.  This option avoids point cloud calculations but may\n        require more sampling to eliminate noise."], "extent": [8511, 8709]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Full Ray Tracing"], "extent": [8709, 8731], "body": [{"type": "para", "indent": 8, "text": ["When an single object is made of multiple packed primitives (i.e.\n        multiple Alembic shape nodes), each shape will have local multiple\n        scattering.  With Full Ray Traced, all individual packed primitives\n        will be considered when computing multiple scattering."], "extent": [8731, 9020]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Local BRDF"], "extent": [9020, 9036], "body": [{"type": "para", "indent": 8, "text": ["Only use a BRDF function to compute the multiple scattering\n        contribution.  This is the fastest option, though no subsurface\n        diffusion will be produced."], "extent": [9036, 9221]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Global Point Cloud"], "extent": [9221, 9245], "body": [{"type": "para", "indent": 8, "text": ["Use a point cloud to compute the multiple scattering contribution.\n        This option requires a precomputation stage to generate the point\n        cloud and to calculate and cache the surface irradiance values in\n        the point cloud."], "extent": [9245, 9502]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Local And Global"], "extent": [9502, 9524], "body": [{"type": "para", "indent": 8, "text": ["Use the BRDF function to compute the local contribution and the\n        point cloud to compute the global contribution, with the ", {"type": "ui", "text": ["Local\n        Radius Scale"]}, " parameter controlling the local radius.  This option\n        will usually produce more accurate results than using a point cloud\n        alone, especially for short scattering distances."], "extent": [9524, 9884]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Path Tracing"], "extent": [9884, 9902], "body": [{"type": "para", "indent": 8, "text": ["Simulate subsurface scattering by path tracing through it as a\n        volume.  This options is slow and noisy but will produce the most\n        accurate results - so it may be used to produce ground truth images\n        for comparison with the other techniques."], "extent": [9902, 10174]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "sss_2model"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Cloud Mode"], "extent": [9228, 9246], "body": [{"type": "para", "indent": 4, "text": ["Controls how the shader generates a point cloud.  The simplest option is to select ", {"type": "ui", "text": ["Generate At Render Time"]}, ".  This will create a new point cloud for every render.  To reduce computation time, you can first use ", {"type": "ui", "text": ["Write To File"]}, " mode and then re-use the point cloud using ", {"type": "ui", "text": ["Read From File"]}, " mode on subsequent renders.  This is also the recommended approach when rendering animations because the shader will smoothly interpolate the point cloud across frames.  The exception to this is when the model\u2019s topology changes (two joined polygons are separated, for example).  In this case, a new point cloud must be generated.  Note that in ", {"type": "ui", "text": ["Write To File"]}, " mode, the file will be overwritten if it already exists.  Cancelling a render before it completes in ", {"type": "ui", "text": ["Write To File"]}, " mode may result in an unusable point cloud file."], "extent": [11329, 12158]}, {"type": "para", "indent": 4, "text": ["See ", {"scheme": null, "value": "/nodes/vop/physicalsss#clouds", "type": "link", "text": ["managing point clouds"], "fullpath": "/nodes/vop/physicalsss#clouds", "fragment": "#clouds"}, " for more information."], "extent": [12158, 12243]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Generate At Render Time"], "extent": [12243, 12272], "body": [{"type": "para", "indent": 8, "text": ["Always regenerate the point cloud whenever the node renders. This is convenient since you don\u2019t have to worry about file management, and can be useful when you are modifying the shader and model at the same time. However, for efficiency you should cache the point cloud, especially when rendering animation."], "extent": [12272, 12597]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Read From File"], "extent": [12597, 12617], "body": [{"type": "para", "indent": 8, "text": ["Read the point cloud from a file (specified in the ", {"type": "ui", "text": ["Point Cloud"]}, " parameter below), generated using the ", {"type": "ui", "text": ["Write To File"]}, " mode."], "extent": [12617, 12763]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Write To File"], "extent": [12763, 12782], "body": [{"type": "para", "indent": 8, "text": ["Write the point cloud to the file specified in the ", {"type": "ui", "text": ["Point Cloud"]}, " parameter below."], "extent": [12782, 12875]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "sss_pcmode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Cloud"], "extent": [9315, 9328], "body": [{"type": "para", "indent": 4, "text": ["Controls the file the point cloud is written to/read from when ", {"type": "ui", "text": ["Point Cloud Mode"]}, " is ", {"type": "ui", "text": ["Write To File"]}, " or ", {"type": "ui", "text": ["Read From File"]}, ". The point cloud is based on surface UVs, so it is not necessary to write a new point cloud file for each frame unless the topology of the model is changes."], "extent": [12905, 13194]}], "container": true, "attrs": {"id": "sss_pcname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Multi Intensity"], "extent": [9397, 9414], "body": [{"type": "para", "indent": 4, "text": ["A scaling factor for the contribution of multiple scattering to the surface\n    color, from ", {"type": "code", "text": ["0"]}, " (no contribution) to ", {"type": "code", "text": ["1"]}, " (full contribution)."], "extent": [9439, 9586]}], "container": true, "attrs": {"id": "sss_2intensity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Multi Quality"], "extent": [9586, 9601], "body": [{"type": "para", "indent": 4, "text": ["Controls the number of samples in the point cloud. Low values give fast\n    renders but a sharper, less accurate look. High values give slower renders\n    but a blurrier, more accurate look."], "extent": [9624, 9820]}], "container": true, "attrs": {"id": "sss_2quality"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Base / Coat Reflection"], "extent": [9820, 9849], "body": [{"type": "para", "indent": 0, "text": ["This tab lets you add one or two layers of specular reflection. The\n", {"type": "ui", "text": ["Enable reflection layer"]}, " checkbox on each tab turns each layer\non or off. Turning on both layers does not blend between them, the\nnode simply adds them together."], "extent": [9849, 10084]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Reflection Layer"], "extent": [10084, 10109], "body": [{"type": "para", "indent": 4, "text": ["Enables this reflection layer."], "extent": [10131, 10167]}], "container": true, "attrs": {"id": "refl_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reflect Lights"], "extent": [10167, 10183], "body": [{"type": "para", "indent": 4, "text": ["Light sources (including environment lights) will be reflected.  Light\n    source reflections are commonly known as ", {"type": "q", "text": ["Specular Highlights"]}, "."], "extent": [10205, 10349]}], "container": true, "attrs": {"id": "refl_lights"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Specular Model"], "extent": [10349, 10365], "body": [{"type": "para", "indent": 4, "text": ["The mathematical model used to simulate glossy reflections. For each viewing angle and surface normal, the model defines from which directions and at what intensity light is reflected. This is what shapes specular highlights and reflections in general."], "extent": [370, 628]}, {"type": "para", "indent": 4, "text": ["The overall glossiness, and with it the size of highlights, is controlled by ", {"type": "ui", "text": ["Roughness"]}, ". The available models simulate the effects caused by ", {"type": "ui", "text": ["Roughness"]}, " with varying degrees of physical accuracy, with GGX currently being the most accurate."], "extent": [628, 878]}, {"type": "para", "indent": 4, "text": ["The chosen model has no effect when ", {"type": "ui", "text": ["Roughness"]}, " is ", {"type": "code", "text": ["0"]}, ", since this causes light to be reflected from a single direction at full intensity, making the model irrelevant."], "extent": [878, 1053]}, {"type": "para", "indent": 4, "text": ["See ", {"type": "ui", "text": ["Roughness"]}, " for more information."], "extent": [1053, 1098]}, {"type": "para", "indent": 4, "text": [{"type": "em", "text": ["The figure below shows the result produced by various specular models across a range of roughness values."]}], "extent": [1098, 1211]}, {"type": "para", "indent": 4, "text": [{"type": "em", "text": ["Note how rough surfaces look more natural with the GGX model because the interaction of light with the rough surface is modeled more accurately."]}], "extent": [1211, 1363]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/spec_model.png", "type": "link", "text": "", "fullpath": "/images/nodes/vop/spec_model.png"}], "extent": [1363, 1409]}], "container": true, "attrs": {"id": "spec_model"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Specular Intensity"], "extent": [10433, 10453], "body": [{"type": "para", "indent": 4, "text": ["The proportion of light that is reflected by this specular layer,\n    from ", {"type": "code", "text": ["0"]}, " (no light reflected) to ", {"type": "code", "text": ["1"]}, " (all light is reflected)."], "extent": [10472, 10610]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/shop/mantrasurface_spec_int.png", "type": "link", "text": "", "fullpath": "/images/nodes/shop/mantrasurface_spec_int.png"}], "extent": [10610, 10669]}], "container": true, "attrs": {"id": "spec_int"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Specular Minimum"], "extent": [10669, 10687], "body": [{"type": "para", "indent": 4, "text": ["When Fresnel Blending is enabled, controls the proportion of\n    specular reflection that will ", {"type": "em", "text": ["not"]}, " be blended with the Fresnel\n    factor. Increasing this parameter will cause a minimum amount of\n    reflection to appear even for rays perpendicular to the surface."], "extent": [10706, 10978]}], "container": true, "attrs": {"id": "spec_min"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Specular Color"], "extent": [10978, 10994], "body": [{"type": "para", "indent": 4, "text": ["The tint of the specular highlight (technically the reflectivity\n    for the red, blue, and green color components). For example,\n    setting the specular color to ", {"type": "code", "text": ["1, 0, 0"]}, " will reflect only red\n    light, giving red highlights."], "extent": [11013, 11248]}], "container": true, "attrs": {"id": "spec_clr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Specular Metallic"], "extent": [11248, 11267], "body": [{"type": "para", "indent": 4, "text": ["Controls how metallic reflections appear. This uses a different method of calculating reflection intensity that is physically correct for conductive materials."], "extent": [11291, 11456]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/shop/mantrasurface_spec_metallic.png", "type": "link", "text": "", "fullpath": "/images/nodes/shop/mantrasurface_spec_metallic.png"}], "extent": [11456, 11520]}], "container": true, "attrs": {"id": "spec_metallic"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Metallic Edge Tint"], "extent": [11520, 11540], "body": [{"type": "para", "indent": 4, "text": ["Controls the tint color used for the metallic reflection model. This controls the color around the edges of objects (where the surface is seen at a grazing angle). Metals typically have a slightly different tint in these regions."], "extent": [11564, 11799]}], "container": true, "attrs": {"id": "spec_edgetint"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Specular Roughness"], "extent": [11799, 11819], "body": [{"type": "para", "indent": 4, "text": ["This is a measure of how bumpy a surface is at the microscopic level. The most obvious effect is that reflections become glossier as ", {"type": "ui", "text": ["Roughness"]}, " increases. At a value of ", {"type": "code", "text": ["0"]}, ", the surface is perfectly smooth and produces perfect mirror reflections. A value of ", {"type": "code", "text": ["1"]}, " simulates a very rough surface, which results in very blurry reflections, similar to diffuse reflection."], "extent": [1608, 1983]}, {"type": "para", "indent": 4, "text": ["In more accurate ", {"type": "ui", "text": ["Specular Models"]}, " like ", {"type": "code", "text": ["GGX"]}, ", reflections on rough surfaces are also darkened at grazing angles. This is due to Masking-Shadowing effects, where parts of the surface are hidden from view and/or not reached by light due to microscopic grooves and spikes in the surface. Note that this is simulated using a simplified mathematical model, rather than using actual additional geometry."], "extent": [1983, 2389]}, {"type": "para", "indent": 4, "text": ["The visual change when transitioning from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, " is close to linear."], "extent": [2389, 2467]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/pbrspecular_rough_dielectric.png", "type": "link", "text": "", "fullpath": "/images/nodes/vop/pbrspecular_rough_dielectric.png"}], "extent": [2467, 2531]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/pbrspecular_rough_metallic.png", "type": "link", "text": "", "fullpath": "/images/nodes/vop/pbrspecular_rough_metallic.png"}], "extent": [2531, 2593]}], "container": true, "attrs": {"id": "spec_rough"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Specular Anisotropy"], "extent": [11876, 11897], "body": [{"type": "para", "indent": 4, "text": ["Causes reflections to be stretched in the direction defined by ", {"type": "ui", "text": ["Anisotropy Direction"]}, "."], "extent": [828, 922]}, {"type": "para", "indent": 4, "text": ["This simulates microscopic bumps with a directional bias, causing light to be scattered more in the defined direction. This is typical of brushed metals."], "extent": [922, 1081]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/principled_shader_aniso.png", "type": "link", "text": "", "fullpath": "/images/nodes/vop/principled_shader_aniso.png"}], "extent": [1081, 1140]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/pbrspecular_aniso.png", "type": "link", "text": "", "fullpath": "/images/nodes/vop/pbrspecular_aniso.png"}], "extent": [2675, 2728]}, {"type": "para", "indent": 4, "text": ["The effect of this parameter increases with ", {"type": "ui", "text": ["Roughness"]}, ". It has no effect at all when ", {"type": "ui", "text": ["Roughness"]}, " is ", {"type": "code", "text": ["0.0"]}, "."], "extent": [1169, 1286]}], "container": true, "attrs": {"id": "spec_aniso"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Anisotropy Direction"], "extent": [11954, 11976], "body": [{"type": "para", "indent": 4, "text": ["Controls the direction of ", {"type": "ui", "text": ["Anisotropy"]}, " relative to the UV coordinates of the surface. At ", {"type": "code", "text": ["0.0"]}, ", reflections are stretched in the ", {"type": "ui", "text": ["U"]}, " direction. At ", {"type": "code", "text": ["0.5"]}, ", the direction is rotated by ", {"type": "code", "text": ["90 degrees"]}, " to the ", {"type": "ui", "text": ["V"]}, " direction. ", {"type": "code", "text": ["1.0"]}, " equals ", {"type": "code", "text": ["180"]}, " degrees. Since the effect is symmetrical this produces the same result as ", {"type": "code", "text": ["0.0"]}, "."], "extent": [1312, 1640]}, {"type": "para", "indent": 4, "text": ["The direction of rotation also depends on the UV layout. When the UVs are layed out such that textures appear on the surface without mirroring, higher values rotate counter-clockwise."], "extent": [1640, 1829]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/principled_shader_anisodir.png", "type": "link", "text": "", "fullpath": "/images/nodes/vop/principled_shader_anisodir.png"}], "extent": [1829, 1891]}, {"type": "para", "indent": 4, "text": ["The effect of this parameter diminishes with decreasing ", {"type": "ui", "text": ["Roughness"]}, " and ", {"type": "ui", "text": ["Anisotropy"]}, "."], "extent": [1891, 1986]}], "container": true, "attrs": {"id": "spec_anisodir"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reflect Objects"], "extent": [12039, 12056], "body": [{"type": "para", "indent": 4, "text": ["This reflection layer will reflect other objects in the scene,\n    using raytracing."], "extent": [12076, 12166]}], "container": true, "attrs": {"id": "refl_objs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Separate Object Reflection Parameters"], "extent": [12166, 12205], "body": [{"type": "para", "indent": 4, "text": ["Enables separate roughness, intensity, and color parameters for object\n    reflections, independent of the parameters for specular\n    reflections. This lets you create artistic (physically\n    unrealistic) differences between the object reflections and light\n    reflections."], "extent": [12224, 12506]}], "container": true, "attrs": {"id": "refl_sep"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reflection Intensity"], "extent": [12506, 12528], "body": [{"type": "para", "indent": 4, "text": ["The intensity to use for object reflections, when ", {"type": "ui", "text": ["Separate\n    object reflection parameters"]}, " is on. This overrides ", {"type": "ui", "text": ["Specular\n    Intensity"]}, "."], "extent": [12547, 12698]}], "container": true, "attrs": {"id": "refl_int"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reflection Color"], "extent": [12698, 12716], "body": [{"type": "para", "indent": 4, "text": ["A tint color for object reflections, when ", {"type": "ui", "text": ["Separate object\n    reflection parameters"]}, " is on. This overrides ", {"type": "ui", "text": ["Specular Color"]}, "."], "extent": [12735, 12870]}], "container": true, "attrs": {"id": "refl_clr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reflection Roughness"], "extent": [12870, 12892], "body": [{"type": "para", "indent": 4, "text": ["The roughness used for object reflections when ", {"type": "ui", "text": ["Separate Object Reflection Parameters"]}, " is enabled."], "extent": [12913, 13019]}], "container": true, "attrs": {"id": "refl_rough"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reflection Component"], "extent": [13019, 13041], "body": [{"type": "para", "indent": 4, "text": ["Specifies a label for the BSDF component. This can be used to export\n    contributions from this component to a separate image plane."], "extent": [1442, 1581]}], "container": true, "attrs": {"id": "refl_label"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Refract"], "extent": [13098, 13112], "body": [{"type": "para", "indent": 0, "text": ["This tab contains parameters for refraction (light bending as it\ntravels through the object, such as in glass or water). Refraction is\noff by default. If you turn it on the surface will refract light\nproportional to the ", {"type": "ui", "text": ["Refraction intensity"]}, "."], "extent": [13112, 13360]}, {"type": "para", "indent": 0, "text": ["For physically plausible results with refractions, you should also\nturn on ", {"type": "ui", "text": ["Fresnel Blending"]}, " and ", {"type": "ui", "text": ["Conserve Energy"]}, "."], "extent": [13360, 13482]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Refractions"], "extent": [13482, 13502], "body": [{"type": "para", "indent": 4, "text": ["Turns on simulation of light refracting through the object."], "extent": [13524, 13589]}], "container": true, "attrs": {"id": "refr_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Refract Lights"], "extent": [13589, 13605], "body": [{"type": "para", "indent": 4, "text": ["Light sources (including environment lights) will appear in refractions."], "extent": [13627, 13705]}], "container": true, "attrs": {"id": "refr_lights"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Refraction Model"], "extent": [13705, 13723], "body": [{"type": "para", "indent": 4, "text": ["The mathematical model used to simulate glossy refractions. For each viewing angle and surface normal, the model defines from which directions and at what intensity light is refracted. This is what shapes highlights and refractions in general."], "extent": [13744, 13993]}, {"type": "para", "indent": 4, "text": ["The overall glossiness, and with it the size of highlights, is controlled by ", {"type": "ui", "text": ["Refraction Roughness"]}, "."], "extent": [13993, 14101]}, {"type": "para", "indent": 4, "text": ["The chosen model has no effect when ", {"type": "ui", "text": ["Refraction Roughness"]}, " is ", {"type": "code", "text": ["0"]}, ", since this causes light to be refracted from a single direction at full intensity, making the model irrelevant."], "extent": [14101, 14287]}], "container": true, "attrs": {"id": "refr_model"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Refraction Intensity"], "extent": [14287, 14309], "body": [{"type": "para", "indent": 4, "text": ["The proportion of light refracted by the surface, from ", {"type": "code", "text": ["0"]}, " (no\n    light refracted) to ", {"type": "code", "text": ["1"]}, " (all incoming light is refracted)."], "extent": [14328, 14459]}], "container": true, "attrs": {"id": "refr_int"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Refraction Minimum"], "extent": [14459, 14479], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Fresnel Blending"]}, " is on, controls the proportion of\n    refraction that will ", {"type": "em", "text": ["not"]}, " be blended with the Fresnel factor.\n    Increasing this parameter will cause a minimum amount of\n    refraction to appear even for rays that graze the surface (and so\n    would normally not refract)."], "extent": [14498, 14794]}], "container": true, "attrs": {"id": "refr_min"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Refraction Color"], "extent": [14794, 14812], "body": [{"type": "para", "indent": 4, "text": ["A tint for the refracted light (technically, the refraction amount\n    for different color components). For example, setting the\n    refraction color to ", {"type": "code", "text": ["1, 0, 0"]}, " will cause the surface to refract\n    only red light."], "extent": [14833, 15055]}], "container": true, "attrs": {"id": "refr_color"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Refraction Roughness"], "extent": [15055, 15077], "body": [{"type": "para", "indent": 4, "text": ["Roughness is a measure of how bumpy a surface is at the microscopic level. The most obvious effect is that refractions become glossier as roughness increases."], "extent": [15098, 15262]}, {"type": "para", "indent": 4, "text": ["At a value of ", {"type": "code", "text": ["0"]}, ", the surface is perfectly smooth and produces perfect refractions like glass. A value of ", {"type": "code", "text": ["1"]}, " simulates a very rough surface, which results in very blurry refractions, like milky glass."], "extent": [15262, 15470]}, {"type": "para", "indent": 4, "text": ["The visual change when transitioning from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, " should be close to linear."], "extent": [15470, 15556]}], "container": true, "attrs": {"id": "refr_rough"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Refraction Anisotropy"], "extent": [15556, 15579], "body": [{"type": "para", "indent": 4, "text": ["The direction and amount of anisotropy in the refraction. Values\n    less than 0 will sharpen the refraction in the U direction while\n    values larger than 0 will sharpen the refraction in the V\n    direction. When the ", {"type": "ui", "text": ["Refraction Anisotropy"]}, " is ", {"type": "code", "text": ["-1"]}, " or ", {"type": "code", "text": ["1"]}, ",\n    refractions will have a width of ", {"type": "code", "text": ["0"]}, " in the other direction."], "extent": [15600, 15932]}], "container": true, "attrs": {"id": "refr_aniso"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Refraction Anisotropy Angle"], "extent": [15932, 15961], "body": [{"type": "para", "indent": 4, "text": ["The angle to rotate anisotropic refrations.  A value of 0 will align it\n    directly with the parametric directions while other angles rotate\n    clockwise."], "extent": [15987, 16149]}], "container": true, "attrs": {"id": "refr_anisoangle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Refract Objects"], "extent": [16149, 16166], "body": [{"type": "para", "indent": 4, "text": ["Show refractions of objects. You should normally leave this option\n    on (otherwise no refractions will appear) unless you are\n    simulating a single sheet of reflective material, and you still\n    want light to filter through the object."], "extent": [16186, 16432]}], "container": true, "attrs": {"id": "refr_objs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Attenuation"], "extent": [16432, 16452], "body": [{"type": "para", "indent": 4, "text": ["Tint the refractions based on the distance the light traveled\n    through through the object, with rays that travel further through\n    the object being more opaque."], "extent": [16475, 16646]}], "container": true, "attrs": {"id": "atten_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attenuation Density"], "extent": [16646, 16667], "body": [{"type": "para", "indent": 4, "text": ["The density of the material, for calculating attenuation (see\n    above). Larger density values make the material appear more\n    opaque. Setting the density to ", {"type": "code", "text": ["0"]}, " is the same as turning off\n    attenuation."], "extent": [16687, 16901]}], "container": true, "attrs": {"id": "atten_den"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attenuation Color"], "extent": [16901, 16920], "body": [{"type": "para", "indent": 4, "text": ["The color to tint light passing through the object. Technically,\n    this is the inverse of the color that is absorbed (the opacity)."], "extent": [16940, 17079]}], "container": true, "attrs": {"id": "atten_clr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Thin Film Refraction"], "extent": [17079, 17101], "body": [{"type": "para", "indent": 4, "text": ["Treat the surface of the shaded object as a thin refractive film\n    rather than the boundary between the outside of the object and a\n    solid interior. Turn this on to simulate hollow and/or thin\n    refractive objects such as bubbles or windows. The node still uses\n    the refractive index to calculate the proportion of reflection and\n    refraction for fresnel blending, but the transmitted ray will not\n    change direction."], "extent": [17121, 17558]}], "container": true, "attrs": {"id": "refr_thin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Refraction Component"], "extent": [17558, 17580], "body": [{"type": "para", "indent": 4, "text": ["Specifies a label for the BSDF component. This can be used to export\n    contributions from this component to a separate image plane."], "extent": [1442, 1581]}], "container": true, "attrs": {"id": "refr_label"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "emission", "container": true, "type": "h", "indent": 0, "text": ["Emission"], "extent": [17637, 17663], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Emission"], "extent": [17663, 17681], "body": [{"type": "para", "indent": 4, "text": ["Add a constant amount of diffuse light emitted from the surface. For example, with emission on, the object would be visible in the render even\n    if none of the light objects were shining on it. This may be useful in\n    some circumstances, but normally you should simply use an\n    ", {"scheme": "Node", "value": "/nodes/obj/hlight", "type": "link", "text": ["Area Light"], "fullpath": "/nodes/obj/hlight"}, " to add light to the scene more efficiently\n    and controllably, especially if you need to add a lot of light."], "extent": [17703, 18132]}], "container": true, "attrs": {"id": "emit_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Emission Intensity"], "extent": [18132, 18152], "body": [{"type": "para", "indent": 4, "text": ["The amount of emission."], "extent": [18171, 18200]}], "container": true, "attrs": {"id": "emit_int"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Emission Color"], "extent": [18200, 18216], "body": [{"type": "para", "indent": 4, "text": ["The color of the emitted light."], "extent": [18235, 18272]}], "container": true, "attrs": {"id": "emit_clr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Emission Illuminates Objects"], "extent": [18272, 18302], "body": [{"type": "para", "indent": 4, "text": ["The light emitted by this object will brighten the surfaces of other\n    objects. When this option is off, the emitted light will be visible in\n    the camera, but will not fall on other objects in the scene."], "extent": [18323, 18537]}], "container": true, "attrs": {"id": "emit_illum"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Opacity"], "extent": [18537, 18551], "body": [{"type": "para", "indent": 0, "text": ["The parameters on this tab control the rendered opacity of the\nsurface, useful for fake transparency effects such as sprite rendering\nand fake caustics."], "extent": [18551, 18706]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Opacity Scale"], "extent": [18706, 18721], "body": [{"type": "para", "indent": 4, "text": ["Scales the value of the ", {"type": "ui", "text": ["Opacity"]}, " parameter. This is useful as a\n    single number to manipulate rather than having to change all three\n    components of the ", {"type": "ui", "text": ["Opacity"]}, " parameter together."], "extent": [18740, 18937]}], "container": true, "attrs": {"id": "opac_int"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Opacity"], "extent": [18937, 18946], "body": [{"type": "para", "indent": 4, "text": ["The opacity for each color component."], "extent": [18965, 19008]}], "container": true, "attrs": {"id": "opac_clr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Fake Caustics"], "extent": [19008, 19030], "body": [{"type": "para", "indent": 4, "text": ["Transmissive objects produce semi-transparent shadows that attempt\n    to approximate the amount of light that would be transmitted if\n    real caustics were rendered. If you're rendering real caustics\n    using an ", {"scheme": "Node", "value": "/nodes/obj/indirectlight", "type": "link", "text": ["Indirect Light"], "fullpath": "/nodes/obj/indirectlight"}, ", turn this\n    parameter off."], "extent": [19052, 19342]}], "container": true, "attrs": {"id": "fake_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Shadow Intensity"], "extent": [19342, 19364], "body": [{"type": "para", "indent": 4, "text": ["The minimum shadow intensity to use for fake caustics. Increase\n    this to darken the lightest part of the shadow."], "extent": [19383, 19504]}], "container": true, "attrs": {"id": "fake_min"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Shadow Intensity"], "extent": [19504, 19526], "body": [{"type": "para", "indent": 4, "text": ["The maximum shadow intensity to use for fake caustics. Decrease\n    this to lighten the darkest part of the shadow."], "extent": [19544, 19665]}], "container": true, "attrs": {"id": "fake_max"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Opacity Falloff"], "extent": [19665, 19689], "body": [{"type": "para", "indent": 4, "text": ["Blend between different opacities for parts of the surface that are perpendicular (head-on) to the camera and parts that are parallel (edge-on)."], "extent": [19712, 19862]}], "container": true, "attrs": {"id": "opac_falloff"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Parallel Opacity"], "extent": [19862, 19880], "body": [{"type": "para", "indent": 4, "text": ["The opacity to use for rays that are parallel to the surface\n    normal, when ", {"type": "ui", "text": ["Enable opacity falloff"]}, " is on."], "extent": [19900, 20017]}], "container": true, "attrs": {"id": "opac_para"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Perp Opacity"], "extent": [20017, 20031], "body": [{"type": "para", "indent": 4, "text": ["The opacity to use for rays that are perpendicular to the surface\n    normal (rays that graze the surface), when ", {"type": "ui", "text": ["Enable opacity\n    falloff"]}, " is on."], "extent": [20051, 20207]}], "container": true, "attrs": {"id": "opac_perp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Opacity Rolloff"], "extent": [20207, 20224], "body": [{"type": "para", "indent": 4, "text": ["Controls the blending point between parallel and perpendicular\n    opacity. Values larger than ", {"type": "code", "text": ["1"]}, " give more parallel opacity, values\n    smaller than ", {"type": "code", "text": ["1"]}, " give more perpendicular opacity."], "extent": [20247, 20440]}], "container": true, "attrs": {"id": "opac_rolloff"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Settings"], "extent": [20440, 20455], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Inside IOR"], "extent": [20455, 20468], "body": [{"type": "para", "indent": 4, "text": ["The interior index of refraction for use in physical Fresnel\n    computations. Water has an index of refraction around ", {"type": "code", "text": ["1.33"]}, "."], "extent": [20485, 20617]}], "container": true, "attrs": {"id": "ior_in"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Outside IOR"], "extent": [20617, 20630], "body": [{"type": "para", "indent": 4, "text": ["The exterior index of refraction for use in physical Fresnel\n    computations. Air has an index of refraction near ", {"type": "code", "text": ["1"]}, "."], "extent": [20648, 20773]}], "container": true, "attrs": {"id": "ior_out"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Conserve Energy"], "extent": [20773, 20790], "body": [{"type": "para", "indent": 4, "text": ["Ensures that the surface reflects no more light than it receives.\n    This is important in physically based rendering and raytracing to\n    ensure the illumination in the scene does not increase as the\n    number of raytracing bounces increases. For example, a surface\n    that reflects twice as much light as it receives (by turning off\n    ", {"type": "ui", "text": ["Conserve Energy"]}, " and setting the ", {"type": "ui", "text": ["Specular Intensity"]}, " to 2)\n    would produce a unnaturally bright render as you increase the\n    ", {"type": "ui", "text": ["Reflect Limit"]}, "."], "extent": [20815, 21316]}, {"type": "para", "indent": 4, "text": ["This setting conserves energy by scaling the BSDF by the inverse\n    of its reflectivity when the node detects the reflectivity is\n    greather than 1. This reduces all components of the surface model\n    by the same factor, linearly darkening of the surface."], "extent": [21316, 21581]}, {"type": "para", "indent": 4, "text": ["You can calculate the total reflectivity of a surface (assuming\n    ", {"type": "ui", "text": ["Fresnel Blending"]}, " is off) by summing the ", {"type": "ui", "text": ["Diffuse Intensity"]}, ",\n    ", {"type": "ui", "text": ["Specular Intensity"]}, " (for each layer) and ", {"type": "ui", "text": ["Refraction\n    Intensity"]}, ". For predictable results, you should try to conserve\n    energy manually by limiting the intensity or reflectivity\n    parameters."], "extent": [21581, 21929]}], "container": true, "attrs": {"id": "conserveenergy"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fresnel Blending"], "extent": [21929, 21947], "body": [{"type": "para", "indent": 4, "text": ["Turns on Fresnel blending, where the reflection and/or refraction\n    amount varies based on the viewing angle to the surface. This\n    allows you to simulate materials such as glass and water. You can\n    control the proportion of Fresnel blending for each component\n    through the ", {"type": "q", "text": ["minimum"]}, " parameters on the different tabs (for\n    example, ", {"type": "ui", "text": ["Diffuse Minimum"]}, " on the ", {"type": "ui", "text": ["Diffuse"]}, " tab)."], "extent": [21969, 22364]}, {"type": "para", "indent": 4, "text": ["Diffuse and Refract components use the transmissive component for\n    Fresnel blending, while Reflect components use the reflective\n    component."], "extent": [22364, 22516]}], "container": true, "attrs": {"id": "fres_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fresnel Style"], "extent": [22516, 22531], "body": [{"type": "para", "indent": 4, "text": ["How the Fresnel blending factor is calculated, either from\n    parameters or the ", {"type": "code", "text": ["Fresnel"]}, " input."], "extent": [22552, 22655]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Physically Based"], "extent": [22655, 22677], "body": [{"type": "para", "indent": 8, "text": ["Calculate Fresnel factors from the ", {"type": "ui", "text": ["Inside IOR"]}, " and\n        ", {"type": "ui", "text": ["Outside IOR"]}, " parameters. These parameters let you simulate\n        the Fresnel properties of real-world physical materials/media\n        by entering their ", {"type": "em", "text": ["index of refraction"]}, " values."], "extent": [22677, 22936]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Use Connected ", {"type": "code", "text": ["fresnel"]}], "extent": [22936, 22965], "body": [{"type": "para", "indent": 8, "text": ["Use the ", {"type": "code", "text": ["Fresnel"]}, " input if it is connected. The ", {"type": "code", "text": ["fresnel"]}, "\n        input should be the reflective Fresnel coefficient. The\n        transmissive component will be calculated automatically as\n        1-Fresnel."], "extent": [22965, 23182]}, {"type": "para", "indent": 8, "text": ["If the ", {"type": "code", "text": ["fresnel"]}, " input is not connected, uses ", {"type": "ui", "text": ["Inside IOR"]}, "\n        and ", {"type": "ui", "text": ["Outside IOR"]}, " blending instead."], "extent": [23182, 23298]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fres_style"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ensure Faces Point Forward"], "extent": [23298, 23326], "body": [{"type": "para", "indent": 4, "text": ["Automatically flip normals if necessary so planal surfaces are\n    diffuse shaded the same way regardless of normal direction. This\n    setting does not apply to refractions and Fresnel reflections\n    since they rely on the normal direction to define inside and\n    outside for Fresnel blending."], "extent": [23344, 23646]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [23646, 23656], "body": [{"type": "para", "indent": 8, "text": ["If normal maps exported from another software package look strange with this option on, it may be because the normal map was output with flipped normals."], "extent": [23656, 23819]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "facefwd"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tangent Style"], "extent": [147, 163], "body": [{"type": "para", "indent": 4, "text": ["Controls how this node calculates the direction of anisotropic\n    reflections/highlights."], "extent": [187, 287]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use Geometric Tangents"], "extent": [287, 315], "body": [{"type": "para", "indent": 8, "text": ["Use the geometric tangents (", {"type": "code", "text": ["dPds"]}, ", ", {"type": "code", "text": ["dPdt"]}, ") automatically\n        defined for the type of geometry being rendered. Since the\n        geometry defines the tangents, the highlight is stable as the\n        geometry moves and/or deforms. However, for polygonal\n        geometry, this style of tangent calculation will have\n        discontinuities / artifacts along edges."], "extent": [315, 692]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Intrinsic World Space"], "extent": [692, 719], "body": [{"type": "para", "indent": 8, "text": ["Calculate tangents in world space. Tangents will be smooth\n        across all types of geometry, but the highlights will change\n        if the object moves through space."], "extent": [719, 899]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Intrinsic Object Space"], "extent": [899, 927], "body": [{"type": "para", "indent": 8, "text": ["Calculate tangents in the shaded object\u2019s local space.\n        Tangents will be smooth across all geometry, but the\n        highlights will change if the object deforms."], "extent": [927, 1106]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Compute From UV"], "extent": [1106, 1127], "body": [{"type": "para", "indent": 8, "text": ["Calculate tangents using UV attributes on the object. The U\n        and V tangents will point in the directions of increasing U\n        and V coordinates. As long as the UV coordinates are\n        consistent and smooth, the highlight is stable as the geometry\n        moves/transforms and smooth over polygonal surfaces."], "extent": [1127, 1457]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Use Connected ", {"type": "code", "text": ["utan"]}, ", ", {"type": "code", "text": ["vtan"]}], "extent": [1457, 1491], "body": [{"type": "para", "indent": 8, "text": ["Use the tangent values from the connected ", {"type": "code", "text": ["utan"]}, " and ", {"type": "code", "text": ["vtan"]}, "\n        inputs. This option allows you to use VOPs connected to the\n        inputs to compute the tangents yourself for maximum\n        flexibility."], "extent": [1491, 1709]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "tan_style"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Ray Distance"], "extent": [23851, 23869], "body": [{"type": "para", "indent": 4, "text": ["For reflections and refractions in non-", {"scheme": null, "value": "/render/pbr", "type": "link", "text": ["PBR"], "fullpath": "/render/pbr"}, "\n    renders, treat rays that travel farther than this distance (in\n    Houdini world space units) without intersecting any geometry as\n    missed rays."], "extent": [23887, 24102]}], "container": true, "attrs": {"id": "maxdist"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [24102, 24110], "body": [{"type": "para", "indent": 0, "text": ["None of these inputs need to be connected for correct operation of the\nSurface Model node - when left disconnected, the correspondingly named\nglobal variable or attribute will be bound automatically."], "extent": [24110, 24312]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["P"], "extent": [24312, 24315], "body": [{"type": "para", "indent": 4, "text": ["Surface position, used as the origin for raytracing operations\n    from the surface."], "extent": [24315, 24405]}], "container": true}, {"type": "dt", "indent": 0, "text": ["N"], "extent": [24405, 24408], "body": [{"type": "para", "indent": 4, "text": ["Surface normal. You can override ", {"type": "code", "text": ["N"]}, " to enable bump mapping."], "extent": [24408, 24474]}], "container": true}, {"type": "dt", "indent": 0, "text": ["I"], "extent": [24474, 24477], "body": [{"type": "para", "indent": 4, "text": ["Incident ray direction."], "extent": [24477, 24506]}], "container": true}, {"type": "dt", "indent": 0, "text": ["uv"], "extent": [24506, 24510], "body": [{"type": "para", "indent": 4, "text": ["Parametric coordinate, for tangent vector calculation when the\n    ", {"type": "ui", "text": ["Tangent Style"]}, " is set to ", {"type": "q", "text": ["Compute From UV"]}, ". When disconnected,\n    the ", {"type": "q", "text": ["uv"]}, " parameter will be assumed."], "extent": [24510, 24688]}], "container": true}, {"type": "dt", "indent": 0, "text": ["utan"], "extent": [24688, 24694], "body": [{"type": "para", "indent": 4, "text": ["U Tangent vector to use when ", {"type": "ui", "text": ["Tangent Style"]}, " is ", {"type": "q", "text": ["Use Connected\n    utan, vtan"]}, "."], "extent": [24694, 24781]}], "container": true}, {"type": "dt", "indent": 0, "text": ["vtan"], "extent": [24781, 24787], "body": [{"type": "para", "indent": 4, "text": ["V Tangent vector to use when ", {"type": "ui", "text": ["Tangent Style"]}, " is ", {"type": "q", "text": ["Use Connected\n    utan, vtan"]}, "."], "extent": [24787, 24874]}], "container": true}, {"type": "dt", "indent": 0, "text": ["fresnel"], "extent": [24874, 24883], "body": [{"type": "para", "indent": 4, "text": ["Reflective fresnel blending coefficient to use when ", {"type": "ui", "text": ["Fresnel\n    Style"]}, " is ", {"type": "q", "text": ["Use Connected fresnel"]}, "."], "extent": [24883, 24990]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [24990, 24999], "body": [{"type": "para", "indent": 0, "text": ["The output values can be connected to the output variables in the\nsurface context of the same name."], "extent": [24999, 25101]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Cf"], "extent": [25101, 25105], "body": [{"type": "para", "indent": 4, "text": ["The shaded, lit surface color for use in micropolygon rendering\n    and raytracing rendering engines."], "extent": [25105, 25212]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Of"], "extent": [25212, 25216], "body": [{"type": "para", "indent": 4, "text": ["The surface opacity."], "extent": [25216, 25242]}], "container": true}, {"type": "dt", "indent": 0, "text": ["F"], "extent": [25242, 25245], "body": [{"type": "para", "indent": 4, "text": ["The surface BSDF."], "extent": [25245, 25268]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [25268, 25277], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/vop/brushedmetalshader", "type": "link", "text": "", "fullpath": "/nodes/vop/brushedmetalshader"}], "extent": [25277, 25310]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/vop/carpaintshader", "type": "link", "text": "", "fullpath": "/nodes/vop/carpaintshader"}], "extent": [25310, 25338]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/vop/glass", "type": "link", "text": "", "fullpath": "/nodes/vop/glass"}], "extent": [25338, 25357]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/vop/principledshader", "type": "link", "text": "", "fullpath": "/nodes/vop/principledshader"}], "extent": [25357, 25387]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/vop/layercomp", "type": "link", "text": "", "fullpath": "/nodes/vop/layercomp"}], "extent": [25387, 25410]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/vop/layermix", "type": "link", "text": "", "fullpath": "/nodes/vop/layermix"}], "extent": [25410, 25432]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/vop/layerpack", "type": "link", "text": "", "fullpath": "/nodes/vop/layerpack"}], "extent": [25432, 25455]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/vop/layerunpack", "type": "link", "text": "", "fullpath": "/nodes/vop/layerunpack"}], "extent": [25455, 25480]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/vop/setlayercomponent", "type": "link", "text": "", "fullpath": "/nodes/vop/setlayercomponent"}], "extent": [25480, 25511]}], "container": true}], "text": "Related"}], "title": ["Surface Model Shader"], "summary": ["A powerful, highly flexible, general model for surface shading."], "included": ["/nodes/vop/computetan", "/nodes/vop/pbrspecular", "/nodes/vop/physicalsss", "/nodes/vop/standard_shading_parms"]}