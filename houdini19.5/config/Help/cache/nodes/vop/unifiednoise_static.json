{"type": "root", "attrs": {"type": "node", "context": "vop", "internal": "unifiednoise_static", "icon": "VOP/unifiednoise", "redirect": "/nodes/vop/unifiednoise", "version": "3.0", "since": "17.0", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Unified Noise Static"], "extent": [0, 25]}, {"type": "summary", "indent": 0, "text": ["Presents a unified interface and uniform output range for all the noise types available in VEX."], "extent": [170, 273]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [224, 230], "body": [{"type": "para", "indent": 4, "text": ["Houdini ships with the ", {"scheme": "Node", "value": "/nodes/vop/unifiednoise", "type": "link", "text": ["Unified Noise VOP "], "fullpath": "/nodes/vop/unifiednoise"}, " and the ", {"scheme": "Node", "value": "/nodes/vop/unifiednoise_static", "type": "link", "text": ["Unified Noise - Static VOP"], "fullpath": "/nodes/vop/unifiednoise_static"}, ". The ", {"type": "q", "text": ["static"]}, " variant is pre-compiled so it is faster inside a VOP network. The only difference with the static node is that you must set the noise type and fractal type in the parameters (you cannot vary them using VOP inputs)."], "extent": [252, 622]}, {"type": "para", "indent": 4, "text": ["If you are working interactively in a VOP network and don\u2019t need to dynamically change the noise type, you probably want to use the ", {"type": "q", "text": ["static"]}, " version for better speed."], "extent": [622, 798]}, {"type": "para", "indent": 4, "text": ["(If you promote parameters from a regular Unified Noise up to a subnetwork or material, it will also be compiled and will become as fast as the static version.)"], "extent": [798, 964]}], "container": true, "attrs": {"id": "static_note"}}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["See the ", {"scheme": "Node", "value": "/nodes/vop/unifiednoise", "type": "link", "text": ["Unified Noise VOP"], "fullpath": "/nodes/vop/unifiednoise"}, "."], "extent": [309, 361]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2771, 2783], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Signature"], "extent": [2783, 2795], "body": [{"type": "para", "indent": 4, "text": ["Sets the data types this node expects for the inputs, and the data type of the output. This allows you to integrate the noise with various other VOPs. If you choose a ", {"type": "ui", "text": ["Noise type"]}, " that doesn\u2019t need this many components, the node will simply not use/set every component of the input/output."], "extent": [2795, 3092]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise type"], "extent": [3092, 3104], "body": [{"type": "para", "indent": 4, "text": ["The type of noise to generate. Different algorithms give noise with different characteristics."], "extent": [3119, 3223]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Fast"], "extent": [3223, 3233], "body": [{"type": "para", "indent": 8, "text": ["The default. A faster and more interesting variant of Perlin noise."], "extent": [3233, 3314]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_simplex.jpg", "type": "img", "text": ""}], "extent": [3314, 3368]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sparse Convolution"], "extent": [3368, 3392], "body": [{"type": "para", "indent": 8, "text": ["Sparse Convolution noise is similar to Worley noise. Does not have artifacts at grid points."], "extent": [3392, 3498]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_sparse.jpg", "type": "img", "text": ""}], "extent": [3498, 3551]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Alligator"], "extent": [3551, 3566], "body": [{"type": "para", "indent": 8, "text": ["Produces a bumpy output. Named for its alleged resemblance to alligator skin."], "extent": [3566, 3657]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_alligator.jpg", "type": "img", "text": ""}], "extent": [3657, 3717]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin"], "extent": [3717, 3729], "body": [{"type": "para", "indent": 8, "text": ["A noise where the visual details are the same size. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Perlin_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [3729, 3830]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_perlin.jpg", "type": "img", "text": ""}, "\n        ", {"scheme": "Image", "value": "/images/nodes/vop/unoise_periodic_perlin.jpg", "type": "img", "text": ""}], "extent": [3830, 3944]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Perlin Flow"], "extent": [3944, 3961], "body": [{"type": "para", "indent": 8, "text": ["A noise that\u2019s stable over time, like a rotated Perlin noise, useful to create noise that seems to swirl and flow smoothly across time. Use the ", {"type": "ui", "text": ["Flow rotation"]}, " parameter below to control the rotation."], "extent": [3961, 4177]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4177, 4201], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_flow.mp4"}}, {"ext": null, "type": "video", "indent": 8, "role": "item", "extent": [4248, 4264], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_periodic_flow.mp4"}}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 4, "text": ["Simplex"], "extent": [4324, 4337], "body": [{"type": "para", "indent": 8, "text": ["A noise similar to Perlin but the noise lattice is on a tetrahedral mesh rather than a grid.  This can avoid the grid patterns often visible in Perlin noise."], "extent": [4337, 4504]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F1"], "extent": [4504, 4528], "body": [{"type": "para", "indent": 8, "text": ["Produces cellular features similar to plant cells, ocean waves, honeycombs, cratered landscapes, and so on. ", {"scheme": "Wp", "value": "http://en.wikipedia.org/wiki/Worley_noise", "type": "link", "text": ["Wikipedia article"], "exists": true}], "extent": [4528, 4685]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f1.jpg", "type": "img", "text": ""}], "extent": [4685, 4745]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Worley Cellular F2-F1"], "extent": [4745, 4772], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley noise that produces blunted and cornered features."], "extent": [4772, 4856]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_worley_f2.jpg", "type": "img", "text": ""}], "extent": [4856, 4916]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F1"], "extent": [4916, 4943], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [4943, 5071]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Manhattan Cellular F2-F1"], "extent": [5071, 5101], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Manhattan distance calculation. Useful when you want unusual-looking noise."], "extent": [5101, 5232]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F1"], "extent": [5232, 5259], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5259, 5387]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Chebyshev Cellular F2-F1"], "extent": [5387, 5417], "body": [{"type": "para", "indent": 8, "text": ["A variant of Worley F2-F1 noise that uses Chebyshev distance calculation. Useful when you want unusual-looking noise."], "extent": [5417, 5544]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "basis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frequency"], "extent": [5544, 5555], "body": [{"type": "para", "indent": 4, "text": ["The frequency of the noise. Higher values give smaller scaled details in the noise."], "extent": [5574, 5667]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [5667, 5683], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_frequency.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "freq"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [5731, 5739], "body": [{"type": "para", "indent": 4, "text": ["The offset of the input into the noise function. If you visualize the noise as a 2D graph or 3D height field, this has the effect of ", {"type": "q", "text": ["panning"]}, " across the space of possible noise outputs. If you have the general noise effect you want but just want to get a different set of values for a different look, try changing the offset."], "extent": [5760, 6096]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [6096, 6112], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_offset.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "offset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Periodic"], "extent": [6157, 6167], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to use a variant of the chosen ", {"type": "ui", "text": ["Noise type"]}, " that repeats. This can be useful for making tiled patterns."], "extent": [6167, 6291]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Period"], "extent": [6291, 6299], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Periodic"]}, " is on, the multiple of the input range before the noise pattern repeats.  "], "extent": [6320, 6422]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [6422, 6432], "body": [{"type": "para", "indent": 8, "text": ["If Lacunarity is not 2, successive octaves will not have matching periods so a periodic noise won\u2019t be built."], "extent": [6432, 6555]}], "container": true}], "container": true, "role": "item_group"}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [6555, 6571], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_period.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "period"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Fractal "], "extent": [6617, 6633]}, {"type": "para", "indent": 0, "text": ["The fractal controls let you add additional fractal noise ", {"type": "em", "text": ["on top of"]}, " the output of the basic noise type."], "extent": [6633, 6741]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fractal Type"], "extent": [6741, 6755], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [6777, 6787], "body": [{"type": "para", "indent": 8, "text": ["Does not add any additional noise on top of the basic noise."], "extent": [6787, 6865]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_none.jpg", "type": "img", "text": ""}], "extent": [6865, 6928]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Standard"], "extent": [6928, 6942], "body": [{"type": "para", "indent": 8, "text": ["Adds pseudo-random noise on top of the basic output."], "extent": [6942, 7012]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_standard.jpg", "type": "img", "text": ""}], "extent": [7012, 7079]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Terrain"], "extent": [7079, 7092], "body": [{"type": "para", "indent": 8, "text": ["Adds noise like ", {"type": "q", "text": ["Standard"]}, " but dampens the noise in the valleys, which can be useful for generating mountainous terrain."], "extent": [7092, 7230]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fractal_terrain.jpg", "type": "img", "text": ""}], "extent": [7230, 7296]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hybrid"], "extent": [7296, 7308], "body": [{"type": "para", "indent": 8, "text": ["Like terrain, but with more sharpness in the valleys."], "extent": [7308, 7371]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "fractal"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["The following parameters are available when ", {"type": "ui", "text": ["Fractal type"]}, " is not ", {"type": "q", "text": ["None"]}, "."], "extent": [7371, 7448]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Max octaves"], "extent": [7448, 7461], "body": [{"type": "para", "indent": 4, "text": ["The number of iterations of distortion to add to the output of the basic noise. The more iterations you add, the more ", {"type": "q", "text": ["detailed"]}, " the output. Note that the output may have fewer octaves than this parameter (that is, increasing the parameter will eventually stop adding detail), because the node eventually stops when there\u2019s no more room to add more detail in the output."], "extent": [7479, 7855]}], "container": true, "attrs": {"id": "oct"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lacunarity"], "extent": [7855, 7867], "body": [{"type": "para", "indent": 4, "text": ["The frequency increment between iterations of fractal noise added to the basic output. Note that you can use a negative value."], "extent": [7885, 8021]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8021, 8037], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lacunarity.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "lac"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Roughness"], "extent": [8086, 8097], "body": [{"type": "para", "indent": 4, "text": ["The scale increment between iterations of fractal noise added to the basic output. The higher the value the larger the ", {"type": "q", "text": ["jaggies"]}, " added to the output. You can use a negative value for roughness."], "extent": [8117, 8320]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8320, 8336], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_roughness.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "rough"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Warping "], "extent": [8385, 8401]}, {"type": "para", "indent": 0, "text": ["Lattice warp and gradient warp are two methods for adding ", {"type": "q", "text": ["fractal-ness"]}, " to the basic noises by warping the noise space."], "extent": [8401, 8524]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Lattice Warp"], "extent": [8524, 8545], "body": [{"type": "para", "indent": 4, "text": ["Adds ", {"type": "q", "text": ["stringiness"]}, " or ", {"type": "q", "text": ["wiriness"]}, " to standard noise."], "extent": [8562, 8619]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [8619, 8631], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_lattice_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "dolwarp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Accumulate Lattice Warp"], "extent": [8686, 8711], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Lattice Warp"]}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise. When used in images, this can add interesting smudgy effects, and interesting landmarks when used for terrain."], "extent": [8727, 8950]}], "container": true, "attrs": {"id": "accuml"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Gradient Warp"], "extent": [8950, 8972], "body": [{"type": "para", "indent": 4, "text": ["Enables a slider to widen the peaks or valleys of the noise output."], "extent": [8994, 9071]}, {"type": "video_group", "body": [{"ext": null, "type": "video", "indent": 4, "role": "item", "extent": [9071, 9087], "body": [], "container": true, "attrs": {"src": "/videos/vop/unoise_gradient_warp.mp4"}}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "dogwarp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Accumulate Gradient Warp"], "extent": [9139, 9165], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Enable Gradient Warp"]}, " is on, this accumulates the warp for each iteration (octave) of added fractal noise."], "extent": [9186, 9306]}], "container": true, "attrs": {"id": "accumg"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gradient Warp"], "extent": [9306, 9321], "body": [{"type": "para", "indent": 4, "text": ["Widens the peaks or valleys of the noise output."], "extent": [9341, 9395]}], "container": true, "attrs": {"id": "gflow"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flow Rotation"], "extent": [9395, 9410], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Noise type"]}, " is ", {"type": "q", "text": ["Flow"]}, ", this controls the rotation of the ", {"type": "q", "text": ["swirl"]}, ", from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ". Because this parameter is fractional, you can\u2019t just use ", {"type": "code", "text": ["$F"]}, " to animate it, since all integral values will look the same, representing a complete revolution. Instead, try something like ", {"type": "code", "text": ["$FF / 100"]}, "."], "extent": [9432, 9729]}], "container": true, "attrs": {"id": "flowrot"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Output correction "], "extent": [9729, 9755]}, {"type": "para", "indent": 0, "text": ["The output is guaranteed to be in the range ", {"type": "code", "text": ["0-1"]}, ". If you need different output, you can use the parameters on this tab to conveniently condition the output without messing with your noise parameters."], "extent": [9755, 9958]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fold"], "extent": [9958, 9964], "body": [{"type": "para", "indent": 4, "text": [{"type": "q", "text": ["Flips"]}, " values below the median to be above the median, so all valleys become peaks. (Note it flips across the ", {"type": "em", "text": ["median"]}, ", not ", {"type": "code", "text": ["0"]}, ".) If the median is ", {"type": "code", "text": ["0"]}, ", this is like taking the absolute value."], "extent": [9986, 10184]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_fold1.jpg", "type": "img", "text": ""}, "\n    ", {"scheme": "Image", "value": "/images/nodes/vop/unoise_fold2.jpg", "type": "img", "text": ""}], "extent": [10184, 10279]}], "container": true, "attrs": {"id": "cc_fold"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bias (checkbox)"], "extent": [10279, 10296], "body": [{"type": "para", "indent": 4, "text": ["Enables the bias controls to nudge values up or down."], "extent": [10320, 10379]}], "container": true, "attrs": {"id": "cc_dobias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bias"], "extent": [10379, 10385], "body": [{"type": "para", "indent": 4, "text": ["Moves the output down or up toward ", {"type": "code", "text": ["0"]}, " or ", {"type": "code", "text": ["1"]}, "."], "extent": [10407, 10459]}], "container": true, "attrs": {"id": "cc_bias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gain"], "extent": [10459, 10465], "body": [{"type": "para", "indent": 4, "text": ["Enables the gain controls to increase or decrease the contrast."], "extent": [10489, 10562]}], "container": true, "attrs": {"id": "cc_dogain"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gain"], "extent": [10562, 10568], "body": [{"type": "para", "indent": 4, "text": ["Increases or decreases the contrast from 0.5 in the output."], "extent": [10590, 10655]}], "container": true, "attrs": {"id": "cc_gain"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Complement"], "extent": [10655, 10667], "body": [{"type": "para", "indent": 4, "text": ["Outputs the numerical complement (", {"type": "code", "text": ["1 - x"]}, ") of the computed noise. Basically turns the output upside-down."], "extent": [10688, 10803]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/nodes/vop/unoise_sine.jpg", "type": "img", "text": ""}, "\n    ", {"scheme": "Image", "value": "/images/nodes/vop/unoise_complement.jpg", "type": "img", "text": ""}], "extent": [10803, 10902]}], "container": true, "attrs": {"id": "cc_inv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output range (clamped)"], "extent": [10902, 10926], "body": [{"type": "para", "indent": 4, "text": ["Enables the ", {"type": "ui", "text": ["New minimum"]}, " and ", {"type": "ui", "text": ["New maximum"]}, " parameters to allow you to map the noise, which is normally in the ", {"type": "code", "text": ["[0,1]"]}, " range, to a different range of values."], "extent": [10949, 11116]}], "container": true, "attrs": {"id": "cc_dorng"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["New minimum"], "extent": [11116, 11129], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Output range"]}, " is on, remaps the output so ", {"type": "code", "text": ["0"]}, " values become this value."], "extent": [11152, 11237]}], "container": true, "attrs": {"id": "cc_rnglo"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["New maximum"], "extent": [11237, 11250], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Output range"]}, " is on, remaps the output so ", {"type": "code", "text": ["1"]}, " values become this value."], "extent": [11273, 11358]}], "container": true, "attrs": {"id": "cc_rnghi"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Final amplitude"], "extent": [11358, 11375], "body": [{"type": "para", "indent": 4, "text": ["Scales the final conditioned output up or down."], "extent": [11396, 11450]}], "container": true, "attrs": {"id": "cc_amp"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 5, "type": "sep", "indent": 0, "extent": [11450, 11456]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Filter Scale"], "extent": [11456, 11471], "body": [{"type": "para", "indent": 4, "text": ["A scale on the filter width to use in shading a shading context."], "extent": [11487, 11563]}], "container": true, "attrs": {"id": "fscale"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}], "title": ["Unified Noise Static"], "summary": ["Presents a unified interface and uniform output range for all the noise types available in VEX."], "included": ["/nodes/vop/unifiednoise"]}