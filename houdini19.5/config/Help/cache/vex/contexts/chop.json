{"type": "root", "attrs": {"type": "vexcontext"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["chop"], "extent": [19, 28]}, {"type": "summary", "indent": 0, "text": ["Define a custom CHOP operator with a program that edits channel\nvalues."], "extent": [28, 108]}, {"type": "para", "indent": 0, "text": ["The CHOP context allows users to change values of channels in a CHOP.\nEach CHOP function works on a single sample of a single channel of a\nCHOP."], "extent": [108, 255]}, {"level": 2, "id": "constraints", "container": true, "type": "h", "indent": 0, "text": ["Constraints"], "extent": [255, 287], "body": [{"type": "para", "indent": 0, "text": ["CHOP contraints make use of VEX structures defined in ", {"type": "code", "text": ["$HFS/houdini/vex/include/chop_constraints.h"]}, "."], "extent": [287, 391]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["chopTRS"], "extent": [391, 407], "body": [{"type": "para", "indent": 0, "text": ["Holds transform channels within a structure."], "extent": [407, 454]}, {"lang": null, "type": "pre", "indent": 0, "text": ["\nstruct chopTRS\n{\n    vector t; // tx ty tz channels\n    vector r; // rx ry rz channels\n    vector s; // sx ry rz channels\n\n    void fromIdentity();\n    void fromMatrix(const matrix m; const vector pivot; const int trs; const int xyz);\n    void fromMatrix(const matrix m);\n}\n"], "extent": [454, 736]}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["chopConstraintContext"], "extent": [736, 768], "body": [{"type": "para", "indent": 0, "text": ["Holds the current evaluated transform channels within a structure.\nThis abstracts the global variables 'C' and 'I', so you don\u2019t have to worry about the current time and the current channel index."], "extent": [768, 967]}, {"lang": null, "type": "pre", "indent": 0, "text": ["\nstruct chopConstraintContext\n{\n    vector t; // tx ty tz channels\n    vector r; // rx ry rz channels\n    vector s; // sx sy sz channels\n\n    void init();\n    void init( vector t0; vector r0; vector s0; const string prefix0 );\n\n    void fromMatrix(const matrix m;\n                   const vector pivot; const int trs; const int xyz);\n\n    void fromMatrix(const matrix m);\n\n    chopTRS fetchInput( const int i );\n    float fetchInput( const int i; const string name; int result );\n    float fetchInput( const int i; const int index; int result );\n\n    matrix fetchInputMatrix( const int i );\n\n    int isConnected( const int i );\n    int numInputs();\n\n    // Evaluate a channel input by name\n    float chinput( int i; const string name; int ret );\n\n    // Evaluate a float parameter on the current CHOP node\n    float chf( const string parm );\n\n    // Evaluate an integer parameter on the current CHOP node\n    int chi( const string parm );\n\n    // Evaluate a vector parameter on the current CHOP node\n    vector chv( const string parm );\n}\n"], "extent": [967, 2013]}, {"type": "para", "indent": 0, "text": ["Here\u2019s an example of how to blend the translations of the 4 inputs."], "extent": [2013, 2083]}, {"lang": null, "type": "pre", "indent": 0, "text": ["\n// Declare the context\n// This is done automatically on transform wrangles\nchopConstraintContext c;\n\n// Fetch transform inputs\nchopTRS c0 = c->fetchInput(0);\nchopTRS c1 = c->fetchInput(1);\nchopTRS c2 = c->fetchInput(2);\nchopTRS c3 = c->fetchInput(3);\nmatrix m0 = c->fetchInputMatrix(0);\nmatrix m1 = c->fetchInputMatrix(1);\nmatrix m2 = c->fetchInputMatrix(2);\nmatrix m3 = c->fetchInputMatrix(3);\n\n// Compute transform\n@t = c0.t + c1.t + c2.t + c3.t;\n@t *= 0.25;\n@r = c0.r;\n@s = c0.s;\n\n"], "extent": [2083, 2575]}]}]}, {"level": 1, "id": "globals", "container": true, "type": "globals_section", "indent": 0, "role": "section", "extent": [2575, 2586], "body": [{"type": "globals_item_group", "body": [{"ext": null, "type": "globals_item", "indent": 0, "text": ["V"], "role": "item", "extent": [2586, 2592], "body": [{"type": "para", "indent": 4, "text": ["Value of the current sample. This variable should be set to the new\n    value by the function. The variable is initialized to the value of\n    the first input\u2019s channels."], "extent": [2614, 2790]}], "container": true, "attrs": {"type": "float", "id": "V"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["I"], "role": "item", "extent": [2790, 2795], "body": [{"type": "para", "indent": 4, "text": ["Index or sample number of the current channel.\n    Time dependent only in Current Frame mode."], "extent": [2828, 2927]}], "container": true, "attrs": {"type": "int", "mode": "r", "id": "I"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["IN"], "role": "item", "extent": [2927, 2933], "body": [{"type": "para", "indent": 4, "text": ["Index or sample number of the current channel.\n    Non Time Dependent."], "extent": [2966, 3042]}], "container": true, "attrs": {"type": "int", "mode": "r", "id": "IN"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["S"], "role": "item", "extent": [3042, 3047], "body": [{"type": "para", "indent": 4, "text": ["Index of the start of the current channel. This is the index of the\n    first sample."], "extent": [3080, 3171]}], "container": true, "attrs": {"type": "int", "mode": "r", "id": "S"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["E"], "role": "item", "extent": [3171, 3176], "body": [{"type": "para", "indent": 4, "text": ["Index of the last sample (end sample)."], "extent": [3209, 3253]}], "container": true, "attrs": {"type": "int", "mode": "r", "id": "E"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["SR"], "role": "item", "extent": [3253, 3259], "body": [{"type": "para", "indent": 4, "text": ["Sample rate for the current channel."], "extent": [3294, 3336]}], "container": true, "attrs": {"type": "float", "mode": "r", "id": "SR"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["L"], "role": "item", "extent": [3336, 3341], "body": [{"type": "para", "indent": 4, "text": ["Length of the channel (total number of samples)."], "extent": [3374, 3428]}], "container": true, "attrs": {"type": "int", "mode": "r", "id": "L"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["C"], "role": "item", "extent": [3428, 3433], "body": [{"type": "para", "indent": 4, "text": ["Channel number for the current channel. When processing multiple\n    channels, this is the index of the channel currently being\n    evaluated."], "extent": [3466, 3614]}], "container": true, "attrs": {"type": "int", "mode": "r", "id": "C"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["NC"], "role": "item", "extent": [3614, 3620], "body": [{"type": "para", "indent": 4, "text": ["Total number of channels the CHOP will affect."], "extent": [3653, 3705]}], "container": true, "attrs": {"type": "int", "mode": "r", "id": "NC"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["CN"], "role": "item", "extent": [3705, 3711], "body": [{"type": "para", "indent": 4, "text": ["Name of the current channel."], "extent": [3747, 3781]}], "container": true, "attrs": {"type": "string", "mode": "r", "id": "CN"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["FF"], "role": "item", "extent": [3781, 3787], "body": [{"type": "para", "indent": 4, "text": ["Frame number as a float corresponding to the sample being evaluated.\n    Time dependent only in Current Frame mode."], "extent": [3822, 3943]}], "container": true, "attrs": {"type": "float", "mode": "r", "id": "FF"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["FFN"], "role": "item", "extent": [3943, 3950], "body": [{"type": "para", "indent": 4, "text": ["Frame number as a float corresponding to the sample being evaluated.\n    Non Time Dependent."], "extent": [3985, 4083]}], "container": true, "attrs": {"type": "float", "mode": "r", "id": "FFN"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["Frame"], "role": "item", "extent": [4083, 4092], "body": [{"type": "para", "indent": 4, "text": ["Frame number as a float corresponding to the evaluation time.\n    Forces Time Dependent."], "extent": [4127, 4225]}], "container": true, "attrs": {"type": "float", "mode": "r", "id": "Frame"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["T"], "role": "item", "extent": [4225, 4230], "body": [{"type": "para", "indent": 4, "text": ["Time in seconds corresponding to the sample being evaluated.\n    Time dependent only in Current Frame mode."], "extent": [4265, 4378]}], "container": true, "attrs": {"type": "float", "mode": "r", "id": "T"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["TN"], "role": "item", "extent": [4378, 4384], "body": [{"type": "para", "indent": 4, "text": ["Time in seconds corresponding to the sample being evaluated.\n    Non Time Dependent."], "extent": [4419, 4509]}], "container": true, "attrs": {"type": "float", "mode": "r", "id": "TN"}}, {"ext": null, "type": "globals_item", "indent": 0, "text": ["Time"], "role": "item", "extent": [4509, 4517], "body": [{"type": "para", "indent": 4, "text": ["Time in seconds corresponding to the evaluation time.\n    Forces Time Dependent."], "extent": [4552, 4639]}], "container": true, "attrs": {"type": "float", "mode": "r", "id": "Time"}}], "container": true, "role": "item_group"}], "text": "Globals"}, {"level": 1, "id": "subtopics", "container": true, "type": "subtopics_section", "indent": 0, "text": ["Functions"], "role": "section", "extent": [4639, 4660], "body": [{"type": "list_group", "body": [{"ext": null, "type": "list", "indent": 0, "role": "item", "extent": [4660, 4668], "body": [], "container": true, "attrs": {"query": "type:vex context:chop"}}], "container": true, "role": "item_group"}]}], "title": ["chop"], "summary": ["Define a custom CHOP operator with a program that edits channel\nvalues."]}