{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "matrix", "group": "math", "since": "18.0", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["__uniform_mul"], "extent": [0, 18]}, {"type": "summary", "indent": 0, "text": ["Multiply matrices."], "extent": [86, 112]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void __uniform_mul(matrix2 &a, matrix2 b)"]}], "role": "item", "extent": [112, 164]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void __uniform_mul(matrix &a, matrix b)"]}], "role": "item", "extent": [164, 214]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void __uniform_mul(matrix3 &a, matrix3 b)"]}], "role": "item", "extent": [214, 267]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void __uniform_mul(matrix2 &a, float b)"]}], "role": "item", "extent": [267, 317]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void __uniform_mul(matrix &a, float b)"]}], "role": "item", "extent": [317, 366]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void __uniform_mul(matrix3 &a, float b)"]}], "role": "item", "extent": [366, 417]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void __uniform_mul(matrix2 &m, matrix2 a, matrix2 b)"]}], "role": "item", "extent": [417, 480]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void __uniform_mul(matrix &m, matrix a, matrix b)"]}], "role": "item", "extent": [480, 540]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void __uniform_mul(matrix3 &m, matrix3 a, matrix3 b)"]}], "role": "item", "extent": [540, 604]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void __uniform_mul(vector2 &a, matrix2 b)"]}], "role": "item", "extent": [604, 656]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void __uniform_mul(vector &a, matrix b)"]}], "role": "item", "extent": [656, 706]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void __uniform_mul(vector &a, matrix3 b)"]}], "role": "item", "extent": [706, 757]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void __uniform_mul(vector4 &a, matrix b)"]}], "role": "item", "extent": [757, 809]}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["Multiplies two matrices and returns modify the first matrix."], "extent": [809, 871]}, {"type": "para", "indent": 0, "text": ["This version of mul can be faster when running over a single\nprocessor, like for detail attributes or doing matrix multiplication\nfor CHOP constraints."], "extent": [871, 1024]}], "title": ["__uniform_mul"], "summary": ["Multiply matrices."]}