{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "utility", "group": "nodes", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["chf"], "extent": [0, 8]}, {"type": "summary", "indent": 0, "text": ["Evaluates a channel (or parameter) and return its value."], "extent": [64, 128]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float chf(string channel)"]}], "role": "item", "extent": [128, 164]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float chf(string channel, float time_in_sec)"]}], "role": "item", "extent": [164, 220]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float chf(int op_id, int parm_index, int vector_index)"]}], "role": "item", "extent": [220, 285]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float chf(int op_id, int parm_index, int vector_index, float time_in_sec)"]}], "role": "item", "extent": [285, 370]}], "container": true, "role": "item_group"}, {"type": "box_group", "body": [{"ext": null, "type": "box", "indent": 0, "role": "item", "extent": [511, 517], "body": [{"type": "para", "indent": 4, "text": ["Evaluates a channel (or parameter) and return its value. The time is specified in ", {"type": "em", "text": ["seconds"]}, ", not in frames. If you don\u2019t specify the time, the function returns the value at the current time."], "extent": [544, 740]}, {"type": "para", "indent": 4, "text": ["Houdini includes several functions to evaluate channels/parameters of different types."], "extent": [740, 836]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["To get a float or string without needing to know the parameter type, use ", {"scheme": "Vex", "value": "/vex/functions/ch", "type": "link", "text": "", "fallback_text": "ch()", "fullpath": "/vex/functions/ch"}, "."], "extent": [836, 925]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["To get a float, use ", {"scheme": "Vex", "value": "/vex/functions/chf", "type": "link", "text": "", "fallback_text": "chf()", "fullpath": "/vex/functions/chf"}, "."], "extent": [925, 962]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["To get a string, use ", {"scheme": "Vex", "value": "/vex/functions/chs", "type": "link", "text": "", "fallback_text": "chs()", "fullpath": "/vex/functions/chs"}, "."], "extent": [962, 1000]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["For integer parameters, use ", {"scheme": "Vex", "value": "/vex/functions/chi", "type": "link", "text": "", "fallback_text": "chi()", "fullpath": "/vex/functions/chi"}], "extent": [1000, 1044]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["For matrix type parameters, use ", {"scheme": "Vex", "value": "/vex/functions/ch3", "type": "link", "text": "", "fallback_text": "ch3()", "fullpath": "/vex/functions/ch3"}, " or ", {"scheme": "Vex", "value": "/vex/functions/ch4", "type": "link", "text": "", "fallback_text": "ch4()", "fullpath": "/vex/functions/ch4"}, "."], "extent": [1044, 1106]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["For a ramp parameter, use ", {"scheme": "Vex", "value": "/vex/functions/chramp", "type": "link", "text": "", "fallback_text": "chramp()", "fullpath": "/vex/functions/chramp"}, " or ", {"scheme": "Vex", "value": "/vex/functions/chrampderiv", "type": "link", "text": "", "fallback_text": "chrampderiv()", "fullpath": "/vex/functions/chrampderiv"}, "."], "extent": [1106, 1173]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Use ", {"scheme": "Vex", "value": "/vex/functions/chid", "type": "link", "text": "", "fallback_text": "chid()", "fullpath": "/vex/functions/chid"}, " to get an ", {"type": "code", "text": ["op_id"]}, ", ", {"type": "code", "text": ["parm_index"]}, " and ", {"type": "code", "text": ["vector_index"]}, " to evaluate the channel without having to do string resolution."], "extent": [1173, 1311]}], "container": true}], "container": true, "attrs": {"id": "ch_functions"}}], "container": true, "role": "item_group"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [398, 407], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/ch", "type": "link", "text": "", "fallback_text": "ch()", "fullpath": "/vex/functions/ch"}], "extent": [407, 419]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/chs", "type": "link", "text": "", "fallback_text": "chs()", "fullpath": "/vex/functions/chs"}], "extent": [419, 431]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/chi", "type": "link", "text": "", "fallback_text": "chi()", "fullpath": "/vex/functions/chi"}], "extent": [431, 443]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/chv", "type": "link", "text": "", "fallback_text": "chv()", "fullpath": "/vex/functions/chv"}], "extent": [443, 455]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/ch3", "type": "link", "text": "", "fallback_text": "ch3()", "fullpath": "/vex/functions/ch3"}], "extent": [455, 467]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/ch4", "type": "link", "text": "", "fallback_text": "ch4()", "fullpath": "/vex/functions/ch4"}], "extent": [467, 479]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/chramp", "type": "link", "text": "", "fallback_text": "chramp()", "fullpath": "/vex/functions/chramp"}], "extent": [479, 494]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/chrampderiv", "type": "link", "text": "", "fallback_text": "chrampderiv()", "fullpath": "/vex/functions/chrampderiv"}], "extent": [494, 514]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/chid", "type": "link", "text": "", "fallback_text": "chid()", "fullpath": "/vex/functions/chid"}], "extent": [514, 527]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/opid", "type": "link", "text": "", "fallback_text": "opid()", "fullpath": "/vex/functions/opid"}], "extent": [527, 540]}], "container": true}], "text": "Related"}], "title": ["chf"], "summary": ["Evaluates a channel (or parameter) and return its value."], "included": ["/vex/functions/ch"]}