{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "math, matrix", "group": "convert", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["cracktransform"], "extent": [0, 19]}, {"type": "summary", "indent": 0, "text": ["Depending on the value of c, returns the translate (c=0), rotate\n(c=1), scale (c=2), or shears (c=3)  component of the transform (xform)."], "extent": [82, 227]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["vector cracktransform(int trs, int xyz, int c, vector pivot, vector pivot_rotate, matrix xform)"]}], "role": "item", "extent": [227, 333]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["vector cracktransform(int trs, int xyz, int c, vector pivot, matrix xform)"]}], "role": "item", "extent": [333, 419]}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["Depending on the value of ", {"type": "var", "text": ["c"]}, ", returns the translate (", {"type": "code", "text": ["c=0"]}, "), rotate\n(", {"type": "code", "text": ["c=1"]}, " or ", {"type": "code", "text": ["c=4"]}, "), scale (", {"type": "code", "text": ["c=2"]}, ") or shears (", {"type": "code", "text": ["c=3"]}, ") component of the transform (", {"type": "var", "text": ["xform"]}, "). The\nfunction uses the given transform and rotation orders (", {"type": "var", "text": ["trs"]}, " and\n", {"type": "var", "text": ["xyz"]}, ") , the given pivot point (", {"type": "var", "text": ["pivot"]}, ") and optional pivot rotation (", {"type": "var", "text": ["pr"]}, ") to calculate the return\nvalue. The specifications for the ", {"type": "var", "text": ["trs"]}, " and ", {"type": "var", "text": ["xyz"]}, " parameters can be\nfound in ", {"type": "code", "text": ["$HFS/houdini/vex/include/math.h"]}, "."], "extent": [419, 874]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [874, 880], "body": [{"type": "para", "indent": 4, "text": ["Rotation angles (when ", {"type": "code", "text": ["c=1"]}, ") are returned in degrees, whereas many other VEX functions use radians.\n    You can use the ", {"scheme": "Vex", "value": "/vex/functions/radians", "type": "link", "text": ["radians"], "fallback_text": "radians()", "fullpath": "/vex/functions/radians"}, " VEX function to convert the vector of angles in degrees to a vector of angles in radians.\n    For example: ", {"type": "code", "text": ["vector angles = radians(cracktransform(XFORM_TRS, XFORM_XYZ, 1, {0,0,0}, M));"]}], "extent": [880, 1214]}], "container": true}, {"type": "note", "indent": 0, "role": "item", "extent": [1214, 1220], "body": [{"type": "para", "indent": 4, "text": ["Rotation angles (when ", {"type": "code", "text": ["c=4"]}, ") are returned in radians."], "extent": [1220, 1280]}], "container": true}], "container": true, "role": "item_group"}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void cracktransform(int trs, int xyz, vector pivot, vector pivot_rotate, matrix xform, vector &t, vector &r, vector &s, vector &shears)"]}], "role": "item", "extent": [1280, 1427]}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["Returns the translate, rotate, scale, and shear components of ", {"type": "var", "text": ["xform"]}, " in ", {"type": "var", "text": ["t"]}, ", ", {"type": "var", "text": ["r"]}, ", ", {"type": "var", "text": ["s"]}, ", and ", {"type": "var", "text": ["shears"]}, ", respectively.\nIf more than one component is needed, using this overload is more efficient than making multiple calls to the other function signature."], "extent": [1427, 1690]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void cracktransform(int trs, int xyz, vector pivot, matrix xform, vector &t, vector &r, vector &s)"]}], "role": "item", "extent": [1690, 1800]}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["Returns the translate, rotate, and scale of ", {"type": "var", "text": ["xform"]}, " in ", {"type": "var", "text": ["t"]}, ", ", {"type": "var", "text": ["r"]}, ", ", {"type": "var", "text": ["s"]}, " respectively.\nThis overload doesn\u2019t support pivot_rotate or shears.\nIf more than one component is needed, using this overload is more efficient than making multiple calls to the other function signature."], "extent": [1800, 2083]}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2083, 2092], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/quaternion", "type": "link", "text": "", "fallback_text": "quaternion()", "fullpath": "/vex/functions/quaternion"}], "extent": [2092, 2111]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/polardecomp", "type": "link", "text": "", "fallback_text": "polardecomp()", "fullpath": "/vex/functions/polardecomp"}], "extent": [2111, 2131]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/eulertoquaternion", "type": "link", "text": "", "fallback_text": "eulertoquaternion()", "fullpath": "/vex/functions/eulertoquaternion"}], "extent": [2131, 2157]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/qconvert", "type": "link", "text": "", "fallback_text": "qconvert()", "fullpath": "/vex/functions/qconvert"}], "extent": [2157, 2174]}], "container": true}], "text": "Related"}], "title": ["cracktransform"], "summary": ["Depending on the value of c, returns the translate (c=0), rotate\n(c=1), scale (c=2), or shears (c=3)  component of the transform (xform)."]}