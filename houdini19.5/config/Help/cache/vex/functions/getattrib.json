{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "attrib", "group": "attrib", "redirect": "../attrib_suite#getattrib", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["getattrib"], "extent": [0, 14]}, {"type": "summary", "indent": 0, "text": ["Reads an attribute value from geometry, with validity check."], "extent": [107, 175]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["<type> getattrib(<geometry>, string attribclass, string attribute_name, int elemnum, int &success)"]}], "role": "item", "extent": [175, 284]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["<type>[] getattrib(<geometry>, string attribclass, string attribute_name, int elemnum, int &success)"]}], "role": "item", "extent": [284, 400], "body": [{"type": "para", "indent": 4, "text": ["This general form lets you specify the attribute ", {"type": "q", "text": ["class"]}, " at run-time. This can be useful for writing general code that can work on different classes.\n    If you know the class of attribute you want to read ahead of time, using ", {"scheme": "Vex", "value": "/vex/functions/detailattrib", "type": "link", "text": "", "fallback_text": "detailattrib()", "fullpath": "/vex/functions/detailattrib"}, ", ", {"scheme": "Vex", "value": "/vex/functions/primattrib", "type": "link", "text": "", "fallback_text": "primattrib()", "fullpath": "/vex/functions/primattrib"}, ", ", {"scheme": "Vex", "value": "/vex/functions/pointattrib", "type": "link", "text": "", "fallback_text": "pointattrib()", "fullpath": "/vex/functions/pointattrib"}, ", or ", {"scheme": "Vex", "value": "/vex/functions/vertexattrib", "type": "link", "text": "", "fallback_text": "vertexattrib()", "fullpath": "/vex/functions/vertexattrib"}, " may be faster."], "extent": [400, 726]}], "container": true}], "container": true, "role": "item_group"}, {"type": "arg_group", "body": [{"ext": null, "type": "arg", "indent": 0, "text": [{"type": "code", "text": ["<geometry>"]}], "role": "item", "extent": [16, 35], "body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."], "extent": [58, 235]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"type": "code", "text": [".bgeo"]}, ") to read from. When running inside Houdini, this can be an ", {"type": "code", "text": ["op:/path/to/sop"]}, " reference."], "extent": [235, 423]}], "container": true, "attrs": {"id": "geometry"}}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": {"type": "code", "text": ["attribclass"]}}, "role": "item", "extent": [1447, 1465], "body": [{"type": "para", "indent": 4, "text": ["One of ", {"type": "code", "text": ["\"detail\""]}, " (or ", {"type": "code", "text": ["\"global\""]}, "), ", {"type": "code", "text": ["\"point\""]}, ", ", {"type": "code", "text": ["\"prim\""]}, ", or ", {"type": "code", "text": ["\"vertex\""]}, "."], "extent": [1491, 1571]}, {"type": "para", "indent": 4, "text": ["You can also use ", {"type": "code", "text": ["\"primgroup\""]}, ", ", {"type": "code", "text": ["\"pointgroup\""]}, " or ", {"type": "code", "text": ["\"vertexgroup\""]}, " to ", {"scheme": null, "value": "/vex/groups", "type": "link", "text": ["read from groups"], "fullpath": "/vex/groups"}, "."], "extent": [1571, 1677]}], "container": true, "attrs": {"id": "attribclass"}}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": {"type": "code", "text": ["attribute_name"]}}, "role": "item", "extent": [1770, 1791], "body": [{"type": "para", "indent": 4, "text": ["The name of the attribute (or intrinsic) to read."], "extent": [1816, 1871]}], "container": true, "attrs": {"id": "attribname"}}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": {"type": "code", "text": ["elemnum"]}}, "role": "item", "extent": [1871, 1885], "body": [{"type": "para", "indent": 4, "text": ["The point/primitive/vertex number to read the attribute value from. For detail attributes, use ", {"type": "code", "text": ["0"]}, " here (the argument is ignored for detail attributes)."], "extent": [1907, 2069]}, {"type": "para", "indent": 4, "text": ["To get the linear vertex number given a primitive number and the vertex number on the primitive, use the ", {"scheme": "Vex", "value": "/vex/functions/primvertex", "type": "link", "text": "", "fallback_text": "primvertex()", "fullpath": "/vex/functions/primvertex"}, " function."], "extent": [2069, 2206]}], "container": true, "attrs": {"id": "elemnum"}}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["success"]}, "role": "item", "extent": [842, 856], "body": [{"type": "para", "indent": 4, "text": ["If the given attribute exists and can be read, the function sets this variable to ", {"type": "code", "text": ["1"]}, ". Otherwise, it sets this variable to ", {"type": "code", "text": ["0"]}, "."], "extent": [856, 989]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "role": "item", "extent": [989, 999], "body": [{"type": "para", "indent": 4, "text": ["The value of the attribute."], "extent": [999, 1032]}], "container": true, "returns": true}], "container": true, "role": "item_group"}], "title": ["getattrib"], "summary": ["Reads an attribute value from geometry, with validity check."], "included": ["/vex/functions/_common"]}