{"type": "root", "attrs": {"type": "vex", "context": "displace, fog, light, shadow, surface", "tags": "shading, math", "group": "shading", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["getderiv"], "extent": [0, 13]}, {"type": "summary", "indent": 0, "text": ["Evaluates surface derivatives of an attribute."], "extent": [111, 165]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void getderiv(float attr, string attrName, int isVertexAttr, float s, float t, float &du, float &dv, ...)"]}], "role": "item", "extent": [165, 281]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void getderiv(<vector> attr, string attrName, int isVertexAttr, float s, float t, <vector> &du, <vector> &dv, ...)"]}], "role": "item", "extent": [281, 407]}], "container": true, "role": "item_group"}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [407, 413], "body": [{"type": "para", "indent": 4, "text": ["If derivatives are queried for a polygonal mesh it is interally sampled as a Subdivision Surface."], "extent": [413, 516]}], "container": true}], "container": true, "role": "item_group"}, {"type": "arg_group", "body": [{"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["attr"]}, "role": "item", "extent": [516, 527], "body": [{"type": "para", "indent": 4, "text": ["Attribute value."], "extent": [527, 549]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["attrName"]}, "role": "item", "extent": [549, 564], "body": [{"type": "para", "indent": 4, "text": ["Name of attribute to evaluate."], "extent": [564, 600]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["isVertexAttr"]}, "role": "item", "extent": [600, 619], "body": [{"type": "para", "indent": 4, "text": ["Set to ", {"type": "code", "text": ["1"]}, " to indicate the attribute is a vertex type."], "extent": [619, 679]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["s"]}, "role": "item", "extent": [679, 687], "body": [{"type": "para", "indent": 4, "text": ["Parametric S shading value. This should be passed from the ", {"type": "code", "text": ["s"]}, " global variable."], "extent": [687, 772]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["t"]}, "role": "item", "extent": [772, 780], "body": [{"type": "para", "indent": 4, "text": ["Parametric <type> shading value. This should be passed from the ", {"type": "code", "text": ["t"]}, " global variable."], "extent": [780, 870]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["du"]}, "role": "item", "extent": [870, 879], "body": [{"type": "para", "indent": 4, "text": ["Derivative of attribute in U direction."], "extent": [879, 924]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["dv"]}, "role": "item", "extent": [924, 933], "body": [{"type": "para", "indent": 4, "text": ["Derivative of attribute in V direction."], "extent": [933, 978]}], "container": true}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Derivatives options"], "extent": [16, 42], "body": [{"type": "para", "indent": 0, "text": ["Functions which compute derivatives take additional arguments to\nallow tuning of the derivative computation."], "extent": [42, 153]}, {"type": "arg_group", "body": [{"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["extrapolate"]}, "role": "item", "extent": [153, 172], "body": [{"type": "para", "indent": 4, "text": ["Whether derivatives are\n    ", {"type": "q", "text": ["smooth"]}, " across patch boundaries. In most cases this is true and if\n    extrapolation is turned on, derivative computation should be exact\n    for C2 surfaces. However, when the VEX variables are changing with a\n    high frequency (for example, a high frequency displacement map\n    causing high frequency changes to the P variable), extrapolation of\n    derivative computation may cause exaggeration of discontinuities\n    between patch boundaries."], "extent": [208, 695]}], "container": true, "attrs": {"type": "int", "default": "0"}, "variadic": true}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["smooth"]}, "role": "item", "extent": [695, 709], "body": [{"type": "para", "indent": 4, "text": ["Adjust the magnitude of the\n    differentials non-uniformly over patches. This will usually reduce\n    patch discontinuities in displacement/textured shaders. However, in\n    some odd cases you may want to turn this feature off."], "extent": [745, 979]}], "container": true, "attrs": {"type": "int", "default": "1"}, "variadic": true}], "container": true, "role": "item_group"}, {"lang": "vex", "type": "pre", "indent": 0, "text": ["\nN = computenormal(P, \"extrapolate\", 1, \"smooth\", 0);\n"], "extent": [979, 1046]}]}, {"level": 1, "id": "examples", "container": true, "type": "examples_section", "indent": 0, "role": "section", "extent": [1007, 1017], "body": [{"lang": "vex", "type": "pre", "indent": 0, "text": ["\n// Get derivatives of point attribute 'N'\nvector dNdu, dNdv;\ngetderiv(N, \"N\", 0, s, t, dNdu, dNdv);\n"], "extent": [1017, 1132]}], "text": "Examples"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [1132, 1143], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/Du", "type": "link", "text": "", "fallback_text": "Du()", "fullpath": "/vex/functions/Du"}], "extent": [1143, 1155]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/Dv", "type": "link", "text": "", "fallback_text": "Dv()", "fullpath": "/vex/functions/Dv"}], "extent": [1155, 1166]}], "container": true}], "text": "Related"}], "title": ["getderiv"], "summary": ["Evaluates surface derivatives of an attribute."], "included": ["/vex/functions/_derive_variadic"]}