{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "attrib", "group": "attrib", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["hasattrib"], "extent": [0, 14]}, {"type": "summary", "indent": 0, "text": ["Checks whether a geometry attribute exists."], "extent": [70, 121]}, {"type": "para", "indent": 0, "text": ["If you know the attribute class ahead of time, using ", {"scheme": "Vex", "value": "/vex/functions/hasdetailattrib", "type": "link", "text": "", "fallback_text": "hasdetailattrib()", "fullpath": "/vex/functions/hasdetailattrib"}, ", ", {"scheme": "Vex", "value": "/vex/functions/hasprimattrib", "type": "link", "text": "", "fallback_text": "hasprimattrib()", "fullpath": "/vex/functions/hasprimattrib"}, ", ", {"scheme": "Vex", "value": "/vex/functions/haspointattrib", "type": "link", "text": "", "fallback_text": "haspointattrib()", "fullpath": "/vex/functions/haspointattrib"}, ", or ", {"scheme": "Vex", "value": "/vex/functions/hasvertexattrib", "type": "link", "text": "", "fallback_text": "hasvertexattrib()", "fullpath": "/vex/functions/hasvertexattrib"}, " may be faster."], "extent": [121, 281]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int hasattrib(<geometry>, string attribclass, string attribute_name)"]}], "role": "item", "extent": [281, 361]}], "container": true, "role": "item_group"}, {"type": "arg_group", "body": [{"ext": null, "type": "arg", "indent": 0, "text": [{"type": "code", "text": ["<geometry>"]}], "role": "item", "extent": [16, 35], "body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."], "extent": [58, 235]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"type": "code", "text": [".bgeo"]}, ") to read from. When running inside Houdini, this can be an ", {"type": "code", "text": ["op:/path/to/sop"]}, " reference."], "extent": [235, 423]}], "container": true, "attrs": {"id": "geometry"}}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": {"type": "code", "text": ["attribclass"]}}, "role": "item", "extent": [1447, 1465], "body": [{"type": "para", "indent": 4, "text": ["One of ", {"type": "code", "text": ["\"detail\""]}, " (or ", {"type": "code", "text": ["\"global\""]}, "), ", {"type": "code", "text": ["\"point\""]}, ", ", {"type": "code", "text": ["\"prim\""]}, ", or ", {"type": "code", "text": ["\"vertex\""]}, "."], "extent": [1491, 1571]}, {"type": "para", "indent": 4, "text": ["You can also use ", {"type": "code", "text": ["\"primgroup\""]}, ", ", {"type": "code", "text": ["\"pointgroup\""]}, " or ", {"type": "code", "text": ["\"vertexgroup\""]}, " to ", {"scheme": null, "value": "/vex/groups", "type": "link", "text": ["read from groups"], "fullpath": "/vex/groups"}, "."], "extent": [1571, 1677]}], "container": true, "attrs": {"id": "attribclass"}}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["Returns ", {"type": "code", "text": ["1"]}, " if the attribute exists, or ", {"type": "code", "text": ["0"]}, " otherwise."], "extent": [420, 477]}, {"level": 1, "id": "examples", "container": true, "type": "examples_section", "indent": 0, "role": "section", "extent": [477, 487], "body": [{"lang": "vex", "type": "pre", "indent": 0, "text": ["\n// Check whether the point group \"pointstouse\" exists.\nif (hasattrib(\"defgeo.bgeo\", \"pointgroup\", \"pointstouse\")) {\n    // Do something with the point group\n}\n"], "extent": [487, 661]}], "text": "Examples"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [661, 672], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/hasdetailattrib", "type": "link", "text": "", "fallback_text": "hasdetailattrib()", "fullpath": "/vex/functions/hasdetailattrib"}], "extent": [672, 697]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/hasprimattrib", "type": "link", "text": "", "fallback_text": "hasprimattrib()", "fullpath": "/vex/functions/hasprimattrib"}], "extent": [697, 719]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/haspointattrib", "type": "link", "text": "", "fallback_text": "haspointattrib()", "fullpath": "/vex/functions/haspointattrib"}], "extent": [719, 742]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/hasvertexattrib", "type": "link", "text": "", "fallback_text": "hasvertexattrib()", "fullpath": "/vex/functions/hasvertexattrib"}], "extent": [742, 767]}], "container": true}], "text": "Related"}], "title": ["hasattrib"], "summary": ["Checks whether a geometry attribute exists."], "included": ["/vex/functions/_common"]}