{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "search, point", "group": "attrib", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["nametopoint"], "extent": [0, 16]}, {"type": "summary", "indent": 0, "text": ["Finds a point by its name attribute."], "extent": [79, 123]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int nametopoint(<geometry>, string name)"]}], "role": "item", "extent": [123, 175]}], "container": true, "role": "item_group"}, {"type": "arg_group", "body": [{"ext": null, "type": "arg", "indent": 0, "text": [{"type": "code", "text": ["<geometry>"]}], "role": "item", "extent": [16, 35], "body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."], "extent": [58, 235]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"type": "code", "text": [".bgeo"]}, ") to read from. When running inside Houdini, this can be an ", {"type": "code", "text": ["op:/path/to/sop"]}, " reference."], "extent": [235, 423]}], "container": true, "attrs": {"id": "geometry"}}, {"ext": null, "type": "arg", "indent": 0, "role": "item", "extent": [203, 213], "body": [{"type": "para", "indent": 4, "text": ["The number of the point with the given value in the ", {"type": "code", "text": ["name"]}, " attribute. Returns ", {"type": "code", "text": ["-1"]}, " if no primitive has the given ID, or if the geometry has no ", {"type": "code", "text": ["name"]}, " attribute."], "extent": [213, 379]}], "container": true, "returns": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["To look up a primitive by its ", {"type": "code", "text": ["id"]}, " attribute value, use ", {"scheme": "Vex", "value": "/vex/functions/idtoprim", "type": "link", "text": "", "fallback_text": "idtoprim()", "fullpath": "/vex/functions/idtoprim"}, ". To look up a point by an arbitrary string or int attribute value, use ", {"scheme": "Vex", "value": "/vex/functions/findattribval", "type": "link", "text": "", "fallback_text": "findattribval()", "fullpath": "/vex/functions/findattribval"}, "."], "extent": [379, 544]}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [544, 553], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/idtoprim", "type": "link", "text": "", "fallback_text": "idtoprim()", "fullpath": "/vex/functions/idtoprim"}], "extent": [553, 571]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/nametopoint", "type": "link", "text": "", "fallback_text": "nametopoint()", "fullpath": "/vex/functions/nametopoint"}], "extent": [571, 591]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/findattribval", "type": "link", "text": "", "fallback_text": "findattribval()", "fullpath": "/vex/functions/findattribval"}], "extent": [591, 613]}], "container": true}], "text": "Related"}], "title": ["nametopoint"], "summary": ["Finds a point by its name attribute."], "included": ["/vex/functions/_common"]}