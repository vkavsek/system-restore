{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "point, proximity", "group": "geo", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["neighbour"], "extent": [0, 14]}, {"type": "summary", "indent": 0, "text": ["Returns the point number of the next point connected to a given point."], "extent": [77, 155]}, {"type": "para", "indent": 0, "text": ["This function lets you walk the points connected to a point (separated by a single edge). To get a list of all connected points at once, use ", {"scheme": "Vex", "value": "/vex/functions/neighbours", "type": "link", "text": "", "fallback_text": "neighbours()", "fullpath": "/vex/functions/neighbours"}, "."], "extent": [155, 315]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int neighbour(<geometry>, int point_num, int neighbour_num)"]}], "role": "item", "extent": [315, 386]}], "container": true, "role": "item_group"}, {"type": "arg_group", "body": [{"ext": null, "type": "arg", "indent": 0, "text": [{"type": "code", "text": ["<geometry>"]}], "role": "item", "extent": [16, 35], "body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."], "extent": [58, 235]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"type": "code", "text": [".bgeo"]}, ") to read from. When running inside Houdini, this can be an ", {"type": "code", "text": ["op:/path/to/sop"]}, " reference."], "extent": [235, 423]}], "container": true, "attrs": {"id": "geometry"}}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["point_num"]}, "role": "item", "extent": [414, 430], "body": [{"type": "para", "indent": 4, "text": ["The number of the point whose neighbours you want to find."], "extent": [430, 494]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["neighbour_num"]}, "role": "item", "extent": [494, 514], "body": [{"type": "para", "indent": 4, "text": ["Which neighbour to find. The neighbours are in no particular order. Use ", {"scheme": "Vex", "value": "/vex/functions/neighbourcount", "type": "link", "text": "", "fallback_text": "neighbourcount()", "fullpath": "/vex/functions/neighbourcount"}, " to get the total number of connected points."], "extent": [514, 657]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "role": "item", "extent": [657, 667], "body": [{"type": "para", "indent": 4, "text": ["The point index of the neighbour of the point. The order is undefined, but will be consistent for consistent geometry. Returns ", {"type": "code", "text": ["-1"]}, " if the ", {"type": "code", "text": ["neighbournum"]}, " is out of range for that point, or the point is out of range for that input, or the input doesn\u2019t exist."], "extent": [667, 932]}], "container": true, "returns": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [932, 941], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/neighbourcount", "type": "link", "text": "", "fallback_text": "neighbourcount()", "fullpath": "/vex/functions/neighbourcount"}], "extent": [941, 965]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/neighbours", "type": "link", "text": "", "fallback_text": "neighbours()", "fullpath": "/vex/functions/neighbours"}], "extent": [965, 984]}], "container": true}], "text": "Related"}], "title": ["neighbour"], "summary": ["Returns the point number of the next point connected to a given point."], "included": ["/vex/functions/_common"]}