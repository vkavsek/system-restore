{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "point, proximity", "group": "geo", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["neighbours"], "extent": [0, 15]}, {"type": "summary", "indent": 0, "text": ["Returns an array of the point numbers of the neighbours of a point."], "extent": [78, 153]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int[] neighbours(<geometry>, int ptnum)"]}], "role": "item", "extent": [153, 204]}], "container": true, "role": "item_group"}, {"type": "arg_group", "body": [{"ext": null, "type": "arg", "indent": 0, "text": [{"type": "code", "text": ["<geometry>"]}], "role": "item", "extent": [16, 35], "body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."], "extent": [58, 235]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"type": "code", "text": [".bgeo"]}, ") to read from. When running inside Houdini, this can be an ", {"type": "code", "text": ["op:/path/to/sop"]}, " reference."], "extent": [235, 423]}], "container": true, "attrs": {"id": "geometry"}}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["This is a simpler, array-based replacement for the combination of\n", {"scheme": "Vex", "value": "/vex/functions/neighbourcount", "type": "link", "text": "", "fallback_text": "neighbourcount()", "fullpath": "/vex/functions/neighbourcount"}, " and ", {"scheme": "Vex", "value": "/vex/functions/neighbour", "type": "link", "text": "", "fallback_text": "neighbour()", "fullpath": "/vex/functions/neighbour"}, ".  The array contains the numbers\nof all points that share an edge with ", {"type": "code", "text": ["ptnum"]}, ".  The point numbers are in no particular order."], "extent": [232, 468]}, {"level": 1, "id": "examples", "container": true, "type": "examples_section", "indent": 0, "role": "section", "extent": [468, 478], "body": [{"type": "para", "indent": 0, "text": ["This is roughly equivalent to the following code:"], "extent": [478, 530]}, {"lang": "vex", "type": "pre", "indent": 0, "text": ["\nint []\nneighbours(int opinput, int ptnum)\n{\n    int     i, n;\n    int     result[];\n    n = neighbourcount(input, ptnum);\n    resize(result, n);\n    for (i = 0; i < n; i++)\n        result[i] = neighbour(input, ptnum, i);\n}\n"], "extent": [530, 767]}], "text": "Examples"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [767, 778], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/neighbourcount", "type": "link", "text": "", "fallback_text": "neighbourcount()", "fullpath": "/vex/functions/neighbourcount"}], "extent": [778, 802]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/neighbour", "type": "link", "text": "", "fallback_text": "neighbour()", "fullpath": "/vex/functions/neighbour"}], "extent": [802, 820]}], "container": true}], "text": "Related"}], "title": ["neighbours"], "summary": ["Returns an array of the point numbers of the neighbours of a point."], "included": ["/vex/functions/_common"]}