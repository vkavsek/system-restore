{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "ptcloud, proximity", "group": "ptcloud", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["pcfind"], "extent": [0, 11]}, {"type": "summary", "indent": 0, "text": ["Returns a list of closest points from a file."], "extent": [80, 133]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int[] pcfind(<geometry>, string Pchannel, vector P, float radius, int maxpoints)"]}], "role": "item", "extent": [133, 224]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int[] pcfind(<geometry>, string ptgroup, string Pchannel, vector P, float radius, int maxpoints)"]}], "role": "item", "extent": [224, 331]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int[] pcfind(<geometry>, string Pchannel, vector P, float radius, int maxpoints, float &distances[])"]}], "role": "item", "extent": [331, 442]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int[] pcfind(<geometry>, string ptgroup, string Pchannel, vector P, float radius, int maxpoints, float &distances[])"]}], "role": "item", "extent": [442, 570]}], "container": true, "role": "item_group"}, {"type": "arg_group", "body": [{"ext": null, "type": "arg", "indent": 0, "text": [{"type": "code", "text": ["<geometry>"]}], "role": "item", "extent": [16, 35], "body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."], "extent": [58, 235]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"type": "code", "text": [".bgeo"]}, ") to read from. When running inside Houdini, this can be an ", {"type": "code", "text": ["op:/path/to/sop"]}, " reference."], "extent": [235, 423]}], "container": true, "attrs": {"id": "geometry"}}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["These functions open a geometry file and return a list of points with the location ", {"type": "var", "text": ["P"]}, " within ", {"type": "var", "text": ["radius"]}, ", based on point positions found in ", {"type": "var", "text": ["Pchannel"]}, ".  Only the ", {"type": "var", "text": ["maxpoints"]}, " closest points within the given radius will be returned. The file name may use the ", {"type": "code", "text": ["op:"]}, " syntax to reference SOP geometry in the OP contexts.  The ", {"type": "var", "text": ["Pchannel"]}, " parameter indicates the attribute which contains the positions to be searched."], "extent": [598, 1018]}, {"type": "para", "indent": 0, "text": ["The ", {"type": "code", "text": ["ptgroup"]}, " is a point group that limits the points to search.  This is a SOP-style group pattern, so can be something like ", {"type": "code", "text": ["0-10"]}, " or ", {"type": "code", "text": ["@Cd.x>0.5"]}, ".  A blank string is treated as matching all points."], "extent": [1018, 1219]}, {"type": "para", "indent": 0, "text": ["The function also optionally takes a float array ", {"type": "code", "text": ["distances"]}, ", which it modifies with the distances to each point."], "extent": [1219, 1334]}, {"type": "para", "indent": 0, "text": ["The closest point is in entry 0 of the returned array, and the other points are sorted by increasing distance."], "extent": [1334, 1446]}, {"level": 1, "id": "examples", "container": true, "type": "examples_section", "indent": 0, "role": "section", "extent": [1446, 1456], "body": [{"type": "para", "indent": 0, "text": ["Performing a proximity query:"], "extent": [1456, 1488]}, {"lang": "vex", "type": "pre", "indent": 0, "text": ["\nint closept[] = pcfind(filename, \"P\", P, maxdistance, maxpoints);\nP = 0;\nforeach (int ptnum; closept)\n{\n    vector closepos = point(filename, \"P\", ptnum);\n    P += closepos;\n}\nP /= len(closept);\n"], "extent": [1488, 1697]}], "text": "Examples"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [1697, 1707], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/nearpoint", "type": "link", "text": "", "fallback_text": "nearpoint()", "fullpath": "/vex/functions/nearpoint"}], "extent": [1707, 1726]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/nearpoints", "type": "link", "text": "", "fallback_text": "nearpoints()", "fullpath": "/vex/functions/nearpoints"}], "extent": [1726, 1745]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/pcfind_radius", "type": "link", "text": "", "fallback_text": "pcfind_radius()", "fullpath": "/vex/functions/pcfind_radius"}], "extent": [1745, 1767]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/pgfind", "type": "link", "text": "", "fallback_text": "pgfind()", "fullpath": "/vex/functions/pgfind"}], "extent": [1767, 1783]}], "container": true}], "text": "Related"}], "title": ["pcfind"], "summary": ["Returns a list of closest points from a file."], "included": ["/vex/functions/_common"]}