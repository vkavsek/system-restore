{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "string, utility, print", "group": "utility", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["printf"], "extent": [0, 11]}, {"type": "summary", "indent": 0, "text": ["Prints values to the console which started the VEX program."], "extent": [84, 151]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["void printf(string format, ...)"]}], "role": "item", "extent": [151, 194]}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["The format string is a simpler version of the C ", {"type": "code", "text": ["printf"]}, " format string.\nWhen a ", {"type": "code", "text": ["%"]}, " symbol is found in the string, an argument will be printed\nout in a format specified by the characters following the ", {"type": "code", "text": ["%"]}, " symbol.\nThe conversion of the argument is specified by a single letter: ", {"type": "code", "text": ["g"]}, ", ", {"type": "code", "text": ["f"]}, ",\n", {"type": "code", "text": ["s"]}, ", ", {"type": "code", "text": ["d"]}, ", ", {"type": "code", "text": ["x"]}, ", ", {"type": "code", "text": ["c"]}, ", ", {"type": "code", "text": ["p"]}, "."], "extent": [194, 506]}, {"type": "para", "indent": 0, "text": ["You can prefix the format option with an optional prefix characters to control\nthe formatting of the output.  The general form of a prefix is\n", {"type": "code", "text": ["[flags][width][.precision][format]"]}, ", where Flags can be:"], "extent": [506, 707]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "code", "text": ["-"]}, ": The result will be left justified in the field"], "extent": [707, 762]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "code", "text": ["+"]}, ": A numeric value will be prefixed with either ", {"type": "code", "text": ["+"]}, " for positive\nvalues.  A non-standard behavior of this flag is that string\narguments will be quoted when the ", {"type": "code", "text": ["+"]}, " flag is set."], "extent": [762, 944]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "code", "text": ["0"]}, ": For numeric values, leading zeros are used to pad the field."], "extent": [944, 1013]}], "container": true}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Width"], "extent": [1013, 1020], "body": [{"type": "para", "indent": 4, "text": ["The width can be specified by one or more decimal digits.  Alternately, if\n    an asterisk (", {"type": "code", "text": ["*"]}, ") is given, the width will be taken from the next value\n    in the ", {"type": "code", "text": ["printf"]}, " argument list."], "extent": [1020, 1211]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Precision"], "extent": [1211, 1222], "body": [{"type": "para", "indent": 4, "text": ["The precision can be specified by one or more decimal digits.  Alternately,\n    if an asterisk (", {"type": "code", "text": ["*"]}, ") is given, the width will be taken from the next value\n    in the ", {"type": "code", "text": ["printf"]}, " argument list."], "extent": [1222, 1417]}], "container": true}], "container": true}, {"type": "para", "indent": 0, "text": ["The different format characters supported are"], "extent": [1417, 1464]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": [{"type": "code", "text": ["%g"]}, ", ", {"type": "code", "text": ["%p"]}, ", ", {"type": "code", "text": ["%c"]}, " "], "extent": [1464, 1483], "body": [{"type": "para", "indent": 4, "text": ["Print an integer float, vector, vector4, matrix3, matrix or string\n    in ", {"type": "q", "text": ["general"]}, " form."], "extent": [1483, 1577]}], "container": true}, {"type": "dt", "indent": 0, "text": [{"type": "code", "text": ["%f"]}, ", ", {"type": "code", "text": ["%e"]}, ", ", {"type": "code", "text": ["%E"]}, " "], "extent": [1577, 1596], "body": [{"type": "para", "indent": 4, "text": ["Print a float, vector, vector4, matrix3 or matrix in floating point\n    form."], "extent": [1596, 1678]}], "container": true}, {"type": "dt", "indent": 0, "text": [{"type": "code", "text": ["%s"]}, " "], "extent": [1678, 1685], "body": [{"type": "para", "indent": 4, "text": ["Print a string."], "extent": [1685, 1705]}], "container": true}, {"type": "dt", "indent": 0, "text": [{"type": "code", "text": ["%d"]}, ", ", {"type": "code", "text": ["%i"]}, " "], "extent": [1705, 1718], "body": [{"type": "para", "indent": 4, "text": ["Print an integer variable in decimal."], "extent": [1718, 1760]}], "container": true}, {"type": "dt", "indent": 0, "text": [{"type": "code", "text": ["%x"]}, ", ", {"type": "code", "text": ["%X"]}, " "], "extent": [1760, 1773], "body": [{"type": "para", "indent": 4, "text": ["Print an integer variable in hexidecimal.  The value will be prefixed with\n    ", {"type": "q", "text": ["0x"]}, " (i.e. 0\u00d742)."], "extent": [1773, 1874]}], "container": true}, {"type": "dt", "indent": 0, "text": [{"type": "code", "text": ["%o"]}], "extent": [1874, 1880], "body": [{"type": "para", "indent": 4, "text": ["Print an integer variable in octal."], "extent": [1880, 1920]}], "container": true}, {"type": "dt", "indent": 0, "text": [{"type": "code", "text": ["%%"]}, " "], "extent": [1920, 1927], "body": [{"type": "para", "indent": 4, "text": ["Print a percent sign (%)."], "extent": [1927, 1959]}], "container": true}], "container": true}, {"level": 1, "id": "examples", "container": true, "type": "examples_section", "indent": 0, "role": "section", "extent": [1959, 1969], "body": [{"lang": "vex", "type": "pre", "indent": 0, "text": ["\nprintf(\"P = %g, dot(N, P) = %g, %d = %x\\n\", P, dot(N, P), ptnum, ptnum);\nprintf(\"RGB = {%g,%g,%g}\\n\", clr.r, clr.g, clr.b);\nprintf(\"P = %20s\\n\", \"20 chars\");\nprintf(\"%-+20s\\n\", \"Left justified and quoted\");\nprintf(\"%+08.3g\\n\", velocity);\nprintf(\"%*.*g\\n\", width, precision, value);\nCf = texture(sprintf(\"/maps/map%d.rat\", i));\nCf = texture(sprintf(\"/maps/map%04d.rat\", i));\n\n"], "extent": [1969, 2359]}], "text": "Examples"}], "title": ["printf"], "summary": ["Prints values to the console which started the VEX program."]}