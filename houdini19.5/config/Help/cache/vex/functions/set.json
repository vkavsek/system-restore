{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "data", "group": "utility", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["set"], "extent": [0, 8]}, {"type": "summary", "indent": 0, "text": ["Creates a new value based on its arguments, such as creating a vector from its components."], "extent": [63, 161]}, {"type": "para", "indent": 0, "text": ["The ", {"type": "code", "text": ["set()"]}, " function has a ", {"type": "strong", "text": ["wide variety"]}, " of forms allowing you to perform many different types of conversions."], "extent": [161, 274]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [274, 279], "body": [{"type": "para", "indent": 4, "text": ["When filling a matrix in Houdini, the numbers go across the first row, then across the second row, and so on (", {"type": "q", "text": ["row-major"]}, ")."], "extent": [279, 408]}], "container": true}], "container": true, "role": "item_group"}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["vector2 set( float v1; float v2 )"]}], "role": "item", "extent": [408, 452]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["vector set( float v1; float v2; float v3 )"]}], "role": "item", "extent": [452, 505]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["vector4 set( float v1; float v2; float v3; float v4 )"]}], "role": "item", "extent": [505, 569]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix2 set( float v1; float v2; float v3; float v4 )"]}], "role": "item", "extent": [569, 633]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix3 set( float v1; float v2; float v4; float v4; float v5; float v6; float v7; float v8; float v9 )"]}], "role": "item", "extent": [633, 747]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix set( float v1; float v2; float v3; float v4; float v5; float v6; float v7; float v8; float v9; float v10; float v11; float v12; float v13; float v14; float v15; float v16 )"]}], "role": "item", "extent": [747, 938], "body": [{"type": "para", "indent": 4, "text": ["Create a vector or matrix type from the values in the arguments."], "extent": [938, 1012]}, {"lang": "vex", "type": "pre", "indent": 4, "text": ["\n    vector4 v = set(1.0, 2.0, 3.0, 4.0);\n    matrix3 m = set(1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0);\n    "], "extent": [1012, 1145]}, {"type": "para", "indent": 4, "text": ["The ", {"scheme": "Vex", "value": "/vex/functions/assign", "type": "link", "text": "", "fallback_text": "assign()", "fullpath": "/vex/functions/assign"}, " function performs the opposite of this operation (pulling components out into variables)."], "extent": [1145, 1262]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["<vector> set( float nums[] )"]}], "role": "item", "extent": [1262, 1301]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["<matrix> set( float nums[] )"]}], "role": "item", "extent": [1301, 1341], "body": [{"type": "para", "indent": 4, "text": ["Creates a vector/matrix from an array of floats."], "extent": [1341, 1399]}, {"lang": "vex", "type": "pre", "indent": 4, "text": ["\n    float[] nums = {1.0, 2.0, 3.0, 4.0};\n    vector4 v = set(nums);\n    "], "extent": [1399, 1493]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["<vector> set( float|int v )"]}], "role": "item", "extent": [1493, 1532]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["<matrix> set( float|int v )"]}], "role": "item", "extent": [1532, 1571], "body": [{"type": "para", "indent": 4, "text": ["If you set a vector or matrix type from a single value, the vector/matrix is filled in with that value for all components."], "extent": [1571, 1703]}, {"lang": "vex", "type": "pre", "indent": 4, "text": ["\n    vector4 v = set(2.0);  // -> {2.0, 2.0, 2.0, 2.0}\n    "], "extent": [1703, 1783]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix2 set( vector2 row1; vector2 row2 )"]}], "role": "item", "extent": [1783, 1836]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix3 set( vector row1; vector row2; vector row3 )"]}], "role": "item", "extent": [1836, 1899]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix set( vector4 row1; vector4 row2; vector4 row3; vector4 row4 )"]}], "role": "item", "extent": [1899, 1979], "body": [{"type": "para", "indent": 4, "text": ["Creates a matrix type from a series of vector arguments of the same size representing the rows."], "extent": [1979, 2084]}, {"lang": "vex", "type": "pre", "indent": 4, "text": ["\n    matrix3 m = set({0.0, 1.0, 0.0}, {1.0, 0.0, 1.0}, {0.0, 1.0, 0.0});\n    "], "extent": [2084, 2182]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix3 set( vector rows[] )"]}], "role": "item", "extent": [2182, 2222]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix set( vector4 rows[] )"]}], "role": "item", "extent": [2222, 2262], "body": [{"type": "para", "indent": 4, "text": ["You can also set a matrix type from an array of vectors representing rows. If there are not enough vectors in the array to fill the matrix, the extra rows will contain zeros."], "extent": [2262, 2442]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["vector[] set( matrix3 m )"]}], "role": "item", "extent": [2442, 2478]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["vector4[] set( matrix m )"]}], "role": "item", "extent": [2478, 2515], "body": [{"type": "para", "indent": 4, "text": ["Creates an array of vectors from the rows of a matrix of the same size."], "extent": [2515, 2596]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    matrix3 m3 = {1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0};\n    vector[] vs = set(m3);  // -> array [ {1.0, 2.0, 3.0}, {4.0, 5.0, 6.0}, {7.0, 8.0, 9.0} ]\n    "], "extent": [2596, 2770]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["vector set( vector2 v)"]}], "role": "item", "extent": [2770, 2804]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["vector4 set( vector2 v)"]}], "role": "item", "extent": [2804, 2838]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["vector4 set( vector v)"]}], "role": "item", "extent": [2838, 2871]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix3 set( matrix2 m)"]}], "role": "item", "extent": [2871, 2905]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix set( matrix2 m)"]}], "role": "item", "extent": [2905, 2938]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix set( matrix3 m)"]}], "role": "item", "extent": [2938, 2972], "body": [{"type": "para", "indent": 4, "text": ["If you set a larger vector or matrix type from a smaller type, the extra components will be zero."], "extent": [2972, 3079]}, {"lang": "vex", "type": "pre", "indent": 4, "text": ["\n    vector2 v2 = {1.0, 2.0};\n    vector4 v4 = set(v2);  // -> {1.0, 2.0, 0.0, 0.0}\n    "], "extent": [3079, 3188]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float set( vector v)"]}], "role": "item", "extent": [3188, 3221]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float set( vector4 v)"]}], "role": "item", "extent": [3221, 3253]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["vector2 set( vector4 v)"]}], "role": "item", "extent": [3253, 3287]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["vector2 set( vector v)"]}], "role": "item", "extent": [3287, 3320]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["vector set( vector4 v)"]}], "role": "item", "extent": [3320, 3355], "body": [{"type": "para", "indent": 4, "text": ["If you set a smaller vector with a larger vector, the smaller type will take components from the left."], "extent": [3355, 3468]}, {"lang": "vex", "type": "pre", "indent": 4, "text": ["\n    vector4 v4 = {1.0, 2.0, 3.0, 4.0};\n    vector2 v2 = set(v4)  // -> {1.0, 2.0}\n    "], "extent": [3468, 3576]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix2 set( matrix3 m)"]}], "role": "item", "extent": [3576, 3611]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix2 set( matrix m)"]}], "role": "item", "extent": [3611, 3644]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["matrix3 set( matrix m)"]}], "role": "item", "extent": [3644, 3678], "body": [{"type": "para", "indent": 4, "text": ["If you set a smaller matrix with a larger matrix, the smaller type will take the top-left corner."], "extent": [3678, 3785]}, {"lang": "vex", "type": "pre", "indent": 4, "text": ["\n    matrix3 m3 = {1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0};\n    matrix2 m2 = set(m3);  // -> {1.0, 2.0, 4.0, 5.0}\n    "], "extent": [3785, 3929]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float[] set( <vector> v)"]}], "role": "item", "extent": [3929, 3965]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float[] set( <matrix> m)"]}], "role": "item", "extent": [3965, 4001], "body": [{"type": "para", "indent": 4, "text": ["Creates an array of floats from the components of a vector or matrix type."], "extent": [4001, 4081]}, {"lang": "vex", "type": "pre", "indent": 4, "text": ["\n    matrix3 m3 = {1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0};\n    float[] nums = set(m3);  // -> array [ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0 ]\n    "], "extent": [4081, 4260]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["<vector>[] set( float nums[] )"]}], "role": "item", "extent": [4260, 4302]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["<matrix>[] set( float nums[] )"]}], "role": "item", "extent": [4302, 4345], "body": [{"type": "para", "indent": 4, "text": ["Creates an array of vector/matrix types by taking one component at a time from an array of floats. This is the same as using the ", {"scheme": "Vex", "value": "/vex/functions/unserialize", "type": "link", "text": "", "fallback_text": "unserialize()", "fullpath": "/vex/functions/unserialize"}, " function."], "extent": [4345, 4511]}, {"lang": "vex", "type": "pre", "indent": 4, "text": ["\n    float[] nums = {1.0, 2.0, 3.0, 4.0};\n    vector2[] vs = set(nums);  // -> [ {1.0, 2.0}, {3.0, 4.0} ]\n    "], "extent": [4511, 4642]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int set(float v)"]}], "role": "item", "extent": [4642, 4670]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float set(int v)"]}], "role": "item", "extent": [4670, 4697]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float[] set( int vs[])"]}], "role": "item", "extent": [4697, 4730]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int[] set( float vs[])"]}], "role": "item", "extent": [4730, 4764], "body": [{"type": "para", "indent": 4, "text": ["You can set a float from an int, or an int from a float, or an array of floats from an array of ints, or an array of ints from an array of floats."], "extent": [4764, 4920]}, {"lang": "vex", "type": "pre", "indent": 4, "text": ["\n    float[] fracs = { 1.1, 2.2, 3.3, 4.4, 5.5, 6.6 };\n    int[] floored = set(fracs);  // -> array [ 1, 2, 3, 4, 5, 6 ]\n    "], "extent": [4920, 5066]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float[] set( float num )"]}], "role": "item", "extent": [5066, 5103], "body": [{"type": "para", "indent": 4, "text": ["Sets all the items in an array of float to the same value."], "extent": [5103, 5167]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float set( float nums[] )"]}], "role": "item", "extent": [5167, 5204], "body": [{"type": "para", "indent": 4, "text": ["Returns the first item in the array."], "extent": [5204, 5246]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["dict set( string key, ...)"]}], "role": "item", "extent": [5246, 5288], "body": [{"type": "para", "indent": 4, "text": ["Initializes a dictionary with a series of key/value pairs.  Every other parameter should\n    be a string for the key and be followed by the value for that key."], "extent": [5288, 5453]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["<type> set(<type> v)"]}], "role": "item", "extent": [5453, 5484]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["<type>[] set(<type> v[])"]}], "role": "item", "extent": [5484, 5520], "body": [{"type": "para", "indent": 4, "text": ["If you call ", {"type": "code", "text": ["set()"]}, " with the same argument type and return type, it simply returns the argument value."], "extent": [5520, 5628]}, {"lang": "vex", "type": "pre", "indent": 4, "text": ["\n    string s = set(\"Hello\");  // -> \"Hello\"\n    "], "extent": [5628, 5698]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [5698, 5709], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Vex", "value": "/vex/functions/assign", "type": "link", "text": "", "fallback_text": "assign()", "fullpath": "/vex/functions/assign"}], "extent": [5709, 5731]}], "container": true}], "text": "Related"}], "title": ["set"], "summary": ["Creates a new value based on its arguments, such as creating a vector from its components."]}