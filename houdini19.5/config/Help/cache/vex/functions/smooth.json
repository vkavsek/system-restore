{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "interp", "group": "interp", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["smooth"], "extent": [0, 11]}, {"type": "summary", "indent": 0, "text": ["Computes ease in/out interpolation between values."], "extent": [67, 125]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float smooth(float value1, float value2, float amount)"]}], "role": "item", "extent": [125, 190]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float smooth(float value1, float value2, float amount, float rolloff)"]}], "role": "item", "extent": [190, 271]}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["Computes a number between zero and one. Returns 0 if the amount passed\nin is less than or equal to value1, 1 if the amount is greater than or\nequal to value2."], "extent": [271, 431]}, {"type": "para", "indent": 0, "text": ["If the amount is between value1 and value2, a smooth (easin/easeout)\ninterpolation is computed. If a rolloff is specified, the inflection\npoint of the blend will be shifted."], "extent": [431, 606]}, {"type": "para", "indent": 0, "text": ["If the rolloff is greater than 1, the shift will be to the right, if the\nrolloff is less than 1 (and greater than 0), the shift will be to the\nleft."], "extent": [606, 755]}], "title": ["smooth"], "summary": ["Computes ease in/out interpolation between values."]}