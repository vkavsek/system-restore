{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "vertex, prim", "group": "geo", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["vertexindex"], "extent": [0, 16]}, {"type": "summary", "indent": 0, "text": ["Converts a primitive/vertex pair into a linear vertex."], "extent": [75, 137]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["int vertexindex(<geometry>, int primnum, int vertex)"]}], "role": "item", "extent": [137, 201]}], "container": true, "role": "item_group"}, {"type": "arg_group", "body": [{"ext": null, "type": "arg", "indent": 0, "text": [{"type": "code", "text": ["<geometry>"]}], "role": "item", "extent": [16, 35], "body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."], "extent": [58, 235]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"type": "code", "text": [".bgeo"]}, ") to read from. When running inside Houdini, this can be an ", {"type": "code", "text": ["op:/path/to/sop"]}, " reference."], "extent": [235, 423]}], "container": true, "attrs": {"id": "geometry"}}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["primnum"]}, "role": "item", "extent": [229, 243], "body": [{"type": "para", "indent": 4, "text": ["The primitive number to get a vertex from."], "extent": [243, 291]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["vertex"]}, "role": "item", "extent": [291, 304], "body": [{"type": "para", "indent": 4, "text": ["The vertex number inside of a primitive.  0 is the first vertex."], "extent": [304, 374]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "role": "item", "extent": [374, 384], "body": [{"type": "para", "indent": 4, "text": ["The linear vertex index corresponding to the given primitive vertex.\n    Returns ", {"type": "code", "text": ["-1"]}, " if the function could not find the equivalent linear vertex index."], "extent": [384, 543]}], "container": true, "returns": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "examples", "container": true, "type": "examples_section", "indent": 0, "role": "section", "extent": [543, 553], "body": [{"lang": "vex", "type": "pre", "indent": 0, "text": ["\n\nint linearvtx;\n\n// Get the linear vertex value of vertex 2 of primitive 3.\nlinearvtx = vertexindex(\"defgeo.bgeo\", 3, 2);\n\n"], "extent": [553, 691]}], "text": "Examples"}], "title": ["vertexindex"], "summary": ["Converts a primitive/vertex pair into a linear vertex."], "included": ["/vex/functions/_common"]}