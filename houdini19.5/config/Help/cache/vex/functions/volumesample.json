{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "volume", "group": "volume", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["volumesample"], "extent": [0, 17]}, {"type": "summary", "indent": 0, "text": ["Samples the volume primitive\u2019s value."], "extent": [73, 118]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float volumesample(<geometry>, int primnum, vector pos)"]}], "role": "item", "extent": [118, 184]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float volumesample(<geometry>, string volumename, vector pos)"]}], "role": "item", "extent": [184, 257]}], "container": true, "role": "item_group"}, {"type": "arg_group", "body": [{"ext": null, "type": "arg", "indent": 0, "text": [{"type": "code", "text": ["<geometry>"]}], "role": "item", "extent": [16, 35], "body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."], "extent": [58, 235]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"type": "code", "text": [".bgeo"]}, ") to read from. When running inside Houdini, this can be an ", {"type": "code", "text": ["op:/path/to/sop"]}, " reference."], "extent": [235, 423]}], "container": true, "attrs": {"id": "geometry"}}, {"ext": null, "type": "arg", "indent": 0, "role": "item", "extent": [285, 295], "body": [{"type": "para", "indent": 4, "text": ["The volume primitive\u2019s sampled value at the given position.  Values between voxels will be trilinearly interpolated."], "extent": [295, 421]}, {"type": "para", "indent": 4, "text": ["Returns 0 if ", {"type": "code", "text": ["primnum"]}, " or ", {"type": "code", "text": ["inputnum"]}, " is out of range, the geometry is invalid, or the given primitive is not a volume or vdb primitive."], "extent": [421, 562]}], "container": true, "returns": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/vex/volumesample.png", "type": "img", "text": ""}], "extent": [562, 600]}, {"type": "para", "indent": 0, "text": ["Example of interpolation of one and two dimensional data using ", {"type": "code", "text": ["volumesample"]}, ". The visualized normal is computed using the ", {"type": "code", "text": ["volumegradient"]}, " function."], "extent": [600, 750]}], "title": ["volumesample"], "summary": ["Samples the volume primitive\u2019s value."], "included": ["/vex/functions/_common"]}