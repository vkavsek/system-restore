{"type": "root", "attrs": {"type": "vex", "context": "all", "tags": "measure, proximity", "group": "measure", "showtags": "true"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["xyzdist"], "extent": [0, 12]}, {"type": "summary", "indent": 0, "text": ["Finds the distance from a point to the closest location on surface geometry."], "extent": [81, 165]}, {"type": "usage_group", "body": [{"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float xyzdist(<geometry>, vector origin)"]}], "role": "item", "extent": [165, 217], "body": [{"type": "para", "indent": 4, "text": ["Finds the distance from ", {"type": "var", "text": ["origin"]}, " to the closest location on the given geometry."], "extent": [217, 304]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float xyzdist(<geometry>, vector origin, int &prim, vector &uv)"]}], "role": "item", "extent": [304, 378]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float xyzdist(<geometry>, vector origin, int &prim, vector &uv, float maxdist)"]}], "role": "item", "extent": [378, 468], "body": [{"type": "para", "indent": 4, "text": ["Finds the distance from ", {"type": "var", "text": ["origin"]}, " to the closest location on the geometry, and\n    writes the primitive number and UV coordinates of the closest location into the output arguments."], "extent": [468, 655]}], "container": true}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float xyzdist(<geometry>, string primgroup, vector origin)"]}], "role": "item", "extent": [655, 724]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float xyzdist(<geometry>, string primgroup, vector origin, int &prim, vector &uv)"]}], "role": "item", "extent": [724, 816]}, {"ext": null, "type": "usage", "indent": 0, "text": [" ", {"type": "code", "text": ["float xyzdist(<geometry>, string primgroup, vector origin, int &prim, vector &uv, float maxdist)"]}], "role": "item", "extent": [816, 924], "body": [{"type": "para", "indent": 4, "text": ["Finds the distance from ", {"type": "var", "text": ["origin"]}, " to the closest location in the given primitive group on the given geometry,\n    and writes the primitive number and UV coordinates of the closest location into the output arguments."], "extent": [924, 1146]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["Note: Distances to packed primitives and sphere/tube/circle primitives with\nnon-uniform scales may not represent the actual closest point as the closest\npoint is found in the untransformed space."], "extent": [1146, 1343]}, {"type": "arg_group", "body": [{"ext": null, "type": "arg", "indent": 0, "text": [{"type": "code", "text": ["<geometry>"]}], "role": "item", "extent": [16, 35], "body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."], "extent": [58, 235]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"type": "code", "text": [".bgeo"]}, ") to read from. When running inside Houdini, this can be an ", {"type": "code", "text": ["op:/path/to/sop"]}, " reference."], "extent": [235, 423]}], "container": true, "attrs": {"id": "geometry"}}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["primgroup"]}, "role": "item", "extent": [1371, 1387], "body": [{"type": "para", "indent": 4, "text": ["The name of a primitive group or a pattern to generate a primitive\n    group.  Uses the same semantics as a SOP group, so empty strings\n    will match all primitives.  Attribute groups like ", {"type": "code", "text": ["@Cd.x>0"]}, " can\n    also be used, but note that the ", {"type": "code", "text": ["@"]}, " may need to be escaped with\n    a backslash in a ", {"scheme": "Node", "value": "/nodes/vop/snippet", "type": "link", "text": ["Snippet VOP"], "fullpath": "/nodes/vop/snippet"}, "."], "extent": [1387, 1717]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["origin"]}, "role": "item", "extent": [1717, 1730], "body": [{"type": "para", "indent": 4, "text": ["The position in space to find the closest position on the geometry to."], "extent": [1730, 1806]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["&prim"]}, "role": "item", "extent": [1806, 1818], "body": [{"type": "para", "indent": 4, "text": ["The function overwrites this variable with the number of the closest primitive, or ", {"type": "code", "text": ["-1"]}, " if no primitive was found."], "extent": [1818, 1938]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["&uv"]}, "role": "item", "extent": [1938, 1948], "body": [{"type": "para", "indent": 4, "text": ["The function overwrites this variable with the UV coordinates of the closest point on the closest primitive.\n    You can use ", {"scheme": "Vex", "value": "/vex/functions/primuv", "type": "link", "text": "", "fallback_text": "primuv()", "fullpath": "/vex/functions/primuv"}, " to sample an attribute value at this location."], "extent": [1948, 2138]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "text": {"type": "code", "text": ["maxdist"]}, "role": "item", "extent": [2138, 2152], "body": [{"type": "para", "indent": 4, "text": ["The maximum distance to search. Specifying this can speed up the function by allowing it to quit early."], "extent": [2152, 2261]}], "container": true}, {"ext": null, "type": "arg", "indent": 0, "role": "item", "extent": [2261, 2271], "body": [{"type": "para", "indent": 4, "text": ["The distance from the origin point to the closest location on the geometry."], "extent": [2271, 2351]}], "container": true, "returns": true}], "container": true, "role": "item_group"}], "title": ["xyzdist"], "summary": ["Finds the distance from a point to the closest location on surface geometry."], "included": ["/vex/functions/_common"]}